require.config({"config": {
        "jsbuild":{"jquery/ui-modules/i18n/datepicker-nl.js":"/* Dutch (UTF-8) initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Mathias Bynens <http://mathiasbynens.be/> */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.nl = {\r\n\tcloseText: \"Sluiten\",\r\n\tprevText: \"\u2190\",\r\n\tnextText: \"\u2192\",\r\n\tcurrentText: \"Vandaag\",\r\n\tmonthNames: [ \"januari\", \"februari\", \"maart\", \"april\", \"mei\", \"juni\",\r\n\t\"juli\", \"augustus\", \"september\", \"oktober\", \"november\", \"december\" ],\r\n\tmonthNamesShort: [ \"jan\", \"feb\", \"mrt\", \"apr\", \"mei\", \"jun\",\r\n\t\"jul\", \"aug\", \"sep\", \"okt\", \"nov\", \"dec\" ],\r\n\tdayNames: [ \"zondag\", \"maandag\", \"dinsdag\", \"woensdag\", \"donderdag\", \"vrijdag\", \"zaterdag\" ],\r\n\tdayNamesShort: [ \"zon\", \"maa\", \"din\", \"woe\", \"don\", \"vri\", \"zat\" ],\r\n\tdayNamesMin: [ \"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\" ],\r\n\tweekHeader: \"Wk\",\r\n\tdateFormat: \"dd-mm-yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.nl );\r\n\r\nreturn datepicker.regional.nl;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-nn.js":"/* Norwegian Nynorsk initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Bj\u00f8rn Johansen (post@bjornjohansen.no). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.nn = {\r\n\tcloseText: \"Lukk\",\r\n\tprevText: \"&#xAB;F\u00f8rre\",\r\n\tnextText: \"Neste&#xBB;\",\r\n\tcurrentText: \"I dag\",\r\n\tmonthNames: [\r\n\t\t\"januar\",\r\n\t\t\"februar\",\r\n\t\t\"mars\",\r\n\t\t\"april\",\r\n\t\t\"mai\",\r\n\t\t\"juni\",\r\n\t\t\"juli\",\r\n\t\t\"august\",\r\n\t\t\"september\",\r\n\t\t\"oktober\",\r\n\t\t\"november\",\r\n\t\t\"desember\"\r\n\t],\r\n\tmonthNamesShort: [ \"jan\",\"feb\",\"mar\",\"apr\",\"mai\",\"jun\",\"jul\",\"aug\",\"sep\",\"okt\",\"nov\",\"des\" ],\r\n\tdayNamesShort: [ \"sun\",\"m\u00e5n\",\"tys\",\"ons\",\"tor\",\"fre\",\"lau\" ],\r\n\tdayNames: [ \"sundag\",\"m\u00e5ndag\",\"tysdag\",\"onsdag\",\"torsdag\",\"fredag\",\"laurdag\" ],\r\n\tdayNamesMin: [ \"su\",\"m\u00e5\",\"ty\",\"on\",\"to\",\"fr\",\"la\" ],\r\n\tweekHeader: \"Veke\",\r\n\tdateFormat: \"dd.mm.yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\"\r\n};\r\ndatepicker.setDefaults( datepicker.regional.nn );\r\n\r\nreturn datepicker.regional.nn;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-no.js":"/* Norwegian initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Naimdjon Takhirov (naimdjon@gmail.com). */\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.no = {\r\n\tcloseText: \"Lukk\",\r\n\tprevText: \"&#xAB;Forrige\",\r\n\tnextText: \"Neste&#xBB;\",\r\n\tcurrentText: \"I dag\",\r\n\tmonthNames: [\r\n\t\t\"januar\",\r\n\t\t\"februar\",\r\n\t\t\"mars\",\r\n\t\t\"april\",\r\n\t\t\"mai\",\r\n\t\t\"juni\",\r\n\t\t\"juli\",\r\n\t\t\"august\",\r\n\t\t\"september\",\r\n\t\t\"oktober\",\r\n\t\t\"november\",\r\n\t\t\"desember\"\r\n\t],\r\n\tmonthNamesShort: [ \"jan\",\"feb\",\"mar\",\"apr\",\"mai\",\"jun\",\"jul\",\"aug\",\"sep\",\"okt\",\"nov\",\"des\" ],\r\n\tdayNamesShort: [ \"s\u00f8n\",\"man\",\"tir\",\"ons\",\"tor\",\"fre\",\"l\u00f8r\" ],\r\n\tdayNames: [ \"s\u00f8ndag\",\"mandag\",\"tirsdag\",\"onsdag\",\"torsdag\",\"fredag\",\"l\u00f8rdag\" ],\r\n\tdayNamesMin: [ \"s\u00f8\",\"ma\",\"ti\",\"on\",\"to\",\"fr\",\"l\u00f8\" ],\r\n\tweekHeader: \"Uke\",\r\n\tdateFormat: \"dd.mm.yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\"\r\n};\r\ndatepicker.setDefaults( datepicker.regional.no );\r\n\r\nreturn datepicker.regional.no;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-pl.js":"/* Polish initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Jacek Wysocki (jacek.wysocki@gmail.com). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.pl = {\r\n\tcloseText: \"Zamknij\",\r\n\tprevText: \"&#x3C;Poprzedni\",\r\n\tnextText: \"Nast\u0119pny&#x3E;\",\r\n\tcurrentText: \"Dzi\u015b\",\r\n\tmonthNames: [ \"Stycze\u0144\",\"Luty\",\"Marzec\",\"Kwiecie\u0144\",\"Maj\",\"Czerwiec\",\r\n\t\"Lipiec\",\"Sierpie\u0144\",\"Wrzesie\u0144\",\"Pa\u017adziernik\",\"Listopad\",\"Grudzie\u0144\" ],\r\n\tmonthNamesShort: [ \"Sty\",\"Lu\",\"Mar\",\"Kw\",\"Maj\",\"Cze\",\r\n\t\"Lip\",\"Sie\",\"Wrz\",\"Pa\",\"Lis\",\"Gru\" ],\r\n\tdayNames: [ \"Niedziela\",\"Poniedzia\u0142ek\",\"Wtorek\",\"\u015aroda\",\"Czwartek\",\"Pi\u0105tek\",\"Sobota\" ],\r\n\tdayNamesShort: [ \"Nie\",\"Pn\",\"Wt\",\"\u015ar\",\"Czw\",\"Pt\",\"So\" ],\r\n\tdayNamesMin: [ \"N\",\"Pn\",\"Wt\",\"\u015ar\",\"Cz\",\"Pt\",\"So\" ],\r\n\tweekHeader: \"Tydz\",\r\n\tdateFormat: \"dd.mm.yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.pl );\r\n\r\nreturn datepicker.regional.pl;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-pt-BR.js":"/* Brazilian initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Leonildo Costa Silva (leocsilva@gmail.com). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional[ \"pt-BR\" ] = {\r\n\tcloseText: \"Fechar\",\r\n\tprevText: \"&#x3C;Anterior\",\r\n\tnextText: \"Pr\u00f3ximo&#x3E;\",\r\n\tcurrentText: \"Hoje\",\r\n\tmonthNames: [ \"Janeiro\",\"Fevereiro\",\"Mar\u00e7o\",\"Abril\",\"Maio\",\"Junho\",\r\n\t\"Julho\",\"Agosto\",\"Setembro\",\"Outubro\",\"Novembro\",\"Dezembro\" ],\r\n\tmonthNamesShort: [ \"Jan\",\"Fev\",\"Mar\",\"Abr\",\"Mai\",\"Jun\",\r\n\t\"Jul\",\"Ago\",\"Set\",\"Out\",\"Nov\",\"Dez\" ],\r\n\tdayNames: [\r\n\t\t\"Domingo\",\r\n\t\t\"Segunda-feira\",\r\n\t\t\"Ter\u00e7a-feira\",\r\n\t\t\"Quarta-feira\",\r\n\t\t\"Quinta-feira\",\r\n\t\t\"Sexta-feira\",\r\n\t\t\"S\u00e1bado\"\r\n\t],\r\n\tdayNamesShort: [ \"Dom\",\"Seg\",\"Ter\",\"Qua\",\"Qui\",\"Sex\",\"S\u00e1b\" ],\r\n\tdayNamesMin: [ \"Dom\",\"Seg\",\"Ter\",\"Qua\",\"Qui\",\"Sex\",\"S\u00e1b\" ],\r\n\tweekHeader: \"Sm\",\r\n\tdateFormat: \"dd/mm/yy\",\r\n\tfirstDay: 0,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional[ \"pt-BR\" ] );\r\n\r\nreturn datepicker.regional[ \"pt-BR\" ];\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-pt.js":"/* Portuguese initialisation for the jQuery UI date picker plugin. */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.pt = {\r\n\tcloseText: \"Fechar\",\r\n\tprevText: \"Anterior\",\r\n\tnextText: \"Seguinte\",\r\n\tcurrentText: \"Hoje\",\r\n\tmonthNames: [ \"Janeiro\",\"Fevereiro\",\"Mar\u00e7o\",\"Abril\",\"Maio\",\"Junho\",\r\n\t\"Julho\",\"Agosto\",\"Setembro\",\"Outubro\",\"Novembro\",\"Dezembro\" ],\r\n\tmonthNamesShort: [ \"Jan\",\"Fev\",\"Mar\",\"Abr\",\"Mai\",\"Jun\",\r\n\t\"Jul\",\"Ago\",\"Set\",\"Out\",\"Nov\",\"Dez\" ],\r\n\tdayNames: [\r\n\t\t\"Domingo\",\r\n\t\t\"Segunda-feira\",\r\n\t\t\"Ter\u00e7a-feira\",\r\n\t\t\"Quarta-feira\",\r\n\t\t\"Quinta-feira\",\r\n\t\t\"Sexta-feira\",\r\n\t\t\"S\u00e1bado\"\r\n\t],\r\n\tdayNamesShort: [ \"Dom\",\"Seg\",\"Ter\",\"Qua\",\"Qui\",\"Sex\",\"S\u00e1b\" ],\r\n\tdayNamesMin: [ \"Dom\",\"Seg\",\"Ter\",\"Qua\",\"Qui\",\"Sex\",\"S\u00e1b\" ],\r\n\tweekHeader: \"Sem\",\r\n\tdateFormat: \"dd/mm/yy\",\r\n\tfirstDay: 0,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.pt );\r\n\r\nreturn datepicker.regional.pt;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-rm.js":"/* Romansh initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Yvonne Gienal (yvonne.gienal@educa.ch). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.rm = {\r\n\tcloseText: \"Serrar\",\r\n\tprevText: \"&#x3C;Suandant\",\r\n\tnextText: \"Precedent&#x3E;\",\r\n\tcurrentText: \"Actual\",\r\n\tmonthNames: [\r\n\t\t\"Schaner\",\r\n\t\t\"Favrer\",\r\n\t\t\"Mars\",\r\n\t\t\"Avrigl\",\r\n\t\t\"Matg\",\r\n\t\t\"Zercladur\",\r\n\t\t\"Fanadur\",\r\n\t\t\"Avust\",\r\n\t\t\"Settember\",\r\n\t\t\"October\",\r\n\t\t\"November\",\r\n\t\t\"December\"\r\n\t],\r\n\tmonthNamesShort: [\r\n\t\t\"Scha\",\r\n\t\t\"Fev\",\r\n\t\t\"Mar\",\r\n\t\t\"Avr\",\r\n\t\t\"Matg\",\r\n\t\t\"Zer\",\r\n\t\t\"Fan\",\r\n\t\t\"Avu\",\r\n\t\t\"Sett\",\r\n\t\t\"Oct\",\r\n\t\t\"Nov\",\r\n\t\t\"Dec\"\r\n\t],\r\n\tdayNames: [ \"Dumengia\",\"Glindesdi\",\"Mardi\",\"Mesemna\",\"Gievgia\",\"Venderdi\",\"Sonda\" ],\r\n\tdayNamesShort: [ \"Dum\",\"Gli\",\"Mar\",\"Mes\",\"Gie\",\"Ven\",\"Som\" ],\r\n\tdayNamesMin: [ \"Du\",\"Gl\",\"Ma\",\"Me\",\"Gi\",\"Ve\",\"So\" ],\r\n\tweekHeader: \"emna\",\r\n\tdateFormat: \"dd/mm/yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.rm );\r\n\r\nreturn datepicker.regional.rm;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-ro.js":"/* Romanian initialisation for the jQuery UI date picker plugin.\r\n *\r\n * Written by Edmond L. (ll_edmond@walla.com)\r\n * and Ionut G. Stan (ionut.g.stan@gmail.com)\r\n */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.ro = {\r\n\tcloseText: \"\u00cenchide\",\r\n\tprevText: \"&#xAB; Luna precedent\u0103\",\r\n\tnextText: \"Luna urm\u0103toare &#xBB;\",\r\n\tcurrentText: \"Azi\",\r\n\tmonthNames: [ \"Ianuarie\",\"Februarie\",\"Martie\",\"Aprilie\",\"Mai\",\"Iunie\",\r\n\t\"Iulie\",\"August\",\"Septembrie\",\"Octombrie\",\"Noiembrie\",\"Decembrie\" ],\r\n\tmonthNamesShort: [ \"Ian\", \"Feb\", \"Mar\", \"Apr\", \"Mai\", \"Iun\",\r\n\t\"Iul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ],\r\n\tdayNames: [ \"Duminic\u0103\", \"Luni\", \"Mar\u0163i\", \"Miercuri\", \"Joi\", \"Vineri\", \"S\u00e2mb\u0103t\u0103\" ],\r\n\tdayNamesShort: [ \"Dum\", \"Lun\", \"Mar\", \"Mie\", \"Joi\", \"Vin\", \"S\u00e2m\" ],\r\n\tdayNamesMin: [ \"Du\",\"Lu\",\"Ma\",\"Mi\",\"Jo\",\"Vi\",\"S\u00e2\" ],\r\n\tweekHeader: \"S\u0103pt\",\r\n\tdateFormat: \"dd.mm.yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.ro );\r\n\r\nreturn datepicker.regional.ro;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-ru.js":"/* Russian (UTF-8) initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Andrew Stromnov (stromnov@gmail.com). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.ru = {\r\n\tcloseText: \"\u0417\u0430\u043a\u0440\u044b\u0442\u044c\",\r\n\tprevText: \"&#x3C;\u041f\u0440\u0435\u0434\",\r\n\tnextText: \"\u0421\u043b\u0435\u0434&#x3E;\",\r\n\tcurrentText: \"\u0421\u0435\u0433\u043e\u0434\u043d\u044f\",\r\n\tmonthNames: [ \"\u042f\u043d\u0432\u0430\u0440\u044c\",\"\u0424\u0435\u0432\u0440\u0430\u043b\u044c\",\"\u041c\u0430\u0440\u0442\",\"\u0410\u043f\u0440\u0435\u043b\u044c\",\"\u041c\u0430\u0439\",\"\u0418\u044e\u043d\u044c\",\r\n\t\"\u0418\u044e\u043b\u044c\",\"\u0410\u0432\u0433\u0443\u0441\u0442\",\"\u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c\",\"\u041e\u043a\u0442\u044f\u0431\u0440\u044c\",\"\u041d\u043e\u044f\u0431\u0440\u044c\",\"\u0414\u0435\u043a\u0430\u0431\u0440\u044c\" ],\r\n\tmonthNamesShort: [ \"\u042f\u043d\u0432\",\"\u0424\u0435\u0432\",\"\u041c\u0430\u0440\",\"\u0410\u043f\u0440\",\"\u041c\u0430\u0439\",\"\u0418\u044e\u043d\",\r\n\t\"\u0418\u044e\u043b\",\"\u0410\u0432\u0433\",\"\u0421\u0435\u043d\",\"\u041e\u043a\u0442\",\"\u041d\u043e\u044f\",\"\u0414\u0435\u043a\" ],\r\n\tdayNames: [ \"\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435\",\"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a\",\"\u0432\u0442\u043e\u0440\u043d\u0438\u043a\",\"\u0441\u0440\u0435\u0434\u0430\",\"\u0447\u0435\u0442\u0432\u0435\u0440\u0433\",\"\u043f\u044f\u0442\u043d\u0438\u0446\u0430\",\"\u0441\u0443\u0431\u0431\u043e\u0442\u0430\" ],\r\n\tdayNamesShort: [ \"\u0432\u0441\u043a\",\"\u043f\u043d\u0434\",\"\u0432\u0442\u0440\",\"\u0441\u0440\u0434\",\"\u0447\u0442\u0432\",\"\u043f\u0442\u043d\",\"\u0441\u0431\u0442\" ],\r\n\tdayNamesMin: [ \"\u0412\u0441\",\"\u041f\u043d\",\"\u0412\u0442\",\"\u0421\u0440\",\"\u0427\u0442\",\"\u041f\u0442\",\"\u0421\u0431\" ],\r\n\tweekHeader: \"\u041d\u0435\u0434\",\r\n\tdateFormat: \"dd.mm.yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.ru );\r\n\r\nreturn datepicker.regional.ru;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-sk.js":"/* Slovak initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Vojtech Rinik (vojto@hmm.sk). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.sk = {\r\n\tcloseText: \"Zavrie\u0165\",\r\n\tprevText: \"&#x3C;Predch\u00e1dzaj\u00faci\",\r\n\tnextText: \"Nasleduj\u00faci&#x3E;\",\r\n\tcurrentText: \"Dnes\",\r\n\tmonthNames: [ \"janu\u00e1r\",\"febru\u00e1r\",\"marec\",\"apr\u00edl\",\"m\u00e1j\",\"j\u00fan\",\r\n\t\"j\u00fal\",\"august\",\"september\",\"okt\u00f3ber\",\"november\",\"december\" ],\r\n\tmonthNamesShort: [ \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"M\u00e1j\",\"J\u00fan\",\r\n\t\"J\u00fal\",\"Aug\",\"Sep\",\"Okt\",\"Nov\",\"Dec\" ],\r\n\tdayNames: [ \"nede\u013ea\",\"pondelok\",\"utorok\",\"streda\",\"\u0161tvrtok\",\"piatok\",\"sobota\" ],\r\n\tdayNamesShort: [ \"Ned\",\"Pon\",\"Uto\",\"Str\",\"\u0160tv\",\"Pia\",\"Sob\" ],\r\n\tdayNamesMin: [ \"Ne\",\"Po\",\"Ut\",\"St\",\"\u0160t\",\"Pia\",\"So\" ],\r\n\tweekHeader: \"Ty\",\r\n\tdateFormat: \"dd.mm.yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.sk );\r\n\r\nreturn datepicker.regional.sk;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-sl.js":"/* Slovenian initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Jaka Jancar (jaka@kubje.org). */\r\n/* c = \u010d, s = \u0161 z = \u017e C = \u010c S = \u0160 Z = \u017d */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.sl = {\r\n\tcloseText: \"Zapri\",\r\n\tprevText: \"&#x3C;Prej\u0161nji\",\r\n\tnextText: \"Naslednji&#x3E;\",\r\n\tcurrentText: \"Trenutni\",\r\n\tmonthNames: [ \"Januar\",\"Februar\",\"Marec\",\"April\",\"Maj\",\"Junij\",\r\n\t\"Julij\",\"Avgust\",\"September\",\"Oktober\",\"November\",\"December\" ],\r\n\tmonthNamesShort: [ \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"Maj\",\"Jun\",\r\n\t\"Jul\",\"Avg\",\"Sep\",\"Okt\",\"Nov\",\"Dec\" ],\r\n\tdayNames: [ \"Nedelja\",\"Ponedeljek\",\"Torek\",\"Sreda\",\"\u010cetrtek\",\"Petek\",\"Sobota\" ],\r\n\tdayNamesShort: [ \"Ned\",\"Pon\",\"Tor\",\"Sre\",\"\u010cet\",\"Pet\",\"Sob\" ],\r\n\tdayNamesMin: [ \"Ne\",\"Po\",\"To\",\"Sr\",\"\u010ce\",\"Pe\",\"So\" ],\r\n\tweekHeader: \"Teden\",\r\n\tdateFormat: \"dd.mm.yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.sl );\r\n\r\nreturn datepicker.regional.sl;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-sq.js":"/* Albanian initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Flakron Bytyqi (flakron@gmail.com). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.sq = {\r\n\tcloseText: \"mbylle\",\r\n\tprevText: \"&#x3C;mbrapa\",\r\n\tnextText: \"P\u00ebrpara&#x3E;\",\r\n\tcurrentText: \"sot\",\r\n\tmonthNames: [ \"Janar\",\"Shkurt\",\"Mars\",\"Prill\",\"Maj\",\"Qershor\",\r\n\t\"Korrik\",\"Gusht\",\"Shtator\",\"Tetor\",\"N\u00ebntor\",\"Dhjetor\" ],\r\n\tmonthNamesShort: [ \"Jan\",\"Shk\",\"Mar\",\"Pri\",\"Maj\",\"Qer\",\r\n\t\"Kor\",\"Gus\",\"Sht\",\"Tet\",\"N\u00ebn\",\"Dhj\" ],\r\n\tdayNames: [ \"E Diel\",\"E H\u00ebn\u00eb\",\"E Mart\u00eb\",\"E M\u00ebrkur\u00eb\",\"E Enjte\",\"E Premte\",\"E Shtune\" ],\r\n\tdayNamesShort: [ \"Di\",\"H\u00eb\",\"Ma\",\"M\u00eb\",\"En\",\"Pr\",\"Sh\" ],\r\n\tdayNamesMin: [ \"Di\",\"H\u00eb\",\"Ma\",\"M\u00eb\",\"En\",\"Pr\",\"Sh\" ],\r\n\tweekHeader: \"Ja\",\r\n\tdateFormat: \"dd.mm.yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.sq );\r\n\r\nreturn datepicker.regional.sq;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-sr-SR.js":"/* Serbian i18n for the jQuery UI date picker plugin. */\r\n/* Written by Dejan Dimi\u0107. */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional[ \"sr-SR\" ] = {\r\n\tcloseText: \"Zatvori\",\r\n\tprevText: \"&#x3C;\",\r\n\tnextText: \"&#x3E;\",\r\n\tcurrentText: \"Danas\",\r\n\tmonthNames: [ \"Januar\",\"Februar\",\"Mart\",\"April\",\"Maj\",\"Jun\",\r\n\t\"Jul\",\"Avgust\",\"Septembar\",\"Oktobar\",\"Novembar\",\"Decembar\" ],\r\n\tmonthNamesShort: [ \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"Maj\",\"Jun\",\r\n\t\"Jul\",\"Avg\",\"Sep\",\"Okt\",\"Nov\",\"Dec\" ],\r\n\tdayNames: [ \"Nedelja\",\"Ponedeljak\",\"Utorak\",\"Sreda\",\"\u010cetvrtak\",\"Petak\",\"Subota\" ],\r\n\tdayNamesShort: [ \"Ned\",\"Pon\",\"Uto\",\"Sre\",\"\u010cet\",\"Pet\",\"Sub\" ],\r\n\tdayNamesMin: [ \"Ne\",\"Po\",\"Ut\",\"Sr\",\"\u010ce\",\"Pe\",\"Su\" ],\r\n\tweekHeader: \"Sed\",\r\n\tdateFormat: \"dd.mm.yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional[ \"sr-SR\" ] );\r\n\r\nreturn datepicker.regional[ \"sr-SR\" ];\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-sr.js":"/* Serbian i18n for the jQuery UI date picker plugin. */\r\n/* Written by Dejan Dimi\u0107. */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.sr = {\r\n\tcloseText: \"\u0417\u0430\u0442\u0432\u043e\u0440\u0438\",\r\n\tprevText: \"&#x3C;\",\r\n\tnextText: \"&#x3E;\",\r\n\tcurrentText: \"\u0414\u0430\u043d\u0430\u0441\",\r\n\tmonthNames: [ \"\u0408\u0430\u043d\u0443\u0430\u0440\",\"\u0424\u0435\u0431\u0440\u0443\u0430\u0440\",\"\u041c\u0430\u0440\u0442\",\"\u0410\u043f\u0440\u0438\u043b\",\"\u041c\u0430\u0458\",\"\u0408\u0443\u043d\",\r\n\t\"\u0408\u0443\u043b\",\"\u0410\u0432\u0433\u0443\u0441\u0442\",\"\u0421\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440\",\"\u041e\u043a\u0442\u043e\u0431\u0430\u0440\",\"\u041d\u043e\u0432\u0435\u043c\u0431\u0430\u0440\",\"\u0414\u0435\u0446\u0435\u043c\u0431\u0430\u0440\" ],\r\n\tmonthNamesShort: [ \"\u0408\u0430\u043d\",\"\u0424\u0435\u0431\",\"\u041c\u0430\u0440\",\"\u0410\u043f\u0440\",\"\u041c\u0430\u0458\",\"\u0408\u0443\u043d\",\r\n\t\"\u0408\u0443\u043b\",\"\u0410\u0432\u0433\",\"\u0421\u0435\u043f\",\"\u041e\u043a\u0442\",\"\u041d\u043e\u0432\",\"\u0414\u0435\u0446\" ],\r\n\tdayNames: [ \"\u041d\u0435\u0434\u0435\u0459\u0430\",\"\u041f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a\",\"\u0423\u0442\u043e\u0440\u0430\u043a\",\"\u0421\u0440\u0435\u0434\u0430\",\"\u0427\u0435\u0442\u0432\u0440\u0442\u0430\u043a\",\"\u041f\u0435\u0442\u0430\u043a\",\"\u0421\u0443\u0431\u043e\u0442\u0430\" ],\r\n\tdayNamesShort: [ \"\u041d\u0435\u0434\",\"\u041f\u043e\u043d\",\"\u0423\u0442\u043e\",\"\u0421\u0440\u0435\",\"\u0427\u0435\u0442\",\"\u041f\u0435\u0442\",\"\u0421\u0443\u0431\" ],\r\n\tdayNamesMin: [ \"\u041d\u0435\",\"\u041f\u043e\",\"\u0423\u0442\",\"\u0421\u0440\",\"\u0427\u0435\",\"\u041f\u0435\",\"\u0421\u0443\" ],\r\n\tweekHeader: \"\u0421\u0435\u0434\",\r\n\tdateFormat: \"dd.mm.yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.sr );\r\n\r\nreturn datepicker.regional.sr;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-sv.js":"/* Swedish initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Anders Ekdahl ( anders@nomadiz.se). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.sv = {\r\n\tcloseText: \"St\u00e4ng\",\r\n\tprevText: \"&#xAB;F\u00f6rra\",\r\n\tnextText: \"N\u00e4sta&#xBB;\",\r\n\tcurrentText: \"Idag\",\r\n\tmonthNames: [ \"Januari\",\"Februari\",\"Mars\",\"April\",\"Maj\",\"Juni\",\r\n\t\"Juli\",\"Augusti\",\"September\",\"Oktober\",\"November\",\"December\" ],\r\n\tmonthNamesShort: [ \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"Maj\",\"Jun\",\r\n\t\"Jul\",\"Aug\",\"Sep\",\"Okt\",\"Nov\",\"Dec\" ],\r\n\tdayNamesShort: [ \"S\u00f6n\",\"M\u00e5n\",\"Tis\",\"Ons\",\"Tor\",\"Fre\",\"L\u00f6r\" ],\r\n\tdayNames: [ \"S\u00f6ndag\",\"M\u00e5ndag\",\"Tisdag\",\"Onsdag\",\"Torsdag\",\"Fredag\",\"L\u00f6rdag\" ],\r\n\tdayNamesMin: [ \"S\u00f6\",\"M\u00e5\",\"Ti\",\"On\",\"To\",\"Fr\",\"L\u00f6\" ],\r\n\tweekHeader: \"Ve\",\r\n\tdateFormat: \"yy-mm-dd\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.sv );\r\n\r\nreturn datepicker.regional.sv;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-ta.js":"/* Tamil (UTF-8) initialisation for the jQuery UI date picker plugin. */\r\n/* Written by S A Sureshkumar (saskumar@live.com). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.ta = {\r\n\tcloseText: \"\u0bae\u0bc2\u0b9f\u0bc1\",\r\n\tprevText: \"\u0bae\u0bc1\u0ba9\u0bcd\u0ba9\u0bc8\u0baf\u0ba4\u0bc1\",\r\n\tnextText: \"\u0b85\u0b9f\u0bc1\u0ba4\u0bcd\u0ba4\u0ba4\u0bc1\",\r\n\tcurrentText: \"\u0b87\u0ba9\u0bcd\u0bb1\u0bc1\",\r\n\tmonthNames: [ \"\u0ba4\u0bc8\",\"\u0bae\u0bbe\u0b9a\u0bbf\",\"\u0baa\u0b99\u0bcd\u0b95\u0bc1\u0ba9\u0bbf\",\"\u0b9a\u0bbf\u0ba4\u0bcd\u0ba4\u0bbf\u0bb0\u0bc8\",\"\u0bb5\u0bc8\u0b95\u0bbe\u0b9a\u0bbf\",\"\u0b86\u0ba9\u0bbf\",\r\n\t\"\u0b86\u0b9f\u0bbf\",\"\u0b86\u0bb5\u0ba3\u0bbf\",\"\u0baa\u0bc1\u0bb0\u0b9f\u0bcd\u0b9f\u0bbe\u0b9a\u0bbf\",\"\u0b90\u0baa\u0bcd\u0baa\u0b9a\u0bbf\",\"\u0b95\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bbf\u0b95\u0bc8\",\"\u0bae\u0bbe\u0bb0\u0bcd\u0b95\u0bb4\u0bbf\" ],\r\n\tmonthNamesShort: [ \"\u0ba4\u0bc8\",\"\u0bae\u0bbe\u0b9a\u0bbf\",\"\u0baa\u0b99\u0bcd\",\"\u0b9a\u0bbf\u0ba4\u0bcd\",\"\u0bb5\u0bc8\u0b95\u0bbe\",\"\u0b86\u0ba9\u0bbf\",\r\n\t\"\u0b86\u0b9f\u0bbf\",\"\u0b86\u0bb5\",\"\u0baa\u0bc1\u0bb0\",\"\u0b90\u0baa\u0bcd\",\"\u0b95\u0bbe\u0bb0\u0bcd\",\"\u0bae\u0bbe\u0bb0\u0bcd\" ],\r\n\tdayNames: [\r\n\t\t\"\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bcd\u0bb1\u0bc1\u0b95\u0bcd\u0b95\u0bbf\u0bb4\u0bae\u0bc8\",\r\n\t\t\"\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0b9f\u0bcd\u0b95\u0bbf\u0bb4\u0bae\u0bc8\",\r\n\t\t\"\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd\u0b95\u0bcd\u0b95\u0bbf\u0bb4\u0bae\u0bc8\",\r\n\t\t\"\u0baa\u0bc1\u0ba4\u0ba9\u0bcd\u0b95\u0bbf\u0bb4\u0bae\u0bc8\",\r\n\t\t\"\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0b95\u0bcd\u0b95\u0bbf\u0bb4\u0bae\u0bc8\",\r\n\t\t\"\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf\u0b95\u0bcd\u0b95\u0bbf\u0bb4\u0bae\u0bc8\",\r\n\t\t\"\u0b9a\u0ba9\u0bbf\u0b95\u0bcd\u0b95\u0bbf\u0bb4\u0bae\u0bc8\"\r\n\t],\r\n\tdayNamesShort: [\r\n\t\t\"\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1\",\r\n\t\t\"\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd\",\r\n\t\t\"\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd\",\r\n\t\t\"\u0baa\u0bc1\u0ba4\u0ba9\u0bcd\",\r\n\t\t\"\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd\",\r\n\t\t\"\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf\",\r\n\t\t\"\u0b9a\u0ba9\u0bbf\"\r\n\t],\r\n\tdayNamesMin: [ \"\u0b9e\u0bbe\",\"\u0ba4\u0bbf\",\"\u0b9a\u0bc6\",\"\u0baa\u0bc1\",\"\u0bb5\u0bbf\",\"\u0bb5\u0bc6\",\"\u0b9a\" ],\r\n\tweekHeader: \"\u041d\u0435\",\r\n\tdateFormat: \"dd/mm/yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.ta );\r\n\r\nreturn datepicker.regional.ta;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-th.js":"/* Thai initialisation for the jQuery UI date picker plugin. */\r\n/* Written by pipo (pipo@sixhead.com). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.th = {\r\n\tcloseText: \"\u0e1b\u0e34\u0e14\",\r\n\tprevText: \"&#xAB;&#xA0;\u0e22\u0e49\u0e2d\u0e19\",\r\n\tnextText: \"\u0e16\u0e31\u0e14\u0e44\u0e1b&#xA0;&#xBB;\",\r\n\tcurrentText: \"\u0e27\u0e31\u0e19\u0e19\u0e35\u0e49\",\r\n\tmonthNames: [ \"\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21\",\"\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c\",\"\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21\",\"\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19\",\"\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21\",\"\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19\",\r\n\t\"\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21\",\"\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21\",\"\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19\",\"\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21\",\"\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19\",\"\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21\" ],\r\n\tmonthNamesShort: [ \"\u0e21.\u0e04.\",\"\u0e01.\u0e1e.\",\"\u0e21\u0e35.\u0e04.\",\"\u0e40\u0e21.\u0e22.\",\"\u0e1e.\u0e04.\",\"\u0e21\u0e34.\u0e22.\",\r\n\t\"\u0e01.\u0e04.\",\"\u0e2a.\u0e04.\",\"\u0e01.\u0e22.\",\"\u0e15.\u0e04.\",\"\u0e1e.\u0e22.\",\"\u0e18.\u0e04.\" ],\r\n\tdayNames: [ \"\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c\",\"\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c\",\"\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23\",\"\u0e1e\u0e38\u0e18\",\"\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35\",\"\u0e28\u0e38\u0e01\u0e23\u0e4c\",\"\u0e40\u0e2a\u0e32\u0e23\u0e4c\" ],\r\n\tdayNamesShort: [ \"\u0e2d\u0e32.\",\"\u0e08.\",\"\u0e2d.\",\"\u0e1e.\",\"\u0e1e\u0e24.\",\"\u0e28.\",\"\u0e2a.\" ],\r\n\tdayNamesMin: [ \"\u0e2d\u0e32.\",\"\u0e08.\",\"\u0e2d.\",\"\u0e1e.\",\"\u0e1e\u0e24.\",\"\u0e28.\",\"\u0e2a.\" ],\r\n\tweekHeader: \"Wk\",\r\n\tdateFormat: \"dd/mm/yy\",\r\n\tfirstDay: 0,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.th );\r\n\r\nreturn datepicker.regional.th;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-tj.js":"/* Tajiki (UTF-8) initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Abdurahmon Saidov (saidovab@gmail.com). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.tj = {\r\n\tcloseText: \"\u0418\u0434\u043e\u043c\u0430\",\r\n\tprevText: \"&#x3c;\u049a\u0430\u0444\u043e\",\r\n\tnextText: \"\u041f\u0435\u0448&#x3e;\",\r\n\tcurrentText: \"\u0418\u043c\u0440\u04ef\u0437\",\r\n\tmonthNames: [ \"\u042f\u043d\u0432\u0430\u0440\",\"\u0424\u0435\u0432\u0440\u0430\u043b\",\"\u041c\u0430\u0440\u0442\",\"\u0410\u043f\u0440\u0435\u043b\",\"\u041c\u0430\u0439\",\"\u0418\u044e\u043d\",\r\n\t\"\u0418\u044e\u043b\",\"\u0410\u0432\u0433\u0443\u0441\u0442\",\"\u0421\u0435\u043d\u0442\u044f\u0431\u0440\",\"\u041e\u043a\u0442\u044f\u0431\u0440\",\"\u041d\u043e\u044f\u0431\u0440\",\"\u0414\u0435\u043a\u0430\u0431\u0440\" ],\r\n\tmonthNamesShort: [ \"\u042f\u043d\u0432\",\"\u0424\u0435\u0432\",\"\u041c\u0430\u0440\",\"\u0410\u043f\u0440\",\"\u041c\u0430\u0439\",\"\u0418\u044e\u043d\",\r\n\t\"\u0418\u044e\u043b\",\"\u0410\u0432\u0433\",\"\u0421\u0435\u043d\",\"\u041e\u043a\u0442\",\"\u041d\u043e\u044f\",\"\u0414\u0435\u043a\" ],\r\n\tdayNames: [ \"\u044f\u043a\u0448\u0430\u043d\u0431\u0435\",\"\u0434\u0443\u0448\u0430\u043d\u0431\u0435\",\"\u0441\u0435\u0448\u0430\u043d\u0431\u0435\",\"\u0447\u043e\u0440\u0448\u0430\u043d\u0431\u0435\",\"\u043f\u0430\u043d\u04b7\u0448\u0430\u043d\u0431\u0435\",\"\u04b7\u0443\u043c\u044a\u0430\",\"\u0448\u0430\u043d\u0431\u0435\" ],\r\n\tdayNamesShort: [ \"\u044f\u043a\u0448\",\"\u0434\u0443\u0448\",\"\u0441\u0435\u0448\",\"\u0447\u043e\u0440\",\"\u043f\u0430\u043d\",\"\u04b7\u0443\u043c\",\"\u0448\u0430\u043d\" ],\r\n\tdayNamesMin: [ \"\u042f\u043a\",\"\u0414\u0448\",\"\u0421\u0448\",\"\u0427\u0448\",\"\u041f\u0448\",\"\u04b6\u043c\",\"\u0428\u043d\" ],\r\n\tweekHeader: \"\u0425\u0444\",\r\n\tdateFormat: \"dd.mm.yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.tj );\r\n\r\nreturn datepicker.regional.tj;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-tr.js":"/* Turkish initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Izzet Emre Erkan (kara@karalamalar.net). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.tr = {\r\n\tcloseText: \"kapat\",\r\n\tprevText: \"&#x3C;geri\",\r\n\tnextText: \"ileri&#x3e\",\r\n\tcurrentText: \"bug\u00fcn\",\r\n\tmonthNames: [ \"Ocak\",\"\u015eubat\",\"Mart\",\"Nisan\",\"May\u0131s\",\"Haziran\",\r\n\t\"Temmuz\",\"A\u011fustos\",\"Eyl\u00fcl\",\"Ekim\",\"Kas\u0131m\",\"Aral\u0131k\" ],\r\n\tmonthNamesShort: [ \"Oca\",\"\u015eub\",\"Mar\",\"Nis\",\"May\",\"Haz\",\r\n\t\"Tem\",\"A\u011fu\",\"Eyl\",\"Eki\",\"Kas\",\"Ara\" ],\r\n\tdayNames: [ \"Pazar\",\"Pazartesi\",\"Sal\u0131\",\"\u00c7ar\u015famba\",\"Per\u015fembe\",\"Cuma\",\"Cumartesi\" ],\r\n\tdayNamesShort: [ \"Pz\",\"Pt\",\"Sa\",\"\u00c7a\",\"Pe\",\"Cu\",\"Ct\" ],\r\n\tdayNamesMin: [ \"Pz\",\"Pt\",\"Sa\",\"\u00c7a\",\"Pe\",\"Cu\",\"Ct\" ],\r\n\tweekHeader: \"Hf\",\r\n\tdateFormat: \"dd.mm.yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.tr );\r\n\r\nreturn datepicker.regional.tr;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-uk.js":"/* Ukrainian (UTF-8) initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Maxim Drogobitskiy (maxdao@gmail.com). */\r\n/* Corrected by Igor Milla (igor.fsp.milla@gmail.com). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.uk = {\r\n\tcloseText: \"\u0417\u0430\u043a\u0440\u0438\u0442\u0438\",\r\n\tprevText: \"&#x3C;\",\r\n\tnextText: \"&#x3E;\",\r\n\tcurrentText: \"\u0421\u044c\u043e\u0433\u043e\u0434\u043d\u0456\",\r\n\tmonthNames: [ \"\u0421\u0456\u0447\u0435\u043d\u044c\",\"\u041b\u044e\u0442\u0438\u0439\",\"\u0411\u0435\u0440\u0435\u0437\u0435\u043d\u044c\",\"\u041a\u0432\u0456\u0442\u0435\u043d\u044c\",\"\u0422\u0440\u0430\u0432\u0435\u043d\u044c\",\"\u0427\u0435\u0440\u0432\u0435\u043d\u044c\",\r\n\t\"\u041b\u0438\u043f\u0435\u043d\u044c\",\"\u0421\u0435\u0440\u043f\u0435\u043d\u044c\",\"\u0412\u0435\u0440\u0435\u0441\u0435\u043d\u044c\",\"\u0416\u043e\u0432\u0442\u0435\u043d\u044c\",\"\u041b\u0438\u0441\u0442\u043e\u043f\u0430\u0434\",\"\u0413\u0440\u0443\u0434\u0435\u043d\u044c\" ],\r\n\tmonthNamesShort: [ \"\u0421\u0456\u0447\",\"\u041b\u044e\u0442\",\"\u0411\u0435\u0440\",\"\u041a\u0432\u0456\",\"\u0422\u0440\u0430\",\"\u0427\u0435\u0440\",\r\n\t\"\u041b\u0438\u043f\",\"\u0421\u0435\u0440\",\"\u0412\u0435\u0440\",\"\u0416\u043e\u0432\",\"\u041b\u0438\u0441\",\"\u0413\u0440\u0443\" ],\r\n\tdayNames: [ \"\u043d\u0435\u0434\u0456\u043b\u044f\",\"\u043f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a\",\"\u0432\u0456\u0432\u0442\u043e\u0440\u043e\u043a\",\"\u0441\u0435\u0440\u0435\u0434\u0430\",\"\u0447\u0435\u0442\u0432\u0435\u0440\",\"\u043f\u2019\u044f\u0442\u043d\u0438\u0446\u044f\",\"\u0441\u0443\u0431\u043e\u0442\u0430\" ],\r\n\tdayNamesShort: [ \"\u043d\u0435\u0434\",\"\u043f\u043d\u0434\",\"\u0432\u0456\u0432\",\"\u0441\u0440\u0434\",\"\u0447\u0442\u0432\",\"\u043f\u0442\u043d\",\"\u0441\u0431\u0442\" ],\r\n\tdayNamesMin: [ \"\u041d\u0434\",\"\u041f\u043d\",\"\u0412\u0442\",\"\u0421\u0440\",\"\u0427\u0442\",\"\u041f\u0442\",\"\u0421\u0431\" ],\r\n\tweekHeader: \"\u0422\u0438\u0436\",\r\n\tdateFormat: \"dd.mm.yy\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.uk );\r\n\r\nreturn datepicker.regional.uk;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-vi.js":"/* Vietnamese initialisation for the jQuery UI date picker plugin. */\r\n/* Translated by Le Thanh Huy (lthanhhuy@cit.ctu.edu.vn). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional.vi = {\r\n\tcloseText: \"\u0110\u00f3ng\",\r\n\tprevText: \"&#x3C;Tr\u01b0\u1edbc\",\r\n\tnextText: \"Ti\u1ebfp&#x3E;\",\r\n\tcurrentText: \"H\u00f4m nay\",\r\n\tmonthNames: [ \"Th\u00e1ng M\u1ed9t\", \"Th\u00e1ng Hai\", \"Th\u00e1ng Ba\", \"Th\u00e1ng T\u01b0\", \"Th\u00e1ng N\u0103m\", \"Th\u00e1ng S\u00e1u\",\r\n\t\"Th\u00e1ng B\u1ea3y\", \"Th\u00e1ng T\u00e1m\", \"Th\u00e1ng Ch\u00edn\", \"Th\u00e1ng M\u01b0\u1eddi\", \"Th\u00e1ng M\u01b0\u1eddi M\u1ed9t\", \"Th\u00e1ng M\u01b0\u1eddi Hai\" ],\r\n\tmonthNamesShort: [ \"Th\u00e1ng 1\", \"Th\u00e1ng 2\", \"Th\u00e1ng 3\", \"Th\u00e1ng 4\", \"Th\u00e1ng 5\", \"Th\u00e1ng 6\",\r\n\t\"Th\u00e1ng 7\", \"Th\u00e1ng 8\", \"Th\u00e1ng 9\", \"Th\u00e1ng 10\", \"Th\u00e1ng 11\", \"Th\u00e1ng 12\" ],\r\n\tdayNames: [ \"Ch\u1ee7 Nh\u1eadt\", \"Th\u1ee9 Hai\", \"Th\u1ee9 Ba\", \"Th\u1ee9 T\u01b0\", \"Th\u1ee9 N\u0103m\", \"Th\u1ee9 S\u00e1u\", \"Th\u1ee9 B\u1ea3y\" ],\r\n\tdayNamesShort: [ \"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\" ],\r\n\tdayNamesMin: [ \"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\" ],\r\n\tweekHeader: \"Tu\",\r\n\tdateFormat: \"dd/mm/yy\",\r\n\tfirstDay: 0,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: false,\r\n\tyearSuffix: \"\" };\r\ndatepicker.setDefaults( datepicker.regional.vi );\r\n\r\nreturn datepicker.regional.vi;\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-zh-CN.js":"/* Chinese initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Cloudream (cloudream@gmail.com). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional[ \"zh-CN\" ] = {\r\n\tcloseText: \"\u5173\u95ed\",\r\n\tprevText: \"&#x3C;\u4e0a\u6708\",\r\n\tnextText: \"\u4e0b\u6708&#x3E;\",\r\n\tcurrentText: \"\u4eca\u5929\",\r\n\tmonthNames: [ \"\u4e00\u6708\",\"\u4e8c\u6708\",\"\u4e09\u6708\",\"\u56db\u6708\",\"\u4e94\u6708\",\"\u516d\u6708\",\r\n\t\"\u4e03\u6708\",\"\u516b\u6708\",\"\u4e5d\u6708\",\"\u5341\u6708\",\"\u5341\u4e00\u6708\",\"\u5341\u4e8c\u6708\" ],\r\n\tmonthNamesShort: [ \"\u4e00\u6708\",\"\u4e8c\u6708\",\"\u4e09\u6708\",\"\u56db\u6708\",\"\u4e94\u6708\",\"\u516d\u6708\",\r\n\t\"\u4e03\u6708\",\"\u516b\u6708\",\"\u4e5d\u6708\",\"\u5341\u6708\",\"\u5341\u4e00\u6708\",\"\u5341\u4e8c\u6708\" ],\r\n\tdayNames: [ \"\u661f\u671f\u65e5\",\"\u661f\u671f\u4e00\",\"\u661f\u671f\u4e8c\",\"\u661f\u671f\u4e09\",\"\u661f\u671f\u56db\",\"\u661f\u671f\u4e94\",\"\u661f\u671f\u516d\" ],\r\n\tdayNamesShort: [ \"\u5468\u65e5\",\"\u5468\u4e00\",\"\u5468\u4e8c\",\"\u5468\u4e09\",\"\u5468\u56db\",\"\u5468\u4e94\",\"\u5468\u516d\" ],\r\n\tdayNamesMin: [ \"\u65e5\",\"\u4e00\",\"\u4e8c\",\"\u4e09\",\"\u56db\",\"\u4e94\",\"\u516d\" ],\r\n\tweekHeader: \"\u5468\",\r\n\tdateFormat: \"yy-mm-dd\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: true,\r\n\tyearSuffix: \"\u5e74\" };\r\ndatepicker.setDefaults( datepicker.regional[ \"zh-CN\" ] );\r\n\r\nreturn datepicker.regional[ \"zh-CN\" ];\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-zh-HK.js":"/* Chinese initialisation for the jQuery UI date picker plugin. */\r\n/* Written by SCCY (samuelcychan@gmail.com). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional[ \"zh-HK\" ] = {\r\n\tcloseText: \"\u95dc\u9589\",\r\n\tprevText: \"&#x3C;\u4e0a\u6708\",\r\n\tnextText: \"\u4e0b\u6708&#x3E;\",\r\n\tcurrentText: \"\u4eca\u5929\",\r\n\tmonthNames: [ \"\u4e00\u6708\",\"\u4e8c\u6708\",\"\u4e09\u6708\",\"\u56db\u6708\",\"\u4e94\u6708\",\"\u516d\u6708\",\r\n\t\"\u4e03\u6708\",\"\u516b\u6708\",\"\u4e5d\u6708\",\"\u5341\u6708\",\"\u5341\u4e00\u6708\",\"\u5341\u4e8c\u6708\" ],\r\n\tmonthNamesShort: [ \"\u4e00\u6708\",\"\u4e8c\u6708\",\"\u4e09\u6708\",\"\u56db\u6708\",\"\u4e94\u6708\",\"\u516d\u6708\",\r\n\t\"\u4e03\u6708\",\"\u516b\u6708\",\"\u4e5d\u6708\",\"\u5341\u6708\",\"\u5341\u4e00\u6708\",\"\u5341\u4e8c\u6708\" ],\r\n\tdayNames: [ \"\u661f\u671f\u65e5\",\"\u661f\u671f\u4e00\",\"\u661f\u671f\u4e8c\",\"\u661f\u671f\u4e09\",\"\u661f\u671f\u56db\",\"\u661f\u671f\u4e94\",\"\u661f\u671f\u516d\" ],\r\n\tdayNamesShort: [ \"\u5468\u65e5\",\"\u5468\u4e00\",\"\u5468\u4e8c\",\"\u5468\u4e09\",\"\u5468\u56db\",\"\u5468\u4e94\",\"\u5468\u516d\" ],\r\n\tdayNamesMin: [ \"\u65e5\",\"\u4e00\",\"\u4e8c\",\"\u4e09\",\"\u56db\",\"\u4e94\",\"\u516d\" ],\r\n\tweekHeader: \"\u5468\",\r\n\tdateFormat: \"dd-mm-yy\",\r\n\tfirstDay: 0,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: true,\r\n\tyearSuffix: \"\u5e74\" };\r\ndatepicker.setDefaults( datepicker.regional[ \"zh-HK\" ] );\r\n\r\nreturn datepicker.regional[ \"zh-HK\" ];\r\n\r\n} ) );\r\n","jquery/ui-modules/i18n/datepicker-zh-TW.js":"/* Chinese initialisation for the jQuery UI date picker plugin. */\r\n/* Written by Ressol (ressol@gmail.com). */\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [ \"../widgets/datepicker\" ], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery.datepicker );\r\n\t}\r\n}( function( datepicker ) {\r\n\r\ndatepicker.regional[ \"zh-TW\" ] = {\r\n\tcloseText: \"\u95dc\u9589\",\r\n\tprevText: \"&#x3C;\u4e0a\u6708\",\r\n\tnextText: \"\u4e0b\u6708&#x3E;\",\r\n\tcurrentText: \"\u4eca\u5929\",\r\n\tmonthNames: [ \"\u4e00\u6708\",\"\u4e8c\u6708\",\"\u4e09\u6708\",\"\u56db\u6708\",\"\u4e94\u6708\",\"\u516d\u6708\",\r\n\t\"\u4e03\u6708\",\"\u516b\u6708\",\"\u4e5d\u6708\",\"\u5341\u6708\",\"\u5341\u4e00\u6708\",\"\u5341\u4e8c\u6708\" ],\r\n\tmonthNamesShort: [ \"\u4e00\u6708\",\"\u4e8c\u6708\",\"\u4e09\u6708\",\"\u56db\u6708\",\"\u4e94\u6708\",\"\u516d\u6708\",\r\n\t\"\u4e03\u6708\",\"\u516b\u6708\",\"\u4e5d\u6708\",\"\u5341\u6708\",\"\u5341\u4e00\u6708\",\"\u5341\u4e8c\u6708\" ],\r\n\tdayNames: [ \"\u661f\u671f\u65e5\",\"\u661f\u671f\u4e00\",\"\u661f\u671f\u4e8c\",\"\u661f\u671f\u4e09\",\"\u661f\u671f\u56db\",\"\u661f\u671f\u4e94\",\"\u661f\u671f\u516d\" ],\r\n\tdayNamesShort: [ \"\u5468\u65e5\",\"\u5468\u4e00\",\"\u5468\u4e8c\",\"\u5468\u4e09\",\"\u5468\u56db\",\"\u5468\u4e94\",\"\u5468\u516d\" ],\r\n\tdayNamesMin: [ \"\u65e5\",\"\u4e00\",\"\u4e8c\",\"\u4e09\",\"\u56db\",\"\u4e94\",\"\u516d\" ],\r\n\tweekHeader: \"\u5468\",\r\n\tdateFormat: \"yy/mm/dd\",\r\n\tfirstDay: 1,\r\n\tisRTL: false,\r\n\tshowMonthAfterYear: true,\r\n\tyearSuffix: \"\u5e74\" };\r\ndatepicker.setDefaults( datepicker.regional[ \"zh-TW\" ] );\r\n\r\nreturn datepicker.regional[ \"zh-TW\" ];\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/accordion.js":"/*!\r\n * jQuery UI Accordion 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Accordion\r\n//>>group: Widgets\r\n// jscs:disable maximumLineLength\r\n//>>description: Displays collapsible content panels for presenting information in a limited amount of space.\r\n// jscs:enable maximumLineLength\r\n//>>docs: http://api.jqueryui.com/accordion/\r\n//>>demos: http://jqueryui.com/accordion/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/accordion.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../keycode\",\r\n\t\t\t\"../unique-id\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\nreturn $.widget( \"ui.accordion\", {\r\n\tversion: \"1.12.1\",\r\n\toptions: {\r\n\t\tactive: 0,\r\n\t\tanimate: {},\r\n\t\tclasses: {\r\n\t\t\t\"ui-accordion-header\": \"ui-corner-top\",\r\n\t\t\t\"ui-accordion-header-collapsed\": \"ui-corner-all\",\r\n\t\t\t\"ui-accordion-content\": \"ui-corner-bottom\"\r\n\t\t},\r\n\t\tcollapsible: false,\r\n\t\tevent: \"click\",\r\n\t\theader: \"> li > :first-child, > :not(li):even\",\r\n\t\theightStyle: \"auto\",\r\n\t\ticons: {\r\n\t\t\tactiveHeader: \"ui-icon-triangle-1-s\",\r\n\t\t\theader: \"ui-icon-triangle-1-e\"\r\n\t\t},\r\n\r\n\t\t// Callbacks\r\n\t\tactivate: null,\r\n\t\tbeforeActivate: null\r\n\t},\r\n\r\n\thideProps: {\r\n\t\tborderTopWidth: \"hide\",\r\n\t\tborderBottomWidth: \"hide\",\r\n\t\tpaddingTop: \"hide\",\r\n\t\tpaddingBottom: \"hide\",\r\n\t\theight: \"hide\"\r\n\t},\r\n\r\n\tshowProps: {\r\n\t\tborderTopWidth: \"show\",\r\n\t\tborderBottomWidth: \"show\",\r\n\t\tpaddingTop: \"show\",\r\n\t\tpaddingBottom: \"show\",\r\n\t\theight: \"show\"\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tvar options = this.options;\r\n\r\n\t\tthis.prevShow = this.prevHide = $();\r\n\t\tthis._addClass( \"ui-accordion\", \"ui-widget ui-helper-reset\" );\r\n\t\tthis.element.attr( \"role\", \"tablist\" );\r\n\r\n\t\t// Don't allow collapsible: false and active: false / null\r\n\t\tif ( !options.collapsible && ( options.active === false || options.active == null ) ) {\r\n\t\t\toptions.active = 0;\r\n\t\t}\r\n\r\n\t\tthis._processPanels();\r\n\r\n\t\t// handle negative values\r\n\t\tif ( options.active < 0 ) {\r\n\t\t\toptions.active += this.headers.length;\r\n\t\t}\r\n\t\tthis._refresh();\r\n\t},\r\n\r\n\t_getCreateEventData: function() {\r\n\t\treturn {\r\n\t\t\theader: this.active,\r\n\t\t\tpanel: !this.active.length ? $() : this.active.next()\r\n\t\t};\r\n\t},\r\n\r\n\t_createIcons: function() {\r\n\t\tvar icon, children,\r\n\t\t\ticons = this.options.icons;\r\n\r\n\t\tif ( icons ) {\r\n\t\t\ticon = $( \"<span>\" );\r\n\t\t\tthis._addClass( icon, \"ui-accordion-header-icon\", \"ui-icon \" + icons.header );\r\n\t\t\ticon.prependTo( this.headers );\r\n\t\t\tchildren = this.active.children( \".ui-accordion-header-icon\" );\r\n\t\t\tthis._removeClass( children, icons.header )\r\n\t\t\t\t._addClass( children, null, icons.activeHeader )\r\n\t\t\t\t._addClass( this.headers, \"ui-accordion-icons\" );\r\n\t\t}\r\n\t},\r\n\r\n\t_destroyIcons: function() {\r\n\t\tthis._removeClass( this.headers, \"ui-accordion-icons\" );\r\n\t\tthis.headers.children( \".ui-accordion-header-icon\" ).remove();\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tvar contents;\r\n\r\n\t\t// Clean up main element\r\n\t\tthis.element.removeAttr( \"role\" );\r\n\r\n\t\t// Clean up headers\r\n\t\tthis.headers\r\n\t\t\t.removeAttr( \"role aria-expanded aria-selected aria-controls tabIndex\" )\r\n\t\t\t.removeUniqueId();\r\n\r\n\t\tthis._destroyIcons();\r\n\r\n\t\t// Clean up content panels\r\n\t\tcontents = this.headers.next()\r\n\t\t\t.css( \"display\", \"\" )\r\n\t\t\t.removeAttr( \"role aria-hidden aria-labelledby\" )\r\n\t\t\t.removeUniqueId();\r\n\r\n\t\tif ( this.options.heightStyle !== \"content\" ) {\r\n\t\t\tcontents.css( \"height\", \"\" );\r\n\t\t}\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tif ( key === \"active\" ) {\r\n\r\n\t\t\t// _activate() will handle invalid values and update this.options\r\n\t\t\tthis._activate( value );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( key === \"event\" ) {\r\n\t\t\tif ( this.options.event ) {\r\n\t\t\t\tthis._off( this.headers, this.options.event );\r\n\t\t\t}\r\n\t\t\tthis._setupEvents( value );\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\r\n\t\t// Setting collapsible: false while collapsed; open first panel\r\n\t\tif ( key === \"collapsible\" && !value && this.options.active === false ) {\r\n\t\t\tthis._activate( 0 );\r\n\t\t}\r\n\r\n\t\tif ( key === \"icons\" ) {\r\n\t\t\tthis._destroyIcons();\r\n\t\t\tif ( value ) {\r\n\t\t\t\tthis._createIcons();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_setOptionDisabled: function( value ) {\r\n\t\tthis._super( value );\r\n\r\n\t\tthis.element.attr( \"aria-disabled\", value );\r\n\r\n\t\t// Support: IE8 Only\r\n\t\t// #5332 / #6059 - opacity doesn't cascade to positioned elements in IE\r\n\t\t// so we need to add the disabled class to the headers and panels\r\n\t\tthis._toggleClass( null, \"ui-state-disabled\", !!value );\r\n\t\tthis._toggleClass( this.headers.add( this.headers.next() ), null, \"ui-state-disabled\",\r\n\t\t\t!!value );\r\n\t},\r\n\r\n\t_keydown: function( event ) {\r\n\t\tif ( event.altKey || event.ctrlKey ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar keyCode = $.ui.keyCode,\r\n\t\t\tlength = this.headers.length,\r\n\t\t\tcurrentIndex = this.headers.index( event.target ),\r\n\t\t\ttoFocus = false;\r\n\r\n\t\tswitch ( event.keyCode ) {\r\n\t\tcase keyCode.RIGHT:\r\n\t\tcase keyCode.DOWN:\r\n\t\t\ttoFocus = this.headers[ ( currentIndex + 1 ) % length ];\r\n\t\t\tbreak;\r\n\t\tcase keyCode.LEFT:\r\n\t\tcase keyCode.UP:\r\n\t\t\ttoFocus = this.headers[ ( currentIndex - 1 + length ) % length ];\r\n\t\t\tbreak;\r\n\t\tcase keyCode.SPACE:\r\n\t\tcase keyCode.ENTER:\r\n\t\t\tthis._eventHandler( event );\r\n\t\t\tbreak;\r\n\t\tcase keyCode.HOME:\r\n\t\t\ttoFocus = this.headers[ 0 ];\r\n\t\t\tbreak;\r\n\t\tcase keyCode.END:\r\n\t\t\ttoFocus = this.headers[ length - 1 ];\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif ( toFocus ) {\r\n\t\t\t$( event.target ).attr( \"tabIndex\", -1 );\r\n\t\t\t$( toFocus ).attr( \"tabIndex\", 0 );\r\n\t\t\t$( toFocus ).trigger( \"focus\" );\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t},\r\n\r\n\t_panelKeyDown: function( event ) {\r\n\t\tif ( event.keyCode === $.ui.keyCode.UP && event.ctrlKey ) {\r\n\t\t\t$( event.currentTarget ).prev().trigger( \"focus\" );\r\n\t\t}\r\n\t},\r\n\r\n\trefresh: function() {\r\n\t\tvar options = this.options;\r\n\t\tthis._processPanels();\r\n\r\n\t\t// Was collapsed or no panel\r\n\t\tif ( ( options.active === false && options.collapsible === true ) ||\r\n\t\t\t\t!this.headers.length ) {\r\n\t\t\toptions.active = false;\r\n\t\t\tthis.active = $();\r\n\r\n\t\t// active false only when collapsible is true\r\n\t\t} else if ( options.active === false ) {\r\n\t\t\tthis._activate( 0 );\r\n\r\n\t\t// was active, but active panel is gone\r\n\t\t} else if ( this.active.length && !$.contains( this.element[ 0 ], this.active[ 0 ] ) ) {\r\n\r\n\t\t\t// all remaining panel are disabled\r\n\t\t\tif ( this.headers.length === this.headers.find( \".ui-state-disabled\" ).length ) {\r\n\t\t\t\toptions.active = false;\r\n\t\t\t\tthis.active = $();\r\n\r\n\t\t\t// activate previous panel\r\n\t\t\t} else {\r\n\t\t\t\tthis._activate( Math.max( 0, options.active - 1 ) );\r\n\t\t\t}\r\n\r\n\t\t// was active, active panel still exists\r\n\t\t} else {\r\n\r\n\t\t\t// make sure active index is correct\r\n\t\t\toptions.active = this.headers.index( this.active );\r\n\t\t}\r\n\r\n\t\tthis._destroyIcons();\r\n\r\n\t\tthis._refresh();\r\n\t},\r\n\r\n\t_processPanels: function() {\r\n\t\tvar prevHeaders = this.headers,\r\n\t\t\tprevPanels = this.panels;\r\n\r\n\t\tthis.headers = this.element.find( this.options.header );\r\n\t\tthis._addClass( this.headers, \"ui-accordion-header ui-accordion-header-collapsed\",\r\n\t\t\t\"ui-state-default\" );\r\n\r\n\t\tthis.panels = this.headers.next().filter( \":not(.ui-accordion-content-active)\" ).hide();\r\n\t\tthis._addClass( this.panels, \"ui-accordion-content\", \"ui-helper-reset ui-widget-content\" );\r\n\r\n\t\t// Avoid memory leaks (#10056)\r\n\t\tif ( prevPanels ) {\r\n\t\t\tthis._off( prevHeaders.not( this.headers ) );\r\n\t\t\tthis._off( prevPanels.not( this.panels ) );\r\n\t\t}\r\n\t},\r\n\r\n\t_refresh: function() {\r\n\t\tvar maxHeight,\r\n\t\t\toptions = this.options,\r\n\t\t\theightStyle = options.heightStyle,\r\n\t\t\tparent = this.element.parent();\r\n\r\n\t\tthis.active = this._findActive( options.active );\r\n\t\tthis._addClass( this.active, \"ui-accordion-header-active\", \"ui-state-active\" )\r\n\t\t\t._removeClass( this.active, \"ui-accordion-header-collapsed\" );\r\n\t\tthis._addClass( this.active.next(), \"ui-accordion-content-active\" );\r\n\t\tthis.active.next().show();\r\n\r\n\t\tthis.headers\r\n\t\t\t.attr( \"role\", \"tab\" )\r\n\t\t\t.each( function() {\r\n\t\t\t\tvar header = $( this ),\r\n\t\t\t\t\theaderId = header.uniqueId().attr( \"id\" ),\r\n\t\t\t\t\tpanel = header.next(),\r\n\t\t\t\t\tpanelId = panel.uniqueId().attr( \"id\" );\r\n\t\t\t\theader.attr( \"aria-controls\", panelId );\r\n\t\t\t\tpanel.attr( \"aria-labelledby\", headerId );\r\n\t\t\t} )\r\n\t\t\t.next()\r\n\t\t\t\t.attr( \"role\", \"tabpanel\" );\r\n\r\n\t\tthis.headers\r\n\t\t\t.not( this.active )\r\n\t\t\t\t.attr( {\r\n\t\t\t\t\t\"aria-selected\": \"false\",\r\n\t\t\t\t\t\"aria-expanded\": \"false\",\r\n\t\t\t\t\ttabIndex: -1\r\n\t\t\t\t} )\r\n\t\t\t\t.next()\r\n\t\t\t\t\t.attr( {\r\n\t\t\t\t\t\t\"aria-hidden\": \"true\"\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t.hide();\r\n\r\n\t\t// Make sure at least one header is in the tab order\r\n\t\tif ( !this.active.length ) {\r\n\t\t\tthis.headers.eq( 0 ).attr( \"tabIndex\", 0 );\r\n\t\t} else {\r\n\t\t\tthis.active.attr( {\r\n\t\t\t\t\"aria-selected\": \"true\",\r\n\t\t\t\t\"aria-expanded\": \"true\",\r\n\t\t\t\ttabIndex: 0\r\n\t\t\t} )\r\n\t\t\t\t.next()\r\n\t\t\t\t\t.attr( {\r\n\t\t\t\t\t\t\"aria-hidden\": \"false\"\r\n\t\t\t\t\t} );\r\n\t\t}\r\n\r\n\t\tthis._createIcons();\r\n\r\n\t\tthis._setupEvents( options.event );\r\n\r\n\t\tif ( heightStyle === \"fill\" ) {\r\n\t\t\tmaxHeight = parent.height();\r\n\t\t\tthis.element.siblings( \":visible\" ).each( function() {\r\n\t\t\t\tvar elem = $( this ),\r\n\t\t\t\t\tposition = elem.css( \"position\" );\r\n\r\n\t\t\t\tif ( position === \"absolute\" || position === \"fixed\" ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tmaxHeight -= elem.outerHeight( true );\r\n\t\t\t} );\r\n\r\n\t\t\tthis.headers.each( function() {\r\n\t\t\t\tmaxHeight -= $( this ).outerHeight( true );\r\n\t\t\t} );\r\n\r\n\t\t\tthis.headers.next()\r\n\t\t\t\t.each( function() {\r\n\t\t\t\t\t$( this ).height( Math.max( 0, maxHeight -\r\n\t\t\t\t\t\t$( this ).innerHeight() + $( this ).height() ) );\r\n\t\t\t\t} )\r\n\t\t\t\t.css( \"overflow\", \"auto\" );\r\n\t\t} else if ( heightStyle === \"auto\" ) {\r\n\t\t\tmaxHeight = 0;\r\n\t\t\tthis.headers.next()\r\n\t\t\t\t.each( function() {\r\n\t\t\t\t\tvar isVisible = $( this ).is( \":visible\" );\r\n\t\t\t\t\tif ( !isVisible ) {\r\n\t\t\t\t\t\t$( this ).show();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmaxHeight = Math.max( maxHeight, $( this ).css( \"height\", \"\" ).height() );\r\n\t\t\t\t\tif ( !isVisible ) {\r\n\t\t\t\t\t\t$( this ).hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t} )\r\n\t\t\t\t.height( maxHeight );\r\n\t\t}\r\n\t},\r\n\r\n\t_activate: function( index ) {\r\n\t\tvar active = this._findActive( index )[ 0 ];\r\n\r\n\t\t// Trying to activate the already active panel\r\n\t\tif ( active === this.active[ 0 ] ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Trying to collapse, simulate a click on the currently active header\r\n\t\tactive = active || this.active[ 0 ];\r\n\r\n\t\tthis._eventHandler( {\r\n\t\t\ttarget: active,\r\n\t\t\tcurrentTarget: active,\r\n\t\t\tpreventDefault: $.noop\r\n\t\t} );\r\n\t},\r\n\r\n\t_findActive: function( selector ) {\r\n\t\treturn typeof selector === \"number\" ? this.headers.eq( selector ) : $();\r\n\t},\r\n\r\n\t_setupEvents: function( event ) {\r\n\t\tvar events = {\r\n\t\t\tkeydown: \"_keydown\"\r\n\t\t};\r\n\t\tif ( event ) {\r\n\t\t\t$.each( event.split( \" \" ), function( index, eventName ) {\r\n\t\t\t\tevents[ eventName ] = \"_eventHandler\";\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tthis._off( this.headers.add( this.headers.next() ) );\r\n\t\tthis._on( this.headers, events );\r\n\t\tthis._on( this.headers.next(), { keydown: \"_panelKeyDown\" } );\r\n\t\tthis._hoverable( this.headers );\r\n\t\tthis._focusable( this.headers );\r\n\t},\r\n\r\n\t_eventHandler: function( event ) {\r\n\t\tvar activeChildren, clickedChildren,\r\n\t\t\toptions = this.options,\r\n\t\t\tactive = this.active,\r\n\t\t\tclicked = $( event.currentTarget ),\r\n\t\t\tclickedIsActive = clicked[ 0 ] === active[ 0 ],\r\n\t\t\tcollapsing = clickedIsActive && options.collapsible,\r\n\t\t\ttoShow = collapsing ? $() : clicked.next(),\r\n\t\t\ttoHide = active.next(),\r\n\t\t\teventData = {\r\n\t\t\t\toldHeader: active,\r\n\t\t\t\toldPanel: toHide,\r\n\t\t\t\tnewHeader: collapsing ? $() : clicked,\r\n\t\t\t\tnewPanel: toShow\r\n\t\t\t};\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (\r\n\r\n\t\t\t\t// click on active header, but not collapsible\r\n\t\t\t\t( clickedIsActive && !options.collapsible ) ||\r\n\r\n\t\t\t\t// allow canceling activation\r\n\t\t\t\t( this._trigger( \"beforeActivate\", event, eventData ) === false ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\toptions.active = collapsing ? false : this.headers.index( clicked );\r\n\r\n\t\t// When the call to ._toggle() comes after the class changes\r\n\t\t// it causes a very odd bug in IE 8 (see #6720)\r\n\t\tthis.active = clickedIsActive ? $() : clicked;\r\n\t\tthis._toggle( eventData );\r\n\r\n\t\t// Switch classes\r\n\t\t// corner classes on the previously active header stay after the animation\r\n\t\tthis._removeClass( active, \"ui-accordion-header-active\", \"ui-state-active\" );\r\n\t\tif ( options.icons ) {\r\n\t\t\tactiveChildren = active.children( \".ui-accordion-header-icon\" );\r\n\t\t\tthis._removeClass( activeChildren, null, options.icons.activeHeader )\r\n\t\t\t\t._addClass( activeChildren, null, options.icons.header );\r\n\t\t}\r\n\r\n\t\tif ( !clickedIsActive ) {\r\n\t\t\tthis._removeClass( clicked, \"ui-accordion-header-collapsed\" )\r\n\t\t\t\t._addClass( clicked, \"ui-accordion-header-active\", \"ui-state-active\" );\r\n\t\t\tif ( options.icons ) {\r\n\t\t\t\tclickedChildren = clicked.children( \".ui-accordion-header-icon\" );\r\n\t\t\t\tthis._removeClass( clickedChildren, null, options.icons.header )\r\n\t\t\t\t\t._addClass( clickedChildren, null, options.icons.activeHeader );\r\n\t\t\t}\r\n\r\n\t\t\tthis._addClass( clicked.next(), \"ui-accordion-content-active\" );\r\n\t\t}\r\n\t},\r\n\r\n\t_toggle: function( data ) {\r\n\t\tvar toShow = data.newPanel,\r\n\t\t\ttoHide = this.prevShow.length ? this.prevShow : data.oldPanel;\r\n\r\n\t\t// Handle activating a panel during the animation for another activation\r\n\t\tthis.prevShow.add( this.prevHide ).stop( true, true );\r\n\t\tthis.prevShow = toShow;\r\n\t\tthis.prevHide = toHide;\r\n\r\n\t\tif ( this.options.animate ) {\r\n\t\t\tthis._animate( toShow, toHide, data );\r\n\t\t} else {\r\n\t\t\ttoHide.hide();\r\n\t\t\ttoShow.show();\r\n\t\t\tthis._toggleComplete( data );\r\n\t\t}\r\n\r\n\t\ttoHide.attr( {\r\n\t\t\t\"aria-hidden\": \"true\"\r\n\t\t} );\r\n\t\ttoHide.prev().attr( {\r\n\t\t\t\"aria-selected\": \"false\",\r\n\t\t\t\"aria-expanded\": \"false\"\r\n\t\t} );\r\n\r\n\t\t// if we're switching panels, remove the old header from the tab order\r\n\t\t// if we're opening from collapsed state, remove the previous header from the tab order\r\n\t\t// if we're collapsing, then keep the collapsing header in the tab order\r\n\t\tif ( toShow.length && toHide.length ) {\r\n\t\t\ttoHide.prev().attr( {\r\n\t\t\t\t\"tabIndex\": -1,\r\n\t\t\t\t\"aria-expanded\": \"false\"\r\n\t\t\t} );\r\n\t\t} else if ( toShow.length ) {\r\n\t\t\tthis.headers.filter( function() {\r\n\t\t\t\treturn parseInt( $( this ).attr( \"tabIndex\" ), 10 ) === 0;\r\n\t\t\t} )\r\n\t\t\t\t.attr( \"tabIndex\", -1 );\r\n\t\t}\r\n\r\n\t\ttoShow\r\n\t\t\t.attr( \"aria-hidden\", \"false\" )\r\n\t\t\t.prev()\r\n\t\t\t\t.attr( {\r\n\t\t\t\t\t\"aria-selected\": \"true\",\r\n\t\t\t\t\t\"aria-expanded\": \"true\",\r\n\t\t\t\t\ttabIndex: 0\r\n\t\t\t\t} );\r\n\t},\r\n\r\n\t_animate: function( toShow, toHide, data ) {\r\n\t\tvar total, easing, duration,\r\n\t\t\tthat = this,\r\n\t\t\tadjust = 0,\r\n\t\t\tboxSizing = toShow.css( \"box-sizing\" ),\r\n\t\t\tdown = toShow.length &&\r\n\t\t\t\t( !toHide.length || ( toShow.index() < toHide.index() ) ),\r\n\t\t\tanimate = this.options.animate || {},\r\n\t\t\toptions = down && animate.down || animate,\r\n\t\t\tcomplete = function() {\r\n\t\t\t\tthat._toggleComplete( data );\r\n\t\t\t};\r\n\r\n\t\tif ( typeof options === \"number\" ) {\r\n\t\t\tduration = options;\r\n\t\t}\r\n\t\tif ( typeof options === \"string\" ) {\r\n\t\t\teasing = options;\r\n\t\t}\r\n\r\n\t\t// fall back from options to animation in case of partial down settings\r\n\t\teasing = easing || options.easing || animate.easing;\r\n\t\tduration = duration || options.duration || animate.duration;\r\n\r\n\t\tif ( !toHide.length ) {\r\n\t\t\treturn toShow.animate( this.showProps, duration, easing, complete );\r\n\t\t}\r\n\t\tif ( !toShow.length ) {\r\n\t\t\treturn toHide.animate( this.hideProps, duration, easing, complete );\r\n\t\t}\r\n\r\n\t\ttotal = toShow.show().outerHeight();\r\n\t\ttoHide.animate( this.hideProps, {\r\n\t\t\tduration: duration,\r\n\t\t\teasing: easing,\r\n\t\t\tstep: function( now, fx ) {\r\n\t\t\t\tfx.now = Math.round( now );\r\n\t\t\t}\r\n\t\t} );\r\n\t\ttoShow\r\n\t\t\t.hide()\r\n\t\t\t.animate( this.showProps, {\r\n\t\t\t\tduration: duration,\r\n\t\t\t\teasing: easing,\r\n\t\t\t\tcomplete: complete,\r\n\t\t\t\tstep: function( now, fx ) {\r\n\t\t\t\t\tfx.now = Math.round( now );\r\n\t\t\t\t\tif ( fx.prop !== \"height\" ) {\r\n\t\t\t\t\t\tif ( boxSizing === \"content-box\" ) {\r\n\t\t\t\t\t\t\tadjust += fx.now;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if ( that.options.heightStyle !== \"content\" ) {\r\n\t\t\t\t\t\tfx.now = Math.round( total - toHide.outerHeight() - adjust );\r\n\t\t\t\t\t\tadjust = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t},\r\n\r\n\t_toggleComplete: function( data ) {\r\n\t\tvar toHide = data.oldPanel,\r\n\t\t\tprev = toHide.prev();\r\n\r\n\t\tthis._removeClass( toHide, \"ui-accordion-content-active\" );\r\n\t\tthis._removeClass( prev, \"ui-accordion-header-active\" )\r\n\t\t\t._addClass( prev, \"ui-accordion-header-collapsed\" );\r\n\r\n\t\t// Work around for rendering bug in IE (#5421)\r\n\t\tif ( toHide.length ) {\r\n\t\t\ttoHide.parent()[ 0 ].className = toHide.parent()[ 0 ].className;\r\n\t\t}\r\n\t\tthis._trigger( \"activate\", null, data );\r\n\t}\r\n} );\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/autocomplete.js":"/*!\r\n * jQuery UI Autocomplete 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Autocomplete\r\n//>>group: Widgets\r\n//>>description: Lists suggested words as the user is typing.\r\n//>>docs: http://api.jqueryui.com/autocomplete/\r\n//>>demos: http://jqueryui.com/autocomplete/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/autocomplete.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"./menu\",\r\n\t\t\t\"../keycode\",\r\n\t\t\t\"../position\",\r\n\t\t\t\"../safe-active-element\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\n$.widget( \"ui.autocomplete\", {\r\n\tversion: \"1.12.1\",\r\n\tdefaultElement: \"<input>\",\r\n\toptions: {\r\n\t\tappendTo: null,\r\n\t\tautoFocus: false,\r\n\t\tdelay: 300,\r\n\t\tminLength: 1,\r\n\t\tposition: {\r\n\t\t\tmy: \"left top\",\r\n\t\t\tat: \"left bottom\",\r\n\t\t\tcollision: \"none\"\r\n\t\t},\r\n\t\tsource: null,\r\n\r\n\t\t// Callbacks\r\n\t\tchange: null,\r\n\t\tclose: null,\r\n\t\tfocus: null,\r\n\t\topen: null,\r\n\t\tresponse: null,\r\n\t\tsearch: null,\r\n\t\tselect: null\r\n\t},\r\n\r\n\trequestIndex: 0,\r\n\tpending: 0,\r\n\r\n\t_create: function() {\r\n\r\n\t\t// Some browsers only repeat keydown events, not keypress events,\r\n\t\t// so we use the suppressKeyPress flag to determine if we've already\r\n\t\t// handled the keydown event. #7269\r\n\t\t// Unfortunately the code for & in keypress is the same as the up arrow,\r\n\t\t// so we use the suppressKeyPressRepeat flag to avoid handling keypress\r\n\t\t// events when we know the keydown event was used to modify the\r\n\t\t// search term. #7799\r\n\t\tvar suppressKeyPress, suppressKeyPressRepeat, suppressInput,\r\n\t\t\tnodeName = this.element[ 0 ].nodeName.toLowerCase(),\r\n\t\t\tisTextarea = nodeName === \"textarea\",\r\n\t\t\tisInput = nodeName === \"input\";\r\n\r\n\t\t// Textareas are always multi-line\r\n\t\t// Inputs are always single-line, even if inside a contentEditable element\r\n\t\t// IE also treats inputs as contentEditable\r\n\t\t// All other element types are determined by whether or not they're contentEditable\r\n\t\tthis.isMultiLine = isTextarea || !isInput && this._isContentEditable( this.element );\r\n\r\n\t\tthis.valueMethod = this.element[ isTextarea || isInput ? \"val\" : \"text\" ];\r\n\t\tthis.isNewMenu = true;\r\n\r\n\t\tthis._addClass( \"ui-autocomplete-input\" );\r\n\t\tthis.element.attr( \"autocomplete\", \"off\" );\r\n\r\n\t\tthis._on( this.element, {\r\n\t\t\tkeydown: function( event ) {\r\n\t\t\t\tif ( this.element.prop( \"readOnly\" ) ) {\r\n\t\t\t\t\tsuppressKeyPress = true;\r\n\t\t\t\t\tsuppressInput = true;\r\n\t\t\t\t\tsuppressKeyPressRepeat = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsuppressKeyPress = false;\r\n\t\t\t\tsuppressInput = false;\r\n\t\t\t\tsuppressKeyPressRepeat = false;\r\n\t\t\t\tvar keyCode = $.ui.keyCode;\r\n\t\t\t\tswitch ( event.keyCode ) {\r\n\t\t\t\tcase keyCode.PAGE_UP:\r\n\t\t\t\t\tsuppressKeyPress = true;\r\n\t\t\t\t\tthis._move( \"previousPage\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.PAGE_DOWN:\r\n\t\t\t\t\tsuppressKeyPress = true;\r\n\t\t\t\t\tthis._move( \"nextPage\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.UP:\r\n\t\t\t\t\tsuppressKeyPress = true;\r\n\t\t\t\t\tthis._keyEvent( \"previous\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.DOWN:\r\n\t\t\t\t\tsuppressKeyPress = true;\r\n\t\t\t\t\tthis._keyEvent( \"next\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.ENTER:\r\n\r\n\t\t\t\t\t// when menu is open and has focus\r\n\t\t\t\t\tif ( this.menu.active ) {\r\n\r\n\t\t\t\t\t\t// #6055 - Opera still allows the keypress to occur\r\n\t\t\t\t\t\t// which causes forms to submit\r\n\t\t\t\t\t\tsuppressKeyPress = true;\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\tthis.menu.select( event );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.TAB:\r\n\t\t\t\t\tif ( this.menu.active ) {\r\n\t\t\t\t\t\tthis.menu.select( event );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.ESCAPE:\r\n\t\t\t\t\tif ( this.menu.element.is( \":visible\" ) ) {\r\n\t\t\t\t\t\tif ( !this.isMultiLine ) {\r\n\t\t\t\t\t\t\tthis._value( this.term );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.close( event );\r\n\r\n\t\t\t\t\t\t// Different browsers have different default behavior for escape\r\n\t\t\t\t\t\t// Single press can mean undo or clear\r\n\t\t\t\t\t\t// Double press in IE means clear the whole form\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tsuppressKeyPressRepeat = true;\r\n\r\n\t\t\t\t\t// search timeout should be triggered before the input value is changed\r\n\t\t\t\t\tthis._searchTimeout( event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tkeypress: function( event ) {\r\n\t\t\t\tif ( suppressKeyPress ) {\r\n\t\t\t\t\tsuppressKeyPress = false;\r\n\t\t\t\t\tif ( !this.isMultiLine || this.menu.element.is( \":visible\" ) ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif ( suppressKeyPressRepeat ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Replicate some key handlers to allow them to repeat in Firefox and Opera\r\n\t\t\t\tvar keyCode = $.ui.keyCode;\r\n\t\t\t\tswitch ( event.keyCode ) {\r\n\t\t\t\tcase keyCode.PAGE_UP:\r\n\t\t\t\t\tthis._move( \"previousPage\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.PAGE_DOWN:\r\n\t\t\t\t\tthis._move( \"nextPage\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.UP:\r\n\t\t\t\t\tthis._keyEvent( \"previous\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase keyCode.DOWN:\r\n\t\t\t\t\tthis._keyEvent( \"next\", event );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tinput: function( event ) {\r\n\t\t\t\tif ( suppressInput ) {\r\n\t\t\t\t\tsuppressInput = false;\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis._searchTimeout( event );\r\n\t\t\t},\r\n\t\t\tfocus: function() {\r\n\t\t\t\tthis.selectedItem = null;\r\n\t\t\t\tthis.previous = this._value();\r\n\t\t\t},\r\n\t\t\tblur: function( event ) {\r\n\t\t\t\tif ( this.cancelBlur ) {\r\n\t\t\t\t\tdelete this.cancelBlur;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclearTimeout( this.searching );\r\n\t\t\t\tthis.close( event );\r\n\t\t\t\tthis._change( event );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis._initSource();\r\n\t\tthis.menu = $( \"<ul>\" )\r\n\t\t\t.appendTo( this._appendTo() )\r\n\t\t\t.menu( {\r\n\r\n\t\t\t\t// disable ARIA support, the live region takes care of that\r\n\t\t\t\trole: null\r\n\t\t\t} )\r\n\t\t\t.hide()\r\n\t\t\t.menu( \"instance\" );\r\n\r\n\t\tthis._addClass( this.menu.element, \"ui-autocomplete\", \"ui-front\" );\r\n\t\tthis._on( this.menu.element, {\r\n\t\t\tmousedown: function( event ) {\r\n\r\n\t\t\t\t// prevent moving focus out of the text field\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\t// IE doesn't prevent moving focus even with event.preventDefault()\r\n\t\t\t\t// so we set a flag to know when we should ignore the blur event\r\n\t\t\t\tthis.cancelBlur = true;\r\n\t\t\t\tthis._delay( function() {\r\n\t\t\t\t\tdelete this.cancelBlur;\r\n\r\n\t\t\t\t\t// Support: IE 8 only\r\n\t\t\t\t\t// Right clicking a menu item or selecting text from the menu items will\r\n\t\t\t\t\t// result in focus moving out of the input. However, we've already received\r\n\t\t\t\t\t// and ignored the blur event because of the cancelBlur flag set above. So\r\n\t\t\t\t\t// we restore focus to ensure that the menu closes properly based on the user's\r\n\t\t\t\t\t// next actions.\r\n\t\t\t\t\tif ( this.element[ 0 ] !== $.ui.safeActiveElement( this.document[ 0 ] ) ) {\r\n\t\t\t\t\t\tthis.element.trigger( \"focus\" );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t},\r\n\t\t\tmenufocus: function( event, ui ) {\r\n\t\t\t\tvar label, item;\r\n\r\n\t\t\t\t// support: Firefox\r\n\t\t\t\t// Prevent accidental activation of menu items in Firefox (#7024 #9118)\r\n\t\t\t\tif ( this.isNewMenu ) {\r\n\t\t\t\t\tthis.isNewMenu = false;\r\n\t\t\t\t\tif ( event.originalEvent && /^mouse/.test( event.originalEvent.type ) ) {\r\n\t\t\t\t\t\tthis.menu.blur();\r\n\r\n\t\t\t\t\t\tthis.document.one( \"mousemove\", function() {\r\n\t\t\t\t\t\t\t$( event.target ).trigger( event.originalEvent );\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\titem = ui.item.data( \"ui-autocomplete-item\" );\r\n\t\t\t\tif ( false !== this._trigger( \"focus\", event, { item: item } ) ) {\r\n\r\n\t\t\t\t\t// use value to match what will end up in the input, if it was a key event\r\n\t\t\t\t\tif ( event.originalEvent && /^key/.test( event.originalEvent.type ) ) {\r\n\t\t\t\t\t\tthis._value( item.value );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Announce the value in the liveRegion\r\n\t\t\t\tlabel = ui.item.attr( \"aria-label\" ) || item.value;\r\n\t\t\t\tif ( label && $.trim( label ).length ) {\r\n\t\t\t\t\tthis.liveRegion.children().hide();\r\n\t\t\t\t\t$( \"<div>\" ).text( label ).appendTo( this.liveRegion );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmenuselect: function( event, ui ) {\r\n\t\t\t\tvar item = ui.item.data( \"ui-autocomplete-item\" ),\r\n\t\t\t\t\tprevious = this.previous;\r\n\r\n\t\t\t\t// Only trigger when focus was lost (click on menu)\r\n\t\t\t\tif ( this.element[ 0 ] !== $.ui.safeActiveElement( this.document[ 0 ] ) ) {\r\n\t\t\t\t\tthis.element.trigger( \"focus\" );\r\n\t\t\t\t\tthis.previous = previous;\r\n\r\n\t\t\t\t\t// #6109 - IE triggers two focus events and the second\r\n\t\t\t\t\t// is asynchronous, so we need to reset the previous\r\n\t\t\t\t\t// term synchronously and asynchronously :-(\r\n\t\t\t\t\tthis._delay( function() {\r\n\t\t\t\t\t\tthis.previous = previous;\r\n\t\t\t\t\t\tthis.selectedItem = item;\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( false !== this._trigger( \"select\", event, { item: item } ) ) {\r\n\t\t\t\t\tthis._value( item.value );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// reset the term after the select event\r\n\t\t\t\t// this allows custom select handling to work properly\r\n\t\t\t\tthis.term = this._value();\r\n\r\n\t\t\t\tthis.close( event );\r\n\t\t\t\tthis.selectedItem = item;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.liveRegion = $( \"<div>\", {\r\n\t\t\trole: \"status\",\r\n\t\t\t\"aria-live\": \"assertive\",\r\n\t\t\t\"aria-relevant\": \"additions\"\r\n\t\t} )\r\n\t\t\t.appendTo( this.document[ 0 ].body );\r\n\r\n\t\tthis._addClass( this.liveRegion, null, \"ui-helper-hidden-accessible\" );\r\n\r\n\t\t// Turning off autocomplete prevents the browser from remembering the\r\n\t\t// value when navigating through history, so we re-enable autocomplete\r\n\t\t// if the page is unloaded before the widget is destroyed. #7790\r\n\t\tthis._on( this.window, {\r\n\t\t\tbeforeunload: function() {\r\n\t\t\t\tthis.element.removeAttr( \"autocomplete\" );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tclearTimeout( this.searching );\r\n\t\tthis.element.removeAttr( \"autocomplete\" );\r\n\t\tthis.menu.element.remove();\r\n\t\tthis.liveRegion.remove();\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tthis._super( key, value );\r\n\t\tif ( key === \"source\" ) {\r\n\t\t\tthis._initSource();\r\n\t\t}\r\n\t\tif ( key === \"appendTo\" ) {\r\n\t\t\tthis.menu.element.appendTo( this._appendTo() );\r\n\t\t}\r\n\t\tif ( key === \"disabled\" && value && this.xhr ) {\r\n\t\t\tthis.xhr.abort();\r\n\t\t}\r\n\t},\r\n\r\n\t_isEventTargetInWidget: function( event ) {\r\n\t\tvar menuElement = this.menu.element[ 0 ];\r\n\r\n\t\treturn event.target === this.element[ 0 ] ||\r\n\t\t\tevent.target === menuElement ||\r\n\t\t\t$.contains( menuElement, event.target );\r\n\t},\r\n\r\n\t_closeOnClickOutside: function( event ) {\r\n\t\tif ( !this._isEventTargetInWidget( event ) ) {\r\n\t\t\tthis.close();\r\n\t\t}\r\n\t},\r\n\r\n\t_appendTo: function() {\r\n\t\tvar element = this.options.appendTo;\r\n\r\n\t\tif ( element ) {\r\n\t\t\telement = element.jquery || element.nodeType ?\r\n\t\t\t\t$( element ) :\r\n\t\t\t\tthis.document.find( element ).eq( 0 );\r\n\t\t}\r\n\r\n\t\tif ( !element || !element[ 0 ] ) {\r\n\t\t\telement = this.element.closest( \".ui-front, dialog\" );\r\n\t\t}\r\n\r\n\t\tif ( !element.length ) {\r\n\t\t\telement = this.document[ 0 ].body;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t},\r\n\r\n\t_initSource: function() {\r\n\t\tvar array, url,\r\n\t\t\tthat = this;\r\n\t\tif ( $.isArray( this.options.source ) ) {\r\n\t\t\tarray = this.options.source;\r\n\t\t\tthis.source = function( request, response ) {\r\n\t\t\t\tresponse( $.ui.autocomplete.filter( array, request.term ) );\r\n\t\t\t};\r\n\t\t} else if ( typeof this.options.source === \"string\" ) {\r\n\t\t\turl = this.options.source;\r\n\t\t\tthis.source = function( request, response ) {\r\n\t\t\t\tif ( that.xhr ) {\r\n\t\t\t\t\tthat.xhr.abort();\r\n\t\t\t\t}\r\n\t\t\t\tthat.xhr = $.ajax( {\r\n\t\t\t\t\turl: url,\r\n\t\t\t\t\tdata: request,\r\n\t\t\t\t\tdataType: \"json\",\r\n\t\t\t\t\tsuccess: function( data ) {\r\n\t\t\t\t\t\tresponse( data );\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function() {\r\n\t\t\t\t\t\tresponse( [] );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tthis.source = this.options.source;\r\n\t\t}\r\n\t},\r\n\r\n\t_searchTimeout: function( event ) {\r\n\t\tclearTimeout( this.searching );\r\n\t\tthis.searching = this._delay( function() {\r\n\r\n\t\t\t// Search if the value has changed, or if the user retypes the same value (see #7434)\r\n\t\t\tvar equalValues = this.term === this._value(),\r\n\t\t\t\tmenuVisible = this.menu.element.is( \":visible\" ),\r\n\t\t\t\tmodifierKey = event.altKey || event.ctrlKey || event.metaKey || event.shiftKey;\r\n\r\n\t\t\tif ( !equalValues || ( equalValues && !menuVisible && !modifierKey ) ) {\r\n\t\t\t\tthis.selectedItem = null;\r\n\t\t\t\tthis.search( null, event );\r\n\t\t\t}\r\n\t\t}, this.options.delay );\r\n\t},\r\n\r\n\tsearch: function( value, event ) {\r\n\t\tvalue = value != null ? value : this._value();\r\n\r\n\t\t// Always save the actual value, not the one passed as an argument\r\n\t\tthis.term = this._value();\r\n\r\n\t\tif ( value.length < this.options.minLength ) {\r\n\t\t\treturn this.close( event );\r\n\t\t}\r\n\r\n\t\tif ( this._trigger( \"search\", event ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn this._search( value );\r\n\t},\r\n\r\n\t_search: function( value ) {\r\n\t\tthis.pending++;\r\n\t\tthis._addClass( \"ui-autocomplete-loading\" );\r\n\t\tthis.cancelSearch = false;\r\n\r\n\t\tthis.source( { term: value }, this._response() );\r\n\t},\r\n\r\n\t_response: function() {\r\n\t\tvar index = ++this.requestIndex;\r\n\r\n\t\treturn $.proxy( function( content ) {\r\n\t\t\tif ( index === this.requestIndex ) {\r\n\t\t\t\tthis.__response( content );\r\n\t\t\t}\r\n\r\n\t\t\tthis.pending--;\r\n\t\t\tif ( !this.pending ) {\r\n\t\t\t\tthis._removeClass( \"ui-autocomplete-loading\" );\r\n\t\t\t}\r\n\t\t}, this );\r\n\t},\r\n\r\n\t__response: function( content ) {\r\n\t\tif ( content ) {\r\n\t\t\tcontent = this._normalize( content );\r\n\t\t}\r\n\t\tthis._trigger( \"response\", null, { content: content } );\r\n\t\tif ( !this.options.disabled && content && content.length && !this.cancelSearch ) {\r\n\t\t\tthis._suggest( content );\r\n\t\t\tthis._trigger( \"open\" );\r\n\t\t} else {\r\n\r\n\t\t\t// use ._close() instead of .close() so we don't cancel future searches\r\n\t\t\tthis._close();\r\n\t\t}\r\n\t},\r\n\r\n\tclose: function( event ) {\r\n\t\tthis.cancelSearch = true;\r\n\t\tthis._close( event );\r\n\t},\r\n\r\n\t_close: function( event ) {\r\n\r\n\t\t// Remove the handler that closes the menu on outside clicks\r\n\t\tthis._off( this.document, \"mousedown\" );\r\n\r\n\t\tif ( this.menu.element.is( \":visible\" ) ) {\r\n\t\t\tthis.menu.element.hide();\r\n\t\t\tthis.menu.blur();\r\n\t\t\tthis.isNewMenu = true;\r\n\t\t\tthis._trigger( \"close\", event );\r\n\t\t}\r\n\t},\r\n\r\n\t_change: function( event ) {\r\n\t\tif ( this.previous !== this._value() ) {\r\n\t\t\tthis._trigger( \"change\", event, { item: this.selectedItem } );\r\n\t\t}\r\n\t},\r\n\r\n\t_normalize: function( items ) {\r\n\r\n\t\t// assume all items have the right format when the first item is complete\r\n\t\tif ( items.length && items[ 0 ].label && items[ 0 ].value ) {\r\n\t\t\treturn items;\r\n\t\t}\r\n\t\treturn $.map( items, function( item ) {\r\n\t\t\tif ( typeof item === \"string\" ) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlabel: item,\r\n\t\t\t\t\tvalue: item\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn $.extend( {}, item, {\r\n\t\t\t\tlabel: item.label || item.value,\r\n\t\t\t\tvalue: item.value || item.label\r\n\t\t\t} );\r\n\t\t} );\r\n\t},\r\n\r\n\t_suggest: function( items ) {\r\n\t\tvar ul = this.menu.element.empty();\r\n\t\tthis._renderMenu( ul, items );\r\n\t\tthis.isNewMenu = true;\r\n\t\tthis.menu.refresh();\r\n\r\n\t\t// Size and position menu\r\n\t\tul.show();\r\n\t\tthis._resizeMenu();\r\n\t\tul.position( $.extend( {\r\n\t\t\tof: this.element\r\n\t\t}, this.options.position ) );\r\n\r\n\t\tif ( this.options.autoFocus ) {\r\n\t\t\tthis.menu.next();\r\n\t\t}\r\n\r\n\t\t// Listen for interactions outside of the widget (#6642)\r\n\t\tthis._on( this.document, {\r\n\t\t\tmousedown: \"_closeOnClickOutside\"\r\n\t\t} );\r\n\t},\r\n\r\n\t_resizeMenu: function() {\r\n\t\tvar ul = this.menu.element;\r\n\t\tul.outerWidth( Math.max(\r\n\r\n\t\t\t// Firefox wraps long text (possibly a rounding bug)\r\n\t\t\t// so we add 1px to avoid the wrapping (#7513)\r\n\t\t\tul.width( \"\" ).outerWidth() + 1,\r\n\t\t\tthis.element.outerWidth()\r\n\t\t) );\r\n\t},\r\n\r\n\t_renderMenu: function( ul, items ) {\r\n\t\tvar that = this;\r\n\t\t$.each( items, function( index, item ) {\r\n\t\t\tthat._renderItemData( ul, item );\r\n\t\t} );\r\n\t},\r\n\r\n\t_renderItemData: function( ul, item ) {\r\n\t\treturn this._renderItem( ul, item ).data( \"ui-autocomplete-item\", item );\r\n\t},\r\n\r\n\t_renderItem: function( ul, item ) {\r\n\t\treturn $( \"<li>\" )\r\n\t\t\t.append( $( \"<div>\" ).text( item.label ) )\r\n\t\t\t.appendTo( ul );\r\n\t},\r\n\r\n\t_move: function( direction, event ) {\r\n\t\tif ( !this.menu.element.is( \":visible\" ) ) {\r\n\t\t\tthis.search( null, event );\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( this.menu.isFirstItem() && /^previous/.test( direction ) ||\r\n\t\t\t\tthis.menu.isLastItem() && /^next/.test( direction ) ) {\r\n\r\n\t\t\tif ( !this.isMultiLine ) {\r\n\t\t\t\tthis._value( this.term );\r\n\t\t\t}\r\n\r\n\t\t\tthis.menu.blur();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.menu[ direction ]( event );\r\n\t},\r\n\r\n\twidget: function() {\r\n\t\treturn this.menu.element;\r\n\t},\r\n\r\n\t_value: function() {\r\n\t\treturn this.valueMethod.apply( this.element, arguments );\r\n\t},\r\n\r\n\t_keyEvent: function( keyEvent, event ) {\r\n\t\tif ( !this.isMultiLine || this.menu.element.is( \":visible\" ) ) {\r\n\t\t\tthis._move( keyEvent, event );\r\n\r\n\t\t\t// Prevents moving cursor to beginning/end of the text field in some browsers\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t},\r\n\r\n\t// Support: Chrome <=50\r\n\t// We should be able to just use this.element.prop( \"isContentEditable\" )\r\n\t// but hidden elements always report false in Chrome.\r\n\t// https://code.google.com/p/chromium/issues/detail?id=313082\r\n\t_isContentEditable: function( element ) {\r\n\t\tif ( !element.length ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar editable = element.prop( \"contentEditable\" );\r\n\r\n\t\tif ( editable === \"inherit\" ) {\r\n\t\t  return this._isContentEditable( element.parent() );\r\n\t\t}\r\n\r\n\t\treturn editable === \"true\";\r\n\t}\r\n} );\r\n\r\n$.extend( $.ui.autocomplete, {\r\n\tescapeRegex: function( value ) {\r\n\t\treturn value.replace( /[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\" );\r\n\t},\r\n\tfilter: function( array, term ) {\r\n\t\tvar matcher = new RegExp( $.ui.autocomplete.escapeRegex( term ), \"i\" );\r\n\t\treturn $.grep( array, function( value ) {\r\n\t\t\treturn matcher.test( value.label || value.value || value );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n// Live region extension, adding a `messages` option\r\n// NOTE: This is an experimental API. We are still investigating\r\n// a full solution for string manipulation and internationalization.\r\n$.widget( \"ui.autocomplete\", $.ui.autocomplete, {\r\n\toptions: {\r\n\t\tmessages: {\r\n\t\t\tnoResults: \"No search results.\",\r\n\t\t\tresults: function( amount ) {\r\n\t\t\t\treturn amount + ( amount > 1 ? \" results are\" : \" result is\" ) +\r\n\t\t\t\t\t\" available, use up and down arrow keys to navigate.\";\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t__response: function( content ) {\r\n\t\tvar message;\r\n\t\tthis._superApply( arguments );\r\n\t\tif ( this.options.disabled || this.cancelSearch ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( content && content.length ) {\r\n\t\t\tmessage = this.options.messages.results( content.length );\r\n\t\t} else {\r\n\t\t\tmessage = this.options.messages.noResults;\r\n\t\t}\r\n\t\tthis.liveRegion.children().hide();\r\n\t\t$( \"<div>\" ).text( message ).appendTo( this.liveRegion );\r\n\t}\r\n} );\r\n\r\nreturn $.ui.autocomplete;\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/button.js":"/*!\r\n * jQuery UI Button 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Button\r\n//>>group: Widgets\r\n//>>description: Enhances a form with themeable buttons.\r\n//>>docs: http://api.jqueryui.com/button/\r\n//>>demos: http://jqueryui.com/button/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/button.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\r\n\t\t\t// These are only for backcompat\r\n\t\t\t// TODO: Remove after 1.12\r\n\t\t\t\"./controlgroup\",\r\n\t\t\t\"./checkboxradio\",\r\n\r\n\t\t\t\"../keycode\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\n$.widget( \"ui.button\", {\r\n\tversion: \"1.12.1\",\r\n\tdefaultElement: \"<button>\",\r\n\toptions: {\r\n\t\tclasses: {\r\n\t\t\t\"ui-button\": \"ui-corner-all\"\r\n\t\t},\r\n\t\tdisabled: null,\r\n\t\ticon: null,\r\n\t\ticonPosition: \"beginning\",\r\n\t\tlabel: null,\r\n\t\tshowLabel: true\r\n\t},\r\n\r\n\t_getCreateOptions: function() {\r\n\t\tvar disabled,\r\n\r\n\t\t\t// This is to support cases like in jQuery Mobile where the base widget does have\r\n\t\t\t// an implementation of _getCreateOptions\r\n\t\t\toptions = this._super() || {};\r\n\r\n\t\tthis.isInput = this.element.is( \"input\" );\r\n\r\n\t\tdisabled = this.element[ 0 ].disabled;\r\n\t\tif ( disabled != null ) {\r\n\t\t\toptions.disabled = disabled;\r\n\t\t}\r\n\r\n\t\tthis.originalLabel = this.isInput ? this.element.val() : this.element.html();\r\n\t\tif ( this.originalLabel ) {\r\n\t\t\toptions.label = this.originalLabel;\r\n\t\t}\r\n\r\n\t\treturn options;\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tif ( !this.option.showLabel & !this.options.icon ) {\r\n\t\t\tthis.options.showLabel = true;\r\n\t\t}\r\n\r\n\t\t// We have to check the option again here even though we did in _getCreateOptions,\r\n\t\t// because null may have been passed on init which would override what was set in\r\n\t\t// _getCreateOptions\r\n\t\tif ( this.options.disabled == null ) {\r\n\t\t\tthis.options.disabled = this.element[ 0 ].disabled || false;\r\n\t\t}\r\n\r\n\t\tthis.hasTitle = !!this.element.attr( \"title\" );\r\n\r\n\t\t// Check to see if the label needs to be set or if its already correct\r\n\t\tif ( this.options.label && this.options.label !== this.originalLabel ) {\r\n\t\t\tif ( this.isInput ) {\r\n\t\t\t\tthis.element.val( this.options.label );\r\n\t\t\t} else {\r\n\t\t\t\tthis.element.html( this.options.label );\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._addClass( \"ui-button\", \"ui-widget\" );\r\n\t\tthis._setOption( \"disabled\", this.options.disabled );\r\n\t\tthis._enhance();\r\n\r\n\t\tif ( this.element.is( \"a\" ) ) {\r\n\t\t\tthis._on( {\r\n\t\t\t\t\"keyup\": function( event ) {\r\n\t\t\t\t\tif ( event.keyCode === $.ui.keyCode.SPACE ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\t\t\t// Support: PhantomJS <= 1.9, IE 8 Only\r\n\t\t\t\t\t\t// If a native click is available use it so we actually cause navigation\r\n\t\t\t\t\t\t// otherwise just trigger a click event\r\n\t\t\t\t\t\tif ( this.element[ 0 ].click ) {\r\n\t\t\t\t\t\t\tthis.element[ 0 ].click();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.element.trigger( \"click\" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t},\r\n\r\n\t_enhance: function() {\r\n\t\tif ( !this.element.is( \"button\" ) ) {\r\n\t\t\tthis.element.attr( \"role\", \"button\" );\r\n\t\t}\r\n\r\n\t\tif ( this.options.icon ) {\r\n\t\t\tthis._updateIcon( \"icon\", this.options.icon );\r\n\t\t\tthis._updateTooltip();\r\n\t\t}\r\n\t},\r\n\r\n\t_updateTooltip: function() {\r\n\t\tthis.title = this.element.attr( \"title\" );\r\n\r\n\t\tif ( !this.options.showLabel && !this.title ) {\r\n\t\t\tthis.element.attr( \"title\", this.options.label );\r\n\t\t}\r\n\t},\r\n\r\n\t_updateIcon: function( option, value ) {\r\n\t\tvar icon = option !== \"iconPosition\",\r\n\t\t\tposition = icon ? this.options.iconPosition : value,\r\n\t\t\tdisplayBlock = position === \"top\" || position === \"bottom\";\r\n\r\n\t\t// Create icon\r\n\t\tif ( !this.icon ) {\r\n\t\t\tthis.icon = $( \"<span>\" );\r\n\r\n\t\t\tthis._addClass( this.icon, \"ui-button-icon\", \"ui-icon\" );\r\n\r\n\t\t\tif ( !this.options.showLabel ) {\r\n\t\t\t\tthis._addClass( \"ui-button-icon-only\" );\r\n\t\t\t}\r\n\t\t} else if ( icon ) {\r\n\r\n\t\t\t// If we are updating the icon remove the old icon class\r\n\t\t\tthis._removeClass( this.icon, null, this.options.icon );\r\n\t\t}\r\n\r\n\t\t// If we are updating the icon add the new icon class\r\n\t\tif ( icon ) {\r\n\t\t\tthis._addClass( this.icon, null, value );\r\n\t\t}\r\n\r\n\t\tthis._attachIcon( position );\r\n\r\n\t\t// If the icon is on top or bottom we need to add the ui-widget-icon-block class and remove\r\n\t\t// the iconSpace if there is one.\r\n\t\tif ( displayBlock ) {\r\n\t\t\tthis._addClass( this.icon, null, \"ui-widget-icon-block\" );\r\n\t\t\tif ( this.iconSpace ) {\r\n\t\t\t\tthis.iconSpace.remove();\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\t// Position is beginning or end so remove the ui-widget-icon-block class and add the\r\n\t\t\t// space if it does not exist\r\n\t\t\tif ( !this.iconSpace ) {\r\n\t\t\t\tthis.iconSpace = $( \"<span> </span>\" );\r\n\t\t\t\tthis._addClass( this.iconSpace, \"ui-button-icon-space\" );\r\n\t\t\t}\r\n\t\t\tthis._removeClass( this.icon, null, \"ui-wiget-icon-block\" );\r\n\t\t\tthis._attachIconSpace( position );\r\n\t\t}\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis.element.removeAttr( \"role\" );\r\n\r\n\t\tif ( this.icon ) {\r\n\t\t\tthis.icon.remove();\r\n\t\t}\r\n\t\tif ( this.iconSpace ) {\r\n\t\t\tthis.iconSpace.remove();\r\n\t\t}\r\n\t\tif ( !this.hasTitle ) {\r\n\t\t\tthis.element.removeAttr( \"title\" );\r\n\t\t}\r\n\t},\r\n\r\n\t_attachIconSpace: function( iconPosition ) {\r\n\t\tthis.icon[ /^(?:end|bottom)/.test( iconPosition ) ? \"before\" : \"after\" ]( this.iconSpace );\r\n\t},\r\n\r\n\t_attachIcon: function( iconPosition ) {\r\n\t\tthis.element[ /^(?:end|bottom)/.test( iconPosition ) ? \"append\" : \"prepend\" ]( this.icon );\r\n\t},\r\n\r\n\t_setOptions: function( options ) {\r\n\t\tvar newShowLabel = options.showLabel === undefined ?\r\n\t\t\t\tthis.options.showLabel :\r\n\t\t\t\toptions.showLabel,\r\n\t\t\tnewIcon = options.icon === undefined ? this.options.icon : options.icon;\r\n\r\n\t\tif ( !newShowLabel && !newIcon ) {\r\n\t\t\toptions.showLabel = true;\r\n\t\t}\r\n\t\tthis._super( options );\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tif ( key === \"icon\" ) {\r\n\t\t\tif ( value ) {\r\n\t\t\t\tthis._updateIcon( key, value );\r\n\t\t\t} else if ( this.icon ) {\r\n\t\t\t\tthis.icon.remove();\r\n\t\t\t\tif ( this.iconSpace ) {\r\n\t\t\t\t\tthis.iconSpace.remove();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( key === \"iconPosition\" ) {\r\n\t\t\tthis._updateIcon( key, value );\r\n\t\t}\r\n\r\n\t\t// Make sure we can't end up with a button that has neither text nor icon\r\n\t\tif ( key === \"showLabel\" ) {\r\n\t\t\t\tthis._toggleClass( \"ui-button-icon-only\", null, !value );\r\n\t\t\t\tthis._updateTooltip();\r\n\t\t}\r\n\r\n\t\tif ( key === \"label\" ) {\r\n\t\t\tif ( this.isInput ) {\r\n\t\t\t\tthis.element.val( value );\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// If there is an icon, append it, else nothing then append the value\r\n\t\t\t\t// this avoids removal of the icon when setting label text\r\n\t\t\t\tthis.element.html( value );\r\n\t\t\t\tif ( this.icon ) {\r\n\t\t\t\t\tthis._attachIcon( this.options.iconPosition );\r\n\t\t\t\t\tthis._attachIconSpace( this.options.iconPosition );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\r\n\t\tif ( key === \"disabled\" ) {\r\n\t\t\tthis._toggleClass( null, \"ui-state-disabled\", value );\r\n\t\t\tthis.element[ 0 ].disabled = value;\r\n\t\t\tif ( value ) {\r\n\t\t\t\tthis.element.blur();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\trefresh: function() {\r\n\r\n\t\t// Make sure to only check disabled if its an element that supports this otherwise\r\n\t\t// check for the disabled class to determine state\r\n\t\tvar isDisabled = this.element.is( \"input, button\" ) ?\r\n\t\t\tthis.element[ 0 ].disabled : this.element.hasClass( \"ui-button-disabled\" );\r\n\r\n\t\tif ( isDisabled !== this.options.disabled ) {\r\n\t\t\tthis._setOptions( { disabled: isDisabled } );\r\n\t\t}\r\n\r\n\t\tthis._updateTooltip();\r\n\t}\r\n} );\r\n\r\n// DEPRECATED\r\nif ( $.uiBackCompat !== false ) {\r\n\r\n\t// Text and Icons options\r\n\t$.widget( \"ui.button\", $.ui.button, {\r\n\t\toptions: {\r\n\t\t\ttext: true,\r\n\t\t\ticons: {\r\n\t\t\t\tprimary: null,\r\n\t\t\t\tsecondary: null\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_create: function() {\r\n\t\t\tif ( this.options.showLabel && !this.options.text ) {\r\n\t\t\t\tthis.options.showLabel = this.options.text;\r\n\t\t\t}\r\n\t\t\tif ( !this.options.showLabel && this.options.text ) {\r\n\t\t\t\tthis.options.text = this.options.showLabel;\r\n\t\t\t}\r\n\t\t\tif ( !this.options.icon && ( this.options.icons.primary ||\r\n\t\t\t\t\tthis.options.icons.secondary ) ) {\r\n\t\t\t\tif ( this.options.icons.primary ) {\r\n\t\t\t\t\tthis.options.icon = this.options.icons.primary;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.options.icon = this.options.icons.secondary;\r\n\t\t\t\t\tthis.options.iconPosition = \"end\";\r\n\t\t\t\t}\r\n\t\t\t} else if ( this.options.icon ) {\r\n\t\t\t\tthis.options.icons.primary = this.options.icon;\r\n\t\t\t}\r\n\t\t\tthis._super();\r\n\t\t},\r\n\r\n\t\t_setOption: function( key, value ) {\r\n\t\t\tif ( key === \"text\" ) {\r\n\t\t\t\tthis._super( \"showLabel\", value );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ( key === \"showLabel\" ) {\r\n\t\t\t\tthis.options.text = value;\r\n\t\t\t}\r\n\t\t\tif ( key === \"icon\" ) {\r\n\t\t\t\tthis.options.icons.primary = value;\r\n\t\t\t}\r\n\t\t\tif ( key === \"icons\" ) {\r\n\t\t\t\tif ( value.primary ) {\r\n\t\t\t\t\tthis._super( \"icon\", value.primary );\r\n\t\t\t\t\tthis._super( \"iconPosition\", \"beginning\" );\r\n\t\t\t\t} else if ( value.secondary ) {\r\n\t\t\t\t\tthis._super( \"icon\", value.secondary );\r\n\t\t\t\t\tthis._super( \"iconPosition\", \"end\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._superApply( arguments );\r\n\t\t}\r\n\t} );\r\n\r\n\t$.fn.button = ( function( orig ) {\r\n\t\treturn function() {\r\n\t\t\tif ( !this.length || ( this.length && this[ 0 ].tagName !== \"INPUT\" ) ||\r\n\t\t\t\t\t( this.length && this[ 0 ].tagName === \"INPUT\" && (\r\n\t\t\t\t\t\tthis.attr( \"type\" ) !== \"checkbox\" && this.attr( \"type\" ) !== \"radio\"\r\n\t\t\t\t\t) ) ) {\r\n\t\t\t\treturn orig.apply( this, arguments );\r\n\t\t\t}\r\n\t\t\tif ( !$.ui.checkboxradio ) {\r\n\t\t\t\t$.error( \"Checkboxradio widget missing\" );\r\n\t\t\t}\r\n\t\t\tif ( arguments.length === 0 ) {\r\n\t\t\t\treturn this.checkboxradio( {\r\n\t\t\t\t\t\"icon\": false\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t\treturn this.checkboxradio.apply( this, arguments );\r\n\t\t};\r\n\t} )( $.fn.button );\r\n\r\n\t$.fn.buttonset = function() {\r\n\t\tif ( !$.ui.controlgroup ) {\r\n\t\t\t$.error( \"Controlgroup widget missing\" );\r\n\t\t}\r\n\t\tif ( arguments[ 0 ] === \"option\" && arguments[ 1 ] === \"items\" && arguments[ 2 ] ) {\r\n\t\t\treturn this.controlgroup.apply( this,\r\n\t\t\t\t[ arguments[ 0 ], \"items.button\", arguments[ 2 ] ] );\r\n\t\t}\r\n\t\tif ( arguments[ 0 ] === \"option\" && arguments[ 1 ] === \"items\" ) {\r\n\t\t\treturn this.controlgroup.apply( this, [ arguments[ 0 ], \"items.button\" ] );\r\n\t\t}\r\n\t\tif ( typeof arguments[ 0 ] === \"object\" && arguments[ 0 ].items ) {\r\n\t\t\targuments[ 0 ].items = {\r\n\t\t\t\tbutton: arguments[ 0 ].items\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn this.controlgroup.apply( this, arguments );\r\n\t};\r\n}\r\n\r\nreturn $.ui.button;\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/checkboxradio.js":"/*!\r\n * jQuery UI Checkboxradio 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Checkboxradio\r\n//>>group: Widgets\r\n//>>description: Enhances a form with multiple themeable checkboxes or radio buttons.\r\n//>>docs: http://api.jqueryui.com/checkboxradio/\r\n//>>demos: http://jqueryui.com/checkboxradio/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/button.css\r\n//>>css.structure: ../../themes/base/checkboxradio.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"../escape-selector\",\r\n\t\t\t\"../form-reset-mixin\",\r\n\t\t\t\"../labels\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\n$.widget( \"ui.checkboxradio\", [ $.ui.formResetMixin, {\r\n\tversion: \"1.12.1\",\r\n\toptions: {\r\n\t\tdisabled: null,\r\n\t\tlabel: null,\r\n\t\ticon: true,\r\n\t\tclasses: {\r\n\t\t\t\"ui-checkboxradio-label\": \"ui-corner-all\",\r\n\t\t\t\"ui-checkboxradio-icon\": \"ui-corner-all\"\r\n\t\t}\r\n\t},\r\n\r\n\t_getCreateOptions: function() {\r\n\t\tvar disabled, labels;\r\n\t\tvar that = this;\r\n\t\tvar options = this._super() || {};\r\n\r\n\t\t// We read the type here, because it makes more sense to throw a element type error first,\r\n\t\t// rather then the error for lack of a label. Often if its the wrong type, it\r\n\t\t// won't have a label (e.g. calling on a div, btn, etc)\r\n\t\tthis._readType();\r\n\r\n\t\tlabels = this.element.labels();\r\n\r\n\t\t// If there are multiple labels, use the last one\r\n\t\tthis.label = $( labels[ labels.length - 1 ] );\r\n\t\tif ( !this.label.length ) {\r\n\t\t\t$.error( \"No label found for checkboxradio widget\" );\r\n\t\t}\r\n\r\n\t\tthis.originalLabel = \"\";\r\n\r\n\t\t// We need to get the label text but this may also need to make sure it does not contain the\r\n\t\t// input itself.\r\n\t\tthis.label.contents().not( this.element[ 0 ] ).each( function() {\r\n\r\n\t\t\t// The label contents could be text, html, or a mix. We concat each element to get a\r\n\t\t\t// string representation of the label, without the input as part of it.\r\n\t\t\tthat.originalLabel += this.nodeType === 3 ? $( this ).text() : this.outerHTML;\r\n\t\t} );\r\n\r\n\t\t// Set the label option if we found label text\r\n\t\tif ( this.originalLabel ) {\r\n\t\t\toptions.label = this.originalLabel;\r\n\t\t}\r\n\r\n\t\tdisabled = this.element[ 0 ].disabled;\r\n\t\tif ( disabled != null ) {\r\n\t\t\toptions.disabled = disabled;\r\n\t\t}\r\n\t\treturn options;\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tvar checked = this.element[ 0 ].checked;\r\n\r\n\t\tthis._bindFormResetHandler();\r\n\r\n\t\tif ( this.options.disabled == null ) {\r\n\t\t\tthis.options.disabled = this.element[ 0 ].disabled;\r\n\t\t}\r\n\r\n\t\tthis._setOption( \"disabled\", this.options.disabled );\r\n\t\tthis._addClass( \"ui-checkboxradio\", \"ui-helper-hidden-accessible\" );\r\n\t\tthis._addClass( this.label, \"ui-checkboxradio-label\", \"ui-button ui-widget\" );\r\n\r\n\t\tif ( this.type === \"radio\" ) {\r\n\t\t\tthis._addClass( this.label, \"ui-checkboxradio-radio-label\" );\r\n\t\t}\r\n\r\n\t\tif ( this.options.label && this.options.label !== this.originalLabel ) {\r\n\t\t\tthis._updateLabel();\r\n\t\t} else if ( this.originalLabel ) {\r\n\t\t\tthis.options.label = this.originalLabel;\r\n\t\t}\r\n\r\n\t\tthis._enhance();\r\n\r\n\t\tif ( checked ) {\r\n\t\t\tthis._addClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\" );\r\n\t\t\tif ( this.icon ) {\r\n\t\t\t\tthis._addClass( this.icon, null, \"ui-state-hover\" );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._on( {\r\n\t\t\tchange: \"_toggleClasses\",\r\n\t\t\tfocus: function() {\r\n\t\t\t\tthis._addClass( this.label, null, \"ui-state-focus ui-visual-focus\" );\r\n\t\t\t},\r\n\t\t\tblur: function() {\r\n\t\t\t\tthis._removeClass( this.label, null, \"ui-state-focus ui-visual-focus\" );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\t_readType: function() {\r\n\t\tvar nodeName = this.element[ 0 ].nodeName.toLowerCase();\r\n\t\tthis.type = this.element[ 0 ].type;\r\n\t\tif ( nodeName !== \"input\" || !/radio|checkbox/.test( this.type ) ) {\r\n\t\t\t$.error( \"Can't create checkboxradio on element.nodeName=\" + nodeName +\r\n\t\t\t\t\" and element.type=\" + this.type );\r\n\t\t}\r\n\t},\r\n\r\n\t// Support jQuery Mobile enhanced option\r\n\t_enhance: function() {\r\n\t\tthis._updateIcon( this.element[ 0 ].checked );\r\n\t},\r\n\r\n\twidget: function() {\r\n\t\treturn this.label;\r\n\t},\r\n\r\n\t_getRadioGroup: function() {\r\n\t\tvar group;\r\n\t\tvar name = this.element[ 0 ].name;\r\n\t\tvar nameSelector = \"input[name='\" + $.ui.escapeSelector( name ) + \"']\";\r\n\r\n\t\tif ( !name ) {\r\n\t\t\treturn $( [] );\r\n\t\t}\r\n\r\n\t\tif ( this.form.length ) {\r\n\t\t\tgroup = $( this.form[ 0 ].elements ).filter( nameSelector );\r\n\t\t} else {\r\n\r\n\t\t\t// Not inside a form, check all inputs that also are not inside a form\r\n\t\t\tgroup = $( nameSelector ).filter( function() {\r\n\t\t\t\treturn $( this ).form().length === 0;\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn group.not( this.element );\r\n\t},\r\n\r\n\t_toggleClasses: function() {\r\n\t\tvar checked = this.element[ 0 ].checked;\r\n\t\tthis._toggleClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", checked );\r\n\r\n\t\tif ( this.options.icon && this.type === \"checkbox\" ) {\r\n\t\t\tthis._toggleClass( this.icon, null, \"ui-icon-check ui-state-checked\", checked )\r\n\t\t\t\t._toggleClass( this.icon, null, \"ui-icon-blank\", !checked );\r\n\t\t}\r\n\r\n\t\tif ( this.type === \"radio\" ) {\r\n\t\t\tthis._getRadioGroup()\r\n\t\t\t\t.each( function() {\r\n\t\t\t\t\tvar instance = $( this ).checkboxradio( \"instance\" );\r\n\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance._removeClass( instance.label,\r\n\t\t\t\t\t\t\t\"ui-checkboxradio-checked\", \"ui-state-active\" );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t}\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis._unbindFormResetHandler();\r\n\r\n\t\tif ( this.icon ) {\r\n\t\t\tthis.icon.remove();\r\n\t\t\tthis.iconSpace.remove();\r\n\t\t}\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\r\n\t\t// We don't allow the value to be set to nothing\r\n\t\tif ( key === \"label\" && !value ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\r\n\t\tif ( key === \"disabled\" ) {\r\n\t\t\tthis._toggleClass( this.label, null, \"ui-state-disabled\", value );\r\n\t\t\tthis.element[ 0 ].disabled = value;\r\n\r\n\t\t\t// Don't refresh when setting disabled\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.refresh();\r\n\t},\r\n\r\n\t_updateIcon: function( checked ) {\r\n\t\tvar toAdd = \"ui-icon ui-icon-background \";\r\n\r\n\t\tif ( this.options.icon ) {\r\n\t\t\tif ( !this.icon ) {\r\n\t\t\t\tthis.icon = $( \"<span>\" );\r\n\t\t\t\tthis.iconSpace = $( \"<span> </span>\" );\r\n\t\t\t\tthis._addClass( this.iconSpace, \"ui-checkboxradio-icon-space\" );\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.type === \"checkbox\" ) {\r\n\t\t\t\ttoAdd += checked ? \"ui-icon-check ui-state-checked\" : \"ui-icon-blank\";\r\n\t\t\t\tthis._removeClass( this.icon, null, checked ? \"ui-icon-blank\" : \"ui-icon-check\" );\r\n\t\t\t} else {\r\n\t\t\t\ttoAdd += \"ui-icon-blank\";\r\n\t\t\t}\r\n\t\t\tthis._addClass( this.icon, \"ui-checkboxradio-icon\", toAdd );\r\n\t\t\tif ( !checked ) {\r\n\t\t\t\tthis._removeClass( this.icon, null, \"ui-icon-check ui-state-checked\" );\r\n\t\t\t}\r\n\t\t\tthis.icon.prependTo( this.label ).after( this.iconSpace );\r\n\t\t} else if ( this.icon !== undefined ) {\r\n\t\t\tthis.icon.remove();\r\n\t\t\tthis.iconSpace.remove();\r\n\t\t\tdelete this.icon;\r\n\t\t}\r\n\t},\r\n\r\n\t_updateLabel: function() {\r\n\r\n\t\t// Remove the contents of the label ( minus the icon, icon space, and input )\r\n\t\tvar contents = this.label.contents().not( this.element[ 0 ] );\r\n\t\tif ( this.icon ) {\r\n\t\t\tcontents = contents.not( this.icon[ 0 ] );\r\n\t\t}\r\n\t\tif ( this.iconSpace ) {\r\n\t\t\tcontents = contents.not( this.iconSpace[ 0 ] );\r\n\t\t}\r\n\t\tcontents.remove();\r\n\r\n\t\tthis.label.append( this.options.label );\r\n\t},\r\n\r\n\trefresh: function() {\r\n\t\tvar checked = this.element[ 0 ].checked,\r\n\t\t\tisDisabled = this.element[ 0 ].disabled;\r\n\r\n\t\tthis._updateIcon( checked );\r\n\t\tthis._toggleClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", checked );\r\n\t\tif ( this.options.label !== null ) {\r\n\t\t\tthis._updateLabel();\r\n\t\t}\r\n\r\n\t\tif ( isDisabled !== this.options.disabled ) {\r\n\t\t\tthis._setOptions( { \"disabled\": isDisabled } );\r\n\t\t}\r\n\t}\r\n\r\n} ] );\r\n\r\nreturn $.ui.checkboxradio;\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/controlgroup.js":"/*!\r\n * jQuery UI Controlgroup 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Controlgroup\r\n//>>group: Widgets\r\n//>>description: Visually groups form control widgets\r\n//>>docs: http://api.jqueryui.com/controlgroup/\r\n//>>demos: http://jqueryui.com/controlgroup/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/controlgroup.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\nvar controlgroupCornerRegex = /ui-corner-([a-z]){2,6}/g;\r\n\r\nreturn $.widget( \"ui.controlgroup\", {\r\n\tversion: \"1.12.1\",\r\n\tdefaultElement: \"<div>\",\r\n\toptions: {\r\n\t\tdirection: \"horizontal\",\r\n\t\tdisabled: null,\r\n\t\tonlyVisible: true,\r\n\t\titems: {\r\n\t\t\t\"button\": \"input[type=button], input[type=submit], input[type=reset], button, a\",\r\n\t\t\t\"controlgroupLabel\": \".ui-controlgroup-label\",\r\n\t\t\t\"checkboxradio\": \"input[type='checkbox'], input[type='radio']\",\r\n\t\t\t\"selectmenu\": \"select\",\r\n\t\t\t\"spinner\": \".ui-spinner-input\"\r\n\t\t}\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tthis._enhance();\r\n\t},\r\n\r\n\t// To support the enhanced option in jQuery Mobile, we isolate DOM manipulation\r\n\t_enhance: function() {\r\n\t\tthis.element.attr( \"role\", \"toolbar\" );\r\n\t\tthis.refresh();\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis._callChildMethod( \"destroy\" );\r\n\t\tthis.childWidgets.removeData( \"ui-controlgroup-data\" );\r\n\t\tthis.element.removeAttr( \"role\" );\r\n\t\tif ( this.options.items.controlgroupLabel ) {\r\n\t\t\tthis.element\r\n\t\t\t\t.find( this.options.items.controlgroupLabel )\r\n\t\t\t\t.find( \".ui-controlgroup-label-contents\" )\r\n\t\t\t\t.contents().unwrap();\r\n\t\t}\r\n\t},\r\n\r\n\t_initWidgets: function() {\r\n\t\tvar that = this,\r\n\t\t\tchildWidgets = [];\r\n\r\n\t\t// First we iterate over each of the items options\r\n\t\t$.each( this.options.items, function( widget, selector ) {\r\n\t\t\tvar labels;\r\n\t\t\tvar options = {};\r\n\r\n\t\t\t// Make sure the widget has a selector set\r\n\t\t\tif ( !selector ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( widget === \"controlgroupLabel\" ) {\r\n\t\t\t\tlabels = that.element.find( selector );\r\n\t\t\t\tlabels.each( function() {\r\n\t\t\t\t\tvar element = $( this );\r\n\r\n\t\t\t\t\tif ( element.children( \".ui-controlgroup-label-contents\" ).length ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telement.contents()\r\n\t\t\t\t\t\t.wrapAll( \"<span class='ui-controlgroup-label-contents'></span>\" );\r\n\t\t\t\t} );\r\n\t\t\t\tthat._addClass( labels, null, \"ui-widget ui-widget-content ui-state-default\" );\r\n\t\t\t\tchildWidgets = childWidgets.concat( labels.get() );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure the widget actually exists\r\n\t\t\tif ( !$.fn[ widget ] ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// We assume everything is in the middle to start because we can't determine\r\n\t\t\t// first / last elements until all enhancments are done.\r\n\t\t\tif ( that[ \"_\" + widget + \"Options\" ] ) {\r\n\t\t\t\toptions = that[ \"_\" + widget + \"Options\" ]( \"middle\" );\r\n\t\t\t} else {\r\n\t\t\t\toptions = { classes: {} };\r\n\t\t\t}\r\n\r\n\t\t\t// Find instances of this widget inside controlgroup and init them\r\n\t\t\tthat.element\r\n\t\t\t\t.find( selector )\r\n\t\t\t\t.each( function() {\r\n\t\t\t\t\tvar element = $( this );\r\n\t\t\t\t\tvar instance = element[ widget ]( \"instance\" );\r\n\r\n\t\t\t\t\t// We need to clone the default options for this type of widget to avoid\r\n\t\t\t\t\t// polluting the variable options which has a wider scope than a single widget.\r\n\t\t\t\t\tvar instanceOptions = $.widget.extend( {}, options );\r\n\r\n\t\t\t\t\t// If the button is the child of a spinner ignore it\r\n\t\t\t\t\t// TODO: Find a more generic solution\r\n\t\t\t\t\tif ( widget === \"button\" && element.parent( \".ui-spinner\" ).length ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Create the widget if it doesn't exist\r\n\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\tinstance = element[ widget ]()[ widget ]( \"instance\" );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstanceOptions.classes =\r\n\t\t\t\t\t\t\tthat._resolveClassesValues( instanceOptions.classes, instance );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telement[ widget ]( instanceOptions );\r\n\r\n\t\t\t\t\t// Store an instance of the controlgroup to be able to reference\r\n\t\t\t\t\t// from the outermost element for changing options and refresh\r\n\t\t\t\t\tvar widgetElement = element[ widget ]( \"widget\" );\r\n\t\t\t\t\t$.data( widgetElement[ 0 ], \"ui-controlgroup-data\",\r\n\t\t\t\t\t\tinstance ? instance : element[ widget ]( \"instance\" ) );\r\n\r\n\t\t\t\t\tchildWidgets.push( widgetElement[ 0 ] );\r\n\t\t\t\t} );\r\n\t\t} );\r\n\r\n\t\tthis.childWidgets = $( $.unique( childWidgets ) );\r\n\t\tthis._addClass( this.childWidgets, \"ui-controlgroup-item\" );\r\n\t},\r\n\r\n\t_callChildMethod: function( method ) {\r\n\t\tthis.childWidgets.each( function() {\r\n\t\t\tvar element = $( this ),\r\n\t\t\t\tdata = element.data( \"ui-controlgroup-data\" );\r\n\t\t\tif ( data && data[ method ] ) {\r\n\t\t\t\tdata[ method ]();\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\t_updateCornerClass: function( element, position ) {\r\n\t\tvar remove = \"ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all\";\r\n\t\tvar add = this._buildSimpleOptions( position, \"label\" ).classes.label;\r\n\r\n\t\tthis._removeClass( element, null, remove );\r\n\t\tthis._addClass( element, null, add );\r\n\t},\r\n\r\n\t_buildSimpleOptions: function( position, key ) {\r\n\t\tvar direction = this.options.direction === \"vertical\";\r\n\t\tvar result = {\r\n\t\t\tclasses: {}\r\n\t\t};\r\n\t\tresult.classes[ key ] = {\r\n\t\t\t\"middle\": \"\",\r\n\t\t\t\"first\": \"ui-corner-\" + ( direction ? \"top\" : \"left\" ),\r\n\t\t\t\"last\": \"ui-corner-\" + ( direction ? \"bottom\" : \"right\" ),\r\n\t\t\t\"only\": \"ui-corner-all\"\r\n\t\t}[ position ];\r\n\r\n\t\treturn result;\r\n\t},\r\n\r\n\t_spinnerOptions: function( position ) {\r\n\t\tvar options = this._buildSimpleOptions( position, \"ui-spinner\" );\r\n\r\n\t\toptions.classes[ \"ui-spinner-up\" ] = \"\";\r\n\t\toptions.classes[ \"ui-spinner-down\" ] = \"\";\r\n\r\n\t\treturn options;\r\n\t},\r\n\r\n\t_buttonOptions: function( position ) {\r\n\t\treturn this._buildSimpleOptions( position, \"ui-button\" );\r\n\t},\r\n\r\n\t_checkboxradioOptions: function( position ) {\r\n\t\treturn this._buildSimpleOptions( position, \"ui-checkboxradio-label\" );\r\n\t},\r\n\r\n\t_selectmenuOptions: function( position ) {\r\n\t\tvar direction = this.options.direction === \"vertical\";\r\n\t\treturn {\r\n\t\t\twidth: direction ? \"auto\" : false,\r\n\t\t\tclasses: {\r\n\t\t\t\tmiddle: {\r\n\t\t\t\t\t\"ui-selectmenu-button-open\": \"\",\r\n\t\t\t\t\t\"ui-selectmenu-button-closed\": \"\"\r\n\t\t\t\t},\r\n\t\t\t\tfirst: {\r\n\t\t\t\t\t\"ui-selectmenu-button-open\": \"ui-corner-\" + ( direction ? \"top\" : \"tl\" ),\r\n\t\t\t\t\t\"ui-selectmenu-button-closed\": \"ui-corner-\" + ( direction ? \"top\" : \"left\" )\r\n\t\t\t\t},\r\n\t\t\t\tlast: {\r\n\t\t\t\t\t\"ui-selectmenu-button-open\": direction ? \"\" : \"ui-corner-tr\",\r\n\t\t\t\t\t\"ui-selectmenu-button-closed\": \"ui-corner-\" + ( direction ? \"bottom\" : \"right\" )\r\n\t\t\t\t},\r\n\t\t\t\tonly: {\r\n\t\t\t\t\t\"ui-selectmenu-button-open\": \"ui-corner-top\",\r\n\t\t\t\t\t\"ui-selectmenu-button-closed\": \"ui-corner-all\"\r\n\t\t\t\t}\r\n\r\n\t\t\t}[ position ]\r\n\t\t};\r\n\t},\r\n\r\n\t_resolveClassesValues: function( classes, instance ) {\r\n\t\tvar result = {};\r\n\t\t$.each( classes, function( key ) {\r\n\t\t\tvar current = instance.options.classes[ key ] || \"\";\r\n\t\t\tcurrent = $.trim( current.replace( controlgroupCornerRegex, \"\" ) );\r\n\t\t\tresult[ key ] = ( current + \" \" + classes[ key ] ).replace( /\\s+/g, \" \" );\r\n\t\t} );\r\n\t\treturn result;\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tif ( key === \"direction\" ) {\r\n\t\t\tthis._removeClass( \"ui-controlgroup-\" + this.options.direction );\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\t\tif ( key === \"disabled\" ) {\r\n\t\t\tthis._callChildMethod( value ? \"disable\" : \"enable\" );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.refresh();\r\n\t},\r\n\r\n\trefresh: function() {\r\n\t\tvar children,\r\n\t\t\tthat = this;\r\n\r\n\t\tthis._addClass( \"ui-controlgroup ui-controlgroup-\" + this.options.direction );\r\n\r\n\t\tif ( this.options.direction === \"horizontal\" ) {\r\n\t\t\tthis._addClass( null, \"ui-helper-clearfix\" );\r\n\t\t}\r\n\t\tthis._initWidgets();\r\n\r\n\t\tchildren = this.childWidgets;\r\n\r\n\t\t// We filter here because we need to track all childWidgets not just the visible ones\r\n\t\tif ( this.options.onlyVisible ) {\r\n\t\t\tchildren = children.filter( \":visible\" );\r\n\t\t}\r\n\r\n\t\tif ( children.length ) {\r\n\r\n\t\t\t// We do this last because we need to make sure all enhancment is done\r\n\t\t\t// before determining first and last\r\n\t\t\t$.each( [ \"first\", \"last\" ], function( index, value ) {\r\n\t\t\t\tvar instance = children[ value ]().data( \"ui-controlgroup-data\" );\r\n\r\n\t\t\t\tif ( instance && that[ \"_\" + instance.widgetName + \"Options\" ] ) {\r\n\t\t\t\t\tvar options = that[ \"_\" + instance.widgetName + \"Options\" ](\r\n\t\t\t\t\t\tchildren.length === 1 ? \"only\" : value\r\n\t\t\t\t\t);\r\n\t\t\t\t\toptions.classes = that._resolveClassesValues( options.classes, instance );\r\n\t\t\t\t\tinstance.element[ instance.widgetName ]( options );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthat._updateCornerClass( children[ value ](), value );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Finally call the refresh method on each of the child widgets.\r\n\t\t\tthis._callChildMethod( \"refresh\" );\r\n\t\t}\r\n\t}\r\n} );\r\n} ) );\r\n","jquery/ui-modules/widgets/datepicker.js":"// jscs:disable maximumLineLength\r\n/* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */\r\n/*!\r\n * jQuery UI Datepicker 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Datepicker\r\n//>>group: Widgets\r\n//>>description: Displays a calendar from an input or inline for selecting dates.\r\n//>>docs: http://api.jqueryui.com/datepicker/\r\n//>>demos: http://jqueryui.com/datepicker/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/datepicker.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../keycode\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\n$.extend( $.ui, { datepicker: { version: \"1.12.1\" } } );\r\n\r\nvar datepicker_instActive;\r\n\r\nfunction datepicker_getZindex( elem ) {\r\n\tvar position, value;\r\n\twhile ( elem.length && elem[ 0 ] !== document ) {\r\n\r\n\t\t// Ignore z-index if position is set to a value where z-index is ignored by the browser\r\n\t\t// This makes behavior of this function consistent across browsers\r\n\t\t// WebKit always returns auto if the element is positioned\r\n\t\tposition = elem.css( \"position\" );\r\n\t\tif ( position === \"absolute\" || position === \"relative\" || position === \"fixed\" ) {\r\n\r\n\t\t\t// IE returns 0 when zIndex is not specified\r\n\t\t\t// other browsers return a string\r\n\t\t\t// we ignore the case of nested elements with an explicit value of 0\r\n\t\t\t// <div style=\"z-index: -10;\"><div style=\"z-index: 0;\"></div></div>\r\n\t\t\tvalue = parseInt( elem.css( \"zIndex\" ), 10 );\r\n\t\t\tif ( !isNaN( value ) && value !== 0 ) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\telem = elem.parent();\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n/* Date picker manager.\r\n   Use the singleton instance of this class, $.datepicker, to interact with the date picker.\r\n   Settings for (groups of) date pickers are maintained in an instance object,\r\n   allowing multiple different settings on the same page. */\r\n\r\nfunction Datepicker() {\r\n\tthis._curInst = null; // The current instance in use\r\n\tthis._keyEvent = false; // If the last event was a key event\r\n\tthis._disabledInputs = []; // List of date picker inputs that have been disabled\r\n\tthis._datepickerShowing = false; // True if the popup picker is showing , false if not\r\n\tthis._inDialog = false; // True if showing within a \"dialog\", false if not\r\n\tthis._mainDivId = \"ui-datepicker-div\"; // The ID of the main datepicker division\r\n\tthis._inlineClass = \"ui-datepicker-inline\"; // The name of the inline marker class\r\n\tthis._appendClass = \"ui-datepicker-append\"; // The name of the append marker class\r\n\tthis._triggerClass = \"ui-datepicker-trigger\"; // The name of the trigger marker class\r\n\tthis._dialogClass = \"ui-datepicker-dialog\"; // The name of the dialog marker class\r\n\tthis._disableClass = \"ui-datepicker-disabled\"; // The name of the disabled covering marker class\r\n\tthis._unselectableClass = \"ui-datepicker-unselectable\"; // The name of the unselectable cell marker class\r\n\tthis._currentClass = \"ui-datepicker-current-day\"; // The name of the current day marker class\r\n\tthis._dayOverClass = \"ui-datepicker-days-cell-over\"; // The name of the day hover marker class\r\n\tthis.regional = []; // Available regional settings, indexed by language code\r\n\tthis.regional[ \"\" ] = { // Default regional settings\r\n\t\tcloseText: \"Done\", // Display text for close link\r\n\t\tprevText: \"Prev\", // Display text for previous month link\r\n\t\tnextText: \"Next\", // Display text for next month link\r\n\t\tcurrentText: \"Today\", // Display text for current month link\r\n\t\tmonthNames: [ \"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\r\n\t\t\t\"July\",\"August\",\"September\",\"October\",\"November\",\"December\" ], // Names of months for drop-down and formatting\r\n\t\tmonthNamesShort: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ], // For formatting\r\n\t\tdayNames: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ], // For formatting\r\n\t\tdayNamesShort: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ], // For formatting\r\n\t\tdayNamesMin: [ \"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\" ], // Column headings for days starting at Sunday\r\n\t\tweekHeader: \"Wk\", // Column header for week of the year\r\n\t\tdateFormat: \"mm/dd/yy\", // See format options on parseDate\r\n\t\tfirstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...\r\n\t\tisRTL: false, // True if right-to-left language, false if left-to-right\r\n\t\tshowMonthAfterYear: false, // True if the year select precedes month, false for month then year\r\n\t\tyearSuffix: \"\" // Additional text to append to the year in the month headers\r\n\t};\r\n\tthis._defaults = { // Global defaults for all the date picker instances\r\n\t\tshowOn: \"focus\", // \"focus\" for popup on focus,\r\n\t\t\t// \"button\" for trigger button, or \"both\" for either\r\n\t\tshowAnim: \"fadeIn\", // Name of jQuery animation for popup\r\n\t\tshowOptions: {}, // Options for enhanced animations\r\n\t\tdefaultDate: null, // Used when field is blank: actual date,\r\n\t\t\t// +/-number for offset from today, null for today\r\n\t\tappendText: \"\", // Display text following the input box, e.g. showing the format\r\n\t\tbuttonText: \"...\", // Text for trigger button\r\n\t\tbuttonImage: \"\", // URL for trigger button image\r\n\t\tbuttonImageOnly: false, // True if the image appears alone, false if it appears on a button\r\n\t\thideIfNoPrevNext: false, // True to hide next/previous month links\r\n\t\t\t// if not applicable, false to just disable them\r\n\t\tnavigationAsDateFormat: false, // True if date formatting applied to prev/today/next links\r\n\t\tgotoCurrent: false, // True if today link goes back to current selection instead\r\n\t\tchangeMonth: false, // True if month can be selected directly, false if only prev/next\r\n\t\tchangeYear: false, // True if year can be selected directly, false if only prev/next\r\n\t\tyearRange: \"c-10:c+10\", // Range of years to display in drop-down,\r\n\t\t\t// either relative to today's year (-nn:+nn), relative to currently displayed year\r\n\t\t\t// (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)\r\n\t\tshowOtherMonths: false, // True to show dates in other months, false to leave blank\r\n\t\tselectOtherMonths: false, // True to allow selection of dates in other months, false for unselectable\r\n\t\tshowWeek: false, // True to show week of the year, false to not show it\r\n\t\tcalculateWeek: this.iso8601Week, // How to calculate the week of the year,\r\n\t\t\t// takes a Date and returns the number of the week for it\r\n\t\tshortYearCutoff: \"+10\", // Short year values < this are in the current century,\r\n\t\t\t// > this are in the previous century,\r\n\t\t\t// string value starting with \"+\" for current year + value\r\n\t\tminDate: null, // The earliest selectable date, or null for no limit\r\n\t\tmaxDate: null, // The latest selectable date, or null for no limit\r\n\t\tduration: \"fast\", // Duration of display/closure\r\n\t\tbeforeShowDay: null, // Function that takes a date and returns an array with\r\n\t\t\t// [0] = true if selectable, false if not, [1] = custom CSS class name(s) or \"\",\r\n\t\t\t// [2] = cell title (optional), e.g. $.datepicker.noWeekends\r\n\t\tbeforeShow: null, // Function that takes an input field and\r\n\t\t\t// returns a set of custom settings for the date picker\r\n\t\tonSelect: null, // Define a callback function when a date is selected\r\n\t\tonChangeMonthYear: null, // Define a callback function when the month or year is changed\r\n\t\tonClose: null, // Define a callback function when the datepicker is closed\r\n\t\tnumberOfMonths: 1, // Number of months to show at a time\r\n\t\tshowCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)\r\n\t\tstepMonths: 1, // Number of months to step back/forward\r\n\t\tstepBigMonths: 12, // Number of months to step back/forward for the big links\r\n\t\taltField: \"\", // Selector for an alternate field to store selected dates into\r\n\t\taltFormat: \"\", // The date format to use for the alternate field\r\n\t\tconstrainInput: true, // The input is constrained by the current date format\r\n\t\tshowButtonPanel: false, // True to show button panel, false to not show it\r\n\t\tautoSize: false, // True to size the input for the date format, false to leave as is\r\n\t\tdisabled: false // The initial disabled state\r\n\t};\r\n\t$.extend( this._defaults, this.regional[ \"\" ] );\r\n\tthis.regional.en = $.extend( true, {}, this.regional[ \"\" ] );\r\n\tthis.regional[ \"en-US\" ] = $.extend( true, {}, this.regional.en );\r\n\tthis.dpDiv = datepicker_bindHover( $( \"<div id='\" + this._mainDivId + \"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\" ) );\r\n}\r\n\r\n$.extend( Datepicker.prototype, {\r\n\t/* Class name added to elements to indicate already configured with a date picker. */\r\n\tmarkerClassName: \"hasDatepicker\",\r\n\r\n\t//Keep track of the maximum number of rows displayed (see #7043)\r\n\tmaxRows: 4,\r\n\r\n\t// TODO rename to \"widget\" when switching to widget factory\r\n\t_widgetDatepicker: function() {\r\n\t\treturn this.dpDiv;\r\n\t},\r\n\r\n\t/* Override the default settings for all instances of the date picker.\r\n\t * @param  settings  object - the new settings to use as defaults (anonymous object)\r\n\t * @return the manager object\r\n\t */\r\n\tsetDefaults: function( settings ) {\r\n\t\tdatepicker_extendRemove( this._defaults, settings || {} );\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/* Attach the date picker to a jQuery selection.\r\n\t * @param  target\telement - the target input field or division or span\r\n\t * @param  settings  object - the new settings to use for this date picker instance (anonymous)\r\n\t */\r\n\t_attachDatepicker: function( target, settings ) {\r\n\t\tvar nodeName, inline, inst;\r\n\t\tnodeName = target.nodeName.toLowerCase();\r\n\t\tinline = ( nodeName === \"div\" || nodeName === \"span\" );\r\n\t\tif ( !target.id ) {\r\n\t\t\tthis.uuid += 1;\r\n\t\t\ttarget.id = \"dp\" + this.uuid;\r\n\t\t}\r\n\t\tinst = this._newInst( $( target ), inline );\r\n\t\tinst.settings = $.extend( {}, settings || {} );\r\n\t\tif ( nodeName === \"input\" ) {\r\n\t\t\tthis._connectDatepicker( target, inst );\r\n\t\t} else if ( inline ) {\r\n\t\t\tthis._inlineDatepicker( target, inst );\r\n\t\t}\r\n\t},\r\n\r\n\t/* Create a new instance object. */\r\n\t_newInst: function( target, inline ) {\r\n\t\tvar id = target[ 0 ].id.replace( /([^A-Za-z0-9_\\-])/g, \"\\\\\\\\$1\" ); // escape jQuery meta chars\r\n\t\treturn { id: id, input: target, // associated target\r\n\t\t\tselectedDay: 0, selectedMonth: 0, selectedYear: 0, // current selection\r\n\t\t\tdrawMonth: 0, drawYear: 0, // month being drawn\r\n\t\t\tinline: inline, // is datepicker inline or not\r\n\t\t\tdpDiv: ( !inline ? this.dpDiv : // presentation div\r\n\t\t\tdatepicker_bindHover( $( \"<div class='\" + this._inlineClass + \" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\" ) ) ) };\r\n\t},\r\n\r\n\t/* Attach the date picker to an input field. */\r\n\t_connectDatepicker: function( target, inst ) {\r\n\t\tvar input = $( target );\r\n\t\tinst.append = $( [] );\r\n\t\tinst.trigger = $( [] );\r\n\t\tif ( input.hasClass( this.markerClassName ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._attachments( input, inst );\r\n\t\tinput.addClass( this.markerClassName ).on( \"keydown\", this._doKeyDown ).\r\n\t\t\ton( \"keypress\", this._doKeyPress ).on( \"keyup\", this._doKeyUp );\r\n\t\tthis._autoSize( inst );\r\n\t\t$.data( target, \"datepicker\", inst );\r\n\r\n\t\t//If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)\r\n\t\tif ( inst.settings.disabled ) {\r\n\t\t\tthis._disableDatepicker( target );\r\n\t\t}\r\n\t},\r\n\r\n\t/* Make attachments based on settings. */\r\n\t_attachments: function( input, inst ) {\r\n\t\tvar showOn, buttonText, buttonImage,\r\n\t\t\tappendText = this._get( inst, \"appendText\" ),\r\n\t\t\tisRTL = this._get( inst, \"isRTL\" );\r\n\r\n\t\tif ( inst.append ) {\r\n\t\t\tinst.append.remove();\r\n\t\t}\r\n\t\tif ( appendText ) {\r\n\t\t\tinst.append = $( \"<span class='\" + this._appendClass + \"'>\" + appendText + \"</span>\" );\r\n\t\t\tinput[ isRTL ? \"before\" : \"after\" ]( inst.append );\r\n\t\t}\r\n\r\n\t\tinput.off( \"focus\", this._showDatepicker );\r\n\r\n\t\tif ( inst.trigger ) {\r\n\t\t\tinst.trigger.remove();\r\n\t\t}\r\n\r\n\t\tshowOn = this._get( inst, \"showOn\" );\r\n\t\tif ( showOn === \"focus\" || showOn === \"both\" ) { // pop-up date picker when in the marked field\r\n\t\t\tinput.on( \"focus\", this._showDatepicker );\r\n\t\t}\r\n\t\tif ( showOn === \"button\" || showOn === \"both\" ) { // pop-up date picker when button clicked\r\n\t\t\tbuttonText = this._get( inst, \"buttonText\" );\r\n\t\t\tbuttonImage = this._get( inst, \"buttonImage\" );\r\n\t\t\tinst.trigger = $( this._get( inst, \"buttonImageOnly\" ) ?\r\n\t\t\t\t$( \"<img/>\" ).addClass( this._triggerClass ).\r\n\t\t\t\t\tattr( { src: buttonImage, alt: buttonText, title: buttonText } ) :\r\n\t\t\t\t$( \"<button type='button'></button>\" ).addClass( this._triggerClass ).\r\n\t\t\t\t\thtml( !buttonImage ? buttonText : $( \"<img/>\" ).attr(\r\n\t\t\t\t\t{ src:buttonImage, alt:buttonText, title:buttonText } ) ) );\r\n\t\t\tinput[ isRTL ? \"before\" : \"after\" ]( inst.trigger );\r\n\t\t\tinst.trigger.on( \"click\", function() {\r\n\t\t\t\tif ( $.datepicker._datepickerShowing && $.datepicker._lastInput === input[ 0 ] ) {\r\n\t\t\t\t\t$.datepicker._hideDatepicker();\r\n\t\t\t\t} else if ( $.datepicker._datepickerShowing && $.datepicker._lastInput !== input[ 0 ] ) {\r\n\t\t\t\t\t$.datepicker._hideDatepicker();\r\n\t\t\t\t\t$.datepicker._showDatepicker( input[ 0 ] );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$.datepicker._showDatepicker( input[ 0 ] );\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t} );\r\n\t\t}\r\n\t},\r\n\r\n\t/* Apply the maximum length for the date format. */\r\n\t_autoSize: function( inst ) {\r\n\t\tif ( this._get( inst, \"autoSize\" ) && !inst.inline ) {\r\n\t\t\tvar findMax, max, maxI, i,\r\n\t\t\t\tdate = new Date( 2009, 12 - 1, 20 ), // Ensure double digits\r\n\t\t\t\tdateFormat = this._get( inst, \"dateFormat\" );\r\n\r\n\t\t\tif ( dateFormat.match( /[DM]/ ) ) {\r\n\t\t\t\tfindMax = function( names ) {\r\n\t\t\t\t\tmax = 0;\r\n\t\t\t\t\tmaxI = 0;\r\n\t\t\t\t\tfor ( i = 0; i < names.length; i++ ) {\r\n\t\t\t\t\t\tif ( names[ i ].length > max ) {\r\n\t\t\t\t\t\t\tmax = names[ i ].length;\r\n\t\t\t\t\t\t\tmaxI = i;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn maxI;\r\n\t\t\t\t};\r\n\t\t\t\tdate.setMonth( findMax( this._get( inst, ( dateFormat.match( /MM/ ) ?\r\n\t\t\t\t\t\"monthNames\" : \"monthNamesShort\" ) ) ) );\r\n\t\t\t\tdate.setDate( findMax( this._get( inst, ( dateFormat.match( /DD/ ) ?\r\n\t\t\t\t\t\"dayNames\" : \"dayNamesShort\" ) ) ) + 20 - date.getDay() );\r\n\t\t\t}\r\n\t\t\tinst.input.attr( \"size\", this._formatDate( inst, date ).length );\r\n\t\t}\r\n\t},\r\n\r\n\t/* Attach an inline date picker to a div. */\r\n\t_inlineDatepicker: function( target, inst ) {\r\n\t\tvar divSpan = $( target );\r\n\t\tif ( divSpan.hasClass( this.markerClassName ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdivSpan.addClass( this.markerClassName ).append( inst.dpDiv );\r\n\t\t$.data( target, \"datepicker\", inst );\r\n\t\tthis._setDate( inst, this._getDefaultDate( inst ), true );\r\n\t\tthis._updateDatepicker( inst );\r\n\t\tthis._updateAlternate( inst );\r\n\r\n\t\t//If disabled option is true, disable the datepicker before showing it (see ticket #5665)\r\n\t\tif ( inst.settings.disabled ) {\r\n\t\t\tthis._disableDatepicker( target );\r\n\t\t}\r\n\r\n\t\t// Set display:block in place of inst.dpDiv.show() which won't work on disconnected elements\r\n\t\t// http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height\r\n\t\tinst.dpDiv.css( \"display\", \"block\" );\r\n\t},\r\n\r\n\t/* Pop-up the date picker in a \"dialog\" box.\r\n\t * @param  input element - ignored\r\n\t * @param  date\tstring or Date - the initial date to display\r\n\t * @param  onSelect  function - the function to call when a date is selected\r\n\t * @param  settings  object - update the dialog date picker instance's settings (anonymous object)\r\n\t * @param  pos int[2] - coordinates for the dialog's position within the screen or\r\n\t *\t\t\t\t\tevent - with x/y coordinates or\r\n\t *\t\t\t\t\tleave empty for default (screen centre)\r\n\t * @return the manager object\r\n\t */\r\n\t_dialogDatepicker: function( input, date, onSelect, settings, pos ) {\r\n\t\tvar id, browserWidth, browserHeight, scrollX, scrollY,\r\n\t\t\tinst = this._dialogInst; // internal instance\r\n\r\n\t\tif ( !inst ) {\r\n\t\t\tthis.uuid += 1;\r\n\t\t\tid = \"dp\" + this.uuid;\r\n\t\t\tthis._dialogInput = $( \"<input type='text' id='\" + id +\r\n\t\t\t\t\"' style='position: absolute; top: -100px; width: 0px;'/>\" );\r\n\t\t\tthis._dialogInput.on( \"keydown\", this._doKeyDown );\r\n\t\t\t$( \"body\" ).append( this._dialogInput );\r\n\t\t\tinst = this._dialogInst = this._newInst( this._dialogInput, false );\r\n\t\t\tinst.settings = {};\r\n\t\t\t$.data( this._dialogInput[ 0 ], \"datepicker\", inst );\r\n\t\t}\r\n\t\tdatepicker_extendRemove( inst.settings, settings || {} );\r\n\t\tdate = ( date && date.constructor === Date ? this._formatDate( inst, date ) : date );\r\n\t\tthis._dialogInput.val( date );\r\n\r\n\t\tthis._pos = ( pos ? ( pos.length ? pos : [ pos.pageX, pos.pageY ] ) : null );\r\n\t\tif ( !this._pos ) {\r\n\t\t\tbrowserWidth = document.documentElement.clientWidth;\r\n\t\t\tbrowserHeight = document.documentElement.clientHeight;\r\n\t\t\tscrollX = document.documentElement.scrollLeft || document.body.scrollLeft;\r\n\t\t\tscrollY = document.documentElement.scrollTop || document.body.scrollTop;\r\n\t\t\tthis._pos = // should use actual width/height below\r\n\t\t\t\t[ ( browserWidth / 2 ) - 100 + scrollX, ( browserHeight / 2 ) - 150 + scrollY ];\r\n\t\t}\r\n\r\n\t\t// Move input on screen for focus, but hidden behind dialog\r\n\t\tthis._dialogInput.css( \"left\", ( this._pos[ 0 ] + 20 ) + \"px\" ).css( \"top\", this._pos[ 1 ] + \"px\" );\r\n\t\tinst.settings.onSelect = onSelect;\r\n\t\tthis._inDialog = true;\r\n\t\tthis.dpDiv.addClass( this._dialogClass );\r\n\t\tthis._showDatepicker( this._dialogInput[ 0 ] );\r\n\t\tif ( $.blockUI ) {\r\n\t\t\t$.blockUI( this.dpDiv );\r\n\t\t}\r\n\t\t$.data( this._dialogInput[ 0 ], \"datepicker\", inst );\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/* Detach a datepicker from its control.\r\n\t * @param  target\telement - the target input field or division or span\r\n\t */\r\n\t_destroyDatepicker: function( target ) {\r\n\t\tvar nodeName,\r\n\t\t\t$target = $( target ),\r\n\t\t\tinst = $.data( target, \"datepicker\" );\r\n\r\n\t\tif ( !$target.hasClass( this.markerClassName ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnodeName = target.nodeName.toLowerCase();\r\n\t\t$.removeData( target, \"datepicker\" );\r\n\t\tif ( nodeName === \"input\" ) {\r\n\t\t\tinst.append.remove();\r\n\t\t\tinst.trigger.remove();\r\n\t\t\t$target.removeClass( this.markerClassName ).\r\n\t\t\t\toff( \"focus\", this._showDatepicker ).\r\n\t\t\t\toff( \"keydown\", this._doKeyDown ).\r\n\t\t\t\toff( \"keypress\", this._doKeyPress ).\r\n\t\t\t\toff( \"keyup\", this._doKeyUp );\r\n\t\t} else if ( nodeName === \"div\" || nodeName === \"span\" ) {\r\n\t\t\t$target.removeClass( this.markerClassName ).empty();\r\n\t\t}\r\n\r\n\t\tif ( datepicker_instActive === inst ) {\r\n\t\t\tdatepicker_instActive = null;\r\n\t\t}\r\n\t},\r\n\r\n\t/* Enable the date picker to a jQuery selection.\r\n\t * @param  target\telement - the target input field or division or span\r\n\t */\r\n\t_enableDatepicker: function( target ) {\r\n\t\tvar nodeName, inline,\r\n\t\t\t$target = $( target ),\r\n\t\t\tinst = $.data( target, \"datepicker\" );\r\n\r\n\t\tif ( !$target.hasClass( this.markerClassName ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnodeName = target.nodeName.toLowerCase();\r\n\t\tif ( nodeName === \"input\" ) {\r\n\t\t\ttarget.disabled = false;\r\n\t\t\tinst.trigger.filter( \"button\" ).\r\n\t\t\t\teach( function() { this.disabled = false; } ).end().\r\n\t\t\t\tfilter( \"img\" ).css( { opacity: \"1.0\", cursor: \"\" } );\r\n\t\t} else if ( nodeName === \"div\" || nodeName === \"span\" ) {\r\n\t\t\tinline = $target.children( \".\" + this._inlineClass );\r\n\t\t\tinline.children().removeClass( \"ui-state-disabled\" );\r\n\t\t\tinline.find( \"select.ui-datepicker-month, select.ui-datepicker-year\" ).\r\n\t\t\t\tprop( \"disabled\", false );\r\n\t\t}\r\n\t\tthis._disabledInputs = $.map( this._disabledInputs,\r\n\t\t\tfunction( value ) { return ( value === target ? null : value ); } ); // delete entry\r\n\t},\r\n\r\n\t/* Disable the date picker to a jQuery selection.\r\n\t * @param  target\telement - the target input field or division or span\r\n\t */\r\n\t_disableDatepicker: function( target ) {\r\n\t\tvar nodeName, inline,\r\n\t\t\t$target = $( target ),\r\n\t\t\tinst = $.data( target, \"datepicker\" );\r\n\r\n\t\tif ( !$target.hasClass( this.markerClassName ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnodeName = target.nodeName.toLowerCase();\r\n\t\tif ( nodeName === \"input\" ) {\r\n\t\t\ttarget.disabled = true;\r\n\t\t\tinst.trigger.filter( \"button\" ).\r\n\t\t\t\teach( function() { this.disabled = true; } ).end().\r\n\t\t\t\tfilter( \"img\" ).css( { opacity: \"0.5\", cursor: \"default\" } );\r\n\t\t} else if ( nodeName === \"div\" || nodeName === \"span\" ) {\r\n\t\t\tinline = $target.children( \".\" + this._inlineClass );\r\n\t\t\tinline.children().addClass( \"ui-state-disabled\" );\r\n\t\t\tinline.find( \"select.ui-datepicker-month, select.ui-datepicker-year\" ).\r\n\t\t\t\tprop( \"disabled\", true );\r\n\t\t}\r\n\t\tthis._disabledInputs = $.map( this._disabledInputs,\r\n\t\t\tfunction( value ) { return ( value === target ? null : value ); } ); // delete entry\r\n\t\tthis._disabledInputs[ this._disabledInputs.length ] = target;\r\n\t},\r\n\r\n\t/* Is the first field in a jQuery collection disabled as a datepicker?\r\n\t * @param  target\telement - the target input field or division or span\r\n\t * @return boolean - true if disabled, false if enabled\r\n\t */\r\n\t_isDisabledDatepicker: function( target ) {\r\n\t\tif ( !target ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor ( var i = 0; i < this._disabledInputs.length; i++ ) {\r\n\t\t\tif ( this._disabledInputs[ i ] === target ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/* Retrieve the instance data for the target control.\r\n\t * @param  target  element - the target input field or division or span\r\n\t * @return  object - the associated instance data\r\n\t * @throws  error if a jQuery problem getting data\r\n\t */\r\n\t_getInst: function( target ) {\r\n\t\ttry {\r\n\t\t\treturn $.data( target, \"datepicker\" );\r\n\t\t}\r\n\t\tcatch ( err ) {\r\n\t\t\tthrow \"Missing instance data for this datepicker\";\r\n\t\t}\r\n\t},\r\n\r\n\t/* Update or retrieve the settings for a date picker attached to an input field or division.\r\n\t * @param  target  element - the target input field or division or span\r\n\t * @param  name\tobject - the new settings to update or\r\n\t *\t\t\t\tstring - the name of the setting to change or retrieve,\r\n\t *\t\t\t\twhen retrieving also \"all\" for all instance settings or\r\n\t *\t\t\t\t\"defaults\" for all global defaults\r\n\t * @param  value   any - the new value for the setting\r\n\t *\t\t\t\t(omit if above is an object or to retrieve a value)\r\n\t */\r\n\t_optionDatepicker: function( target, name, value ) {\r\n\t\tvar settings, date, minDate, maxDate,\r\n\t\t\tinst = this._getInst( target );\r\n\r\n\t\tif ( arguments.length === 2 && typeof name === \"string\" ) {\r\n\t\t\treturn ( name === \"defaults\" ? $.extend( {}, $.datepicker._defaults ) :\r\n\t\t\t\t( inst ? ( name === \"all\" ? $.extend( {}, inst.settings ) :\r\n\t\t\t\tthis._get( inst, name ) ) : null ) );\r\n\t\t}\r\n\r\n\t\tsettings = name || {};\r\n\t\tif ( typeof name === \"string\" ) {\r\n\t\t\tsettings = {};\r\n\t\t\tsettings[ name ] = value;\r\n\t\t}\r\n\r\n\t\tif ( inst ) {\r\n\t\t\tif ( this._curInst === inst ) {\r\n\t\t\t\tthis._hideDatepicker();\r\n\t\t\t}\r\n\r\n\t\t\tdate = this._getDateDatepicker( target, true );\r\n\t\t\tminDate = this._getMinMaxDate( inst, \"min\" );\r\n\t\t\tmaxDate = this._getMinMaxDate( inst, \"max\" );\r\n\t\t\tdatepicker_extendRemove( inst.settings, settings );\r\n\r\n\t\t\t// reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn't provided\r\n\t\t\tif ( minDate !== null && settings.dateFormat !== undefined && settings.minDate === undefined ) {\r\n\t\t\t\tinst.settings.minDate = this._formatDate( inst, minDate );\r\n\t\t\t}\r\n\t\t\tif ( maxDate !== null && settings.dateFormat !== undefined && settings.maxDate === undefined ) {\r\n\t\t\t\tinst.settings.maxDate = this._formatDate( inst, maxDate );\r\n\t\t\t}\r\n\t\t\tif ( \"disabled\" in settings ) {\r\n\t\t\t\tif ( settings.disabled ) {\r\n\t\t\t\t\tthis._disableDatepicker( target );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._enableDatepicker( target );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._attachments( $( target ), inst );\r\n\t\t\tthis._autoSize( inst );\r\n\t\t\tthis._setDate( inst, date );\r\n\t\t\tthis._updateAlternate( inst );\r\n\t\t\tthis._updateDatepicker( inst );\r\n\t\t}\r\n\t},\r\n\r\n\t// Change method deprecated\r\n\t_changeDatepicker: function( target, name, value ) {\r\n\t\tthis._optionDatepicker( target, name, value );\r\n\t},\r\n\r\n\t/* Redraw the date picker attached to an input field or division.\r\n\t * @param  target  element - the target input field or division or span\r\n\t */\r\n\t_refreshDatepicker: function( target ) {\r\n\t\tvar inst = this._getInst( target );\r\n\t\tif ( inst ) {\r\n\t\t\tthis._updateDatepicker( inst );\r\n\t\t}\r\n\t},\r\n\r\n\t/* Set the dates for a jQuery selection.\r\n\t * @param  target element - the target input field or division or span\r\n\t * @param  date\tDate - the new date\r\n\t */\r\n\t_setDateDatepicker: function( target, date ) {\r\n\t\tvar inst = this._getInst( target );\r\n\t\tif ( inst ) {\r\n\t\t\tthis._setDate( inst, date );\r\n\t\t\tthis._updateDatepicker( inst );\r\n\t\t\tthis._updateAlternate( inst );\r\n\t\t}\r\n\t},\r\n\r\n\t/* Get the date(s) for the first entry in a jQuery selection.\r\n\t * @param  target element - the target input field or division or span\r\n\t * @param  noDefault boolean - true if no default date is to be used\r\n\t * @return Date - the current date\r\n\t */\r\n\t_getDateDatepicker: function( target, noDefault ) {\r\n\t\tvar inst = this._getInst( target );\r\n\t\tif ( inst && !inst.inline ) {\r\n\t\t\tthis._setDateFromField( inst, noDefault );\r\n\t\t}\r\n\t\treturn ( inst ? this._getDate( inst ) : null );\r\n\t},\r\n\r\n\t/* Handle keystrokes. */\r\n\t_doKeyDown: function( event ) {\r\n\t\tvar onSelect, dateStr, sel,\r\n\t\t\tinst = $.datepicker._getInst( event.target ),\r\n\t\t\thandled = true,\r\n\t\t\tisRTL = inst.dpDiv.is( \".ui-datepicker-rtl\" );\r\n\r\n\t\tinst._keyEvent = true;\r\n\t\tif ( $.datepicker._datepickerShowing ) {\r\n\t\t\tswitch ( event.keyCode ) {\r\n\t\t\t\tcase 9: $.datepicker._hideDatepicker();\r\n\t\t\t\t\t\thandled = false;\r\n\t\t\t\t\t\tbreak; // hide on tab out\r\n\t\t\t\tcase 13: sel = $( \"td.\" + $.datepicker._dayOverClass + \":not(.\" +\r\n\t\t\t\t\t\t\t\t\t$.datepicker._currentClass + \")\", inst.dpDiv );\r\n\t\t\t\t\t\tif ( sel[ 0 ] ) {\r\n\t\t\t\t\t\t\t$.datepicker._selectDay( event.target, inst.selectedMonth, inst.selectedYear, sel[ 0 ] );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tonSelect = $.datepicker._get( inst, \"onSelect\" );\r\n\t\t\t\t\t\tif ( onSelect ) {\r\n\t\t\t\t\t\t\tdateStr = $.datepicker._formatDate( inst );\r\n\r\n\t\t\t\t\t\t\t// Trigger custom callback\r\n\t\t\t\t\t\t\tonSelect.apply( ( inst.input ? inst.input[ 0 ] : null ), [ dateStr, inst ] );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$.datepicker._hideDatepicker();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn false; // don't submit the form\r\n\t\t\t\tcase 27: $.datepicker._hideDatepicker();\r\n\t\t\t\t\t\tbreak; // hide on escape\r\n\t\t\t\tcase 33: $.datepicker._adjustDate( event.target, ( event.ctrlKey ?\r\n\t\t\t\t\t\t\t-$.datepicker._get( inst, \"stepBigMonths\" ) :\r\n\t\t\t\t\t\t\t-$.datepicker._get( inst, \"stepMonths\" ) ), \"M\" );\r\n\t\t\t\t\t\tbreak; // previous month/year on page up/+ ctrl\r\n\t\t\t\tcase 34: $.datepicker._adjustDate( event.target, ( event.ctrlKey ?\r\n\t\t\t\t\t\t\t+$.datepicker._get( inst, \"stepBigMonths\" ) :\r\n\t\t\t\t\t\t\t+$.datepicker._get( inst, \"stepMonths\" ) ), \"M\" );\r\n\t\t\t\t\t\tbreak; // next month/year on page down/+ ctrl\r\n\t\t\t\tcase 35: if ( event.ctrlKey || event.metaKey ) {\r\n\t\t\t\t\t\t\t$.datepicker._clearDate( event.target );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thandled = event.ctrlKey || event.metaKey;\r\n\t\t\t\t\t\tbreak; // clear on ctrl or command +end\r\n\t\t\t\tcase 36: if ( event.ctrlKey || event.metaKey ) {\r\n\t\t\t\t\t\t\t$.datepicker._gotoToday( event.target );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thandled = event.ctrlKey || event.metaKey;\r\n\t\t\t\t\t\tbreak; // current on ctrl or command +home\r\n\t\t\t\tcase 37: if ( event.ctrlKey || event.metaKey ) {\r\n\t\t\t\t\t\t\t$.datepicker._adjustDate( event.target, ( isRTL ? +1 : -1 ), \"D\" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thandled = event.ctrlKey || event.metaKey;\r\n\r\n\t\t\t\t\t\t// -1 day on ctrl or command +left\r\n\t\t\t\t\t\tif ( event.originalEvent.altKey ) {\r\n\t\t\t\t\t\t\t$.datepicker._adjustDate( event.target, ( event.ctrlKey ?\r\n\t\t\t\t\t\t\t\t-$.datepicker._get( inst, \"stepBigMonths\" ) :\r\n\t\t\t\t\t\t\t\t-$.datepicker._get( inst, \"stepMonths\" ) ), \"M\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// next month/year on alt +left on Mac\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\tcase 38: if ( event.ctrlKey || event.metaKey ) {\r\n\t\t\t\t\t\t\t$.datepicker._adjustDate( event.target, -7, \"D\" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thandled = event.ctrlKey || event.metaKey;\r\n\t\t\t\t\t\tbreak; // -1 week on ctrl or command +up\r\n\t\t\t\tcase 39: if ( event.ctrlKey || event.metaKey ) {\r\n\t\t\t\t\t\t\t$.datepicker._adjustDate( event.target, ( isRTL ? -1 : +1 ), \"D\" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thandled = event.ctrlKey || event.metaKey;\r\n\r\n\t\t\t\t\t\t// +1 day on ctrl or command +right\r\n\t\t\t\t\t\tif ( event.originalEvent.altKey ) {\r\n\t\t\t\t\t\t\t$.datepicker._adjustDate( event.target, ( event.ctrlKey ?\r\n\t\t\t\t\t\t\t\t+$.datepicker._get( inst, \"stepBigMonths\" ) :\r\n\t\t\t\t\t\t\t\t+$.datepicker._get( inst, \"stepMonths\" ) ), \"M\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// next month/year on alt +right\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\tcase 40: if ( event.ctrlKey || event.metaKey ) {\r\n\t\t\t\t\t\t\t$.datepicker._adjustDate( event.target, +7, \"D\" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thandled = event.ctrlKey || event.metaKey;\r\n\t\t\t\t\t\tbreak; // +1 week on ctrl or command +down\r\n\t\t\t\tdefault: handled = false;\r\n\t\t\t}\r\n\t\t} else if ( event.keyCode === 36 && event.ctrlKey ) { // display the date picker on ctrl+home\r\n\t\t\t$.datepicker._showDatepicker( this );\r\n\t\t} else {\r\n\t\t\thandled = false;\r\n\t\t}\r\n\r\n\t\tif ( handled ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t},\r\n\r\n\t/* Filter entered characters - based on date format. */\r\n\t_doKeyPress: function( event ) {\r\n\t\tvar chars, chr,\r\n\t\t\tinst = $.datepicker._getInst( event.target );\r\n\r\n\t\tif ( $.datepicker._get( inst, \"constrainInput\" ) ) {\r\n\t\t\tchars = $.datepicker._possibleChars( $.datepicker._get( inst, \"dateFormat\" ) );\r\n\t\t\tchr = String.fromCharCode( event.charCode == null ? event.keyCode : event.charCode );\r\n\t\t\treturn event.ctrlKey || event.metaKey || ( chr < \" \" || !chars || chars.indexOf( chr ) > -1 );\r\n\t\t}\r\n\t},\r\n\r\n\t/* Synchronise manual entry and field/alternate field. */\r\n\t_doKeyUp: function( event ) {\r\n\t\tvar date,\r\n\t\t\tinst = $.datepicker._getInst( event.target );\r\n\r\n\t\tif ( inst.input.val() !== inst.lastVal ) {\r\n\t\t\ttry {\r\n\t\t\t\tdate = $.datepicker.parseDate( $.datepicker._get( inst, \"dateFormat\" ),\r\n\t\t\t\t\t( inst.input ? inst.input.val() : null ),\r\n\t\t\t\t\t$.datepicker._getFormatConfig( inst ) );\r\n\r\n\t\t\t\tif ( date ) { // only if valid\r\n\t\t\t\t\t$.datepicker._setDateFromField( inst );\r\n\t\t\t\t\t$.datepicker._updateAlternate( inst );\r\n\t\t\t\t\t$.datepicker._updateDatepicker( inst );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch ( err ) {\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/* Pop-up the date picker for a given input field.\r\n\t * If false returned from beforeShow event handler do not show.\r\n\t * @param  input  element - the input field attached to the date picker or\r\n\t *\t\t\t\t\tevent - if triggered by focus\r\n\t */\r\n\t_showDatepicker: function( input ) {\r\n\t\tinput = input.target || input;\r\n\t\tif ( input.nodeName.toLowerCase() !== \"input\" ) { // find from button/image trigger\r\n\t\t\tinput = $( \"input\", input.parentNode )[ 0 ];\r\n\t\t}\r\n\r\n\t\tif ( $.datepicker._isDisabledDatepicker( input ) || $.datepicker._lastInput === input ) { // already here\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar inst, beforeShow, beforeShowSettings, isFixed,\r\n\t\t\toffset, showAnim, duration;\r\n\r\n\t\tinst = $.datepicker._getInst( input );\r\n\t\tif ( $.datepicker._curInst && $.datepicker._curInst !== inst ) {\r\n\t\t\t$.datepicker._curInst.dpDiv.stop( true, true );\r\n\t\t\tif ( inst && $.datepicker._datepickerShowing ) {\r\n\t\t\t\t$.datepicker._hideDatepicker( $.datepicker._curInst.input[ 0 ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbeforeShow = $.datepicker._get( inst, \"beforeShow\" );\r\n\t\tbeforeShowSettings = beforeShow ? beforeShow.apply( input, [ input, inst ] ) : {};\r\n\t\tif ( beforeShowSettings === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdatepicker_extendRemove( inst.settings, beforeShowSettings );\r\n\r\n\t\tinst.lastVal = null;\r\n\t\t$.datepicker._lastInput = input;\r\n\t\t$.datepicker._setDateFromField( inst );\r\n\r\n\t\tif ( $.datepicker._inDialog ) { // hide cursor\r\n\t\t\tinput.value = \"\";\r\n\t\t}\r\n\t\tif ( !$.datepicker._pos ) { // position below input\r\n\t\t\t$.datepicker._pos = $.datepicker._findPos( input );\r\n\t\t\t$.datepicker._pos[ 1 ] += input.offsetHeight; // add the height\r\n\t\t}\r\n\r\n\t\tisFixed = false;\r\n\t\t$( input ).parents().each( function() {\r\n\t\t\tisFixed |= $( this ).css( \"position\" ) === \"fixed\";\r\n\t\t\treturn !isFixed;\r\n\t\t} );\r\n\r\n\t\toffset = { left: $.datepicker._pos[ 0 ], top: $.datepicker._pos[ 1 ] };\r\n\t\t$.datepicker._pos = null;\r\n\r\n\t\t//to avoid flashes on Firefox\r\n\t\tinst.dpDiv.empty();\r\n\r\n\t\t// determine sizing offscreen\r\n\t\tinst.dpDiv.css( { position: \"absolute\", display: \"block\", top: \"-1000px\" } );\r\n\t\t$.datepicker._updateDatepicker( inst );\r\n\r\n\t\t// fix width for dynamic number of date pickers\r\n\t\t// and adjust position before showing\r\n\t\toffset = $.datepicker._checkOffset( inst, offset, isFixed );\r\n\t\tinst.dpDiv.css( { position: ( $.datepicker._inDialog && $.blockUI ?\r\n\t\t\t\"static\" : ( isFixed ? \"fixed\" : \"absolute\" ) ), display: \"none\",\r\n\t\t\tleft: offset.left + \"px\", top: offset.top + \"px\" } );\r\n\r\n\t\tif ( !inst.inline ) {\r\n\t\t\tshowAnim = $.datepicker._get( inst, \"showAnim\" );\r\n\t\t\tduration = $.datepicker._get( inst, \"duration\" );\r\n\t\t\tinst.dpDiv.css( \"z-index\", datepicker_getZindex( $( input ) ) + 1 );\r\n\t\t\t$.datepicker._datepickerShowing = true;\r\n\r\n\t\t\tif ( $.effects && $.effects.effect[ showAnim ] ) {\r\n\t\t\t\tinst.dpDiv.show( showAnim, $.datepicker._get( inst, \"showOptions\" ), duration );\r\n\t\t\t} else {\r\n\t\t\t\tinst.dpDiv[ showAnim || \"show\" ]( showAnim ? duration : null );\r\n\t\t\t}\r\n\r\n\t\t\tif ( $.datepicker._shouldFocusInput( inst ) ) {\r\n\t\t\t\tinst.input.trigger( \"focus\" );\r\n\t\t\t}\r\n\r\n\t\t\t$.datepicker._curInst = inst;\r\n\t\t}\r\n\t},\r\n\r\n\t/* Generate the date picker content. */\r\n\t_updateDatepicker: function( inst ) {\r\n\t\tthis.maxRows = 4; //Reset the max number of rows being displayed (see #7043)\r\n\t\tdatepicker_instActive = inst; // for delegate hover events\r\n\t\tinst.dpDiv.empty().append( this._generateHTML( inst ) );\r\n\t\tthis._attachHandlers( inst );\r\n\r\n\t\tvar origyearshtml,\r\n\t\t\tnumMonths = this._getNumberOfMonths( inst ),\r\n\t\t\tcols = numMonths[ 1 ],\r\n\t\t\twidth = 17,\r\n\t\t\tactiveCell = inst.dpDiv.find( \".\" + this._dayOverClass + \" a\" );\r\n\r\n\t\tif ( activeCell.length > 0 ) {\r\n\t\t\tdatepicker_handleMouseover.apply( activeCell.get( 0 ) );\r\n\t\t}\r\n\r\n\t\tinst.dpDiv.removeClass( \"ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4\" ).width( \"\" );\r\n\t\tif ( cols > 1 ) {\r\n\t\t\tinst.dpDiv.addClass( \"ui-datepicker-multi-\" + cols ).css( \"width\", ( width * cols ) + \"em\" );\r\n\t\t}\r\n\t\tinst.dpDiv[ ( numMonths[ 0 ] !== 1 || numMonths[ 1 ] !== 1 ? \"add\" : \"remove\" ) +\r\n\t\t\t\"Class\" ]( \"ui-datepicker-multi\" );\r\n\t\tinst.dpDiv[ ( this._get( inst, \"isRTL\" ) ? \"add\" : \"remove\" ) +\r\n\t\t\t\"Class\" ]( \"ui-datepicker-rtl\" );\r\n\r\n\t\tif ( inst === $.datepicker._curInst && $.datepicker._datepickerShowing && $.datepicker._shouldFocusInput( inst ) ) {\r\n\t\t\tinst.input.trigger( \"focus\" );\r\n\t\t}\r\n\r\n\t\t// Deffered render of the years select (to avoid flashes on Firefox)\r\n\t\tif ( inst.yearshtml ) {\r\n\t\t\torigyearshtml = inst.yearshtml;\r\n\t\t\tsetTimeout( function() {\r\n\r\n\t\t\t\t//assure that inst.yearshtml didn't change.\r\n\t\t\t\tif ( origyearshtml === inst.yearshtml && inst.yearshtml ) {\r\n\t\t\t\t\tinst.dpDiv.find( \"select.ui-datepicker-year:first\" ).replaceWith( inst.yearshtml );\r\n\t\t\t\t}\r\n\t\t\t\torigyearshtml = inst.yearshtml = null;\r\n\t\t\t}, 0 );\r\n\t\t}\r\n\t},\r\n\r\n\t// #6694 - don't focus the input if it's already focused\r\n\t// this breaks the change event in IE\r\n\t// Support: IE and jQuery <1.9\r\n\t_shouldFocusInput: function( inst ) {\r\n\t\treturn inst.input && inst.input.is( \":visible\" ) && !inst.input.is( \":disabled\" ) && !inst.input.is( \":focus\" );\r\n\t},\r\n\r\n\t/* Check positioning to remain on screen. */\r\n\t_checkOffset: function( inst, offset, isFixed ) {\r\n\t\tvar dpWidth = inst.dpDiv.outerWidth(),\r\n\t\t\tdpHeight = inst.dpDiv.outerHeight(),\r\n\t\t\tinputWidth = inst.input ? inst.input.outerWidth() : 0,\r\n\t\t\tinputHeight = inst.input ? inst.input.outerHeight() : 0,\r\n\t\t\tviewWidth = document.documentElement.clientWidth + ( isFixed ? 0 : $( document ).scrollLeft() ),\r\n\t\t\tviewHeight = document.documentElement.clientHeight + ( isFixed ? 0 : $( document ).scrollTop() );\r\n\r\n\t\toffset.left -= ( this._get( inst, \"isRTL\" ) ? ( dpWidth - inputWidth ) : 0 );\r\n\t\toffset.left -= ( isFixed && offset.left === inst.input.offset().left ) ? $( document ).scrollLeft() : 0;\r\n\t\toffset.top -= ( isFixed && offset.top === ( inst.input.offset().top + inputHeight ) ) ? $( document ).scrollTop() : 0;\r\n\r\n\t\t// Now check if datepicker is showing outside window viewport - move to a better place if so.\r\n\t\toffset.left -= Math.min( offset.left, ( offset.left + dpWidth > viewWidth && viewWidth > dpWidth ) ?\r\n\t\t\tMath.abs( offset.left + dpWidth - viewWidth ) : 0 );\r\n\t\toffset.top -= Math.min( offset.top, ( offset.top + dpHeight > viewHeight && viewHeight > dpHeight ) ?\r\n\t\t\tMath.abs( dpHeight + inputHeight ) : 0 );\r\n\r\n\t\treturn offset;\r\n\t},\r\n\r\n\t/* Find an object's position on the screen. */\r\n\t_findPos: function( obj ) {\r\n\t\tvar position,\r\n\t\t\tinst = this._getInst( obj ),\r\n\t\t\tisRTL = this._get( inst, \"isRTL\" );\r\n\r\n\t\twhile ( obj && ( obj.type === \"hidden\" || obj.nodeType !== 1 || $.expr.filters.hidden( obj ) ) ) {\r\n\t\t\tobj = obj[ isRTL ? \"previousSibling\" : \"nextSibling\" ];\r\n\t\t}\r\n\r\n\t\tposition = $( obj ).offset();\r\n\t\treturn [ position.left, position.top ];\r\n\t},\r\n\r\n\t/* Hide the date picker from view.\r\n\t * @param  input  element - the input field attached to the date picker\r\n\t */\r\n\t_hideDatepicker: function( input ) {\r\n\t\tvar showAnim, duration, postProcess, onClose,\r\n\t\t\tinst = this._curInst;\r\n\r\n\t\tif ( !inst || ( input && inst !== $.data( input, \"datepicker\" ) ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( this._datepickerShowing ) {\r\n\t\t\tshowAnim = this._get( inst, \"showAnim\" );\r\n\t\t\tduration = this._get( inst, \"duration\" );\r\n\t\t\tpostProcess = function() {\r\n\t\t\t\t$.datepicker._tidyDialog( inst );\r\n\t\t\t};\r\n\r\n\t\t\t// DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed\r\n\t\t\tif ( $.effects && ( $.effects.effect[ showAnim ] || $.effects[ showAnim ] ) ) {\r\n\t\t\t\tinst.dpDiv.hide( showAnim, $.datepicker._get( inst, \"showOptions\" ), duration, postProcess );\r\n\t\t\t} else {\r\n\t\t\t\tinst.dpDiv[ ( showAnim === \"slideDown\" ? \"slideUp\" :\r\n\t\t\t\t\t( showAnim === \"fadeIn\" ? \"fadeOut\" : \"hide\" ) ) ]( ( showAnim ? duration : null ), postProcess );\r\n\t\t\t}\r\n\r\n\t\t\tif ( !showAnim ) {\r\n\t\t\t\tpostProcess();\r\n\t\t\t}\r\n\t\t\tthis._datepickerShowing = false;\r\n\r\n\t\t\tonClose = this._get( inst, \"onClose\" );\r\n\t\t\tif ( onClose ) {\r\n\t\t\t\tonClose.apply( ( inst.input ? inst.input[ 0 ] : null ), [ ( inst.input ? inst.input.val() : \"\" ), inst ] );\r\n\t\t\t}\r\n\r\n\t\t\tthis._lastInput = null;\r\n\t\t\tif ( this._inDialog ) {\r\n\t\t\t\tthis._dialogInput.css( { position: \"absolute\", left: \"0\", top: \"-100px\" } );\r\n\t\t\t\tif ( $.blockUI ) {\r\n\t\t\t\t\t$.unblockUI();\r\n\t\t\t\t\t$( \"body\" ).append( this.dpDiv );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._inDialog = false;\r\n\t\t}\r\n\t},\r\n\r\n\t/* Tidy up after a dialog display. */\r\n\t_tidyDialog: function( inst ) {\r\n\t\tinst.dpDiv.removeClass( this._dialogClass ).off( \".ui-datepicker-calendar\" );\r\n\t},\r\n\r\n\t/* Close date picker if clicked elsewhere. */\r\n\t_checkExternalClick: function( event ) {\r\n\t\tif ( !$.datepicker._curInst ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar $target = $( event.target ),\r\n\t\t\tinst = $.datepicker._getInst( $target[ 0 ] );\r\n\r\n\t\tif ( ( ( $target[ 0 ].id !== $.datepicker._mainDivId &&\r\n\t\t\t\t$target.parents( \"#\" + $.datepicker._mainDivId ).length === 0 &&\r\n\t\t\t\t!$target.hasClass( $.datepicker.markerClassName ) &&\r\n\t\t\t\t!$target.closest( \".\" + $.datepicker._triggerClass ).length &&\r\n\t\t\t\t$.datepicker._datepickerShowing && !( $.datepicker._inDialog && $.blockUI ) ) ) ||\r\n\t\t\t( $target.hasClass( $.datepicker.markerClassName ) && $.datepicker._curInst !== inst ) ) {\r\n\t\t\t\t$.datepicker._hideDatepicker();\r\n\t\t}\r\n\t},\r\n\r\n\t/* Adjust one of the date sub-fields. */\r\n\t_adjustDate: function( id, offset, period ) {\r\n\t\tvar target = $( id ),\r\n\t\t\tinst = this._getInst( target[ 0 ] );\r\n\r\n\t\tif ( this._isDisabledDatepicker( target[ 0 ] ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._adjustInstDate( inst, offset +\r\n\t\t\t( period === \"M\" ? this._get( inst, \"showCurrentAtPos\" ) : 0 ), // undo positioning\r\n\t\t\tperiod );\r\n\t\tthis._updateDatepicker( inst );\r\n\t},\r\n\r\n\t/* Action for current link. */\r\n\t_gotoToday: function( id ) {\r\n\t\tvar date,\r\n\t\t\ttarget = $( id ),\r\n\t\t\tinst = this._getInst( target[ 0 ] );\r\n\r\n\t\tif ( this._get( inst, \"gotoCurrent\" ) && inst.currentDay ) {\r\n\t\t\tinst.selectedDay = inst.currentDay;\r\n\t\t\tinst.drawMonth = inst.selectedMonth = inst.currentMonth;\r\n\t\t\tinst.drawYear = inst.selectedYear = inst.currentYear;\r\n\t\t} else {\r\n\t\t\tdate = new Date();\r\n\t\t\tinst.selectedDay = date.getDate();\r\n\t\t\tinst.drawMonth = inst.selectedMonth = date.getMonth();\r\n\t\t\tinst.drawYear = inst.selectedYear = date.getFullYear();\r\n\t\t}\r\n\t\tthis._notifyChange( inst );\r\n\t\tthis._adjustDate( target );\r\n\t},\r\n\r\n\t/* Action for selecting a new month/year. */\r\n\t_selectMonthYear: function( id, select, period ) {\r\n\t\tvar target = $( id ),\r\n\t\t\tinst = this._getInst( target[ 0 ] );\r\n\r\n\t\tinst[ \"selected\" + ( period === \"M\" ? \"Month\" : \"Year\" ) ] =\r\n\t\tinst[ \"draw\" + ( period === \"M\" ? \"Month\" : \"Year\" ) ] =\r\n\t\t\tparseInt( select.options[ select.selectedIndex ].value, 10 );\r\n\r\n\t\tthis._notifyChange( inst );\r\n\t\tthis._adjustDate( target );\r\n\t},\r\n\r\n\t/* Action for selecting a day. */\r\n\t_selectDay: function( id, month, year, td ) {\r\n\t\tvar inst,\r\n\t\t\ttarget = $( id );\r\n\r\n\t\tif ( $( td ).hasClass( this._unselectableClass ) || this._isDisabledDatepicker( target[ 0 ] ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tinst = this._getInst( target[ 0 ] );\r\n\t\tinst.selectedDay = inst.currentDay = $( \"a\", td ).html();\r\n\t\tinst.selectedMonth = inst.currentMonth = month;\r\n\t\tinst.selectedYear = inst.currentYear = year;\r\n\t\tthis._selectDate( id, this._formatDate( inst,\r\n\t\t\tinst.currentDay, inst.currentMonth, inst.currentYear ) );\r\n\t},\r\n\r\n\t/* Erase the input field and hide the date picker. */\r\n\t_clearDate: function( id ) {\r\n\t\tvar target = $( id );\r\n\t\tthis._selectDate( target, \"\" );\r\n\t},\r\n\r\n\t/* Update the input field with the selected date. */\r\n\t_selectDate: function( id, dateStr ) {\r\n\t\tvar onSelect,\r\n\t\t\ttarget = $( id ),\r\n\t\t\tinst = this._getInst( target[ 0 ] );\r\n\r\n\t\tdateStr = ( dateStr != null ? dateStr : this._formatDate( inst ) );\r\n\t\tif ( inst.input ) {\r\n\t\t\tinst.input.val( dateStr );\r\n\t\t}\r\n\t\tthis._updateAlternate( inst );\r\n\r\n\t\tonSelect = this._get( inst, \"onSelect\" );\r\n\t\tif ( onSelect ) {\r\n\t\t\tonSelect.apply( ( inst.input ? inst.input[ 0 ] : null ), [ dateStr, inst ] );  // trigger custom callback\r\n\t\t} else if ( inst.input ) {\r\n\t\t\tinst.input.trigger( \"change\" ); // fire the change event\r\n\t\t}\r\n\r\n\t\tif ( inst.inline ) {\r\n\t\t\tthis._updateDatepicker( inst );\r\n\t\t} else {\r\n\t\t\tthis._hideDatepicker();\r\n\t\t\tthis._lastInput = inst.input[ 0 ];\r\n\t\t\tif ( typeof( inst.input[ 0 ] ) !== \"object\" ) {\r\n\t\t\t\tinst.input.trigger( \"focus\" ); // restore focus\r\n\t\t\t}\r\n\t\t\tthis._lastInput = null;\r\n\t\t}\r\n\t},\r\n\r\n\t/* Update any alternate field to synchronise with the main field. */\r\n\t_updateAlternate: function( inst ) {\r\n\t\tvar altFormat, date, dateStr,\r\n\t\t\taltField = this._get( inst, \"altField\" );\r\n\r\n\t\tif ( altField ) { // update alternate field too\r\n\t\t\taltFormat = this._get( inst, \"altFormat\" ) || this._get( inst, \"dateFormat\" );\r\n\t\t\tdate = this._getDate( inst );\r\n\t\t\tdateStr = this.formatDate( altFormat, date, this._getFormatConfig( inst ) );\r\n\t\t\t$( altField ).val( dateStr );\r\n\t\t}\r\n\t},\r\n\r\n\t/* Set as beforeShowDay function to prevent selection of weekends.\r\n\t * @param  date  Date - the date to customise\r\n\t * @return [boolean, string] - is this date selectable?, what is its CSS class?\r\n\t */\r\n\tnoWeekends: function( date ) {\r\n\t\tvar day = date.getDay();\r\n\t\treturn [ ( day > 0 && day < 6 ), \"\" ];\r\n\t},\r\n\r\n\t/* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.\r\n\t * @param  date  Date - the date to get the week for\r\n\t * @return  number - the number of the week within the year that contains this date\r\n\t */\r\n\tiso8601Week: function( date ) {\r\n\t\tvar time,\r\n\t\t\tcheckDate = new Date( date.getTime() );\r\n\r\n\t\t// Find Thursday of this week starting on Monday\r\n\t\tcheckDate.setDate( checkDate.getDate() + 4 - ( checkDate.getDay() || 7 ) );\r\n\r\n\t\ttime = checkDate.getTime();\r\n\t\tcheckDate.setMonth( 0 ); // Compare with Jan 1\r\n\t\tcheckDate.setDate( 1 );\r\n\t\treturn Math.floor( Math.round( ( time - checkDate ) / 86400000 ) / 7 ) + 1;\r\n\t},\r\n\r\n\t/* Parse a string value into a date object.\r\n\t * See formatDate below for the possible formats.\r\n\t *\r\n\t * @param  format string - the expected format of the date\r\n\t * @param  value string - the date in the above format\r\n\t * @param  settings Object - attributes include:\r\n\t *\t\t\t\t\tshortYearCutoff  number - the cutoff year for determining the century (optional)\r\n\t *\t\t\t\t\tdayNamesShort\tstring[7] - abbreviated names of the days from Sunday (optional)\r\n\t *\t\t\t\t\tdayNames\t\tstring[7] - names of the days from Sunday (optional)\r\n\t *\t\t\t\t\tmonthNamesShort string[12] - abbreviated names of the months (optional)\r\n\t *\t\t\t\t\tmonthNames\t\tstring[12] - names of the months (optional)\r\n\t * @return  Date - the extracted date value or null if value is blank\r\n\t */\r\n\tparseDate: function( format, value, settings ) {\r\n\t\tif ( format == null || value == null ) {\r\n\t\t\tthrow \"Invalid arguments\";\r\n\t\t}\r\n\r\n\t\tvalue = ( typeof value === \"object\" ? value.toString() : value + \"\" );\r\n\t\tif ( value === \"\" ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar iFormat, dim, extra,\r\n\t\t\tiValue = 0,\r\n\t\t\tshortYearCutoffTemp = ( settings ? settings.shortYearCutoff : null ) || this._defaults.shortYearCutoff,\r\n\t\t\tshortYearCutoff = ( typeof shortYearCutoffTemp !== \"string\" ? shortYearCutoffTemp :\r\n\t\t\t\tnew Date().getFullYear() % 100 + parseInt( shortYearCutoffTemp, 10 ) ),\r\n\t\t\tdayNamesShort = ( settings ? settings.dayNamesShort : null ) || this._defaults.dayNamesShort,\r\n\t\t\tdayNames = ( settings ? settings.dayNames : null ) || this._defaults.dayNames,\r\n\t\t\tmonthNamesShort = ( settings ? settings.monthNamesShort : null ) || this._defaults.monthNamesShort,\r\n\t\t\tmonthNames = ( settings ? settings.monthNames : null ) || this._defaults.monthNames,\r\n\t\t\tyear = -1,\r\n\t\t\tmonth = -1,\r\n\t\t\tday = -1,\r\n\t\t\tdoy = -1,\r\n\t\t\tliteral = false,\r\n\t\t\tdate,\r\n\r\n\t\t\t// Check whether a format character is doubled\r\n\t\t\tlookAhead = function( match ) {\r\n\t\t\t\tvar matches = ( iFormat + 1 < format.length && format.charAt( iFormat + 1 ) === match );\r\n\t\t\t\tif ( matches ) {\r\n\t\t\t\t\tiFormat++;\r\n\t\t\t\t}\r\n\t\t\t\treturn matches;\r\n\t\t\t},\r\n\r\n\t\t\t// Extract a number from the string value\r\n\t\t\tgetNumber = function( match ) {\r\n\t\t\t\tvar isDoubled = lookAhead( match ),\r\n\t\t\t\t\tsize = ( match === \"@\" ? 14 : ( match === \"!\" ? 20 :\r\n\t\t\t\t\t( match === \"y\" && isDoubled ? 4 : ( match === \"o\" ? 3 : 2 ) ) ) ),\r\n\t\t\t\t\tminSize = ( match === \"y\" ? size : 1 ),\r\n\t\t\t\t\tdigits = new RegExp( \"^\\\\d{\" + minSize + \",\" + size + \"}\" ),\r\n\t\t\t\t\tnum = value.substring( iValue ).match( digits );\r\n\t\t\t\tif ( !num ) {\r\n\t\t\t\t\tthrow \"Missing number at position \" + iValue;\r\n\t\t\t\t}\r\n\t\t\t\tiValue += num[ 0 ].length;\r\n\t\t\t\treturn parseInt( num[ 0 ], 10 );\r\n\t\t\t},\r\n\r\n\t\t\t// Extract a name from the string value and convert to an index\r\n\t\t\tgetName = function( match, shortNames, longNames ) {\r\n\t\t\t\tvar index = -1,\r\n\t\t\t\t\tnames = $.map( lookAhead( match ) ? longNames : shortNames, function( v, k ) {\r\n\t\t\t\t\t\treturn [ [ k, v ] ];\r\n\t\t\t\t\t} ).sort( function( a, b ) {\r\n\t\t\t\t\t\treturn -( a[ 1 ].length - b[ 1 ].length );\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t$.each( names, function( i, pair ) {\r\n\t\t\t\t\tvar name = pair[ 1 ];\r\n\t\t\t\t\tif ( value.substr( iValue, name.length ).toLowerCase() === name.toLowerCase() ) {\r\n\t\t\t\t\t\tindex = pair[ 0 ];\r\n\t\t\t\t\t\tiValue += name.length;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t\tif ( index !== -1 ) {\r\n\t\t\t\t\treturn index + 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow \"Unknown name at position \" + iValue;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// Confirm that a literal character matches the string value\r\n\t\t\tcheckLiteral = function() {\r\n\t\t\t\tif ( value.charAt( iValue ) !== format.charAt( iFormat ) ) {\r\n\t\t\t\t\tthrow \"Unexpected literal at position \" + iValue;\r\n\t\t\t\t}\r\n\t\t\t\tiValue++;\r\n\t\t\t};\r\n\r\n\t\tfor ( iFormat = 0; iFormat < format.length; iFormat++ ) {\r\n\t\t\tif ( literal ) {\r\n\t\t\t\tif ( format.charAt( iFormat ) === \"'\" && !lookAhead( \"'\" ) ) {\r\n\t\t\t\t\tliteral = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcheckLiteral();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch ( format.charAt( iFormat ) ) {\r\n\t\t\t\t\tcase \"d\":\r\n\t\t\t\t\t\tday = getNumber( \"d\" );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"D\":\r\n\t\t\t\t\t\tgetName( \"D\", dayNamesShort, dayNames );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"o\":\r\n\t\t\t\t\t\tdoy = getNumber( \"o\" );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"m\":\r\n\t\t\t\t\t\tmonth = getNumber( \"m\" );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"M\":\r\n\t\t\t\t\t\tmonth = getName( \"M\", monthNamesShort, monthNames );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"y\":\r\n\t\t\t\t\t\tyear = getNumber( \"y\" );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"@\":\r\n\t\t\t\t\t\tdate = new Date( getNumber( \"@\" ) );\r\n\t\t\t\t\t\tyear = date.getFullYear();\r\n\t\t\t\t\t\tmonth = date.getMonth() + 1;\r\n\t\t\t\t\t\tday = date.getDate();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"!\":\r\n\t\t\t\t\t\tdate = new Date( ( getNumber( \"!\" ) - this._ticksTo1970 ) / 10000 );\r\n\t\t\t\t\t\tyear = date.getFullYear();\r\n\t\t\t\t\t\tmonth = date.getMonth() + 1;\r\n\t\t\t\t\t\tday = date.getDate();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"'\":\r\n\t\t\t\t\t\tif ( lookAhead( \"'\" ) ) {\r\n\t\t\t\t\t\t\tcheckLiteral();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tliteral = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tcheckLiteral();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( iValue < value.length ) {\r\n\t\t\textra = value.substr( iValue );\r\n\t\t\tif ( !/^\\s+/.test( extra ) ) {\r\n\t\t\t\tthrow \"Extra/unparsed characters found in date: \" + extra;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( year === -1 ) {\r\n\t\t\tyear = new Date().getFullYear();\r\n\t\t} else if ( year < 100 ) {\r\n\t\t\tyear += new Date().getFullYear() - new Date().getFullYear() % 100 +\r\n\t\t\t\t( year <= shortYearCutoff ? 0 : -100 );\r\n\t\t}\r\n\r\n\t\tif ( doy > -1 ) {\r\n\t\t\tmonth = 1;\r\n\t\t\tday = doy;\r\n\t\t\tdo {\r\n\t\t\t\tdim = this._getDaysInMonth( year, month - 1 );\r\n\t\t\t\tif ( day <= dim ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tmonth++;\r\n\t\t\t\tday -= dim;\r\n\t\t\t} while ( true );\r\n\t\t}\r\n\r\n\t\tdate = this._daylightSavingAdjust( new Date( year, month - 1, day ) );\r\n\t\tif ( date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day ) {\r\n\t\t\tthrow \"Invalid date\"; // E.g. 31/02/00\r\n\t\t}\r\n\t\treturn date;\r\n\t},\r\n\r\n\t/* Standard date formats. */\r\n\tATOM: \"yy-mm-dd\", // RFC 3339 (ISO 8601)\r\n\tCOOKIE: \"D, dd M yy\",\r\n\tISO_8601: \"yy-mm-dd\",\r\n\tRFC_822: \"D, d M y\",\r\n\tRFC_850: \"DD, dd-M-y\",\r\n\tRFC_1036: \"D, d M y\",\r\n\tRFC_1123: \"D, d M yy\",\r\n\tRFC_2822: \"D, d M yy\",\r\n\tRSS: \"D, d M y\", // RFC 822\r\n\tTICKS: \"!\",\r\n\tTIMESTAMP: \"@\",\r\n\tW3C: \"yy-mm-dd\", // ISO 8601\r\n\r\n\t_ticksTo1970: ( ( ( 1970 - 1 ) * 365 + Math.floor( 1970 / 4 ) - Math.floor( 1970 / 100 ) +\r\n\t\tMath.floor( 1970 / 400 ) ) * 24 * 60 * 60 * 10000000 ),\r\n\r\n\t/* Format a date object into a string value.\r\n\t * The format can be combinations of the following:\r\n\t * d  - day of month (no leading zero)\r\n\t * dd - day of month (two digit)\r\n\t * o  - day of year (no leading zeros)\r\n\t * oo - day of year (three digit)\r\n\t * D  - day name short\r\n\t * DD - day name long\r\n\t * m  - month of year (no leading zero)\r\n\t * mm - month of year (two digit)\r\n\t * M  - month name short\r\n\t * MM - month name long\r\n\t * y  - year (two digit)\r\n\t * yy - year (four digit)\r\n\t * @ - Unix timestamp (ms since 01/01/1970)\r\n\t * ! - Windows ticks (100ns since 01/01/0001)\r\n\t * \"...\" - literal text\r\n\t * '' - single quote\r\n\t *\r\n\t * @param  format string - the desired format of the date\r\n\t * @param  date Date - the date value to format\r\n\t * @param  settings Object - attributes include:\r\n\t *\t\t\t\t\tdayNamesShort\tstring[7] - abbreviated names of the days from Sunday (optional)\r\n\t *\t\t\t\t\tdayNames\t\tstring[7] - names of the days from Sunday (optional)\r\n\t *\t\t\t\t\tmonthNamesShort string[12] - abbreviated names of the months (optional)\r\n\t *\t\t\t\t\tmonthNames\t\tstring[12] - names of the months (optional)\r\n\t * @return  string - the date in the above format\r\n\t */\r\n\tformatDate: function( format, date, settings ) {\r\n\t\tif ( !date ) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\tvar iFormat,\r\n\t\t\tdayNamesShort = ( settings ? settings.dayNamesShort : null ) || this._defaults.dayNamesShort,\r\n\t\t\tdayNames = ( settings ? settings.dayNames : null ) || this._defaults.dayNames,\r\n\t\t\tmonthNamesShort = ( settings ? settings.monthNamesShort : null ) || this._defaults.monthNamesShort,\r\n\t\t\tmonthNames = ( settings ? settings.monthNames : null ) || this._defaults.monthNames,\r\n\r\n\t\t\t// Check whether a format character is doubled\r\n\t\t\tlookAhead = function( match ) {\r\n\t\t\t\tvar matches = ( iFormat + 1 < format.length && format.charAt( iFormat + 1 ) === match );\r\n\t\t\t\tif ( matches ) {\r\n\t\t\t\t\tiFormat++;\r\n\t\t\t\t}\r\n\t\t\t\treturn matches;\r\n\t\t\t},\r\n\r\n\t\t\t// Format a number, with leading zero if necessary\r\n\t\t\tformatNumber = function( match, value, len ) {\r\n\t\t\t\tvar num = \"\" + value;\r\n\t\t\t\tif ( lookAhead( match ) ) {\r\n\t\t\t\t\twhile ( num.length < len ) {\r\n\t\t\t\t\t\tnum = \"0\" + num;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn num;\r\n\t\t\t},\r\n\r\n\t\t\t// Format a name, short or long as requested\r\n\t\t\tformatName = function( match, value, shortNames, longNames ) {\r\n\t\t\t\treturn ( lookAhead( match ) ? longNames[ value ] : shortNames[ value ] );\r\n\t\t\t},\r\n\t\t\toutput = \"\",\r\n\t\t\tliteral = false;\r\n\r\n\t\tif ( date ) {\r\n\t\t\tfor ( iFormat = 0; iFormat < format.length; iFormat++ ) {\r\n\t\t\t\tif ( literal ) {\r\n\t\t\t\t\tif ( format.charAt( iFormat ) === \"'\" && !lookAhead( \"'\" ) ) {\r\n\t\t\t\t\t\tliteral = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toutput += format.charAt( iFormat );\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswitch ( format.charAt( iFormat ) ) {\r\n\t\t\t\t\t\tcase \"d\":\r\n\t\t\t\t\t\t\toutput += formatNumber( \"d\", date.getDate(), 2 );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"D\":\r\n\t\t\t\t\t\t\toutput += formatName( \"D\", date.getDay(), dayNamesShort, dayNames );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"o\":\r\n\t\t\t\t\t\t\toutput += formatNumber( \"o\",\r\n\t\t\t\t\t\t\t\tMath.round( ( new Date( date.getFullYear(), date.getMonth(), date.getDate() ).getTime() - new Date( date.getFullYear(), 0, 0 ).getTime() ) / 86400000 ), 3 );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"m\":\r\n\t\t\t\t\t\t\toutput += formatNumber( \"m\", date.getMonth() + 1, 2 );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"M\":\r\n\t\t\t\t\t\t\toutput += formatName( \"M\", date.getMonth(), monthNamesShort, monthNames );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"y\":\r\n\t\t\t\t\t\t\toutput += ( lookAhead( \"y\" ) ? date.getFullYear() :\r\n\t\t\t\t\t\t\t\t( date.getFullYear() % 100 < 10 ? \"0\" : \"\" ) + date.getFullYear() % 100 );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"@\":\r\n\t\t\t\t\t\t\toutput += date.getTime();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"!\":\r\n\t\t\t\t\t\t\toutput += date.getTime() * 10000 + this._ticksTo1970;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"'\":\r\n\t\t\t\t\t\t\tif ( lookAhead( \"'\" ) ) {\r\n\t\t\t\t\t\t\t\toutput += \"'\";\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tliteral = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\toutput += format.charAt( iFormat );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn output;\r\n\t},\r\n\r\n\t/* Extract all possible characters from the date format. */\r\n\t_possibleChars: function( format ) {\r\n\t\tvar iFormat,\r\n\t\t\tchars = \"\",\r\n\t\t\tliteral = false,\r\n\r\n\t\t\t// Check whether a format character is doubled\r\n\t\t\tlookAhead = function( match ) {\r\n\t\t\t\tvar matches = ( iFormat + 1 < format.length && format.charAt( iFormat + 1 ) === match );\r\n\t\t\t\tif ( matches ) {\r\n\t\t\t\t\tiFormat++;\r\n\t\t\t\t}\r\n\t\t\t\treturn matches;\r\n\t\t\t};\r\n\r\n\t\tfor ( iFormat = 0; iFormat < format.length; iFormat++ ) {\r\n\t\t\tif ( literal ) {\r\n\t\t\t\tif ( format.charAt( iFormat ) === \"'\" && !lookAhead( \"'\" ) ) {\r\n\t\t\t\t\tliteral = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchars += format.charAt( iFormat );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch ( format.charAt( iFormat ) ) {\r\n\t\t\t\t\tcase \"d\": case \"m\": case \"y\": case \"@\":\r\n\t\t\t\t\t\tchars += \"0123456789\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"D\": case \"M\":\r\n\t\t\t\t\t\treturn null; // Accept anything\r\n\t\t\t\t\tcase \"'\":\r\n\t\t\t\t\t\tif ( lookAhead( \"'\" ) ) {\r\n\t\t\t\t\t\t\tchars += \"'\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tliteral = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tchars += format.charAt( iFormat );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn chars;\r\n\t},\r\n\r\n\t/* Get a setting value, defaulting if necessary. */\r\n\t_get: function( inst, name ) {\r\n\t\treturn inst.settings[ name ] !== undefined ?\r\n\t\t\tinst.settings[ name ] : this._defaults[ name ];\r\n\t},\r\n\r\n\t/* Parse existing date and initialise date picker. */\r\n\t_setDateFromField: function( inst, noDefault ) {\r\n\t\tif ( inst.input.val() === inst.lastVal ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar dateFormat = this._get( inst, \"dateFormat\" ),\r\n\t\t\tdates = inst.lastVal = inst.input ? inst.input.val() : null,\r\n\t\t\tdefaultDate = this._getDefaultDate( inst ),\r\n\t\t\tdate = defaultDate,\r\n\t\t\tsettings = this._getFormatConfig( inst );\r\n\r\n\t\ttry {\r\n\t\t\tdate = this.parseDate( dateFormat, dates, settings ) || defaultDate;\r\n\t\t} catch ( event ) {\r\n\t\t\tdates = ( noDefault ? \"\" : dates );\r\n\t\t}\r\n\t\tinst.selectedDay = date.getDate();\r\n\t\tinst.drawMonth = inst.selectedMonth = date.getMonth();\r\n\t\tinst.drawYear = inst.selectedYear = date.getFullYear();\r\n\t\tinst.currentDay = ( dates ? date.getDate() : 0 );\r\n\t\tinst.currentMonth = ( dates ? date.getMonth() : 0 );\r\n\t\tinst.currentYear = ( dates ? date.getFullYear() : 0 );\r\n\t\tthis._adjustInstDate( inst );\r\n\t},\r\n\r\n\t/* Retrieve the default date shown on opening. */\r\n\t_getDefaultDate: function( inst ) {\r\n\t\treturn this._restrictMinMax( inst,\r\n\t\t\tthis._determineDate( inst, this._get( inst, \"defaultDate\" ), new Date() ) );\r\n\t},\r\n\r\n\t/* A date may be specified as an exact value or a relative one. */\r\n\t_determineDate: function( inst, date, defaultDate ) {\r\n\t\tvar offsetNumeric = function( offset ) {\r\n\t\t\t\tvar date = new Date();\r\n\t\t\t\tdate.setDate( date.getDate() + offset );\r\n\t\t\t\treturn date;\r\n\t\t\t},\r\n\t\t\toffsetString = function( offset ) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn $.datepicker.parseDate( $.datepicker._get( inst, \"dateFormat\" ),\r\n\t\t\t\t\t\toffset, $.datepicker._getFormatConfig( inst ) );\r\n\t\t\t\t}\r\n\t\t\t\tcatch ( e ) {\r\n\r\n\t\t\t\t\t// Ignore\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar date = ( offset.toLowerCase().match( /^c/ ) ?\r\n\t\t\t\t\t$.datepicker._getDate( inst ) : null ) || new Date(),\r\n\t\t\t\t\tyear = date.getFullYear(),\r\n\t\t\t\t\tmonth = date.getMonth(),\r\n\t\t\t\t\tday = date.getDate(),\r\n\t\t\t\t\tpattern = /([+\\-]?[0-9]+)\\s*(d|D|w|W|m|M|y|Y)?/g,\r\n\t\t\t\t\tmatches = pattern.exec( offset );\r\n\r\n\t\t\t\twhile ( matches ) {\r\n\t\t\t\t\tswitch ( matches[ 2 ] || \"d\" ) {\r\n\t\t\t\t\t\tcase \"d\" : case \"D\" :\r\n\t\t\t\t\t\t\tday += parseInt( matches[ 1 ], 10 ); break;\r\n\t\t\t\t\t\tcase \"w\" : case \"W\" :\r\n\t\t\t\t\t\t\tday += parseInt( matches[ 1 ], 10 ) * 7; break;\r\n\t\t\t\t\t\tcase \"m\" : case \"M\" :\r\n\t\t\t\t\t\t\tmonth += parseInt( matches[ 1 ], 10 );\r\n\t\t\t\t\t\t\tday = Math.min( day, $.datepicker._getDaysInMonth( year, month ) );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"y\": case \"Y\" :\r\n\t\t\t\t\t\t\tyear += parseInt( matches[ 1 ], 10 );\r\n\t\t\t\t\t\t\tday = Math.min( day, $.datepicker._getDaysInMonth( year, month ) );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmatches = pattern.exec( offset );\r\n\t\t\t\t}\r\n\t\t\t\treturn new Date( year, month, day );\r\n\t\t\t},\r\n\t\t\tnewDate = ( date == null || date === \"\" ? defaultDate : ( typeof date === \"string\" ? offsetString( date ) :\r\n\t\t\t\t( typeof date === \"number\" ? ( isNaN( date ) ? defaultDate : offsetNumeric( date ) ) : new Date( date.getTime() ) ) ) );\r\n\r\n\t\tnewDate = ( newDate && newDate.toString() === \"Invalid Date\" ? defaultDate : newDate );\r\n\t\tif ( newDate ) {\r\n\t\t\tnewDate.setHours( 0 );\r\n\t\t\tnewDate.setMinutes( 0 );\r\n\t\t\tnewDate.setSeconds( 0 );\r\n\t\t\tnewDate.setMilliseconds( 0 );\r\n\t\t}\r\n\t\treturn this._daylightSavingAdjust( newDate );\r\n\t},\r\n\r\n\t/* Handle switch to/from daylight saving.\r\n\t * Hours may be non-zero on daylight saving cut-over:\r\n\t * > 12 when midnight changeover, but then cannot generate\r\n\t * midnight datetime, so jump to 1AM, otherwise reset.\r\n\t * @param  date  (Date) the date to check\r\n\t * @return  (Date) the corrected date\r\n\t */\r\n\t_daylightSavingAdjust: function( date ) {\r\n\t\tif ( !date ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tdate.setHours( date.getHours() > 12 ? date.getHours() + 2 : 0 );\r\n\t\treturn date;\r\n\t},\r\n\r\n\t/* Set the date(s) directly. */\r\n\t_setDate: function( inst, date, noChange ) {\r\n\t\tvar clear = !date,\r\n\t\t\torigMonth = inst.selectedMonth,\r\n\t\t\torigYear = inst.selectedYear,\r\n\t\t\tnewDate = this._restrictMinMax( inst, this._determineDate( inst, date, new Date() ) );\r\n\r\n\t\tinst.selectedDay = inst.currentDay = newDate.getDate();\r\n\t\tinst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();\r\n\t\tinst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();\r\n\t\tif ( ( origMonth !== inst.selectedMonth || origYear !== inst.selectedYear ) && !noChange ) {\r\n\t\t\tthis._notifyChange( inst );\r\n\t\t}\r\n\t\tthis._adjustInstDate( inst );\r\n\t\tif ( inst.input ) {\r\n\t\t\tinst.input.val( clear ? \"\" : this._formatDate( inst ) );\r\n\t\t}\r\n\t},\r\n\r\n\t/* Retrieve the date(s) directly. */\r\n\t_getDate: function( inst ) {\r\n\t\tvar startDate = ( !inst.currentYear || ( inst.input && inst.input.val() === \"\" ) ? null :\r\n\t\t\tthis._daylightSavingAdjust( new Date(\r\n\t\t\tinst.currentYear, inst.currentMonth, inst.currentDay ) ) );\r\n\t\t\treturn startDate;\r\n\t},\r\n\r\n\t/* Attach the onxxx handlers.  These are declared statically so\r\n\t * they work with static code transformers like Caja.\r\n\t */\r\n\t_attachHandlers: function( inst ) {\r\n\t\tvar stepMonths = this._get( inst, \"stepMonths\" ),\r\n\t\t\tid = \"#\" + inst.id.replace( /\\\\\\\\/g, \"\\\\\" );\r\n\t\tinst.dpDiv.find( \"[data-handler]\" ).map( function() {\r\n\t\t\tvar handler = {\r\n\t\t\t\tprev: function() {\r\n\t\t\t\t\t$.datepicker._adjustDate( id, -stepMonths, \"M\" );\r\n\t\t\t\t},\r\n\t\t\t\tnext: function() {\r\n\t\t\t\t\t$.datepicker._adjustDate( id, +stepMonths, \"M\" );\r\n\t\t\t\t},\r\n\t\t\t\thide: function() {\r\n\t\t\t\t\t$.datepicker._hideDatepicker();\r\n\t\t\t\t},\r\n\t\t\t\ttoday: function() {\r\n\t\t\t\t\t$.datepicker._gotoToday( id );\r\n\t\t\t\t},\r\n\t\t\t\tselectDay: function() {\r\n\t\t\t\t\t$.datepicker._selectDay( id, +this.getAttribute( \"data-month\" ), +this.getAttribute( \"data-year\" ), this );\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\t\t\t\tselectMonth: function() {\r\n\t\t\t\t\t$.datepicker._selectMonthYear( id, this, \"M\" );\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\t\t\t\tselectYear: function() {\r\n\t\t\t\t\t$.datepicker._selectMonthYear( id, this, \"Y\" );\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t$( this ).on( this.getAttribute( \"data-event\" ), handler[ this.getAttribute( \"data-handler\" ) ] );\r\n\t\t} );\r\n\t},\r\n\r\n\t/* Generate the HTML for the current state of the date picker. */\r\n\t_generateHTML: function( inst ) {\r\n\t\tvar maxDraw, prevText, prev, nextText, next, currentText, gotoDate,\r\n\t\t\tcontrols, buttonPanel, firstDay, showWeek, dayNames, dayNamesMin,\r\n\t\t\tmonthNames, monthNamesShort, beforeShowDay, showOtherMonths,\r\n\t\t\tselectOtherMonths, defaultDate, html, dow, row, group, col, selectedDate,\r\n\t\t\tcornerClass, calender, thead, day, daysInMonth, leadDays, curRows, numRows,\r\n\t\t\tprintDate, dRow, tbody, daySettings, otherMonth, unselectable,\r\n\t\t\ttempDate = new Date(),\r\n\t\t\ttoday = this._daylightSavingAdjust(\r\n\t\t\t\tnew Date( tempDate.getFullYear(), tempDate.getMonth(), tempDate.getDate() ) ), // clear time\r\n\t\t\tisRTL = this._get( inst, \"isRTL\" ),\r\n\t\t\tshowButtonPanel = this._get( inst, \"showButtonPanel\" ),\r\n\t\t\thideIfNoPrevNext = this._get( inst, \"hideIfNoPrevNext\" ),\r\n\t\t\tnavigationAsDateFormat = this._get( inst, \"navigationAsDateFormat\" ),\r\n\t\t\tnumMonths = this._getNumberOfMonths( inst ),\r\n\t\t\tshowCurrentAtPos = this._get( inst, \"showCurrentAtPos\" ),\r\n\t\t\tstepMonths = this._get( inst, \"stepMonths\" ),\r\n\t\t\tisMultiMonth = ( numMonths[ 0 ] !== 1 || numMonths[ 1 ] !== 1 ),\r\n\t\t\tcurrentDate = this._daylightSavingAdjust( ( !inst.currentDay ? new Date( 9999, 9, 9 ) :\r\n\t\t\t\tnew Date( inst.currentYear, inst.currentMonth, inst.currentDay ) ) ),\r\n\t\t\tminDate = this._getMinMaxDate( inst, \"min\" ),\r\n\t\t\tmaxDate = this._getMinMaxDate( inst, \"max\" ),\r\n\t\t\tdrawMonth = inst.drawMonth - showCurrentAtPos,\r\n\t\t\tdrawYear = inst.drawYear;\r\n\r\n\t\tif ( drawMonth < 0 ) {\r\n\t\t\tdrawMonth += 12;\r\n\t\t\tdrawYear--;\r\n\t\t}\r\n\t\tif ( maxDate ) {\r\n\t\t\tmaxDraw = this._daylightSavingAdjust( new Date( maxDate.getFullYear(),\r\n\t\t\t\tmaxDate.getMonth() - ( numMonths[ 0 ] * numMonths[ 1 ] ) + 1, maxDate.getDate() ) );\r\n\t\t\tmaxDraw = ( minDate && maxDraw < minDate ? minDate : maxDraw );\r\n\t\t\twhile ( this._daylightSavingAdjust( new Date( drawYear, drawMonth, 1 ) ) > maxDraw ) {\r\n\t\t\t\tdrawMonth--;\r\n\t\t\t\tif ( drawMonth < 0 ) {\r\n\t\t\t\t\tdrawMonth = 11;\r\n\t\t\t\t\tdrawYear--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tinst.drawMonth = drawMonth;\r\n\t\tinst.drawYear = drawYear;\r\n\r\n\t\tprevText = this._get( inst, \"prevText\" );\r\n\t\tprevText = ( !navigationAsDateFormat ? prevText : this.formatDate( prevText,\r\n\t\t\tthis._daylightSavingAdjust( new Date( drawYear, drawMonth - stepMonths, 1 ) ),\r\n\t\t\tthis._getFormatConfig( inst ) ) );\r\n\r\n\t\tprev = ( this._canAdjustMonth( inst, -1, drawYear, drawMonth ) ?\r\n\t\t\t\"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click'\" +\r\n\t\t\t\" title='\" + prevText + \"'><span class='ui-icon ui-icon-circle-triangle-\" + ( isRTL ? \"e\" : \"w\" ) + \"'>\" + prevText + \"</span></a>\" :\r\n\t\t\t( hideIfNoPrevNext ? \"\" : \"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='\" + prevText + \"'><span class='ui-icon ui-icon-circle-triangle-\" + ( isRTL ? \"e\" : \"w\" ) + \"'>\" + prevText + \"</span></a>\" ) );\r\n\r\n\t\tnextText = this._get( inst, \"nextText\" );\r\n\t\tnextText = ( !navigationAsDateFormat ? nextText : this.formatDate( nextText,\r\n\t\t\tthis._daylightSavingAdjust( new Date( drawYear, drawMonth + stepMonths, 1 ) ),\r\n\t\t\tthis._getFormatConfig( inst ) ) );\r\n\r\n\t\tnext = ( this._canAdjustMonth( inst, +1, drawYear, drawMonth ) ?\r\n\t\t\t\"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click'\" +\r\n\t\t\t\" title='\" + nextText + \"'><span class='ui-icon ui-icon-circle-triangle-\" + ( isRTL ? \"w\" : \"e\" ) + \"'>\" + nextText + \"</span></a>\" :\r\n\t\t\t( hideIfNoPrevNext ? \"\" : \"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='\" + nextText + \"'><span class='ui-icon ui-icon-circle-triangle-\" + ( isRTL ? \"w\" : \"e\" ) + \"'>\" + nextText + \"</span></a>\" ) );\r\n\r\n\t\tcurrentText = this._get( inst, \"currentText\" );\r\n\t\tgotoDate = ( this._get( inst, \"gotoCurrent\" ) && inst.currentDay ? currentDate : today );\r\n\t\tcurrentText = ( !navigationAsDateFormat ? currentText :\r\n\t\t\tthis.formatDate( currentText, gotoDate, this._getFormatConfig( inst ) ) );\r\n\r\n\t\tcontrols = ( !inst.inline ? \"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>\" +\r\n\t\t\tthis._get( inst, \"closeText\" ) + \"</button>\" : \"\" );\r\n\r\n\t\tbuttonPanel = ( showButtonPanel ) ? \"<div class='ui-datepicker-buttonpane ui-widget-content'>\" + ( isRTL ? controls : \"\" ) +\r\n\t\t\t( this._isInRange( inst, gotoDate ) ? \"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'\" +\r\n\t\t\t\">\" + currentText + \"</button>\" : \"\" ) + ( isRTL ? \"\" : controls ) + \"</div>\" : \"\";\r\n\r\n\t\tfirstDay = parseInt( this._get( inst, \"firstDay\" ), 10 );\r\n\t\tfirstDay = ( isNaN( firstDay ) ? 0 : firstDay );\r\n\r\n\t\tshowWeek = this._get( inst, \"showWeek\" );\r\n\t\tdayNames = this._get( inst, \"dayNames\" );\r\n\t\tdayNamesMin = this._get( inst, \"dayNamesMin\" );\r\n\t\tmonthNames = this._get( inst, \"monthNames\" );\r\n\t\tmonthNamesShort = this._get( inst, \"monthNamesShort\" );\r\n\t\tbeforeShowDay = this._get( inst, \"beforeShowDay\" );\r\n\t\tshowOtherMonths = this._get( inst, \"showOtherMonths\" );\r\n\t\tselectOtherMonths = this._get( inst, \"selectOtherMonths\" );\r\n\t\tdefaultDate = this._getDefaultDate( inst );\r\n\t\thtml = \"\";\r\n\r\n\t\tfor ( row = 0; row < numMonths[ 0 ]; row++ ) {\r\n\t\t\tgroup = \"\";\r\n\t\t\tthis.maxRows = 4;\r\n\t\t\tfor ( col = 0; col < numMonths[ 1 ]; col++ ) {\r\n\t\t\t\tselectedDate = this._daylightSavingAdjust( new Date( drawYear, drawMonth, inst.selectedDay ) );\r\n\t\t\t\tcornerClass = \" ui-corner-all\";\r\n\t\t\t\tcalender = \"\";\r\n\t\t\t\tif ( isMultiMonth ) {\r\n\t\t\t\t\tcalender += \"<div class='ui-datepicker-group\";\r\n\t\t\t\t\tif ( numMonths[ 1 ] > 1 ) {\r\n\t\t\t\t\t\tswitch ( col ) {\r\n\t\t\t\t\t\t\tcase 0: calender += \" ui-datepicker-group-first\";\r\n\t\t\t\t\t\t\t\tcornerClass = \" ui-corner-\" + ( isRTL ? \"right\" : \"left\" ); break;\r\n\t\t\t\t\t\t\tcase numMonths[ 1 ] - 1: calender += \" ui-datepicker-group-last\";\r\n\t\t\t\t\t\t\t\tcornerClass = \" ui-corner-\" + ( isRTL ? \"left\" : \"right\" ); break;\r\n\t\t\t\t\t\t\tdefault: calender += \" ui-datepicker-group-middle\"; cornerClass = \"\"; break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcalender += \"'>\";\r\n\t\t\t\t}\r\n\t\t\t\tcalender += \"<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix\" + cornerClass + \"'>\" +\r\n\t\t\t\t\t( /all|left/.test( cornerClass ) && row === 0 ? ( isRTL ? next : prev ) : \"\" ) +\r\n\t\t\t\t\t( /all|right/.test( cornerClass ) && row === 0 ? ( isRTL ? prev : next ) : \"\" ) +\r\n\t\t\t\t\tthis._generateMonthYearHeader( inst, drawMonth, drawYear, minDate, maxDate,\r\n\t\t\t\t\trow > 0 || col > 0, monthNames, monthNamesShort ) + // draw month headers\r\n\t\t\t\t\t\"</div><table class='ui-datepicker-calendar'><thead>\" +\r\n\t\t\t\t\t\"<tr>\";\r\n\t\t\t\tthead = ( showWeek ? \"<th class='ui-datepicker-week-col'>\" + this._get( inst, \"weekHeader\" ) + \"</th>\" : \"\" );\r\n\t\t\t\tfor ( dow = 0; dow < 7; dow++ ) { // days of the week\r\n\t\t\t\t\tday = ( dow + firstDay ) % 7;\r\n\t\t\t\t\tthead += \"<th scope='col'\" + ( ( dow + firstDay + 6 ) % 7 >= 5 ? \" class='ui-datepicker-week-end'\" : \"\" ) + \">\" +\r\n\t\t\t\t\t\t\"<span title='\" + dayNames[ day ] + \"'>\" + dayNamesMin[ day ] + \"</span></th>\";\r\n\t\t\t\t}\r\n\t\t\t\tcalender += thead + \"</tr></thead><tbody>\";\r\n\t\t\t\tdaysInMonth = this._getDaysInMonth( drawYear, drawMonth );\r\n\t\t\t\tif ( drawYear === inst.selectedYear && drawMonth === inst.selectedMonth ) {\r\n\t\t\t\t\tinst.selectedDay = Math.min( inst.selectedDay, daysInMonth );\r\n\t\t\t\t}\r\n\t\t\t\tleadDays = ( this._getFirstDayOfMonth( drawYear, drawMonth ) - firstDay + 7 ) % 7;\r\n\t\t\t\tcurRows = Math.ceil( ( leadDays + daysInMonth ) / 7 ); // calculate the number of rows to generate\r\n\t\t\t\tnumRows = ( isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows ); //If multiple months, use the higher number of rows (see #7043)\r\n\t\t\t\tthis.maxRows = numRows;\r\n\t\t\t\tprintDate = this._daylightSavingAdjust( new Date( drawYear, drawMonth, 1 - leadDays ) );\r\n\t\t\t\tfor ( dRow = 0; dRow < numRows; dRow++ ) { // create date picker rows\r\n\t\t\t\t\tcalender += \"<tr>\";\r\n\t\t\t\t\ttbody = ( !showWeek ? \"\" : \"<td class='ui-datepicker-week-col'>\" +\r\n\t\t\t\t\t\tthis._get( inst, \"calculateWeek\" )( printDate ) + \"</td>\" );\r\n\t\t\t\t\tfor ( dow = 0; dow < 7; dow++ ) { // create date picker days\r\n\t\t\t\t\t\tdaySettings = ( beforeShowDay ?\r\n\t\t\t\t\t\t\tbeforeShowDay.apply( ( inst.input ? inst.input[ 0 ] : null ), [ printDate ] ) : [ true, \"\" ] );\r\n\t\t\t\t\t\totherMonth = ( printDate.getMonth() !== drawMonth );\r\n\t\t\t\t\t\tunselectable = ( otherMonth && !selectOtherMonths ) || !daySettings[ 0 ] ||\r\n\t\t\t\t\t\t\t( minDate && printDate < minDate ) || ( maxDate && printDate > maxDate );\r\n\t\t\t\t\t\ttbody += \"<td class='\" +\r\n\t\t\t\t\t\t\t( ( dow + firstDay + 6 ) % 7 >= 5 ? \" ui-datepicker-week-end\" : \"\" ) + // highlight weekends\r\n\t\t\t\t\t\t\t( otherMonth ? \" ui-datepicker-other-month\" : \"\" ) + // highlight days from other months\r\n\t\t\t\t\t\t\t( ( printDate.getTime() === selectedDate.getTime() && drawMonth === inst.selectedMonth && inst._keyEvent ) || // user pressed key\r\n\t\t\t\t\t\t\t( defaultDate.getTime() === printDate.getTime() && defaultDate.getTime() === selectedDate.getTime() ) ?\r\n\r\n\t\t\t\t\t\t\t// or defaultDate is current printedDate and defaultDate is selectedDate\r\n\t\t\t\t\t\t\t\" \" + this._dayOverClass : \"\" ) + // highlight selected day\r\n\t\t\t\t\t\t\t( unselectable ? \" \" + this._unselectableClass + \" ui-state-disabled\" : \"\" ) +  // highlight unselectable days\r\n\t\t\t\t\t\t\t( otherMonth && !showOtherMonths ? \"\" : \" \" + daySettings[ 1 ] + // highlight custom dates\r\n\t\t\t\t\t\t\t( printDate.getTime() === currentDate.getTime() ? \" \" + this._currentClass : \"\" ) + // highlight selected day\r\n\t\t\t\t\t\t\t( printDate.getTime() === today.getTime() ? \" ui-datepicker-today\" : \"\" ) ) + \"'\" + // highlight today (if different)\r\n\t\t\t\t\t\t\t( ( !otherMonth || showOtherMonths ) && daySettings[ 2 ] ? \" title='\" + daySettings[ 2 ].replace( /'/g, \"&#39;\" ) + \"'\" : \"\" ) + // cell title\r\n\t\t\t\t\t\t\t( unselectable ? \"\" : \" data-handler='selectDay' data-event='click' data-month='\" + printDate.getMonth() + \"' data-year='\" + printDate.getFullYear() + \"'\" ) + \">\" + // actions\r\n\t\t\t\t\t\t\t( otherMonth && !showOtherMonths ? \"&#xa0;\" : // display for other months\r\n\t\t\t\t\t\t\t( unselectable ? \"<span class='ui-state-default'>\" + printDate.getDate() + \"</span>\" : \"<a class='ui-state-default\" +\r\n\t\t\t\t\t\t\t( printDate.getTime() === today.getTime() ? \" ui-state-highlight\" : \"\" ) +\r\n\t\t\t\t\t\t\t( printDate.getTime() === currentDate.getTime() ? \" ui-state-active\" : \"\" ) + // highlight selected day\r\n\t\t\t\t\t\t\t( otherMonth ? \" ui-priority-secondary\" : \"\" ) + // distinguish dates from other months\r\n\t\t\t\t\t\t\t\"' href='#'>\" + printDate.getDate() + \"</a>\" ) ) + \"</td>\"; // display selectable date\r\n\t\t\t\t\t\tprintDate.setDate( printDate.getDate() + 1 );\r\n\t\t\t\t\t\tprintDate = this._daylightSavingAdjust( printDate );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcalender += tbody + \"</tr>\";\r\n\t\t\t\t}\r\n\t\t\t\tdrawMonth++;\r\n\t\t\t\tif ( drawMonth > 11 ) {\r\n\t\t\t\t\tdrawMonth = 0;\r\n\t\t\t\t\tdrawYear++;\r\n\t\t\t\t}\r\n\t\t\t\tcalender += \"</tbody></table>\" + ( isMultiMonth ? \"</div>\" +\r\n\t\t\t\t\t\t\t( ( numMonths[ 0 ] > 0 && col === numMonths[ 1 ] - 1 ) ? \"<div class='ui-datepicker-row-break'></div>\" : \"\" ) : \"\" );\r\n\t\t\t\tgroup += calender;\r\n\t\t\t}\r\n\t\t\thtml += group;\r\n\t\t}\r\n\t\thtml += buttonPanel;\r\n\t\tinst._keyEvent = false;\r\n\t\treturn html;\r\n\t},\r\n\r\n\t/* Generate the month and year header. */\r\n\t_generateMonthYearHeader: function( inst, drawMonth, drawYear, minDate, maxDate,\r\n\t\t\tsecondary, monthNames, monthNamesShort ) {\r\n\r\n\t\tvar inMinYear, inMaxYear, month, years, thisYear, determineYear, year, endYear,\r\n\t\t\tchangeMonth = this._get( inst, \"changeMonth\" ),\r\n\t\t\tchangeYear = this._get( inst, \"changeYear\" ),\r\n\t\t\tshowMonthAfterYear = this._get( inst, \"showMonthAfterYear\" ),\r\n\t\t\thtml = \"<div class='ui-datepicker-title'>\",\r\n\t\t\tmonthHtml = \"\";\r\n\r\n\t\t// Month selection\r\n\t\tif ( secondary || !changeMonth ) {\r\n\t\t\tmonthHtml += \"<span class='ui-datepicker-month'>\" + monthNames[ drawMonth ] + \"</span>\";\r\n\t\t} else {\r\n\t\t\tinMinYear = ( minDate && minDate.getFullYear() === drawYear );\r\n\t\t\tinMaxYear = ( maxDate && maxDate.getFullYear() === drawYear );\r\n\t\t\tmonthHtml += \"<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>\";\r\n\t\t\tfor ( month = 0; month < 12; month++ ) {\r\n\t\t\t\tif ( ( !inMinYear || month >= minDate.getMonth() ) && ( !inMaxYear || month <= maxDate.getMonth() ) ) {\r\n\t\t\t\t\tmonthHtml += \"<option value='\" + month + \"'\" +\r\n\t\t\t\t\t\t( month === drawMonth ? \" selected='selected'\" : \"\" ) +\r\n\t\t\t\t\t\t\">\" + monthNamesShort[ month ] + \"</option>\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmonthHtml += \"</select>\";\r\n\t\t}\r\n\r\n\t\tif ( !showMonthAfterYear ) {\r\n\t\t\thtml += monthHtml + ( secondary || !( changeMonth && changeYear ) ? \"&#xa0;\" : \"\" );\r\n\t\t}\r\n\r\n\t\t// Year selection\r\n\t\tif ( !inst.yearshtml ) {\r\n\t\t\tinst.yearshtml = \"\";\r\n\t\t\tif ( secondary || !changeYear ) {\r\n\t\t\t\thtml += \"<span class='ui-datepicker-year'>\" + drawYear + \"</span>\";\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// determine range of years to display\r\n\t\t\t\tyears = this._get( inst, \"yearRange\" ).split( \":\" );\r\n\t\t\t\tthisYear = new Date().getFullYear();\r\n\t\t\t\tdetermineYear = function( value ) {\r\n\t\t\t\t\tvar year = ( value.match( /c[+\\-].*/ ) ? drawYear + parseInt( value.substring( 1 ), 10 ) :\r\n\t\t\t\t\t\t( value.match( /[+\\-].*/ ) ? thisYear + parseInt( value, 10 ) :\r\n\t\t\t\t\t\tparseInt( value, 10 ) ) );\r\n\t\t\t\t\treturn ( isNaN( year ) ? thisYear : year );\r\n\t\t\t\t};\r\n\t\t\t\tyear = determineYear( years[ 0 ] );\r\n\t\t\t\tendYear = Math.max( year, determineYear( years[ 1 ] || \"\" ) );\r\n\t\t\t\tyear = ( minDate ? Math.max( year, minDate.getFullYear() ) : year );\r\n\t\t\t\tendYear = ( maxDate ? Math.min( endYear, maxDate.getFullYear() ) : endYear );\r\n\t\t\t\tinst.yearshtml += \"<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>\";\r\n\t\t\t\tfor ( ; year <= endYear; year++ ) {\r\n\t\t\t\t\tinst.yearshtml += \"<option value='\" + year + \"'\" +\r\n\t\t\t\t\t\t( year === drawYear ? \" selected='selected'\" : \"\" ) +\r\n\t\t\t\t\t\t\">\" + year + \"</option>\";\r\n\t\t\t\t}\r\n\t\t\t\tinst.yearshtml += \"</select>\";\r\n\r\n\t\t\t\thtml += inst.yearshtml;\r\n\t\t\t\tinst.yearshtml = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\thtml += this._get( inst, \"yearSuffix\" );\r\n\t\tif ( showMonthAfterYear ) {\r\n\t\t\thtml += ( secondary || !( changeMonth && changeYear ) ? \"&#xa0;\" : \"\" ) + monthHtml;\r\n\t\t}\r\n\t\thtml += \"</div>\"; // Close datepicker_header\r\n\t\treturn html;\r\n\t},\r\n\r\n\t/* Adjust one of the date sub-fields. */\r\n\t_adjustInstDate: function( inst, offset, period ) {\r\n\t\tvar year = inst.selectedYear + ( period === \"Y\" ? offset : 0 ),\r\n\t\t\tmonth = inst.selectedMonth + ( period === \"M\" ? offset : 0 ),\r\n\t\t\tday = Math.min( inst.selectedDay, this._getDaysInMonth( year, month ) ) + ( period === \"D\" ? offset : 0 ),\r\n\t\t\tdate = this._restrictMinMax( inst, this._daylightSavingAdjust( new Date( year, month, day ) ) );\r\n\r\n\t\tinst.selectedDay = date.getDate();\r\n\t\tinst.drawMonth = inst.selectedMonth = date.getMonth();\r\n\t\tinst.drawYear = inst.selectedYear = date.getFullYear();\r\n\t\tif ( period === \"M\" || period === \"Y\" ) {\r\n\t\t\tthis._notifyChange( inst );\r\n\t\t}\r\n\t},\r\n\r\n\t/* Ensure a date is within any min/max bounds. */\r\n\t_restrictMinMax: function( inst, date ) {\r\n\t\tvar minDate = this._getMinMaxDate( inst, \"min\" ),\r\n\t\t\tmaxDate = this._getMinMaxDate( inst, \"max\" ),\r\n\t\t\tnewDate = ( minDate && date < minDate ? minDate : date );\r\n\t\treturn ( maxDate && newDate > maxDate ? maxDate : newDate );\r\n\t},\r\n\r\n\t/* Notify change of month/year. */\r\n\t_notifyChange: function( inst ) {\r\n\t\tvar onChange = this._get( inst, \"onChangeMonthYear\" );\r\n\t\tif ( onChange ) {\r\n\t\t\tonChange.apply( ( inst.input ? inst.input[ 0 ] : null ),\r\n\t\t\t\t[ inst.selectedYear, inst.selectedMonth + 1, inst ] );\r\n\t\t}\r\n\t},\r\n\r\n\t/* Determine the number of months to show. */\r\n\t_getNumberOfMonths: function( inst ) {\r\n\t\tvar numMonths = this._get( inst, \"numberOfMonths\" );\r\n\t\treturn ( numMonths == null ? [ 1, 1 ] : ( typeof numMonths === \"number\" ? [ 1, numMonths ] : numMonths ) );\r\n\t},\r\n\r\n\t/* Determine the current maximum date - ensure no time components are set. */\r\n\t_getMinMaxDate: function( inst, minMax ) {\r\n\t\treturn this._determineDate( inst, this._get( inst, minMax + \"Date\" ), null );\r\n\t},\r\n\r\n\t/* Find the number of days in a given month. */\r\n\t_getDaysInMonth: function( year, month ) {\r\n\t\treturn 32 - this._daylightSavingAdjust( new Date( year, month, 32 ) ).getDate();\r\n\t},\r\n\r\n\t/* Find the day of the week of the first of a month. */\r\n\t_getFirstDayOfMonth: function( year, month ) {\r\n\t\treturn new Date( year, month, 1 ).getDay();\r\n\t},\r\n\r\n\t/* Determines if we should allow a \"next/prev\" month display change. */\r\n\t_canAdjustMonth: function( inst, offset, curYear, curMonth ) {\r\n\t\tvar numMonths = this._getNumberOfMonths( inst ),\r\n\t\t\tdate = this._daylightSavingAdjust( new Date( curYear,\r\n\t\t\tcurMonth + ( offset < 0 ? offset : numMonths[ 0 ] * numMonths[ 1 ] ), 1 ) );\r\n\r\n\t\tif ( offset < 0 ) {\r\n\t\t\tdate.setDate( this._getDaysInMonth( date.getFullYear(), date.getMonth() ) );\r\n\t\t}\r\n\t\treturn this._isInRange( inst, date );\r\n\t},\r\n\r\n\t/* Is the given date in the accepted range? */\r\n\t_isInRange: function( inst, date ) {\r\n\t\tvar yearSplit, currentYear,\r\n\t\t\tminDate = this._getMinMaxDate( inst, \"min\" ),\r\n\t\t\tmaxDate = this._getMinMaxDate( inst, \"max\" ),\r\n\t\t\tminYear = null,\r\n\t\t\tmaxYear = null,\r\n\t\t\tyears = this._get( inst, \"yearRange\" );\r\n\t\t\tif ( years ) {\r\n\t\t\t\tyearSplit = years.split( \":\" );\r\n\t\t\t\tcurrentYear = new Date().getFullYear();\r\n\t\t\t\tminYear = parseInt( yearSplit[ 0 ], 10 );\r\n\t\t\t\tmaxYear = parseInt( yearSplit[ 1 ], 10 );\r\n\t\t\t\tif ( yearSplit[ 0 ].match( /[+\\-].*/ ) ) {\r\n\t\t\t\t\tminYear += currentYear;\r\n\t\t\t\t}\r\n\t\t\t\tif ( yearSplit[ 1 ].match( /[+\\-].*/ ) ) {\r\n\t\t\t\t\tmaxYear += currentYear;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\treturn ( ( !minDate || date.getTime() >= minDate.getTime() ) &&\r\n\t\t\t( !maxDate || date.getTime() <= maxDate.getTime() ) &&\r\n\t\t\t( !minYear || date.getFullYear() >= minYear ) &&\r\n\t\t\t( !maxYear || date.getFullYear() <= maxYear ) );\r\n\t},\r\n\r\n\t/* Provide the configuration settings for formatting/parsing. */\r\n\t_getFormatConfig: function( inst ) {\r\n\t\tvar shortYearCutoff = this._get( inst, \"shortYearCutoff\" );\r\n\t\tshortYearCutoff = ( typeof shortYearCutoff !== \"string\" ? shortYearCutoff :\r\n\t\t\tnew Date().getFullYear() % 100 + parseInt( shortYearCutoff, 10 ) );\r\n\t\treturn { shortYearCutoff: shortYearCutoff,\r\n\t\t\tdayNamesShort: this._get( inst, \"dayNamesShort\" ), dayNames: this._get( inst, \"dayNames\" ),\r\n\t\t\tmonthNamesShort: this._get( inst, \"monthNamesShort\" ), monthNames: this._get( inst, \"monthNames\" ) };\r\n\t},\r\n\r\n\t/* Format the given date for display. */\r\n\t_formatDate: function( inst, day, month, year ) {\r\n\t\tif ( !day ) {\r\n\t\t\tinst.currentDay = inst.selectedDay;\r\n\t\t\tinst.currentMonth = inst.selectedMonth;\r\n\t\t\tinst.currentYear = inst.selectedYear;\r\n\t\t}\r\n\t\tvar date = ( day ? ( typeof day === \"object\" ? day :\r\n\t\t\tthis._daylightSavingAdjust( new Date( year, month, day ) ) ) :\r\n\t\t\tthis._daylightSavingAdjust( new Date( inst.currentYear, inst.currentMonth, inst.currentDay ) ) );\r\n\t\treturn this.formatDate( this._get( inst, \"dateFormat\" ), date, this._getFormatConfig( inst ) );\r\n\t}\r\n} );\r\n\r\n/*\r\n * Bind hover events for datepicker elements.\r\n * Done via delegate so the binding only occurs once in the lifetime of the parent div.\r\n * Global datepicker_instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker.\r\n */\r\nfunction datepicker_bindHover( dpDiv ) {\r\n\tvar selector = \"button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a\";\r\n\treturn dpDiv.on( \"mouseout\", selector, function() {\r\n\t\t\t$( this ).removeClass( \"ui-state-hover\" );\r\n\t\t\tif ( this.className.indexOf( \"ui-datepicker-prev\" ) !== -1 ) {\r\n\t\t\t\t$( this ).removeClass( \"ui-datepicker-prev-hover\" );\r\n\t\t\t}\r\n\t\t\tif ( this.className.indexOf( \"ui-datepicker-next\" ) !== -1 ) {\r\n\t\t\t\t$( this ).removeClass( \"ui-datepicker-next-hover\" );\r\n\t\t\t}\r\n\t\t} )\r\n\t\t.on( \"mouseover\", selector, datepicker_handleMouseover );\r\n}\r\n\r\nfunction datepicker_handleMouseover() {\r\n\tif ( !$.datepicker._isDisabledDatepicker( datepicker_instActive.inline ? datepicker_instActive.dpDiv.parent()[ 0 ] : datepicker_instActive.input[ 0 ] ) ) {\r\n\t\t$( this ).parents( \".ui-datepicker-calendar\" ).find( \"a\" ).removeClass( \"ui-state-hover\" );\r\n\t\t$( this ).addClass( \"ui-state-hover\" );\r\n\t\tif ( this.className.indexOf( \"ui-datepicker-prev\" ) !== -1 ) {\r\n\t\t\t$( this ).addClass( \"ui-datepicker-prev-hover\" );\r\n\t\t}\r\n\t\tif ( this.className.indexOf( \"ui-datepicker-next\" ) !== -1 ) {\r\n\t\t\t$( this ).addClass( \"ui-datepicker-next-hover\" );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/* jQuery extend now ignores nulls! */\r\nfunction datepicker_extendRemove( target, props ) {\r\n\t$.extend( target, props );\r\n\tfor ( var name in props ) {\r\n\t\tif ( props[ name ] == null ) {\r\n\t\t\ttarget[ name ] = props[ name ];\r\n\t\t}\r\n\t}\r\n\treturn target;\r\n}\r\n\r\n/* Invoke the datepicker functionality.\r\n   @param  options  string - a command, optionally followed by additional parameters or\r\n\t\t\t\t\tObject - settings for attaching new datepicker functionality\r\n   @return  jQuery object */\r\n$.fn.datepicker = function( options ) {\r\n\r\n\t/* Verify an empty collection wasn't passed - Fixes #6976 */\r\n\tif ( !this.length ) {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/* Initialise the date picker. */\r\n\tif ( !$.datepicker.initialized ) {\r\n\t\t$( document ).on( \"mousedown\", $.datepicker._checkExternalClick );\r\n\t\t$.datepicker.initialized = true;\r\n\t}\r\n\r\n\t/* Append datepicker main container to body if not exist. */\r\n\tif ( $( \"#\" + $.datepicker._mainDivId ).length === 0 ) {\r\n\t\t$( \"body\" ).append( $.datepicker.dpDiv );\r\n\t}\r\n\r\n\tvar otherArgs = Array.prototype.slice.call( arguments, 1 );\r\n\tif ( typeof options === \"string\" && ( options === \"isDisabled\" || options === \"getDate\" || options === \"widget\" ) ) {\r\n\t\treturn $.datepicker[ \"_\" + options + \"Datepicker\" ].\r\n\t\t\tapply( $.datepicker, [ this[ 0 ] ].concat( otherArgs ) );\r\n\t}\r\n\tif ( options === \"option\" && arguments.length === 2 && typeof arguments[ 1 ] === \"string\" ) {\r\n\t\treturn $.datepicker[ \"_\" + options + \"Datepicker\" ].\r\n\t\t\tapply( $.datepicker, [ this[ 0 ] ].concat( otherArgs ) );\r\n\t}\r\n\treturn this.each( function() {\r\n\t\ttypeof options === \"string\" ?\r\n\t\t\t$.datepicker[ \"_\" + options + \"Datepicker\" ].\r\n\t\t\t\tapply( $.datepicker, [ this ].concat( otherArgs ) ) :\r\n\t\t\t$.datepicker._attachDatepicker( this, options );\r\n\t} );\r\n};\r\n\r\n$.datepicker = new Datepicker(); // singleton instance\r\n$.datepicker.initialized = false;\r\n$.datepicker.uuid = new Date().getTime();\r\n$.datepicker.version = \"1.12.1\";\r\n\r\nreturn $.datepicker;\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/dialog.js":"/*!\r\n * jQuery UI Dialog 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Dialog\r\n//>>group: Widgets\r\n//>>description: Displays customizable dialog windows.\r\n//>>docs: http://api.jqueryui.com/dialog/\r\n//>>demos: http://jqueryui.com/dialog/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/dialog.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"./button\",\r\n\t\t\t\"./draggable\",\r\n\t\t\t\"./mouse\",\r\n\t\t\t\"./resizable\",\r\n\t\t\t\"../focusable\",\r\n\t\t\t\"../keycode\",\r\n\t\t\t\"../position\",\r\n\t\t\t\"../safe-active-element\",\r\n\t\t\t\"../safe-blur\",\r\n\t\t\t\"../tabbable\",\r\n\t\t\t\"../unique-id\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\n$.widget( \"ui.dialog\", {\r\n\tversion: \"1.12.1\",\r\n\toptions: {\r\n\t\tappendTo: \"body\",\r\n\t\tautoOpen: true,\r\n\t\tbuttons: [],\r\n\t\tclasses: {\r\n\t\t\t\"ui-dialog\": \"ui-corner-all\",\r\n\t\t\t\"ui-dialog-titlebar\": \"ui-corner-all\"\r\n\t\t},\r\n\t\tcloseOnEscape: true,\r\n\t\tcloseText: \"Close\",\r\n\t\tdraggable: true,\r\n\t\thide: null,\r\n\t\theight: \"auto\",\r\n\t\tmaxHeight: null,\r\n\t\tmaxWidth: null,\r\n\t\tminHeight: 150,\r\n\t\tminWidth: 150,\r\n\t\tmodal: false,\r\n\t\tposition: {\r\n\t\t\tmy: \"center\",\r\n\t\t\tat: \"center\",\r\n\t\t\tof: window,\r\n\t\t\tcollision: \"fit\",\r\n\r\n\t\t\t// Ensure the titlebar is always visible\r\n\t\t\tusing: function( pos ) {\r\n\t\t\t\tvar topOffset = $( this ).css( pos ).offset().top;\r\n\t\t\t\tif ( topOffset < 0 ) {\r\n\t\t\t\t\t$( this ).css( \"top\", pos.top - topOffset );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tresizable: true,\r\n\t\tshow: null,\r\n\t\ttitle: null,\r\n\t\twidth: 300,\r\n\r\n\t\t// Callbacks\r\n\t\tbeforeClose: null,\r\n\t\tclose: null,\r\n\t\tdrag: null,\r\n\t\tdragStart: null,\r\n\t\tdragStop: null,\r\n\t\tfocus: null,\r\n\t\topen: null,\r\n\t\tresize: null,\r\n\t\tresizeStart: null,\r\n\t\tresizeStop: null\r\n\t},\r\n\r\n\tsizeRelatedOptions: {\r\n\t\tbuttons: true,\r\n\t\theight: true,\r\n\t\tmaxHeight: true,\r\n\t\tmaxWidth: true,\r\n\t\tminHeight: true,\r\n\t\tminWidth: true,\r\n\t\twidth: true\r\n\t},\r\n\r\n\tresizableRelatedOptions: {\r\n\t\tmaxHeight: true,\r\n\t\tmaxWidth: true,\r\n\t\tminHeight: true,\r\n\t\tminWidth: true\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tthis.originalCss = {\r\n\t\t\tdisplay: this.element[ 0 ].style.display,\r\n\t\t\twidth: this.element[ 0 ].style.width,\r\n\t\t\tminHeight: this.element[ 0 ].style.minHeight,\r\n\t\t\tmaxHeight: this.element[ 0 ].style.maxHeight,\r\n\t\t\theight: this.element[ 0 ].style.height\r\n\t\t};\r\n\t\tthis.originalPosition = {\r\n\t\t\tparent: this.element.parent(),\r\n\t\t\tindex: this.element.parent().children().index( this.element )\r\n\t\t};\r\n\t\tthis.originalTitle = this.element.attr( \"title\" );\r\n\t\tif ( this.options.title == null && this.originalTitle != null ) {\r\n\t\t\tthis.options.title = this.originalTitle;\r\n\t\t}\r\n\r\n\t\t// Dialogs can't be disabled\r\n\t\tif ( this.options.disabled ) {\r\n\t\t\tthis.options.disabled = false;\r\n\t\t}\r\n\r\n\t\tthis._createWrapper();\r\n\r\n\t\tthis.element\r\n\t\t\t.show()\r\n\t\t\t.removeAttr( \"title\" )\r\n\t\t\t.appendTo( this.uiDialog );\r\n\r\n\t\tthis._addClass( \"ui-dialog-content\", \"ui-widget-content\" );\r\n\r\n\t\tthis._createTitlebar();\r\n\t\tthis._createButtonPane();\r\n\r\n\t\tif ( this.options.draggable && $.fn.draggable ) {\r\n\t\t\tthis._makeDraggable();\r\n\t\t}\r\n\t\tif ( this.options.resizable && $.fn.resizable ) {\r\n\t\t\tthis._makeResizable();\r\n\t\t}\r\n\r\n\t\tthis._isOpen = false;\r\n\r\n\t\tthis._trackFocus();\r\n\t},\r\n\r\n\t_init: function() {\r\n\t\tif ( this.options.autoOpen ) {\r\n\t\t\tthis.open();\r\n\t\t}\r\n\t},\r\n\r\n\t_appendTo: function() {\r\n\t\tvar element = this.options.appendTo;\r\n\t\tif ( element && ( element.jquery || element.nodeType ) ) {\r\n\t\t\treturn $( element );\r\n\t\t}\r\n\t\treturn this.document.find( element || \"body\" ).eq( 0 );\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tvar next,\r\n\t\t\toriginalPosition = this.originalPosition;\r\n\r\n\t\tthis._untrackInstance();\r\n\t\tthis._destroyOverlay();\r\n\r\n\t\tthis.element\r\n\t\t\t.removeUniqueId()\r\n\t\t\t.css( this.originalCss )\r\n\r\n\t\t\t// Without detaching first, the following becomes really slow\r\n\t\t\t.detach();\r\n\r\n\t\tthis.uiDialog.remove();\r\n\r\n\t\tif ( this.originalTitle ) {\r\n\t\t\tthis.element.attr( \"title\", this.originalTitle );\r\n\t\t}\r\n\r\n\t\tnext = originalPosition.parent.children().eq( originalPosition.index );\r\n\r\n\t\t// Don't try to place the dialog next to itself (#8613)\r\n\t\tif ( next.length && next[ 0 ] !== this.element[ 0 ] ) {\r\n\t\t\tnext.before( this.element );\r\n\t\t} else {\r\n\t\t\toriginalPosition.parent.append( this.element );\r\n\t\t}\r\n\t},\r\n\r\n\twidget: function() {\r\n\t\treturn this.uiDialog;\r\n\t},\r\n\r\n\tdisable: $.noop,\r\n\tenable: $.noop,\r\n\r\n\tclose: function( event ) {\r\n\t\tvar that = this;\r\n\r\n\t\tif ( !this._isOpen || this._trigger( \"beforeClose\", event ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._isOpen = false;\r\n\t\tthis._focusedElement = null;\r\n\t\tthis._destroyOverlay();\r\n\t\tthis._untrackInstance();\r\n\r\n\t\tif ( !this.opener.filter( \":focusable\" ).trigger( \"focus\" ).length ) {\r\n\r\n\t\t\t// Hiding a focused element doesn't trigger blur in WebKit\r\n\t\t\t// so in case we have nothing to focus on, explicitly blur the active element\r\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=47182\r\n\t\t\t$.ui.safeBlur( $.ui.safeActiveElement( this.document[ 0 ] ) );\r\n\t\t}\r\n\r\n\t\tthis._hide( this.uiDialog, this.options.hide, function() {\r\n\t\t\tthat._trigger( \"close\", event );\r\n\t\t} );\r\n\t},\r\n\r\n\tisOpen: function() {\r\n\t\treturn this._isOpen;\r\n\t},\r\n\r\n\tmoveToTop: function() {\r\n\t\tthis._moveToTop();\r\n\t},\r\n\r\n\t_moveToTop: function( event, silent ) {\r\n\t\tvar moved = false,\r\n\t\t\tzIndices = this.uiDialog.siblings( \".ui-front:visible\" ).map( function() {\r\n\t\t\t\treturn +$( this ).css( \"z-index\" );\r\n\t\t\t} ).get(),\r\n\t\t\tzIndexMax = Math.max.apply( null, zIndices );\r\n\r\n\t\tif ( zIndexMax >= +this.uiDialog.css( \"z-index\" ) ) {\r\n\t\t\tthis.uiDialog.css( \"z-index\", zIndexMax + 1 );\r\n\t\t\tmoved = true;\r\n\t\t}\r\n\r\n\t\tif ( moved && !silent ) {\r\n\t\t\tthis._trigger( \"focus\", event );\r\n\t\t}\r\n\t\treturn moved;\r\n\t},\r\n\r\n\topen: function() {\r\n\t\tvar that = this;\r\n\t\tif ( this._isOpen ) {\r\n\t\t\tif ( this._moveToTop() ) {\r\n\t\t\t\tthis._focusTabbable();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._isOpen = true;\r\n\t\tthis.opener = $( $.ui.safeActiveElement( this.document[ 0 ] ) );\r\n\r\n\t\tthis._size();\r\n\t\tthis._position();\r\n\t\tthis._createOverlay();\r\n\t\tthis._moveToTop( null, true );\r\n\r\n\t\t// Ensure the overlay is moved to the top with the dialog, but only when\r\n\t\t// opening. The overlay shouldn't move after the dialog is open so that\r\n\t\t// modeless dialogs opened after the modal dialog stack properly.\r\n\t\tif ( this.overlay ) {\r\n\t\t\tthis.overlay.css( \"z-index\", this.uiDialog.css( \"z-index\" ) - 1 );\r\n\t\t}\r\n\r\n\t\tthis._show( this.uiDialog, this.options.show, function() {\r\n\t\t\tthat._focusTabbable();\r\n\t\t\tthat._trigger( \"focus\" );\r\n\t\t} );\r\n\r\n\t\t// Track the dialog immediately upon openening in case a focus event\r\n\t\t// somehow occurs outside of the dialog before an element inside the\r\n\t\t// dialog is focused (#10152)\r\n\t\tthis._makeFocusTarget();\r\n\r\n\t\tthis._trigger( \"open\" );\r\n\t},\r\n\r\n\t_focusTabbable: function() {\r\n\r\n\t\t// Set focus to the first match:\r\n\t\t// 1. An element that was focused previously\r\n\t\t// 2. First element inside the dialog matching [autofocus]\r\n\t\t// 3. Tabbable element inside the content element\r\n\t\t// 4. Tabbable element inside the buttonpane\r\n\t\t// 5. The close button\r\n\t\t// 6. The dialog itself\r\n\t\tvar hasFocus = this._focusedElement;\r\n\t\tif ( !hasFocus ) {\r\n\t\t\thasFocus = this.element.find( \"[autofocus]\" );\r\n\t\t}\r\n\t\tif ( !hasFocus.length ) {\r\n\t\t\thasFocus = this.element.find( \":tabbable\" );\r\n\t\t}\r\n\t\tif ( !hasFocus.length ) {\r\n\t\t\thasFocus = this.uiDialogButtonPane.find( \":tabbable\" );\r\n\t\t}\r\n\t\tif ( !hasFocus.length ) {\r\n\t\t\thasFocus = this.uiDialogTitlebarClose.filter( \":tabbable\" );\r\n\t\t}\r\n\t\tif ( !hasFocus.length ) {\r\n\t\t\thasFocus = this.uiDialog;\r\n\t\t}\r\n\t\thasFocus.eq( 0 ).trigger( \"focus\" );\r\n\t},\r\n\r\n\t_keepFocus: function( event ) {\r\n\t\tfunction checkFocus() {\r\n\t\t\tvar activeElement = $.ui.safeActiveElement( this.document[ 0 ] ),\r\n\t\t\t\tisActive = this.uiDialog[ 0 ] === activeElement ||\r\n\t\t\t\t\t$.contains( this.uiDialog[ 0 ], activeElement );\r\n\t\t\tif ( !isActive ) {\r\n\t\t\t\tthis._focusTabbable();\r\n\t\t\t}\r\n\t\t}\r\n\t\tevent.preventDefault();\r\n\t\tcheckFocus.call( this );\r\n\r\n\t\t// support: IE\r\n\t\t// IE <= 8 doesn't prevent moving focus even with event.preventDefault()\r\n\t\t// so we check again later\r\n\t\tthis._delay( checkFocus );\r\n\t},\r\n\r\n\t_createWrapper: function() {\r\n\t\tthis.uiDialog = $( \"<div>\" )\r\n\t\t\t.hide()\r\n\t\t\t.attr( {\r\n\r\n\t\t\t\t// Setting tabIndex makes the div focusable\r\n\t\t\t\ttabIndex: -1,\r\n\t\t\t\trole: \"dialog\"\r\n\t\t\t} )\r\n\t\t\t.appendTo( this._appendTo() );\r\n\r\n\t\tthis._addClass( this.uiDialog, \"ui-dialog\", \"ui-widget ui-widget-content ui-front\" );\r\n\t\tthis._on( this.uiDialog, {\r\n\t\t\tkeydown: function( event ) {\r\n\t\t\t\tif ( this.options.closeOnEscape && !event.isDefaultPrevented() && event.keyCode &&\r\n\t\t\t\t\t\tevent.keyCode === $.ui.keyCode.ESCAPE ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\tthis.close( event );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Prevent tabbing out of dialogs\r\n\t\t\t\tif ( event.keyCode !== $.ui.keyCode.TAB || event.isDefaultPrevented() ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar tabbables = this.uiDialog.find( \":tabbable\" ),\r\n\t\t\t\t\tfirst = tabbables.filter( \":first\" ),\r\n\t\t\t\t\tlast = tabbables.filter( \":last\" );\r\n\r\n\t\t\t\tif ( ( event.target === last[ 0 ] || event.target === this.uiDialog[ 0 ] ) &&\r\n\t\t\t\t\t\t!event.shiftKey ) {\r\n\t\t\t\t\tthis._delay( function() {\r\n\t\t\t\t\t\tfirst.trigger( \"focus\" );\r\n\t\t\t\t\t} );\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t} else if ( ( event.target === first[ 0 ] ||\r\n\t\t\t\t\t\tevent.target === this.uiDialog[ 0 ] ) && event.shiftKey ) {\r\n\t\t\t\t\tthis._delay( function() {\r\n\t\t\t\t\t\tlast.trigger( \"focus\" );\r\n\t\t\t\t\t} );\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmousedown: function( event ) {\r\n\t\t\t\tif ( this._moveToTop( event ) ) {\r\n\t\t\t\t\tthis._focusTabbable();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// We assume that any existing aria-describedby attribute means\r\n\t\t// that the dialog content is marked up properly\r\n\t\t// otherwise we brute force the content as the description\r\n\t\tif ( !this.element.find( \"[aria-describedby]\" ).length ) {\r\n\t\t\tthis.uiDialog.attr( {\r\n\t\t\t\t\"aria-describedby\": this.element.uniqueId().attr( \"id\" )\r\n\t\t\t} );\r\n\t\t}\r\n\t},\r\n\r\n\t_createTitlebar: function() {\r\n\t\tvar uiDialogTitle;\r\n\r\n\t\tthis.uiDialogTitlebar = $( \"<div>\" );\r\n\t\tthis._addClass( this.uiDialogTitlebar,\r\n\t\t\t\"ui-dialog-titlebar\", \"ui-widget-header ui-helper-clearfix\" );\r\n\t\tthis._on( this.uiDialogTitlebar, {\r\n\t\t\tmousedown: function( event ) {\r\n\r\n\t\t\t\t// Don't prevent click on close button (#8838)\r\n\t\t\t\t// Focusing a dialog that is partially scrolled out of view\r\n\t\t\t\t// causes the browser to scroll it into view, preventing the click event\r\n\t\t\t\tif ( !$( event.target ).closest( \".ui-dialog-titlebar-close\" ) ) {\r\n\r\n\t\t\t\t\t// Dialog isn't getting focus when dragging (#8063)\r\n\t\t\t\t\tthis.uiDialog.trigger( \"focus\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Support: IE\r\n\t\t// Use type=\"button\" to prevent enter keypresses in textboxes from closing the\r\n\t\t// dialog in IE (#9312)\r\n\t\tthis.uiDialogTitlebarClose = $( \"<button type='button'></button>\" )\r\n\t\t\t.button( {\r\n\t\t\t\tlabel: $( \"<a>\" ).text( this.options.closeText ).html(),\r\n\t\t\t\ticon: \"ui-icon-closethick\",\r\n\t\t\t\tshowLabel: false\r\n\t\t\t} )\r\n\t\t\t.appendTo( this.uiDialogTitlebar );\r\n\r\n\t\tthis._addClass( this.uiDialogTitlebarClose, \"ui-dialog-titlebar-close\" );\r\n\t\tthis._on( this.uiDialogTitlebarClose, {\r\n\t\t\tclick: function( event ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tthis.close( event );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tuiDialogTitle = $( \"<span>\" ).uniqueId().prependTo( this.uiDialogTitlebar );\r\n\t\tthis._addClass( uiDialogTitle, \"ui-dialog-title\" );\r\n\t\tthis._title( uiDialogTitle );\r\n\r\n\t\tthis.uiDialogTitlebar.prependTo( this.uiDialog );\r\n\r\n\t\tthis.uiDialog.attr( {\r\n\t\t\t\"aria-labelledby\": uiDialogTitle.attr( \"id\" )\r\n\t\t} );\r\n\t},\r\n\r\n\t_title: function( title ) {\r\n\t\tif ( this.options.title ) {\r\n\t\t\ttitle.text( this.options.title );\r\n\t\t} else {\r\n\t\t\ttitle.html( \"&#160;\" );\r\n\t\t}\r\n\t},\r\n\r\n\t_createButtonPane: function() {\r\n\t\tthis.uiDialogButtonPane = $( \"<div>\" );\r\n\t\tthis._addClass( this.uiDialogButtonPane, \"ui-dialog-buttonpane\",\r\n\t\t\t\"ui-widget-content ui-helper-clearfix\" );\r\n\r\n\t\tthis.uiButtonSet = $( \"<div>\" )\r\n\t\t\t.appendTo( this.uiDialogButtonPane );\r\n\t\tthis._addClass( this.uiButtonSet, \"ui-dialog-buttonset\" );\r\n\r\n\t\tthis._createButtons();\r\n\t},\r\n\r\n\t_createButtons: function() {\r\n\t\tvar that = this,\r\n\t\t\tbuttons = this.options.buttons;\r\n\r\n\t\t// If we already have a button pane, remove it\r\n\t\tthis.uiDialogButtonPane.remove();\r\n\t\tthis.uiButtonSet.empty();\r\n\r\n\t\tif ( $.isEmptyObject( buttons ) || ( $.isArray( buttons ) && !buttons.length ) ) {\r\n\t\t\tthis._removeClass( this.uiDialog, \"ui-dialog-buttons\" );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t$.each( buttons, function( name, props ) {\r\n\t\t\tvar click, buttonOptions;\r\n\t\t\tprops = $.isFunction( props ) ?\r\n\t\t\t\t{ click: props, text: name } :\r\n\t\t\t\tprops;\r\n\r\n\t\t\t// Default to a non-submitting button\r\n\t\t\tprops = $.extend( { type: \"button\" }, props );\r\n\r\n\t\t\t// Change the context for the click callback to be the main element\r\n\t\t\tclick = props.click;\r\n\t\t\tbuttonOptions = {\r\n\t\t\t\ticon: props.icon,\r\n\t\t\t\ticonPosition: props.iconPosition,\r\n\t\t\t\tshowLabel: props.showLabel,\r\n\r\n\t\t\t\t// Deprecated options\r\n\t\t\t\ticons: props.icons,\r\n\t\t\t\ttext: props.text\r\n\t\t\t};\r\n\r\n\t\t\tdelete props.click;\r\n\t\t\tdelete props.icon;\r\n\t\t\tdelete props.iconPosition;\r\n\t\t\tdelete props.showLabel;\r\n\r\n\t\t\t// Deprecated options\r\n\t\t\tdelete props.icons;\r\n\t\t\tif ( typeof props.text === \"boolean\" ) {\r\n\t\t\t\tdelete props.text;\r\n\t\t\t}\r\n\r\n\t\t\t$( \"<button></button>\", props )\r\n\t\t\t\t.button( buttonOptions )\r\n\t\t\t\t.appendTo( that.uiButtonSet )\r\n\t\t\t\t.on( \"click\", function() {\r\n\t\t\t\t\tclick.apply( that.element[ 0 ], arguments );\r\n\t\t\t\t} );\r\n\t\t} );\r\n\t\tthis._addClass( this.uiDialog, \"ui-dialog-buttons\" );\r\n\t\tthis.uiDialogButtonPane.appendTo( this.uiDialog );\r\n\t},\r\n\r\n\t_makeDraggable: function() {\r\n\t\tvar that = this,\r\n\t\t\toptions = this.options;\r\n\r\n\t\tfunction filteredUi( ui ) {\r\n\t\t\treturn {\r\n\t\t\t\tposition: ui.position,\r\n\t\t\t\toffset: ui.offset\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.uiDialog.draggable( {\r\n\t\t\tcancel: \".ui-dialog-content, .ui-dialog-titlebar-close\",\r\n\t\t\thandle: \".ui-dialog-titlebar\",\r\n\t\t\tcontainment: \"document\",\r\n\t\t\tstart: function( event, ui ) {\r\n\t\t\t\tthat._addClass( $( this ), \"ui-dialog-dragging\" );\r\n\t\t\t\tthat._blockFrames();\r\n\t\t\t\tthat._trigger( \"dragStart\", event, filteredUi( ui ) );\r\n\t\t\t},\r\n\t\t\tdrag: function( event, ui ) {\r\n\t\t\t\tthat._trigger( \"drag\", event, filteredUi( ui ) );\r\n\t\t\t},\r\n\t\t\tstop: function( event, ui ) {\r\n\t\t\t\tvar left = ui.offset.left - that.document.scrollLeft(),\r\n\t\t\t\t\ttop = ui.offset.top - that.document.scrollTop();\r\n\r\n\t\t\t\toptions.position = {\r\n\t\t\t\t\tmy: \"left top\",\r\n\t\t\t\t\tat: \"left\" + ( left >= 0 ? \"+\" : \"\" ) + left + \" \" +\r\n\t\t\t\t\t\t\"top\" + ( top >= 0 ? \"+\" : \"\" ) + top,\r\n\t\t\t\t\tof: that.window\r\n\t\t\t\t};\r\n\t\t\t\tthat._removeClass( $( this ), \"ui-dialog-dragging\" );\r\n\t\t\t\tthat._unblockFrames();\r\n\t\t\t\tthat._trigger( \"dragStop\", event, filteredUi( ui ) );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\t_makeResizable: function() {\r\n\t\tvar that = this,\r\n\t\t\toptions = this.options,\r\n\t\t\thandles = options.resizable,\r\n\r\n\t\t\t// .ui-resizable has position: relative defined in the stylesheet\r\n\t\t\t// but dialogs have to use absolute or fixed positioning\r\n\t\t\tposition = this.uiDialog.css( \"position\" ),\r\n\t\t\tresizeHandles = typeof handles === \"string\" ?\r\n\t\t\t\thandles :\r\n\t\t\t\t\"n,e,s,w,se,sw,ne,nw\";\r\n\r\n\t\tfunction filteredUi( ui ) {\r\n\t\t\treturn {\r\n\t\t\t\toriginalPosition: ui.originalPosition,\r\n\t\t\t\toriginalSize: ui.originalSize,\r\n\t\t\t\tposition: ui.position,\r\n\t\t\t\tsize: ui.size\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.uiDialog.resizable( {\r\n\t\t\tcancel: \".ui-dialog-content\",\r\n\t\t\tcontainment: \"document\",\r\n\t\t\talsoResize: this.element,\r\n\t\t\tmaxWidth: options.maxWidth,\r\n\t\t\tmaxHeight: options.maxHeight,\r\n\t\t\tminWidth: options.minWidth,\r\n\t\t\tminHeight: this._minHeight(),\r\n\t\t\thandles: resizeHandles,\r\n\t\t\tstart: function( event, ui ) {\r\n\t\t\t\tthat._addClass( $( this ), \"ui-dialog-resizing\" );\r\n\t\t\t\tthat._blockFrames();\r\n\t\t\t\tthat._trigger( \"resizeStart\", event, filteredUi( ui ) );\r\n\t\t\t},\r\n\t\t\tresize: function( event, ui ) {\r\n\t\t\t\tthat._trigger( \"resize\", event, filteredUi( ui ) );\r\n\t\t\t},\r\n\t\t\tstop: function( event, ui ) {\r\n\t\t\t\tvar offset = that.uiDialog.offset(),\r\n\t\t\t\t\tleft = offset.left - that.document.scrollLeft(),\r\n\t\t\t\t\ttop = offset.top - that.document.scrollTop();\r\n\r\n\t\t\t\toptions.height = that.uiDialog.height();\r\n\t\t\t\toptions.width = that.uiDialog.width();\r\n\t\t\t\toptions.position = {\r\n\t\t\t\t\tmy: \"left top\",\r\n\t\t\t\t\tat: \"left\" + ( left >= 0 ? \"+\" : \"\" ) + left + \" \" +\r\n\t\t\t\t\t\t\"top\" + ( top >= 0 ? \"+\" : \"\" ) + top,\r\n\t\t\t\t\tof: that.window\r\n\t\t\t\t};\r\n\t\t\t\tthat._removeClass( $( this ), \"ui-dialog-resizing\" );\r\n\t\t\t\tthat._unblockFrames();\r\n\t\t\t\tthat._trigger( \"resizeStop\", event, filteredUi( ui ) );\r\n\t\t\t}\r\n\t\t} )\r\n\t\t\t.css( \"position\", position );\r\n\t},\r\n\r\n\t_trackFocus: function() {\r\n\t\tthis._on( this.widget(), {\r\n\t\t\tfocusin: function( event ) {\r\n\t\t\t\tthis._makeFocusTarget();\r\n\t\t\t\tthis._focusedElement = $( event.target );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\t_makeFocusTarget: function() {\r\n\t\tthis._untrackInstance();\r\n\t\tthis._trackingInstances().unshift( this );\r\n\t},\r\n\r\n\t_untrackInstance: function() {\r\n\t\tvar instances = this._trackingInstances(),\r\n\t\t\texists = $.inArray( this, instances );\r\n\t\tif ( exists !== -1 ) {\r\n\t\t\tinstances.splice( exists, 1 );\r\n\t\t}\r\n\t},\r\n\r\n\t_trackingInstances: function() {\r\n\t\tvar instances = this.document.data( \"ui-dialog-instances\" );\r\n\t\tif ( !instances ) {\r\n\t\t\tinstances = [];\r\n\t\t\tthis.document.data( \"ui-dialog-instances\", instances );\r\n\t\t}\r\n\t\treturn instances;\r\n\t},\r\n\r\n\t_minHeight: function() {\r\n\t\tvar options = this.options;\r\n\r\n\t\treturn options.height === \"auto\" ?\r\n\t\t\toptions.minHeight :\r\n\t\t\tMath.min( options.minHeight, options.height );\r\n\t},\r\n\r\n\t_position: function() {\r\n\r\n\t\t// Need to show the dialog to get the actual offset in the position plugin\r\n\t\tvar isVisible = this.uiDialog.is( \":visible\" );\r\n\t\tif ( !isVisible ) {\r\n\t\t\tthis.uiDialog.show();\r\n\t\t}\r\n\t\tthis.uiDialog.position( this.options.position );\r\n\t\tif ( !isVisible ) {\r\n\t\t\tthis.uiDialog.hide();\r\n\t\t}\r\n\t},\r\n\r\n\t_setOptions: function( options ) {\r\n\t\tvar that = this,\r\n\t\t\tresize = false,\r\n\t\t\tresizableOptions = {};\r\n\r\n\t\t$.each( options, function( key, value ) {\r\n\t\t\tthat._setOption( key, value );\r\n\r\n\t\t\tif ( key in that.sizeRelatedOptions ) {\r\n\t\t\t\tresize = true;\r\n\t\t\t}\r\n\t\t\tif ( key in that.resizableRelatedOptions ) {\r\n\t\t\t\tresizableOptions[ key ] = value;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tif ( resize ) {\r\n\t\t\tthis._size();\r\n\t\t\tthis._position();\r\n\t\t}\r\n\t\tif ( this.uiDialog.is( \":data(ui-resizable)\" ) ) {\r\n\t\t\tthis.uiDialog.resizable( \"option\", resizableOptions );\r\n\t\t}\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tvar isDraggable, isResizable,\r\n\t\t\tuiDialog = this.uiDialog;\r\n\r\n\t\tif ( key === \"disabled\" ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\r\n\t\tif ( key === \"appendTo\" ) {\r\n\t\t\tthis.uiDialog.appendTo( this._appendTo() );\r\n\t\t}\r\n\r\n\t\tif ( key === \"buttons\" ) {\r\n\t\t\tthis._createButtons();\r\n\t\t}\r\n\r\n\t\tif ( key === \"closeText\" ) {\r\n\t\t\tthis.uiDialogTitlebarClose.button( {\r\n\r\n\t\t\t\t// Ensure that we always pass a string\r\n\t\t\t\tlabel: $( \"<a>\" ).text( \"\" + this.options.closeText ).html()\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( key === \"draggable\" ) {\r\n\t\t\tisDraggable = uiDialog.is( \":data(ui-draggable)\" );\r\n\t\t\tif ( isDraggable && !value ) {\r\n\t\t\t\tuiDialog.draggable( \"destroy\" );\r\n\t\t\t}\r\n\r\n\t\t\tif ( !isDraggable && value ) {\r\n\t\t\t\tthis._makeDraggable();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( key === \"position\" ) {\r\n\t\t\tthis._position();\r\n\t\t}\r\n\r\n\t\tif ( key === \"resizable\" ) {\r\n\r\n\t\t\t// currently resizable, becoming non-resizable\r\n\t\t\tisResizable = uiDialog.is( \":data(ui-resizable)\" );\r\n\t\t\tif ( isResizable && !value ) {\r\n\t\t\t\tuiDialog.resizable( \"destroy\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Currently resizable, changing handles\r\n\t\t\tif ( isResizable && typeof value === \"string\" ) {\r\n\t\t\t\tuiDialog.resizable( \"option\", \"handles\", value );\r\n\t\t\t}\r\n\r\n\t\t\t// Currently non-resizable, becoming resizable\r\n\t\t\tif ( !isResizable && value !== false ) {\r\n\t\t\t\tthis._makeResizable();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( key === \"title\" ) {\r\n\t\t\tthis._title( this.uiDialogTitlebar.find( \".ui-dialog-title\" ) );\r\n\t\t}\r\n\t},\r\n\r\n\t_size: function() {\r\n\r\n\t\t// If the user has resized the dialog, the .ui-dialog and .ui-dialog-content\r\n\t\t// divs will both have width and height set, so we need to reset them\r\n\t\tvar nonContentHeight, minContentHeight, maxContentHeight,\r\n\t\t\toptions = this.options;\r\n\r\n\t\t// Reset content sizing\r\n\t\tthis.element.show().css( {\r\n\t\t\twidth: \"auto\",\r\n\t\t\tminHeight: 0,\r\n\t\t\tmaxHeight: \"none\",\r\n\t\t\theight: 0\r\n\t\t} );\r\n\r\n\t\tif ( options.minWidth > options.width ) {\r\n\t\t\toptions.width = options.minWidth;\r\n\t\t}\r\n\r\n\t\t// Reset wrapper sizing\r\n\t\t// determine the height of all the non-content elements\r\n\t\tnonContentHeight = this.uiDialog.css( {\r\n\t\t\theight: \"auto\",\r\n\t\t\twidth: options.width\r\n\t\t} )\r\n\t\t\t.outerHeight();\r\n\t\tminContentHeight = Math.max( 0, options.minHeight - nonContentHeight );\r\n\t\tmaxContentHeight = typeof options.maxHeight === \"number\" ?\r\n\t\t\tMath.max( 0, options.maxHeight - nonContentHeight ) :\r\n\t\t\t\"none\";\r\n\r\n\t\tif ( options.height === \"auto\" ) {\r\n\t\t\tthis.element.css( {\r\n\t\t\t\tminHeight: minContentHeight,\r\n\t\t\t\tmaxHeight: maxContentHeight,\r\n\t\t\t\theight: \"auto\"\r\n\t\t\t} );\r\n\t\t} else {\r\n\t\t\tthis.element.height( Math.max( 0, options.height - nonContentHeight ) );\r\n\t\t}\r\n\r\n\t\tif ( this.uiDialog.is( \":data(ui-resizable)\" ) ) {\r\n\t\t\tthis.uiDialog.resizable( \"option\", \"minHeight\", this._minHeight() );\r\n\t\t}\r\n\t},\r\n\r\n\t_blockFrames: function() {\r\n\t\tthis.iframeBlocks = this.document.find( \"iframe\" ).map( function() {\r\n\t\t\tvar iframe = $( this );\r\n\r\n\t\t\treturn $( \"<div>\" )\r\n\t\t\t\t.css( {\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\twidth: iframe.outerWidth(),\r\n\t\t\t\t\theight: iframe.outerHeight()\r\n\t\t\t\t} )\r\n\t\t\t\t.appendTo( iframe.parent() )\r\n\t\t\t\t.offset( iframe.offset() )[ 0 ];\r\n\t\t} );\r\n\t},\r\n\r\n\t_unblockFrames: function() {\r\n\t\tif ( this.iframeBlocks ) {\r\n\t\t\tthis.iframeBlocks.remove();\r\n\t\t\tdelete this.iframeBlocks;\r\n\t\t}\r\n\t},\r\n\r\n\t_allowInteraction: function( event ) {\r\n\t\tif ( $( event.target ).closest( \".ui-dialog\" ).length ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// TODO: Remove hack when datepicker implements\r\n\t\t// the .ui-front logic (#8989)\r\n\t\treturn !!$( event.target ).closest( \".ui-datepicker\" ).length;\r\n\t},\r\n\r\n\t_createOverlay: function() {\r\n\t\tif ( !this.options.modal ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// We use a delay in case the overlay is created from an\r\n\t\t// event that we're going to be cancelling (#2804)\r\n\t\tvar isOpening = true;\r\n\t\tthis._delay( function() {\r\n\t\t\tisOpening = false;\r\n\t\t} );\r\n\r\n\t\tif ( !this.document.data( \"ui-dialog-overlays\" ) ) {\r\n\r\n\t\t\t// Prevent use of anchors and inputs\r\n\t\t\t// Using _on() for an event handler shared across many instances is\r\n\t\t\t// safe because the dialogs stack and must be closed in reverse order\r\n\t\t\tthis._on( this.document, {\r\n\t\t\t\tfocusin: function( event ) {\r\n\t\t\t\t\tif ( isOpening ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( !this._allowInteraction( event ) ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\tthis._trackingInstances()[ 0 ]._focusTabbable();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tthis.overlay = $( \"<div>\" )\r\n\t\t\t.appendTo( this._appendTo() );\r\n\r\n\t\tthis._addClass( this.overlay, null, \"ui-widget-overlay ui-front\" );\r\n\t\tthis._on( this.overlay, {\r\n\t\t\tmousedown: \"_keepFocus\"\r\n\t\t} );\r\n\t\tthis.document.data( \"ui-dialog-overlays\",\r\n\t\t\t( this.document.data( \"ui-dialog-overlays\" ) || 0 ) + 1 );\r\n\t},\r\n\r\n\t_destroyOverlay: function() {\r\n\t\tif ( !this.options.modal ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( this.overlay ) {\r\n\t\t\tvar overlays = this.document.data( \"ui-dialog-overlays\" ) - 1;\r\n\r\n\t\t\tif ( !overlays ) {\r\n\t\t\t\tthis._off( this.document, \"focusin\" );\r\n\t\t\t\tthis.document.removeData( \"ui-dialog-overlays\" );\r\n\t\t\t} else {\r\n\t\t\t\tthis.document.data( \"ui-dialog-overlays\", overlays );\r\n\t\t\t}\r\n\r\n\t\t\tthis.overlay.remove();\r\n\t\t\tthis.overlay = null;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// DEPRECATED\r\n// TODO: switch return back to widget declaration at top of file when this is removed\r\nif ( $.uiBackCompat !== false ) {\r\n\r\n\t// Backcompat for dialogClass option\r\n\t$.widget( \"ui.dialog\", $.ui.dialog, {\r\n\t\toptions: {\r\n\t\t\tdialogClass: \"\"\r\n\t\t},\r\n\t\t_createWrapper: function() {\r\n\t\t\tthis._super();\r\n\t\t\tthis.uiDialog.addClass( this.options.dialogClass );\r\n\t\t},\r\n\t\t_setOption: function( key, value ) {\r\n\t\t\tif ( key === \"dialogClass\" ) {\r\n\t\t\t\tthis.uiDialog\r\n\t\t\t\t\t.removeClass( this.options.dialogClass )\r\n\t\t\t\t\t.addClass( value );\r\n\t\t\t}\r\n\t\t\tthis._superApply( arguments );\r\n\t\t}\r\n\t} );\r\n}\r\n\r\nreturn $.ui.dialog;\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/draggable.js":"/*!\r\n * jQuery UI Draggable 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Draggable\r\n//>>group: Interactions\r\n//>>description: Enables dragging functionality for any element.\r\n//>>docs: http://api.jqueryui.com/draggable/\r\n//>>demos: http://jqueryui.com/draggable/\r\n//>>css.structure: ../../themes/base/draggable.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"./mouse\",\r\n\t\t\t\"../data\",\r\n\t\t\t\"../plugin\",\r\n\t\t\t\"../safe-active-element\",\r\n\t\t\t\"../safe-blur\",\r\n\t\t\t\"../scroll-parent\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\n$.widget( \"ui.draggable\", $.ui.mouse, {\r\n\tversion: \"1.12.1\",\r\n\twidgetEventPrefix: \"drag\",\r\n\toptions: {\r\n\t\taddClasses: true,\r\n\t\tappendTo: \"parent\",\r\n\t\taxis: false,\r\n\t\tconnectToSortable: false,\r\n\t\tcontainment: false,\r\n\t\tcursor: \"auto\",\r\n\t\tcursorAt: false,\r\n\t\tgrid: false,\r\n\t\thandle: false,\r\n\t\thelper: \"original\",\r\n\t\tiframeFix: false,\r\n\t\topacity: false,\r\n\t\trefreshPositions: false,\r\n\t\trevert: false,\r\n\t\trevertDuration: 500,\r\n\t\tscope: \"default\",\r\n\t\tscroll: true,\r\n\t\tscrollSensitivity: 20,\r\n\t\tscrollSpeed: 20,\r\n\t\tsnap: false,\r\n\t\tsnapMode: \"both\",\r\n\t\tsnapTolerance: 20,\r\n\t\tstack: false,\r\n\t\tzIndex: false,\r\n\r\n\t\t// Callbacks\r\n\t\tdrag: null,\r\n\t\tstart: null,\r\n\t\tstop: null\r\n\t},\r\n\t_create: function() {\r\n\r\n\t\tif ( this.options.helper === \"original\" ) {\r\n\t\t\tthis._setPositionRelative();\r\n\t\t}\r\n\t\tif ( this.options.addClasses ) {\r\n\t\t\tthis._addClass( \"ui-draggable\" );\r\n\t\t}\r\n\t\tthis._setHandleClassName();\r\n\r\n\t\tthis._mouseInit();\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tthis._super( key, value );\r\n\t\tif ( key === \"handle\" ) {\r\n\t\t\tthis._removeHandleClassName();\r\n\t\t\tthis._setHandleClassName();\r\n\t\t}\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tif ( ( this.helper || this.element ).is( \".ui-draggable-dragging\" ) ) {\r\n\t\t\tthis.destroyOnClear = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._removeHandleClassName();\r\n\t\tthis._mouseDestroy();\r\n\t},\r\n\r\n\t_mouseCapture: function( event ) {\r\n\t\tvar o = this.options;\r\n\r\n\t\t// Among others, prevent a drag on a resizable-handle\r\n\t\tif ( this.helper || o.disabled ||\r\n\t\t\t\t$( event.target ).closest( \".ui-resizable-handle\" ).length > 0 ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//Quit if we're not on a valid handle\r\n\t\tthis.handle = this._getHandle( event );\r\n\t\tif ( !this.handle ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis._blurActiveElement( event );\r\n\r\n\t\tthis._blockFrames( o.iframeFix === true ? \"iframe\" : o.iframeFix );\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\t_blockFrames: function( selector ) {\r\n\t\tthis.iframeBlocks = this.document.find( selector ).map( function() {\r\n\t\t\tvar iframe = $( this );\r\n\r\n\t\t\treturn $( \"<div>\" )\r\n\t\t\t\t.css( \"position\", \"absolute\" )\r\n\t\t\t\t.appendTo( iframe.parent() )\r\n\t\t\t\t.outerWidth( iframe.outerWidth() )\r\n\t\t\t\t.outerHeight( iframe.outerHeight() )\r\n\t\t\t\t.offset( iframe.offset() )[ 0 ];\r\n\t\t} );\r\n\t},\r\n\r\n\t_unblockFrames: function() {\r\n\t\tif ( this.iframeBlocks ) {\r\n\t\t\tthis.iframeBlocks.remove();\r\n\t\t\tdelete this.iframeBlocks;\r\n\t\t}\r\n\t},\r\n\r\n\t_blurActiveElement: function( event ) {\r\n\t\tvar activeElement = $.ui.safeActiveElement( this.document[ 0 ] ),\r\n\t\t\ttarget = $( event.target );\r\n\r\n\t\t// Don't blur if the event occurred on an element that is within\r\n\t\t// the currently focused element\r\n\t\t// See #10527, #12472\r\n\t\tif ( target.closest( activeElement ).length ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Blur any element that currently has focus, see #4261\r\n\t\t$.ui.safeBlur( activeElement );\r\n\t},\r\n\r\n\t_mouseStart: function( event ) {\r\n\r\n\t\tvar o = this.options;\r\n\r\n\t\t//Create and append the visible helper\r\n\t\tthis.helper = this._createHelper( event );\r\n\r\n\t\tthis._addClass( this.helper, \"ui-draggable-dragging\" );\r\n\r\n\t\t//Cache the helper size\r\n\t\tthis._cacheHelperProportions();\r\n\r\n\t\t//If ddmanager is used for droppables, set the global draggable\r\n\t\tif ( $.ui.ddmanager ) {\r\n\t\t\t$.ui.ddmanager.current = this;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * - Position generation -\r\n\t\t * This block generates everything position related - it's the core of draggables.\r\n\t\t */\r\n\r\n\t\t//Cache the margins of the original element\r\n\t\tthis._cacheMargins();\r\n\r\n\t\t//Store the helper's css position\r\n\t\tthis.cssPosition = this.helper.css( \"position\" );\r\n\t\tthis.scrollParent = this.helper.scrollParent( true );\r\n\t\tthis.offsetParent = this.helper.offsetParent();\r\n\t\tthis.hasFixedAncestor = this.helper.parents().filter( function() {\r\n\t\t\t\treturn $( this ).css( \"position\" ) === \"fixed\";\r\n\t\t\t} ).length > 0;\r\n\r\n\t\t//The element's absolute position on the page minus margins\r\n\t\tthis.positionAbs = this.element.offset();\r\n\t\tthis._refreshOffsets( event );\r\n\r\n\t\t//Generate the original position\r\n\t\tthis.originalPosition = this.position = this._generatePosition( event, false );\r\n\t\tthis.originalPageX = event.pageX;\r\n\t\tthis.originalPageY = event.pageY;\r\n\r\n\t\t//Adjust the mouse offset relative to the helper if \"cursorAt\" is supplied\r\n\t\t( o.cursorAt && this._adjustOffsetFromHelper( o.cursorAt ) );\r\n\r\n\t\t//Set a containment if given in the options\r\n\t\tthis._setContainment();\r\n\r\n\t\t//Trigger event + callbacks\r\n\t\tif ( this._trigger( \"start\", event ) === false ) {\r\n\t\t\tthis._clear();\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//Recache the helper size\r\n\t\tthis._cacheHelperProportions();\r\n\r\n\t\t//Prepare the droppable offsets\r\n\t\tif ( $.ui.ddmanager && !o.dropBehaviour ) {\r\n\t\t\t$.ui.ddmanager.prepareOffsets( this, event );\r\n\t\t}\r\n\r\n\t\t// Execute the drag once - this causes the helper not to be visible before getting its\r\n\t\t// correct position\r\n\t\tthis._mouseDrag( event, true );\r\n\r\n\t\t// If the ddmanager is used for droppables, inform the manager that dragging has started\r\n\t\t// (see #5003)\r\n\t\tif ( $.ui.ddmanager ) {\r\n\t\t\t$.ui.ddmanager.dragStart( this, event );\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_refreshOffsets: function( event ) {\r\n\t\tthis.offset = {\r\n\t\t\ttop: this.positionAbs.top - this.margins.top,\r\n\t\t\tleft: this.positionAbs.left - this.margins.left,\r\n\t\t\tscroll: false,\r\n\t\t\tparent: this._getParentOffset(),\r\n\t\t\trelative: this._getRelativeOffset()\r\n\t\t};\r\n\r\n\t\tthis.offset.click = {\r\n\t\t\tleft: event.pageX - this.offset.left,\r\n\t\t\ttop: event.pageY - this.offset.top\r\n\t\t};\r\n\t},\r\n\r\n\t_mouseDrag: function( event, noPropagation ) {\r\n\r\n\t\t// reset any necessary cached properties (see #5009)\r\n\t\tif ( this.hasFixedAncestor ) {\r\n\t\t\tthis.offset.parent = this._getParentOffset();\r\n\t\t}\r\n\r\n\t\t//Compute the helpers position\r\n\t\tthis.position = this._generatePosition( event, true );\r\n\t\tthis.positionAbs = this._convertPositionTo( \"absolute\" );\r\n\r\n\t\t//Call plugins and callbacks and use the resulting position if something is returned\r\n\t\tif ( !noPropagation ) {\r\n\t\t\tvar ui = this._uiHash();\r\n\t\t\tif ( this._trigger( \"drag\", event, ui ) === false ) {\r\n\t\t\t\tthis._mouseUp( new $.Event( \"mouseup\", event ) );\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.position = ui.position;\r\n\t\t}\r\n\r\n\t\tthis.helper[ 0 ].style.left = this.position.left + \"px\";\r\n\t\tthis.helper[ 0 ].style.top = this.position.top + \"px\";\r\n\r\n\t\tif ( $.ui.ddmanager ) {\r\n\t\t\t$.ui.ddmanager.drag( this, event );\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_mouseStop: function( event ) {\r\n\r\n\t\t//If we are using droppables, inform the manager about the drop\r\n\t\tvar that = this,\r\n\t\t\tdropped = false;\r\n\t\tif ( $.ui.ddmanager && !this.options.dropBehaviour ) {\r\n\t\t\tdropped = $.ui.ddmanager.drop( this, event );\r\n\t\t}\r\n\r\n\t\t//if a drop comes from outside (a sortable)\r\n\t\tif ( this.dropped ) {\r\n\t\t\tdropped = this.dropped;\r\n\t\t\tthis.dropped = false;\r\n\t\t}\r\n\r\n\t\tif ( ( this.options.revert === \"invalid\" && !dropped ) ||\r\n\t\t\t\t( this.options.revert === \"valid\" && dropped ) ||\r\n\t\t\t\tthis.options.revert === true || ( $.isFunction( this.options.revert ) &&\r\n\t\t\t\tthis.options.revert.call( this.element, dropped ) )\r\n\t\t) {\r\n\t\t\t$( this.helper ).animate(\r\n\t\t\t\tthis.originalPosition,\r\n\t\t\t\tparseInt( this.options.revertDuration, 10 ),\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tif ( that._trigger( \"stop\", event ) !== false ) {\r\n\t\t\t\t\t\tthat._clear();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tif ( this._trigger( \"stop\", event ) !== false ) {\r\n\t\t\t\tthis._clear();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_mouseUp: function( event ) {\r\n\t\tthis._unblockFrames();\r\n\r\n\t\t// If the ddmanager is used for droppables, inform the manager that dragging has stopped\r\n\t\t// (see #5003)\r\n\t\tif ( $.ui.ddmanager ) {\r\n\t\t\t$.ui.ddmanager.dragStop( this, event );\r\n\t\t}\r\n\r\n\t\t// Only need to focus if the event occurred on the draggable itself, see #10527\r\n\t\tif ( this.handleElement.is( event.target ) ) {\r\n\r\n\t\t\t// The interaction is over; whether or not the click resulted in a drag,\r\n\t\t\t// focus the element\r\n\t\t\tthis.element.trigger( \"focus\" );\r\n\t\t}\r\n\r\n\t\treturn $.ui.mouse.prototype._mouseUp.call( this, event );\r\n\t},\r\n\r\n\tcancel: function() {\r\n\r\n\t\tif ( this.helper.is( \".ui-draggable-dragging\" ) ) {\r\n\t\t\tthis._mouseUp( new $.Event( \"mouseup\", { target: this.element[ 0 ] } ) );\r\n\t\t} else {\r\n\t\t\tthis._clear();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t_getHandle: function( event ) {\r\n\t\treturn this.options.handle ?\r\n\t\t\t!!$( event.target ).closest( this.element.find( this.options.handle ) ).length :\r\n\t\t\ttrue;\r\n\t},\r\n\r\n\t_setHandleClassName: function() {\r\n\t\tthis.handleElement = this.options.handle ?\r\n\t\t\tthis.element.find( this.options.handle ) : this.element;\r\n\t\tthis._addClass( this.handleElement, \"ui-draggable-handle\" );\r\n\t},\r\n\r\n\t_removeHandleClassName: function() {\r\n\t\tthis._removeClass( this.handleElement, \"ui-draggable-handle\" );\r\n\t},\r\n\r\n\t_createHelper: function( event ) {\r\n\r\n\t\tvar o = this.options,\r\n\t\t\thelperIsFunction = $.isFunction( o.helper ),\r\n\t\t\thelper = helperIsFunction ?\r\n\t\t\t\t$( o.helper.apply( this.element[ 0 ], [ event ] ) ) :\r\n\t\t\t\t( o.helper === \"clone\" ?\r\n\t\t\t\t\tthis.element.clone().removeAttr( \"id\" ) :\r\n\t\t\t\t\tthis.element );\r\n\r\n\t\tif ( !helper.parents( \"body\" ).length ) {\r\n\t\t\thelper.appendTo( ( o.appendTo === \"parent\" ?\r\n\t\t\t\tthis.element[ 0 ].parentNode :\r\n\t\t\t\to.appendTo ) );\r\n\t\t}\r\n\r\n\t\t// Http://bugs.jqueryui.com/ticket/9446\r\n\t\t// a helper function can return the original element\r\n\t\t// which wouldn't have been set to relative in _create\r\n\t\tif ( helperIsFunction && helper[ 0 ] === this.element[ 0 ] ) {\r\n\t\t\tthis._setPositionRelative();\r\n\t\t}\r\n\r\n\t\tif ( helper[ 0 ] !== this.element[ 0 ] &&\r\n\t\t\t\t!( /(fixed|absolute)/ ).test( helper.css( \"position\" ) ) ) {\r\n\t\t\thelper.css( \"position\", \"absolute\" );\r\n\t\t}\r\n\r\n\t\treturn helper;\r\n\r\n\t},\r\n\r\n\t_setPositionRelative: function() {\r\n\t\tif ( !( /^(?:r|a|f)/ ).test( this.element.css( \"position\" ) ) ) {\r\n\t\t\tthis.element[ 0 ].style.position = \"relative\";\r\n\t\t}\r\n\t},\r\n\r\n\t_adjustOffsetFromHelper: function( obj ) {\r\n\t\tif ( typeof obj === \"string\" ) {\r\n\t\t\tobj = obj.split( \" \" );\r\n\t\t}\r\n\t\tif ( $.isArray( obj ) ) {\r\n\t\t\tobj = { left: +obj[ 0 ], top: +obj[ 1 ] || 0 };\r\n\t\t}\r\n\t\tif ( \"left\" in obj ) {\r\n\t\t\tthis.offset.click.left = obj.left + this.margins.left;\r\n\t\t}\r\n\t\tif ( \"right\" in obj ) {\r\n\t\t\tthis.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;\r\n\t\t}\r\n\t\tif ( \"top\" in obj ) {\r\n\t\t\tthis.offset.click.top = obj.top + this.margins.top;\r\n\t\t}\r\n\t\tif ( \"bottom\" in obj ) {\r\n\t\t\tthis.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;\r\n\t\t}\r\n\t},\r\n\r\n\t_isRootNode: function( element ) {\r\n\t\treturn ( /(html|body)/i ).test( element.tagName ) || element === this.document[ 0 ];\r\n\t},\r\n\r\n\t_getParentOffset: function() {\r\n\r\n\t\t//Get the offsetParent and cache its position\r\n\t\tvar po = this.offsetParent.offset(),\r\n\t\t\tdocument = this.document[ 0 ];\r\n\r\n\t\t// This is a special case where we need to modify a offset calculated on start, since the\r\n\t\t// following happened:\r\n\t\t// 1. The position of the helper is absolute, so it's position is calculated based on the\r\n\t\t// next positioned parent\r\n\t\t// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't\r\n\t\t// the document, which means that the scroll is included in the initial calculation of the\r\n\t\t// offset of the parent, and never recalculated upon drag\r\n\t\tif ( this.cssPosition === \"absolute\" && this.scrollParent[ 0 ] !== document &&\r\n\t\t\t\t$.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) {\r\n\t\t\tpo.left += this.scrollParent.scrollLeft();\r\n\t\t\tpo.top += this.scrollParent.scrollTop();\r\n\t\t}\r\n\r\n\t\tif ( this._isRootNode( this.offsetParent[ 0 ] ) ) {\r\n\t\t\tpo = { top: 0, left: 0 };\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: po.top + ( parseInt( this.offsetParent.css( \"borderTopWidth\" ), 10 ) || 0 ),\r\n\t\t\tleft: po.left + ( parseInt( this.offsetParent.css( \"borderLeftWidth\" ), 10 ) || 0 )\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t_getRelativeOffset: function() {\r\n\t\tif ( this.cssPosition !== \"relative\" ) {\r\n\t\t\treturn { top: 0, left: 0 };\r\n\t\t}\r\n\r\n\t\tvar p = this.element.position(),\r\n\t\t\tscrollIsRootNode = this._isRootNode( this.scrollParent[ 0 ] );\r\n\r\n\t\treturn {\r\n\t\t\ttop: p.top - ( parseInt( this.helper.css( \"top\" ), 10 ) || 0 ) +\r\n\t\t\t\t( !scrollIsRootNode ? this.scrollParent.scrollTop() : 0 ),\r\n\t\t\tleft: p.left - ( parseInt( this.helper.css( \"left\" ), 10 ) || 0 ) +\r\n\t\t\t\t( !scrollIsRootNode ? this.scrollParent.scrollLeft() : 0 )\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t_cacheMargins: function() {\r\n\t\tthis.margins = {\r\n\t\t\tleft: ( parseInt( this.element.css( \"marginLeft\" ), 10 ) || 0 ),\r\n\t\t\ttop: ( parseInt( this.element.css( \"marginTop\" ), 10 ) || 0 ),\r\n\t\t\tright: ( parseInt( this.element.css( \"marginRight\" ), 10 ) || 0 ),\r\n\t\t\tbottom: ( parseInt( this.element.css( \"marginBottom\" ), 10 ) || 0 )\r\n\t\t};\r\n\t},\r\n\r\n\t_cacheHelperProportions: function() {\r\n\t\tthis.helperProportions = {\r\n\t\t\twidth: this.helper.outerWidth(),\r\n\t\t\theight: this.helper.outerHeight()\r\n\t\t};\r\n\t},\r\n\r\n\t_setContainment: function() {\r\n\r\n\t\tvar isUserScrollable, c, ce,\r\n\t\t\to = this.options,\r\n\t\t\tdocument = this.document[ 0 ];\r\n\r\n\t\tthis.relativeContainer = null;\r\n\r\n\t\tif ( !o.containment ) {\r\n\t\t\tthis.containment = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( o.containment === \"window\" ) {\r\n\t\t\tthis.containment = [\r\n\t\t\t\t$( window ).scrollLeft() - this.offset.relative.left - this.offset.parent.left,\r\n\t\t\t\t$( window ).scrollTop() - this.offset.relative.top - this.offset.parent.top,\r\n\t\t\t\t$( window ).scrollLeft() + $( window ).width() -\r\n\t\t\t\t\tthis.helperProportions.width - this.margins.left,\r\n\t\t\t\t$( window ).scrollTop() +\r\n\t\t\t\t\t( $( window ).height() || document.body.parentNode.scrollHeight ) -\r\n\t\t\t\t\tthis.helperProportions.height - this.margins.top\r\n\t\t\t];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( o.containment === \"document\" ) {\r\n\t\t\tthis.containment = [\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\t$( document ).width() - this.helperProportions.width - this.margins.left,\r\n\t\t\t\t( $( document ).height() || document.body.parentNode.scrollHeight ) -\r\n\t\t\t\t\tthis.helperProportions.height - this.margins.top\r\n\t\t\t];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( o.containment.constructor === Array ) {\r\n\t\t\tthis.containment = o.containment;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( o.containment === \"parent\" ) {\r\n\t\t\to.containment = this.helper[ 0 ].parentNode;\r\n\t\t}\r\n\r\n\t\tc = $( o.containment );\r\n\t\tce = c[ 0 ];\r\n\r\n\t\tif ( !ce ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tisUserScrollable = /(scroll|auto)/.test( c.css( \"overflow\" ) );\r\n\r\n\t\tthis.containment = [\r\n\t\t\t( parseInt( c.css( \"borderLeftWidth\" ), 10 ) || 0 ) +\r\n\t\t\t\t( parseInt( c.css( \"paddingLeft\" ), 10 ) || 0 ),\r\n\t\t\t( parseInt( c.css( \"borderTopWidth\" ), 10 ) || 0 ) +\r\n\t\t\t\t( parseInt( c.css( \"paddingTop\" ), 10 ) || 0 ),\r\n\t\t\t( isUserScrollable ? Math.max( ce.scrollWidth, ce.offsetWidth ) : ce.offsetWidth ) -\r\n\t\t\t\t( parseInt( c.css( \"borderRightWidth\" ), 10 ) || 0 ) -\r\n\t\t\t\t( parseInt( c.css( \"paddingRight\" ), 10 ) || 0 ) -\r\n\t\t\t\tthis.helperProportions.width -\r\n\t\t\t\tthis.margins.left -\r\n\t\t\t\tthis.margins.right,\r\n\t\t\t( isUserScrollable ? Math.max( ce.scrollHeight, ce.offsetHeight ) : ce.offsetHeight ) -\r\n\t\t\t\t( parseInt( c.css( \"borderBottomWidth\" ), 10 ) || 0 ) -\r\n\t\t\t\t( parseInt( c.css( \"paddingBottom\" ), 10 ) || 0 ) -\r\n\t\t\t\tthis.helperProportions.height -\r\n\t\t\t\tthis.margins.top -\r\n\t\t\t\tthis.margins.bottom\r\n\t\t];\r\n\t\tthis.relativeContainer = c;\r\n\t},\r\n\r\n\t_convertPositionTo: function( d, pos ) {\r\n\r\n\t\tif ( !pos ) {\r\n\t\t\tpos = this.position;\r\n\t\t}\r\n\r\n\t\tvar mod = d === \"absolute\" ? 1 : -1,\r\n\t\t\tscrollIsRootNode = this._isRootNode( this.scrollParent[ 0 ] );\r\n\r\n\t\treturn {\r\n\t\t\ttop: (\r\n\r\n\t\t\t\t// The absolute mouse position\r\n\t\t\t\tpos.top\t+\r\n\r\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.relative.top * mod +\r\n\r\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\tthis.offset.parent.top * mod -\r\n\t\t\t\t( ( this.cssPosition === \"fixed\" ?\r\n\t\t\t\t\t-this.offset.scroll.top :\r\n\t\t\t\t\t( scrollIsRootNode ? 0 : this.offset.scroll.top ) ) * mod )\r\n\t\t\t),\r\n\t\t\tleft: (\r\n\r\n\t\t\t\t// The absolute mouse position\r\n\t\t\t\tpos.left +\r\n\r\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.relative.left * mod +\r\n\r\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\tthis.offset.parent.left * mod\t-\r\n\t\t\t\t( ( this.cssPosition === \"fixed\" ?\r\n\t\t\t\t\t-this.offset.scroll.left :\r\n\t\t\t\t\t( scrollIsRootNode ? 0 : this.offset.scroll.left ) ) * mod )\r\n\t\t\t)\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t_generatePosition: function( event, constrainPosition ) {\r\n\r\n\t\tvar containment, co, top, left,\r\n\t\t\to = this.options,\r\n\t\t\tscrollIsRootNode = this._isRootNode( this.scrollParent[ 0 ] ),\r\n\t\t\tpageX = event.pageX,\r\n\t\t\tpageY = event.pageY;\r\n\r\n\t\t// Cache the scroll\r\n\t\tif ( !scrollIsRootNode || !this.offset.scroll ) {\r\n\t\t\tthis.offset.scroll = {\r\n\t\t\t\ttop: this.scrollParent.scrollTop(),\r\n\t\t\t\tleft: this.scrollParent.scrollLeft()\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * - Position constraining -\r\n\t\t * Constrain the position to a mix of grid, containment.\r\n\t\t */\r\n\r\n\t\t// If we are not dragging yet, we won't check for options\r\n\t\tif ( constrainPosition ) {\r\n\t\t\tif ( this.containment ) {\r\n\t\t\t\tif ( this.relativeContainer ) {\r\n\t\t\t\t\tco = this.relativeContainer.offset();\r\n\t\t\t\t\tcontainment = [\r\n\t\t\t\t\t\tthis.containment[ 0 ] + co.left,\r\n\t\t\t\t\t\tthis.containment[ 1 ] + co.top,\r\n\t\t\t\t\t\tthis.containment[ 2 ] + co.left,\r\n\t\t\t\t\t\tthis.containment[ 3 ] + co.top\r\n\t\t\t\t\t];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontainment = this.containment;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( event.pageX - this.offset.click.left < containment[ 0 ] ) {\r\n\t\t\t\t\tpageX = containment[ 0 ] + this.offset.click.left;\r\n\t\t\t\t}\r\n\t\t\t\tif ( event.pageY - this.offset.click.top < containment[ 1 ] ) {\r\n\t\t\t\t\tpageY = containment[ 1 ] + this.offset.click.top;\r\n\t\t\t\t}\r\n\t\t\t\tif ( event.pageX - this.offset.click.left > containment[ 2 ] ) {\r\n\t\t\t\t\tpageX = containment[ 2 ] + this.offset.click.left;\r\n\t\t\t\t}\r\n\t\t\t\tif ( event.pageY - this.offset.click.top > containment[ 3 ] ) {\r\n\t\t\t\t\tpageY = containment[ 3 ] + this.offset.click.top;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( o.grid ) {\r\n\r\n\t\t\t\t//Check for grid elements set to 0 to prevent divide by 0 error causing invalid\r\n\t\t\t\t// argument errors in IE (see ticket #6950)\r\n\t\t\t\ttop = o.grid[ 1 ] ? this.originalPageY + Math.round( ( pageY -\r\n\t\t\t\t\tthis.originalPageY ) / o.grid[ 1 ] ) * o.grid[ 1 ] : this.originalPageY;\r\n\t\t\t\tpageY = containment ? ( ( top - this.offset.click.top >= containment[ 1 ] ||\r\n\t\t\t\t\ttop - this.offset.click.top > containment[ 3 ] ) ?\r\n\t\t\t\t\t\ttop :\r\n\t\t\t\t\t\t( ( top - this.offset.click.top >= containment[ 1 ] ) ?\r\n\t\t\t\t\t\t\ttop - o.grid[ 1 ] : top + o.grid[ 1 ] ) ) : top;\r\n\r\n\t\t\t\tleft = o.grid[ 0 ] ? this.originalPageX +\r\n\t\t\t\t\tMath.round( ( pageX - this.originalPageX ) / o.grid[ 0 ] ) * o.grid[ 0 ] :\r\n\t\t\t\t\tthis.originalPageX;\r\n\t\t\t\tpageX = containment ? ( ( left - this.offset.click.left >= containment[ 0 ] ||\r\n\t\t\t\t\tleft - this.offset.click.left > containment[ 2 ] ) ?\r\n\t\t\t\t\t\tleft :\r\n\t\t\t\t\t\t( ( left - this.offset.click.left >= containment[ 0 ] ) ?\r\n\t\t\t\t\t\t\tleft - o.grid[ 0 ] : left + o.grid[ 0 ] ) ) : left;\r\n\t\t\t}\r\n\r\n\t\t\tif ( o.axis === \"y\" ) {\r\n\t\t\t\tpageX = this.originalPageX;\r\n\t\t\t}\r\n\r\n\t\t\tif ( o.axis === \"x\" ) {\r\n\t\t\t\tpageY = this.originalPageY;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: (\r\n\r\n\t\t\t\t// The absolute mouse position\r\n\t\t\t\tpageY -\r\n\r\n\t\t\t\t// Click offset (relative to the element)\r\n\t\t\t\tthis.offset.click.top -\r\n\r\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.relative.top -\r\n\r\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\tthis.offset.parent.top +\r\n\t\t\t\t( this.cssPosition === \"fixed\" ?\r\n\t\t\t\t\t-this.offset.scroll.top :\r\n\t\t\t\t\t( scrollIsRootNode ? 0 : this.offset.scroll.top ) )\r\n\t\t\t),\r\n\t\t\tleft: (\r\n\r\n\t\t\t\t// The absolute mouse position\r\n\t\t\t\tpageX -\r\n\r\n\t\t\t\t// Click offset (relative to the element)\r\n\t\t\t\tthis.offset.click.left -\r\n\r\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.relative.left -\r\n\r\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\tthis.offset.parent.left +\r\n\t\t\t\t( this.cssPosition === \"fixed\" ?\r\n\t\t\t\t\t-this.offset.scroll.left :\r\n\t\t\t\t\t( scrollIsRootNode ? 0 : this.offset.scroll.left ) )\r\n\t\t\t)\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t_clear: function() {\r\n\t\tthis._removeClass( this.helper, \"ui-draggable-dragging\" );\r\n\t\tif ( this.helper[ 0 ] !== this.element[ 0 ] && !this.cancelHelperRemoval ) {\r\n\t\t\tthis.helper.remove();\r\n\t\t}\r\n\t\tthis.helper = null;\r\n\t\tthis.cancelHelperRemoval = false;\r\n\t\tif ( this.destroyOnClear ) {\r\n\t\t\tthis.destroy();\r\n\t\t}\r\n\t},\r\n\r\n\t// From now on bulk stuff - mainly helpers\r\n\r\n\t_trigger: function( type, event, ui ) {\r\n\t\tui = ui || this._uiHash();\r\n\t\t$.ui.plugin.call( this, type, [ event, ui, this ], true );\r\n\r\n\t\t// Absolute position and offset (see #6884 ) have to be recalculated after plugins\r\n\t\tif ( /^(drag|start|stop)/.test( type ) ) {\r\n\t\t\tthis.positionAbs = this._convertPositionTo( \"absolute\" );\r\n\t\t\tui.offset = this.positionAbs;\r\n\t\t}\r\n\t\treturn $.Widget.prototype._trigger.call( this, type, event, ui );\r\n\t},\r\n\r\n\tplugins: {},\r\n\r\n\t_uiHash: function() {\r\n\t\treturn {\r\n\t\t\thelper: this.helper,\r\n\t\t\tposition: this.position,\r\n\t\t\toriginalPosition: this.originalPosition,\r\n\t\t\toffset: this.positionAbs\r\n\t\t};\r\n\t}\r\n\r\n} );\r\n\r\n$.ui.plugin.add( \"draggable\", \"connectToSortable\", {\r\n\tstart: function( event, ui, draggable ) {\r\n\t\tvar uiSortable = $.extend( {}, ui, {\r\n\t\t\titem: draggable.element\r\n\t\t} );\r\n\r\n\t\tdraggable.sortables = [];\r\n\t\t$( draggable.options.connectToSortable ).each( function() {\r\n\t\t\tvar sortable = $( this ).sortable( \"instance\" );\r\n\r\n\t\t\tif ( sortable && !sortable.options.disabled ) {\r\n\t\t\t\tdraggable.sortables.push( sortable );\r\n\r\n\t\t\t\t// RefreshPositions is called at drag start to refresh the containerCache\r\n\t\t\t\t// which is used in drag. This ensures it's initialized and synchronized\r\n\t\t\t\t// with any changes that might have happened on the page since initialization.\r\n\t\t\t\tsortable.refreshPositions();\r\n\t\t\t\tsortable._trigger( \"activate\", event, uiSortable );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\tstop: function( event, ui, draggable ) {\r\n\t\tvar uiSortable = $.extend( {}, ui, {\r\n\t\t\titem: draggable.element\r\n\t\t} );\r\n\r\n\t\tdraggable.cancelHelperRemoval = false;\r\n\r\n\t\t$.each( draggable.sortables, function() {\r\n\t\t\tvar sortable = this;\r\n\r\n\t\t\tif ( sortable.isOver ) {\r\n\t\t\t\tsortable.isOver = 0;\r\n\r\n\t\t\t\t// Allow this sortable to handle removing the helper\r\n\t\t\t\tdraggable.cancelHelperRemoval = true;\r\n\t\t\t\tsortable.cancelHelperRemoval = false;\r\n\r\n\t\t\t\t// Use _storedCSS To restore properties in the sortable,\r\n\t\t\t\t// as this also handles revert (#9675) since the draggable\r\n\t\t\t\t// may have modified them in unexpected ways (#8809)\r\n\t\t\t\tsortable._storedCSS = {\r\n\t\t\t\t\tposition: sortable.placeholder.css( \"position\" ),\r\n\t\t\t\t\ttop: sortable.placeholder.css( \"top\" ),\r\n\t\t\t\t\tleft: sortable.placeholder.css( \"left\" )\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsortable._mouseStop( event );\r\n\r\n\t\t\t\t// Once drag has ended, the sortable should return to using\r\n\t\t\t\t// its original helper, not the shared helper from draggable\r\n\t\t\t\tsortable.options.helper = sortable.options._helper;\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Prevent this Sortable from removing the helper.\r\n\t\t\t\t// However, don't set the draggable to remove the helper\r\n\t\t\t\t// either as another connected Sortable may yet handle the removal.\r\n\t\t\t\tsortable.cancelHelperRemoval = true;\r\n\r\n\t\t\t\tsortable._trigger( \"deactivate\", event, uiSortable );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\tdrag: function( event, ui, draggable ) {\r\n\t\t$.each( draggable.sortables, function() {\r\n\t\t\tvar innermostIntersecting = false,\r\n\t\t\t\tsortable = this;\r\n\r\n\t\t\t// Copy over variables that sortable's _intersectsWith uses\r\n\t\t\tsortable.positionAbs = draggable.positionAbs;\r\n\t\t\tsortable.helperProportions = draggable.helperProportions;\r\n\t\t\tsortable.offset.click = draggable.offset.click;\r\n\r\n\t\t\tif ( sortable._intersectsWith( sortable.containerCache ) ) {\r\n\t\t\t\tinnermostIntersecting = true;\r\n\r\n\t\t\t\t$.each( draggable.sortables, function() {\r\n\r\n\t\t\t\t\t// Copy over variables that sortable's _intersectsWith uses\r\n\t\t\t\t\tthis.positionAbs = draggable.positionAbs;\r\n\t\t\t\t\tthis.helperProportions = draggable.helperProportions;\r\n\t\t\t\t\tthis.offset.click = draggable.offset.click;\r\n\r\n\t\t\t\t\tif ( this !== sortable &&\r\n\t\t\t\t\t\t\tthis._intersectsWith( this.containerCache ) &&\r\n\t\t\t\t\t\t\t$.contains( sortable.element[ 0 ], this.element[ 0 ] ) ) {\r\n\t\t\t\t\t\tinnermostIntersecting = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn innermostIntersecting;\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\tif ( innermostIntersecting ) {\r\n\r\n\t\t\t\t// If it intersects, we use a little isOver variable and set it once,\r\n\t\t\t\t// so that the move-in stuff gets fired only once.\r\n\t\t\t\tif ( !sortable.isOver ) {\r\n\t\t\t\t\tsortable.isOver = 1;\r\n\r\n\t\t\t\t\t// Store draggable's parent in case we need to reappend to it later.\r\n\t\t\t\t\tdraggable._parent = ui.helper.parent();\r\n\r\n\t\t\t\t\tsortable.currentItem = ui.helper\r\n\t\t\t\t\t\t.appendTo( sortable.element )\r\n\t\t\t\t\t\t.data( \"ui-sortable-item\", true );\r\n\r\n\t\t\t\t\t// Store helper option to later restore it\r\n\t\t\t\t\tsortable.options._helper = sortable.options.helper;\r\n\r\n\t\t\t\t\tsortable.options.helper = function() {\r\n\t\t\t\t\t\treturn ui.helper[ 0 ];\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Fire the start events of the sortable with our passed browser event,\r\n\t\t\t\t\t// and our own helper (so it doesn't create a new one)\r\n\t\t\t\t\tevent.target = sortable.currentItem[ 0 ];\r\n\t\t\t\t\tsortable._mouseCapture( event, true );\r\n\t\t\t\t\tsortable._mouseStart( event, true, true );\r\n\r\n\t\t\t\t\t// Because the browser event is way off the new appended portlet,\r\n\t\t\t\t\t// modify necessary variables to reflect the changes\r\n\t\t\t\t\tsortable.offset.click.top = draggable.offset.click.top;\r\n\t\t\t\t\tsortable.offset.click.left = draggable.offset.click.left;\r\n\t\t\t\t\tsortable.offset.parent.left -= draggable.offset.parent.left -\r\n\t\t\t\t\t\tsortable.offset.parent.left;\r\n\t\t\t\t\tsortable.offset.parent.top -= draggable.offset.parent.top -\r\n\t\t\t\t\t\tsortable.offset.parent.top;\r\n\r\n\t\t\t\t\tdraggable._trigger( \"toSortable\", event );\r\n\r\n\t\t\t\t\t// Inform draggable that the helper is in a valid drop zone,\r\n\t\t\t\t\t// used solely in the revert option to handle \"valid/invalid\".\r\n\t\t\t\t\tdraggable.dropped = sortable.element;\r\n\r\n\t\t\t\t\t// Need to refreshPositions of all sortables in the case that\r\n\t\t\t\t\t// adding to one sortable changes the location of the other sortables (#9675)\r\n\t\t\t\t\t$.each( draggable.sortables, function() {\r\n\t\t\t\t\t\tthis.refreshPositions();\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t// Hack so receive/update callbacks work (mostly)\r\n\t\t\t\t\tdraggable.currentItem = draggable.element;\r\n\t\t\t\t\tsortable.fromOutside = draggable;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( sortable.currentItem ) {\r\n\t\t\t\t\tsortable._mouseDrag( event );\r\n\r\n\t\t\t\t\t// Copy the sortable's position because the draggable's can potentially reflect\r\n\t\t\t\t\t// a relative position, while sortable is always absolute, which the dragged\r\n\t\t\t\t\t// element has now become. (#8809)\r\n\t\t\t\t\tui.position = sortable.position;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// If it doesn't intersect with the sortable, and it intersected before,\r\n\t\t\t\t// we fake the drag stop of the sortable, but make sure it doesn't remove\r\n\t\t\t\t// the helper by using cancelHelperRemoval.\r\n\t\t\t\tif ( sortable.isOver ) {\r\n\r\n\t\t\t\t\tsortable.isOver = 0;\r\n\t\t\t\t\tsortable.cancelHelperRemoval = true;\r\n\r\n\t\t\t\t\t// Calling sortable's mouseStop would trigger a revert,\r\n\t\t\t\t\t// so revert must be temporarily false until after mouseStop is called.\r\n\t\t\t\t\tsortable.options._revert = sortable.options.revert;\r\n\t\t\t\t\tsortable.options.revert = false;\r\n\r\n\t\t\t\t\tsortable._trigger( \"out\", event, sortable._uiHash( sortable ) );\r\n\t\t\t\t\tsortable._mouseStop( event, true );\r\n\r\n\t\t\t\t\t// Restore sortable behaviors that were modfied\r\n\t\t\t\t\t// when the draggable entered the sortable area (#9481)\r\n\t\t\t\t\tsortable.options.revert = sortable.options._revert;\r\n\t\t\t\t\tsortable.options.helper = sortable.options._helper;\r\n\r\n\t\t\t\t\tif ( sortable.placeholder ) {\r\n\t\t\t\t\t\tsortable.placeholder.remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Restore and recalculate the draggable's offset considering the sortable\r\n\t\t\t\t\t// may have modified them in unexpected ways. (#8809, #10669)\r\n\t\t\t\t\tui.helper.appendTo( draggable._parent );\r\n\t\t\t\t\tdraggable._refreshOffsets( event );\r\n\t\t\t\t\tui.position = draggable._generatePosition( event, true );\r\n\r\n\t\t\t\t\tdraggable._trigger( \"fromSortable\", event );\r\n\r\n\t\t\t\t\t// Inform draggable that the helper is no longer in a valid drop zone\r\n\t\t\t\t\tdraggable.dropped = false;\r\n\r\n\t\t\t\t\t// Need to refreshPositions of all sortables just in case removing\r\n\t\t\t\t\t// from one sortable changes the location of other sortables (#9675)\r\n\t\t\t\t\t$.each( draggable.sortables, function() {\r\n\t\t\t\t\t\tthis.refreshPositions();\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n$.ui.plugin.add( \"draggable\", \"cursor\", {\r\n\tstart: function( event, ui, instance ) {\r\n\t\tvar t = $( \"body\" ),\r\n\t\t\to = instance.options;\r\n\r\n\t\tif ( t.css( \"cursor\" ) ) {\r\n\t\t\to._cursor = t.css( \"cursor\" );\r\n\t\t}\r\n\t\tt.css( \"cursor\", o.cursor );\r\n\t},\r\n\tstop: function( event, ui, instance ) {\r\n\t\tvar o = instance.options;\r\n\t\tif ( o._cursor ) {\r\n\t\t\t$( \"body\" ).css( \"cursor\", o._cursor );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n$.ui.plugin.add( \"draggable\", \"opacity\", {\r\n\tstart: function( event, ui, instance ) {\r\n\t\tvar t = $( ui.helper ),\r\n\t\t\to = instance.options;\r\n\t\tif ( t.css( \"opacity\" ) ) {\r\n\t\t\to._opacity = t.css( \"opacity\" );\r\n\t\t}\r\n\t\tt.css( \"opacity\", o.opacity );\r\n\t},\r\n\tstop: function( event, ui, instance ) {\r\n\t\tvar o = instance.options;\r\n\t\tif ( o._opacity ) {\r\n\t\t\t$( ui.helper ).css( \"opacity\", o._opacity );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n$.ui.plugin.add( \"draggable\", \"scroll\", {\r\n\tstart: function( event, ui, i ) {\r\n\t\tif ( !i.scrollParentNotHidden ) {\r\n\t\t\ti.scrollParentNotHidden = i.helper.scrollParent( false );\r\n\t\t}\r\n\r\n\t\tif ( i.scrollParentNotHidden[ 0 ] !== i.document[ 0 ] &&\r\n\t\t\t\ti.scrollParentNotHidden[ 0 ].tagName !== \"HTML\" ) {\r\n\t\t\ti.overflowOffset = i.scrollParentNotHidden.offset();\r\n\t\t}\r\n\t},\r\n\tdrag: function( event, ui, i  ) {\r\n\r\n\t\tvar o = i.options,\r\n\t\t\tscrolled = false,\r\n\t\t\tscrollParent = i.scrollParentNotHidden[ 0 ],\r\n\t\t\tdocument = i.document[ 0 ];\r\n\r\n\t\tif ( scrollParent !== document && scrollParent.tagName !== \"HTML\" ) {\r\n\t\t\tif ( !o.axis || o.axis !== \"x\" ) {\r\n\t\t\t\tif ( ( i.overflowOffset.top + scrollParent.offsetHeight ) - event.pageY <\r\n\t\t\t\t\t\to.scrollSensitivity ) {\r\n\t\t\t\t\tscrollParent.scrollTop = scrolled = scrollParent.scrollTop + o.scrollSpeed;\r\n\t\t\t\t} else if ( event.pageY - i.overflowOffset.top < o.scrollSensitivity ) {\r\n\t\t\t\t\tscrollParent.scrollTop = scrolled = scrollParent.scrollTop - o.scrollSpeed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( !o.axis || o.axis !== \"y\" ) {\r\n\t\t\t\tif ( ( i.overflowOffset.left + scrollParent.offsetWidth ) - event.pageX <\r\n\t\t\t\t\t\to.scrollSensitivity ) {\r\n\t\t\t\t\tscrollParent.scrollLeft = scrolled = scrollParent.scrollLeft + o.scrollSpeed;\r\n\t\t\t\t} else if ( event.pageX - i.overflowOffset.left < o.scrollSensitivity ) {\r\n\t\t\t\t\tscrollParent.scrollLeft = scrolled = scrollParent.scrollLeft - o.scrollSpeed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( !o.axis || o.axis !== \"x\" ) {\r\n\t\t\t\tif ( event.pageY - $( document ).scrollTop() < o.scrollSensitivity ) {\r\n\t\t\t\t\tscrolled = $( document ).scrollTop( $( document ).scrollTop() - o.scrollSpeed );\r\n\t\t\t\t} else if ( $( window ).height() - ( event.pageY - $( document ).scrollTop() ) <\r\n\t\t\t\t\t\to.scrollSensitivity ) {\r\n\t\t\t\t\tscrolled = $( document ).scrollTop( $( document ).scrollTop() + o.scrollSpeed );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( !o.axis || o.axis !== \"y\" ) {\r\n\t\t\t\tif ( event.pageX - $( document ).scrollLeft() < o.scrollSensitivity ) {\r\n\t\t\t\t\tscrolled = $( document ).scrollLeft(\r\n\t\t\t\t\t\t$( document ).scrollLeft() - o.scrollSpeed\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if ( $( window ).width() - ( event.pageX - $( document ).scrollLeft() ) <\r\n\t\t\t\t\t\to.scrollSensitivity ) {\r\n\t\t\t\t\tscrolled = $( document ).scrollLeft(\r\n\t\t\t\t\t\t$( document ).scrollLeft() + o.scrollSpeed\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( scrolled !== false && $.ui.ddmanager && !o.dropBehaviour ) {\r\n\t\t\t$.ui.ddmanager.prepareOffsets( i, event );\r\n\t\t}\r\n\r\n\t}\r\n} );\r\n\r\n$.ui.plugin.add( \"draggable\", \"snap\", {\r\n\tstart: function( event, ui, i ) {\r\n\r\n\t\tvar o = i.options;\r\n\r\n\t\ti.snapElements = [];\r\n\r\n\t\t$( o.snap.constructor !== String ? ( o.snap.items || \":data(ui-draggable)\" ) : o.snap )\r\n\t\t\t.each( function() {\r\n\t\t\t\tvar $t = $( this ),\r\n\t\t\t\t\t$o = $t.offset();\r\n\t\t\t\tif ( this !== i.element[ 0 ] ) {\r\n\t\t\t\t\ti.snapElements.push( {\r\n\t\t\t\t\t\titem: this,\r\n\t\t\t\t\t\twidth: $t.outerWidth(), height: $t.outerHeight(),\r\n\t\t\t\t\t\ttop: $o.top, left: $o.left\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t},\r\n\tdrag: function( event, ui, inst ) {\r\n\r\n\t\tvar ts, bs, ls, rs, l, r, t, b, i, first,\r\n\t\t\to = inst.options,\r\n\t\t\td = o.snapTolerance,\r\n\t\t\tx1 = ui.offset.left, x2 = x1 + inst.helperProportions.width,\r\n\t\t\ty1 = ui.offset.top, y2 = y1 + inst.helperProportions.height;\r\n\r\n\t\tfor ( i = inst.snapElements.length - 1; i >= 0; i-- ) {\r\n\r\n\t\t\tl = inst.snapElements[ i ].left - inst.margins.left;\r\n\t\t\tr = l + inst.snapElements[ i ].width;\r\n\t\t\tt = inst.snapElements[ i ].top - inst.margins.top;\r\n\t\t\tb = t + inst.snapElements[ i ].height;\r\n\r\n\t\t\tif ( x2 < l - d || x1 > r + d || y2 < t - d || y1 > b + d ||\r\n\t\t\t\t\t!$.contains( inst.snapElements[ i ].item.ownerDocument,\r\n\t\t\t\t\tinst.snapElements[ i ].item ) ) {\r\n\t\t\t\tif ( inst.snapElements[ i ].snapping ) {\r\n\t\t\t\t\t( inst.options.snap.release &&\r\n\t\t\t\t\t\tinst.options.snap.release.call(\r\n\t\t\t\t\t\t\tinst.element,\r\n\t\t\t\t\t\t\tevent,\r\n\t\t\t\t\t\t\t$.extend( inst._uiHash(), { snapItem: inst.snapElements[ i ].item } )\r\n\t\t\t\t\t\t) );\r\n\t\t\t\t}\r\n\t\t\t\tinst.snapElements[ i ].snapping = false;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif ( o.snapMode !== \"inner\" ) {\r\n\t\t\t\tts = Math.abs( t - y2 ) <= d;\r\n\t\t\t\tbs = Math.abs( b - y1 ) <= d;\r\n\t\t\t\tls = Math.abs( l - x2 ) <= d;\r\n\t\t\t\trs = Math.abs( r - x1 ) <= d;\r\n\t\t\t\tif ( ts ) {\r\n\t\t\t\t\tui.position.top = inst._convertPositionTo( \"relative\", {\r\n\t\t\t\t\t\ttop: t - inst.helperProportions.height,\r\n\t\t\t\t\t\tleft: 0\r\n\t\t\t\t\t} ).top;\r\n\t\t\t\t}\r\n\t\t\t\tif ( bs ) {\r\n\t\t\t\t\tui.position.top = inst._convertPositionTo( \"relative\", {\r\n\t\t\t\t\t\ttop: b,\r\n\t\t\t\t\t\tleft: 0\r\n\t\t\t\t\t} ).top;\r\n\t\t\t\t}\r\n\t\t\t\tif ( ls ) {\r\n\t\t\t\t\tui.position.left = inst._convertPositionTo( \"relative\", {\r\n\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\tleft: l - inst.helperProportions.width\r\n\t\t\t\t\t} ).left;\r\n\t\t\t\t}\r\n\t\t\t\tif ( rs ) {\r\n\t\t\t\t\tui.position.left = inst._convertPositionTo( \"relative\", {\r\n\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\tleft: r\r\n\t\t\t\t\t} ).left;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfirst = ( ts || bs || ls || rs );\r\n\r\n\t\t\tif ( o.snapMode !== \"outer\" ) {\r\n\t\t\t\tts = Math.abs( t - y1 ) <= d;\r\n\t\t\t\tbs = Math.abs( b - y2 ) <= d;\r\n\t\t\t\tls = Math.abs( l - x1 ) <= d;\r\n\t\t\t\trs = Math.abs( r - x2 ) <= d;\r\n\t\t\t\tif ( ts ) {\r\n\t\t\t\t\tui.position.top = inst._convertPositionTo( \"relative\", {\r\n\t\t\t\t\t\ttop: t,\r\n\t\t\t\t\t\tleft: 0\r\n\t\t\t\t\t} ).top;\r\n\t\t\t\t}\r\n\t\t\t\tif ( bs ) {\r\n\t\t\t\t\tui.position.top = inst._convertPositionTo( \"relative\", {\r\n\t\t\t\t\t\ttop: b - inst.helperProportions.height,\r\n\t\t\t\t\t\tleft: 0\r\n\t\t\t\t\t} ).top;\r\n\t\t\t\t}\r\n\t\t\t\tif ( ls ) {\r\n\t\t\t\t\tui.position.left = inst._convertPositionTo( \"relative\", {\r\n\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\tleft: l\r\n\t\t\t\t\t} ).left;\r\n\t\t\t\t}\r\n\t\t\t\tif ( rs ) {\r\n\t\t\t\t\tui.position.left = inst._convertPositionTo( \"relative\", {\r\n\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\tleft: r - inst.helperProportions.width\r\n\t\t\t\t\t} ).left;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( !inst.snapElements[ i ].snapping && ( ts || bs || ls || rs || first ) ) {\r\n\t\t\t\t( inst.options.snap.snap &&\r\n\t\t\t\t\tinst.options.snap.snap.call(\r\n\t\t\t\t\t\tinst.element,\r\n\t\t\t\t\t\tevent,\r\n\t\t\t\t\t\t$.extend( inst._uiHash(), {\r\n\t\t\t\t\t\t\tsnapItem: inst.snapElements[ i ].item\r\n\t\t\t\t\t\t} ) ) );\r\n\t\t\t}\r\n\t\t\tinst.snapElements[ i ].snapping = ( ts || bs || ls || rs || first );\r\n\r\n\t\t}\r\n\r\n\t}\r\n} );\r\n\r\n$.ui.plugin.add( \"draggable\", \"stack\", {\r\n\tstart: function( event, ui, instance ) {\r\n\t\tvar min,\r\n\t\t\to = instance.options,\r\n\t\t\tgroup = $.makeArray( $( o.stack ) ).sort( function( a, b ) {\r\n\t\t\t\treturn ( parseInt( $( a ).css( \"zIndex\" ), 10 ) || 0 ) -\r\n\t\t\t\t\t( parseInt( $( b ).css( \"zIndex\" ), 10 ) || 0 );\r\n\t\t\t} );\r\n\r\n\t\tif ( !group.length ) { return; }\r\n\r\n\t\tmin = parseInt( $( group[ 0 ] ).css( \"zIndex\" ), 10 ) || 0;\r\n\t\t$( group ).each( function( i ) {\r\n\t\t\t$( this ).css( \"zIndex\", min + i );\r\n\t\t} );\r\n\t\tthis.css( \"zIndex\", ( min + group.length ) );\r\n\t}\r\n} );\r\n\r\n$.ui.plugin.add( \"draggable\", \"zIndex\", {\r\n\tstart: function( event, ui, instance ) {\r\n\t\tvar t = $( ui.helper ),\r\n\t\t\to = instance.options;\r\n\r\n\t\tif ( t.css( \"zIndex\" ) ) {\r\n\t\t\to._zIndex = t.css( \"zIndex\" );\r\n\t\t}\r\n\t\tt.css( \"zIndex\", o.zIndex );\r\n\t},\r\n\tstop: function( event, ui, instance ) {\r\n\t\tvar o = instance.options;\r\n\r\n\t\tif ( o._zIndex ) {\r\n\t\t\t$( ui.helper ).css( \"zIndex\", o._zIndex );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nreturn $.ui.draggable;\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/droppable.js":"/*!\r\n * jQuery UI Droppable 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Droppable\r\n//>>group: Interactions\r\n//>>description: Enables drop targets for draggable elements.\r\n//>>docs: http://api.jqueryui.com/droppable/\r\n//>>demos: http://jqueryui.com/droppable/\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"./draggable\",\r\n\t\t\t\"./mouse\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\n$.widget( \"ui.droppable\", {\r\n\tversion: \"1.12.1\",\r\n\twidgetEventPrefix: \"drop\",\r\n\toptions: {\r\n\t\taccept: \"*\",\r\n\t\taddClasses: true,\r\n\t\tgreedy: false,\r\n\t\tscope: \"default\",\r\n\t\ttolerance: \"intersect\",\r\n\r\n\t\t// Callbacks\r\n\t\tactivate: null,\r\n\t\tdeactivate: null,\r\n\t\tdrop: null,\r\n\t\tout: null,\r\n\t\tover: null\r\n\t},\r\n\t_create: function() {\r\n\r\n\t\tvar proportions,\r\n\t\t\to = this.options,\r\n\t\t\taccept = o.accept;\r\n\r\n\t\tthis.isover = false;\r\n\t\tthis.isout = true;\r\n\r\n\t\tthis.accept = $.isFunction( accept ) ? accept : function( d ) {\r\n\t\t\treturn d.is( accept );\r\n\t\t};\r\n\r\n\t\tthis.proportions = function( /* valueToWrite */ ) {\r\n\t\t\tif ( arguments.length ) {\r\n\r\n\t\t\t\t// Store the droppable's proportions\r\n\t\t\t\tproportions = arguments[ 0 ];\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Retrieve or derive the droppable's proportions\r\n\t\t\t\treturn proportions ?\r\n\t\t\t\t\tproportions :\r\n\t\t\t\t\tproportions = {\r\n\t\t\t\t\t\twidth: this.element[ 0 ].offsetWidth,\r\n\t\t\t\t\t\theight: this.element[ 0 ].offsetHeight\r\n\t\t\t\t\t};\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._addToManager( o.scope );\r\n\r\n\t\to.addClasses && this._addClass( \"ui-droppable\" );\r\n\r\n\t},\r\n\r\n\t_addToManager: function( scope ) {\r\n\r\n\t\t// Add the reference and positions to the manager\r\n\t\t$.ui.ddmanager.droppables[ scope ] = $.ui.ddmanager.droppables[ scope ] || [];\r\n\t\t$.ui.ddmanager.droppables[ scope ].push( this );\r\n\t},\r\n\r\n\t_splice: function( drop ) {\r\n\t\tvar i = 0;\r\n\t\tfor ( ; i < drop.length; i++ ) {\r\n\t\t\tif ( drop[ i ] === this ) {\r\n\t\t\t\tdrop.splice( i, 1 );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tvar drop = $.ui.ddmanager.droppables[ this.options.scope ];\r\n\r\n\t\tthis._splice( drop );\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\r\n\t\tif ( key === \"accept\" ) {\r\n\t\t\tthis.accept = $.isFunction( value ) ? value : function( d ) {\r\n\t\t\t\treturn d.is( value );\r\n\t\t\t};\r\n\t\t} else if ( key === \"scope\" ) {\r\n\t\t\tvar drop = $.ui.ddmanager.droppables[ this.options.scope ];\r\n\r\n\t\t\tthis._splice( drop );\r\n\t\t\tthis._addToManager( value );\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\t},\r\n\r\n\t_activate: function( event ) {\r\n\t\tvar draggable = $.ui.ddmanager.current;\r\n\r\n\t\tthis._addActiveClass();\r\n\t\tif ( draggable ) {\r\n\t\t\tthis._trigger( \"activate\", event, this.ui( draggable ) );\r\n\t\t}\r\n\t},\r\n\r\n\t_deactivate: function( event ) {\r\n\t\tvar draggable = $.ui.ddmanager.current;\r\n\r\n\t\tthis._removeActiveClass();\r\n\t\tif ( draggable ) {\r\n\t\t\tthis._trigger( \"deactivate\", event, this.ui( draggable ) );\r\n\t\t}\r\n\t},\r\n\r\n\t_over: function( event ) {\r\n\r\n\t\tvar draggable = $.ui.ddmanager.current;\r\n\r\n\t\t// Bail if draggable and droppable are same element\r\n\t\tif ( !draggable || ( draggable.currentItem ||\r\n\t\t\t\tdraggable.element )[ 0 ] === this.element[ 0 ] ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( this.accept.call( this.element[ 0 ], ( draggable.currentItem ||\r\n\t\t\t\tdraggable.element ) ) ) {\r\n\t\t\tthis._addHoverClass();\r\n\t\t\tthis._trigger( \"over\", event, this.ui( draggable ) );\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_out: function( event ) {\r\n\r\n\t\tvar draggable = $.ui.ddmanager.current;\r\n\r\n\t\t// Bail if draggable and droppable are same element\r\n\t\tif ( !draggable || ( draggable.currentItem ||\r\n\t\t\t\tdraggable.element )[ 0 ] === this.element[ 0 ] ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( this.accept.call( this.element[ 0 ], ( draggable.currentItem ||\r\n\t\t\t\tdraggable.element ) ) ) {\r\n\t\t\tthis._removeHoverClass();\r\n\t\t\tthis._trigger( \"out\", event, this.ui( draggable ) );\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_drop: function( event, custom ) {\r\n\r\n\t\tvar draggable = custom || $.ui.ddmanager.current,\r\n\t\t\tchildrenIntersection = false;\r\n\r\n\t\t// Bail if draggable and droppable are same element\r\n\t\tif ( !draggable || ( draggable.currentItem ||\r\n\t\t\t\tdraggable.element )[ 0 ] === this.element[ 0 ] ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis.element\r\n\t\t\t.find( \":data(ui-droppable)\" )\r\n\t\t\t.not( \".ui-draggable-dragging\" )\r\n\t\t\t.each( function() {\r\n\t\t\t\tvar inst = $( this ).droppable( \"instance\" );\r\n\t\t\t\tif (\r\n\t\t\t\t\tinst.options.greedy &&\r\n\t\t\t\t\t!inst.options.disabled &&\r\n\t\t\t\t\tinst.options.scope === draggable.options.scope &&\r\n\t\t\t\t\tinst.accept.call(\r\n\t\t\t\t\t\tinst.element[ 0 ], ( draggable.currentItem || draggable.element )\r\n\t\t\t\t\t) &&\r\n\t\t\t\t\tintersect(\r\n\t\t\t\t\t\tdraggable,\r\n\t\t\t\t\t\t$.extend( inst, { offset: inst.element.offset() } ),\r\n\t\t\t\t\t\tinst.options.tolerance, event\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tchildrenIntersection = true;\r\n\t\t\t\t\treturn false; }\r\n\t\t\t} );\r\n\t\tif ( childrenIntersection ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif ( this.accept.call( this.element[ 0 ],\r\n\t\t\t\t( draggable.currentItem || draggable.element ) ) ) {\r\n\t\t\tthis._removeActiveClass();\r\n\t\t\tthis._removeHoverClass();\r\n\r\n\t\t\tthis._trigger( \"drop\", event, this.ui( draggable ) );\r\n\t\t\treturn this.element;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tui: function( c ) {\r\n\t\treturn {\r\n\t\t\tdraggable: ( c.currentItem || c.element ),\r\n\t\t\thelper: c.helper,\r\n\t\t\tposition: c.position,\r\n\t\t\toffset: c.positionAbs\r\n\t\t};\r\n\t},\r\n\r\n\t// Extension points just to make backcompat sane and avoid duplicating logic\r\n\t// TODO: Remove in 1.13 along with call to it below\r\n\t_addHoverClass: function() {\r\n\t\tthis._addClass( \"ui-droppable-hover\" );\r\n\t},\r\n\r\n\t_removeHoverClass: function() {\r\n\t\tthis._removeClass( \"ui-droppable-hover\" );\r\n\t},\r\n\r\n\t_addActiveClass: function() {\r\n\t\tthis._addClass( \"ui-droppable-active\" );\r\n\t},\r\n\r\n\t_removeActiveClass: function() {\r\n\t\tthis._removeClass( \"ui-droppable-active\" );\r\n\t}\r\n} );\r\n\r\nvar intersect = $.ui.intersect = ( function() {\r\n\tfunction isOverAxis( x, reference, size ) {\r\n\t\treturn ( x >= reference ) && ( x < ( reference + size ) );\r\n\t}\r\n\r\n\treturn function( draggable, droppable, toleranceMode, event ) {\r\n\r\n\t\tif ( !droppable.offset ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar x1 = ( draggable.positionAbs ||\r\n\t\t\t\tdraggable.position.absolute ).left + draggable.margins.left,\r\n\t\t\ty1 = ( draggable.positionAbs ||\r\n\t\t\t\tdraggable.position.absolute ).top + draggable.margins.top,\r\n\t\t\tx2 = x1 + draggable.helperProportions.width,\r\n\t\t\ty2 = y1 + draggable.helperProportions.height,\r\n\t\t\tl = droppable.offset.left,\r\n\t\t\tt = droppable.offset.top,\r\n\t\t\tr = l + droppable.proportions().width,\r\n\t\t\tb = t + droppable.proportions().height;\r\n\r\n\t\tswitch ( toleranceMode ) {\r\n\t\tcase \"fit\":\r\n\t\t\treturn ( l <= x1 && x2 <= r && t <= y1 && y2 <= b );\r\n\t\tcase \"intersect\":\r\n\t\t\treturn ( l < x1 + ( draggable.helperProportions.width / 2 ) && // Right Half\r\n\t\t\t\tx2 - ( draggable.helperProportions.width / 2 ) < r && // Left Half\r\n\t\t\t\tt < y1 + ( draggable.helperProportions.height / 2 ) && // Bottom Half\r\n\t\t\t\ty2 - ( draggable.helperProportions.height / 2 ) < b ); // Top Half\r\n\t\tcase \"pointer\":\r\n\t\t\treturn isOverAxis( event.pageY, t, droppable.proportions().height ) &&\r\n\t\t\t\tisOverAxis( event.pageX, l, droppable.proportions().width );\r\n\t\tcase \"touch\":\r\n\t\t\treturn (\r\n\t\t\t\t( y1 >= t && y1 <= b ) || // Top edge touching\r\n\t\t\t\t( y2 >= t && y2 <= b ) || // Bottom edge touching\r\n\t\t\t\t( y1 < t && y2 > b ) // Surrounded vertically\r\n\t\t\t) && (\r\n\t\t\t\t( x1 >= l && x1 <= r ) || // Left edge touching\r\n\t\t\t\t( x2 >= l && x2 <= r ) || // Right edge touching\r\n\t\t\t\t( x1 < l && x2 > r ) // Surrounded horizontally\r\n\t\t\t);\r\n\t\tdefault:\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n} )();\r\n\r\n/*\r\n\tThis manager tracks offsets of draggables and droppables\r\n*/\r\n$.ui.ddmanager = {\r\n\tcurrent: null,\r\n\tdroppables: { \"default\": [] },\r\n\tprepareOffsets: function( t, event ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tm = $.ui.ddmanager.droppables[ t.options.scope ] || [],\r\n\t\t\ttype = event ? event.type : null, // workaround for #2317\r\n\t\t\tlist = ( t.currentItem || t.element ).find( \":data(ui-droppable)\" ).addBack();\r\n\r\n\t\tdroppablesLoop: for ( i = 0; i < m.length; i++ ) {\r\n\r\n\t\t\t// No disabled and non-accepted\r\n\t\t\tif ( m[ i ].options.disabled || ( t && !m[ i ].accept.call( m[ i ].element[ 0 ],\r\n\t\t\t\t\t( t.currentItem || t.element ) ) ) ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Filter out elements in the current dragged item\r\n\t\t\tfor ( j = 0; j < list.length; j++ ) {\r\n\t\t\t\tif ( list[ j ] === m[ i ].element[ 0 ] ) {\r\n\t\t\t\t\tm[ i ].proportions().height = 0;\r\n\t\t\t\t\tcontinue droppablesLoop;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tm[ i ].visible = m[ i ].element.css( \"display\" ) !== \"none\";\r\n\t\t\tif ( !m[ i ].visible ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Activate the droppable if used directly from draggables\r\n\t\t\tif ( type === \"mousedown\" ) {\r\n\t\t\t\tm[ i ]._activate.call( m[ i ], event );\r\n\t\t\t}\r\n\r\n\t\t\tm[ i ].offset = m[ i ].element.offset();\r\n\t\t\tm[ i ].proportions( {\r\n\t\t\t\twidth: m[ i ].element[ 0 ].offsetWidth,\r\n\t\t\t\theight: m[ i ].element[ 0 ].offsetHeight\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\tdrop: function( draggable, event ) {\r\n\r\n\t\tvar dropped = false;\r\n\r\n\t\t// Create a copy of the droppables in case the list changes during the drop (#9116)\r\n\t\t$.each( ( $.ui.ddmanager.droppables[ draggable.options.scope ] || [] ).slice(), function() {\r\n\r\n\t\t\tif ( !this.options ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ( !this.options.disabled && this.visible &&\r\n\t\t\t\t\tintersect( draggable, this, this.options.tolerance, event ) ) {\r\n\t\t\t\tdropped = this._drop.call( this, event ) || dropped;\r\n\t\t\t}\r\n\r\n\t\t\tif ( !this.options.disabled && this.visible && this.accept.call( this.element[ 0 ],\r\n\t\t\t\t\t( draggable.currentItem || draggable.element ) ) ) {\r\n\t\t\t\tthis.isout = true;\r\n\t\t\t\tthis.isover = false;\r\n\t\t\t\tthis._deactivate.call( this, event );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\t\treturn dropped;\r\n\r\n\t},\r\n\tdragStart: function( draggable, event ) {\r\n\r\n\t\t// Listen for scrolling so that if the dragging causes scrolling the position of the\r\n\t\t// droppables can be recalculated (see #5003)\r\n\t\tdraggable.element.parentsUntil( \"body\" ).on( \"scroll.droppable\", function() {\r\n\t\t\tif ( !draggable.options.refreshPositions ) {\r\n\t\t\t\t$.ui.ddmanager.prepareOffsets( draggable, event );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\tdrag: function( draggable, event ) {\r\n\r\n\t\t// If you have a highly dynamic page, you might try this option. It renders positions\r\n\t\t// every time you move the mouse.\r\n\t\tif ( draggable.options.refreshPositions ) {\r\n\t\t\t$.ui.ddmanager.prepareOffsets( draggable, event );\r\n\t\t}\r\n\r\n\t\t// Run through all droppables and check their positions based on specific tolerance options\r\n\t\t$.each( $.ui.ddmanager.droppables[ draggable.options.scope ] || [], function() {\r\n\r\n\t\t\tif ( this.options.disabled || this.greedyChild || !this.visible ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar parentInstance, scope, parent,\r\n\t\t\t\tintersects = intersect( draggable, this, this.options.tolerance, event ),\r\n\t\t\t\tc = !intersects && this.isover ?\r\n\t\t\t\t\t\"isout\" :\r\n\t\t\t\t\t( intersects && !this.isover ? \"isover\" : null );\r\n\t\t\tif ( !c ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.options.greedy ) {\r\n\r\n\t\t\t\t// find droppable parents with same scope\r\n\t\t\t\tscope = this.options.scope;\r\n\t\t\t\tparent = this.element.parents( \":data(ui-droppable)\" ).filter( function() {\r\n\t\t\t\t\treturn $( this ).droppable( \"instance\" ).options.scope === scope;\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tif ( parent.length ) {\r\n\t\t\t\t\tparentInstance = $( parent[ 0 ] ).droppable( \"instance\" );\r\n\t\t\t\t\tparentInstance.greedyChild = ( c === \"isover\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// We just moved into a greedy child\r\n\t\t\tif ( parentInstance && c === \"isover\" ) {\r\n\t\t\t\tparentInstance.isover = false;\r\n\t\t\t\tparentInstance.isout = true;\r\n\t\t\t\tparentInstance._out.call( parentInstance, event );\r\n\t\t\t}\r\n\r\n\t\t\tthis[ c ] = true;\r\n\t\t\tthis[ c === \"isout\" ? \"isover\" : \"isout\" ] = false;\r\n\t\t\tthis[ c === \"isover\" ? \"_over\" : \"_out\" ].call( this, event );\r\n\r\n\t\t\t// We just moved out of a greedy child\r\n\t\t\tif ( parentInstance && c === \"isout\" ) {\r\n\t\t\t\tparentInstance.isout = false;\r\n\t\t\t\tparentInstance.isover = true;\r\n\t\t\t\tparentInstance._over.call( parentInstance, event );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t},\r\n\tdragStop: function( draggable, event ) {\r\n\t\tdraggable.element.parentsUntil( \"body\" ).off( \"scroll.droppable\" );\r\n\r\n\t\t// Call prepareOffsets one final time since IE does not fire return scroll events when\r\n\t\t// overflow was caused by drag (see #5003)\r\n\t\tif ( !draggable.options.refreshPositions ) {\r\n\t\t\t$.ui.ddmanager.prepareOffsets( draggable, event );\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// DEPRECATED\r\n// TODO: switch return back to widget declaration at top of file when this is removed\r\nif ( $.uiBackCompat !== false ) {\r\n\r\n\t// Backcompat for activeClass and hoverClass options\r\n\t$.widget( \"ui.droppable\", $.ui.droppable, {\r\n\t\toptions: {\r\n\t\t\thoverClass: false,\r\n\t\t\tactiveClass: false\r\n\t\t},\r\n\t\t_addActiveClass: function() {\r\n\t\t\tthis._super();\r\n\t\t\tif ( this.options.activeClass ) {\r\n\t\t\t\tthis.element.addClass( this.options.activeClass );\r\n\t\t\t}\r\n\t\t},\r\n\t\t_removeActiveClass: function() {\r\n\t\t\tthis._super();\r\n\t\t\tif ( this.options.activeClass ) {\r\n\t\t\t\tthis.element.removeClass( this.options.activeClass );\r\n\t\t\t}\r\n\t\t},\r\n\t\t_addHoverClass: function() {\r\n\t\t\tthis._super();\r\n\t\t\tif ( this.options.hoverClass ) {\r\n\t\t\t\tthis.element.addClass( this.options.hoverClass );\r\n\t\t\t}\r\n\t\t},\r\n\t\t_removeHoverClass: function() {\r\n\t\t\tthis._super();\r\n\t\t\tif ( this.options.hoverClass ) {\r\n\t\t\t\tthis.element.removeClass( this.options.hoverClass );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n}\r\n\r\nreturn $.ui.droppable;\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/menu.js":"/*!\r\n * jQuery UI Menu 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Menu\r\n//>>group: Widgets\r\n//>>description: Creates nestable menus.\r\n//>>docs: http://api.jqueryui.com/menu/\r\n//>>demos: http://jqueryui.com/menu/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/menu.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"../keycode\",\r\n\t\t\t\"../position\",\r\n\t\t\t\"../safe-active-element\",\r\n\t\t\t\"../unique-id\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\nreturn $.widget( \"ui.menu\", {\r\n\tversion: \"1.12.1\",\r\n\tdefaultElement: \"<ul>\",\r\n\tdelay: 300,\r\n\toptions: {\r\n\t\ticons: {\r\n\t\t\tsubmenu: \"ui-icon-caret-1-e\"\r\n\t\t},\r\n\t\titems: \"> *\",\r\n\t\tmenus: \"ul\",\r\n\t\tposition: {\r\n\t\t\tmy: \"left top\",\r\n\t\t\tat: \"right top\"\r\n\t\t},\r\n\t\trole: \"menu\",\r\n\r\n\t\t// Callbacks\r\n\t\tblur: null,\r\n\t\tfocus: null,\r\n\t\tselect: null\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tthis.activeMenu = this.element;\r\n\r\n\t\t// Flag used to prevent firing of the click handler\r\n\t\t// as the event bubbles up through nested menus\r\n\t\tthis.mouseHandled = false;\r\n\t\tthis.element\r\n\t\t\t.uniqueId()\r\n\t\t\t.attr( {\r\n\t\t\t\trole: this.options.role,\r\n\t\t\t\ttabIndex: 0\r\n\t\t\t} );\r\n\r\n\t\tthis._addClass( \"ui-menu\", \"ui-widget ui-widget-content\" );\r\n\t\tthis._on( {\r\n\r\n\t\t\t// Prevent focus from sticking to links inside menu after clicking\r\n\t\t\t// them (focus should always stay on UL during navigation).\r\n\t\t\t\"mousedown .ui-menu-item\": function( event ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t},\r\n\t\t\t\"click .ui-menu-item\": function( event ) {\r\n\t\t\t\tvar target = $( event.target );\r\n\t\t\t\tvar active = $( $.ui.safeActiveElement( this.document[ 0 ] ) );\r\n\t\t\t\tif ( !this.mouseHandled && target.not( \".ui-state-disabled\" ).length ) {\r\n\t\t\t\t\tthis.select( event );\r\n\r\n\t\t\t\t\t// Only set the mouseHandled flag if the event will bubble, see #9469.\r\n\t\t\t\t\tif ( !event.isPropagationStopped() ) {\r\n\t\t\t\t\t\tthis.mouseHandled = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Open submenu on click\r\n\t\t\t\t\tif ( target.has( \".ui-menu\" ).length ) {\r\n\t\t\t\t\t\tthis.expand( event );\r\n\t\t\t\t\t} else if ( !this.element.is( \":focus\" ) &&\r\n\t\t\t\t\t\t\tactive.closest( \".ui-menu\" ).length ) {\r\n\r\n\t\t\t\t\t\t// Redirect focus to the menu\r\n\t\t\t\t\t\tthis.element.trigger( \"focus\", [ true ] );\r\n\r\n\t\t\t\t\t\t// If the active item is on the top level, let it stay active.\r\n\t\t\t\t\t\t// Otherwise, blur the active item since it is no longer visible.\r\n\t\t\t\t\t\tif ( this.active && this.active.parents( \".ui-menu\" ).length === 1 ) {\r\n\t\t\t\t\t\t\tclearTimeout( this.timer );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"mouseenter .ui-menu-item\": function( event ) {\r\n\r\n\t\t\t\t// Ignore mouse events while typeahead is active, see #10458.\r\n\t\t\t\t// Prevents focusing the wrong item when typeahead causes a scroll while the mouse\r\n\t\t\t\t// is over an item in the menu\r\n\t\t\t\tif ( this.previousFilter ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar actualTarget = $( event.target ).closest( \".ui-menu-item\" ),\r\n\t\t\t\t\ttarget = $( event.currentTarget );\r\n\r\n\t\t\t\t// Ignore bubbled events on parent items, see #11641\r\n\t\t\t\tif ( actualTarget[ 0 ] !== target[ 0 ] ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove ui-state-active class from siblings of the newly focused menu item\r\n\t\t\t\t// to avoid a jump caused by adjacent elements both having a class with a border\r\n\t\t\t\tthis._removeClass( target.siblings().children( \".ui-state-active\" ),\r\n\t\t\t\t\tnull, \"ui-state-active\" );\r\n\t\t\t\tthis.focus( event, target );\r\n\t\t\t},\r\n\t\t\tmouseleave: \"collapseAll\",\r\n\t\t\t\"mouseleave .ui-menu\": \"collapseAll\",\r\n\t\t\tfocus: function( event, keepActiveItem ) {\r\n\r\n\t\t\t\t// If there's already an active item, keep it active\r\n\t\t\t\t// If not, activate the first item\r\n\t\t\t\tvar item = this.active || this.element.find( this.options.items ).eq( 0 );\r\n\r\n\t\t\t\tif ( !keepActiveItem ) {\r\n\t\t\t\t\tthis.focus( event, item );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tblur: function( event ) {\r\n\t\t\t\tthis._delay( function() {\r\n\t\t\t\t\tvar notContained = !$.contains(\r\n\t\t\t\t\t\tthis.element[ 0 ],\r\n\t\t\t\t\t\t$.ui.safeActiveElement( this.document[ 0 ] )\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif ( notContained ) {\r\n\t\t\t\t\t\tthis.collapseAll( event );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t},\r\n\t\t\tkeydown: \"_keydown\"\r\n\t\t} );\r\n\r\n\t\tthis.refresh();\r\n\r\n\t\t// Clicks outside of a menu collapse any open menus\r\n\t\tthis._on( this.document, {\r\n\t\t\tclick: function( event ) {\r\n\t\t\t\tif ( this._closeOnDocumentClick( event ) ) {\r\n\t\t\t\t\tthis.collapseAll( event );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset the mouseHandled flag\r\n\t\t\t\tthis.mouseHandled = false;\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tvar items = this.element.find( \".ui-menu-item\" )\r\n\t\t\t\t.removeAttr( \"role aria-disabled\" ),\r\n\t\t\tsubmenus = items.children( \".ui-menu-item-wrapper\" )\r\n\t\t\t\t.removeUniqueId()\r\n\t\t\t\t.removeAttr( \"tabIndex role aria-haspopup\" );\r\n\r\n\t\t// Destroy (sub)menus\r\n\t\tthis.element\r\n\t\t\t.removeAttr( \"aria-activedescendant\" )\r\n\t\t\t.find( \".ui-menu\" ).addBack()\r\n\t\t\t\t.removeAttr( \"role aria-labelledby aria-expanded aria-hidden aria-disabled \" +\r\n\t\t\t\t\t\"tabIndex\" )\r\n\t\t\t\t.removeUniqueId()\r\n\t\t\t\t.show();\r\n\r\n\t\tsubmenus.children().each( function() {\r\n\t\t\tvar elem = $( this );\r\n\t\t\tif ( elem.data( \"ui-menu-submenu-caret\" ) ) {\r\n\t\t\t\telem.remove();\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\t_keydown: function( event ) {\r\n\t\tvar match, prev, character, skip,\r\n\t\t\tpreventDefault = true;\r\n\r\n\t\tswitch ( event.keyCode ) {\r\n\t\tcase $.ui.keyCode.PAGE_UP:\r\n\t\t\tthis.previousPage( event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.PAGE_DOWN:\r\n\t\t\tthis.nextPage( event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.HOME:\r\n\t\t\tthis._move( \"first\", \"first\", event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.END:\r\n\t\t\tthis._move( \"last\", \"last\", event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.UP:\r\n\t\t\tthis.previous( event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.DOWN:\r\n\t\t\tthis.next( event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.LEFT:\r\n\t\t\tthis.collapse( event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.RIGHT:\r\n\t\t\tif ( this.active && !this.active.is( \".ui-state-disabled\" ) ) {\r\n\t\t\t\tthis.expand( event );\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.ENTER:\r\n\t\tcase $.ui.keyCode.SPACE:\r\n\t\t\tthis._activate( event );\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.ESCAPE:\r\n\t\t\tthis.collapse( event );\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tpreventDefault = false;\r\n\t\t\tprev = this.previousFilter || \"\";\r\n\t\t\tskip = false;\r\n\r\n\t\t\t// Support number pad values\r\n\t\t\tcharacter = event.keyCode >= 96 && event.keyCode <= 105 ?\r\n\t\t\t\t( event.keyCode - 96 ).toString() : String.fromCharCode( event.keyCode );\r\n\r\n\t\t\tclearTimeout( this.filterTimer );\r\n\r\n\t\t\tif ( character === prev ) {\r\n\t\t\t\tskip = true;\r\n\t\t\t} else {\r\n\t\t\t\tcharacter = prev + character;\r\n\t\t\t}\r\n\r\n\t\t\tmatch = this._filterMenuItems( character );\r\n\t\t\tmatch = skip && match.index( this.active.next() ) !== -1 ?\r\n\t\t\t\tthis.active.nextAll( \".ui-menu-item\" ) :\r\n\t\t\t\tmatch;\r\n\r\n\t\t\t// If no matches on the current filter, reset to the last character pressed\r\n\t\t\t// to move down the menu to the first item that starts with that character\r\n\t\t\tif ( !match.length ) {\r\n\t\t\t\tcharacter = String.fromCharCode( event.keyCode );\r\n\t\t\t\tmatch = this._filterMenuItems( character );\r\n\t\t\t}\r\n\r\n\t\t\tif ( match.length ) {\r\n\t\t\t\tthis.focus( event, match );\r\n\t\t\t\tthis.previousFilter = character;\r\n\t\t\t\tthis.filterTimer = this._delay( function() {\r\n\t\t\t\t\tdelete this.previousFilter;\r\n\t\t\t\t}, 1000 );\r\n\t\t\t} else {\r\n\t\t\t\tdelete this.previousFilter;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( preventDefault ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t},\r\n\r\n\t_activate: function( event ) {\r\n\t\tif ( this.active && !this.active.is( \".ui-state-disabled\" ) ) {\r\n\t\t\tif ( this.active.children( \"[aria-haspopup='true']\" ).length ) {\r\n\t\t\t\tthis.expand( event );\r\n\t\t\t} else {\r\n\t\t\t\tthis.select( event );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\trefresh: function() {\r\n\t\tvar menus, items, newSubmenus, newItems, newWrappers,\r\n\t\t\tthat = this,\r\n\t\t\ticon = this.options.icons.submenu,\r\n\t\t\tsubmenus = this.element.find( this.options.menus );\r\n\r\n\t\tthis._toggleClass( \"ui-menu-icons\", null, !!this.element.find( \".ui-icon\" ).length );\r\n\r\n\t\t// Initialize nested menus\r\n\t\tnewSubmenus = submenus.filter( \":not(.ui-menu)\" )\r\n\t\t\t.hide()\r\n\t\t\t.attr( {\r\n\t\t\t\trole: this.options.role,\r\n\t\t\t\t\"aria-hidden\": \"true\",\r\n\t\t\t\t\"aria-expanded\": \"false\"\r\n\t\t\t} )\r\n\t\t\t.each( function() {\r\n\t\t\t\tvar menu = $( this ),\r\n\t\t\t\t\titem = menu.prev(),\r\n\t\t\t\t\tsubmenuCaret = $( \"<span>\" ).data( \"ui-menu-submenu-caret\", true );\r\n\r\n\t\t\t\tthat._addClass( submenuCaret, \"ui-menu-icon\", \"ui-icon \" + icon );\r\n\t\t\t\titem\r\n\t\t\t\t\t.attr( \"aria-haspopup\", \"true\" )\r\n\t\t\t\t\t.prepend( submenuCaret );\r\n\t\t\t\tmenu.attr( \"aria-labelledby\", item.attr( \"id\" ) );\r\n\t\t\t} );\r\n\r\n\t\tthis._addClass( newSubmenus, \"ui-menu\", \"ui-widget ui-widget-content ui-front\" );\r\n\r\n\t\tmenus = submenus.add( this.element );\r\n\t\titems = menus.find( this.options.items );\r\n\r\n\t\t// Initialize menu-items containing spaces and/or dashes only as dividers\r\n\t\titems.not( \".ui-menu-item\" ).each( function() {\r\n\t\t\tvar item = $( this );\r\n\t\t\tif ( that._isDivider( item ) ) {\r\n\t\t\t\tthat._addClass( item, \"ui-menu-divider\", \"ui-widget-content\" );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Don't refresh list items that are already adapted\r\n\t\tnewItems = items.not( \".ui-menu-item, .ui-menu-divider\" );\r\n\t\tnewWrappers = newItems.children()\r\n\t\t\t.not( \".ui-menu\" )\r\n\t\t\t\t.uniqueId()\r\n\t\t\t\t.attr( {\r\n\t\t\t\t\ttabIndex: -1,\r\n\t\t\t\t\trole: this._itemRole()\r\n\t\t\t\t} );\r\n\t\tthis._addClass( newItems, \"ui-menu-item\" )\r\n\t\t\t._addClass( newWrappers, \"ui-menu-item-wrapper\" );\r\n\r\n\t\t// Add aria-disabled attribute to any disabled menu item\r\n\t\titems.filter( \".ui-state-disabled\" ).attr( \"aria-disabled\", \"true\" );\r\n\r\n\t\t// If the active item has been removed, blur the menu\r\n\t\tif ( this.active && !$.contains( this.element[ 0 ], this.active[ 0 ] ) ) {\r\n\t\t\tthis.blur();\r\n\t\t}\r\n\t},\r\n\r\n\t_itemRole: function() {\r\n\t\treturn {\r\n\t\t\tmenu: \"menuitem\",\r\n\t\t\tlistbox: \"option\"\r\n\t\t}[ this.options.role ];\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tif ( key === \"icons\" ) {\r\n\t\t\tvar icons = this.element.find( \".ui-menu-icon\" );\r\n\t\t\tthis._removeClass( icons, null, this.options.icons.submenu )\r\n\t\t\t\t._addClass( icons, null, value.submenu );\r\n\t\t}\r\n\t\tthis._super( key, value );\r\n\t},\r\n\r\n\t_setOptionDisabled: function( value ) {\r\n\t\tthis._super( value );\r\n\r\n\t\tthis.element.attr( \"aria-disabled\", String( value ) );\r\n\t\tthis._toggleClass( null, \"ui-state-disabled\", !!value );\r\n\t},\r\n\r\n\tfocus: function( event, item ) {\r\n\t\tvar nested, focused, activeParent;\r\n\t\tthis.blur( event, event && event.type === \"focus\" );\r\n\r\n\t\tthis._scrollIntoView( item );\r\n\r\n\t\tthis.active = item.first();\r\n\r\n\t\tfocused = this.active.children( \".ui-menu-item-wrapper\" );\r\n\t\tthis._addClass( focused, null, \"ui-state-active\" );\r\n\r\n\t\t// Only update aria-activedescendant if there's a role\r\n\t\t// otherwise we assume focus is managed elsewhere\r\n\t\tif ( this.options.role ) {\r\n\t\t\tthis.element.attr( \"aria-activedescendant\", focused.attr( \"id\" ) );\r\n\t\t}\r\n\r\n\t\t// Highlight active parent menu item, if any\r\n\t\tactiveParent = this.active\r\n\t\t\t.parent()\r\n\t\t\t\t.closest( \".ui-menu-item\" )\r\n\t\t\t\t\t.children( \".ui-menu-item-wrapper\" );\r\n\t\tthis._addClass( activeParent, null, \"ui-state-active\" );\r\n\r\n\t\tif ( event && event.type === \"keydown\" ) {\r\n\t\t\tthis._close();\r\n\t\t} else {\r\n\t\t\tthis.timer = this._delay( function() {\r\n\t\t\t\tthis._close();\r\n\t\t\t}, this.delay );\r\n\t\t}\r\n\r\n\t\tnested = item.children( \".ui-menu\" );\r\n\t\tif ( nested.length && event && ( /^mouse/.test( event.type ) ) ) {\r\n\t\t\tthis._startOpening( nested );\r\n\t\t}\r\n\t\tthis.activeMenu = item.parent();\r\n\r\n\t\tthis._trigger( \"focus\", event, { item: item } );\r\n\t},\r\n\r\n\t_scrollIntoView: function( item ) {\r\n\t\tvar borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;\r\n\t\tif ( this._hasScroll() ) {\r\n\t\t\tborderTop = parseFloat( $.css( this.activeMenu[ 0 ], \"borderTopWidth\" ) ) || 0;\r\n\t\t\tpaddingTop = parseFloat( $.css( this.activeMenu[ 0 ], \"paddingTop\" ) ) || 0;\r\n\t\t\toffset = item.offset().top - this.activeMenu.offset().top - borderTop - paddingTop;\r\n\t\t\tscroll = this.activeMenu.scrollTop();\r\n\t\t\telementHeight = this.activeMenu.height();\r\n\t\t\titemHeight = item.outerHeight();\r\n\r\n\t\t\tif ( offset < 0 ) {\r\n\t\t\t\tthis.activeMenu.scrollTop( scroll + offset );\r\n\t\t\t} else if ( offset + itemHeight > elementHeight ) {\r\n\t\t\t\tthis.activeMenu.scrollTop( scroll + offset - elementHeight + itemHeight );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tblur: function( event, fromFocus ) {\r\n\t\tif ( !fromFocus ) {\r\n\t\t\tclearTimeout( this.timer );\r\n\t\t}\r\n\r\n\t\tif ( !this.active ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._removeClass( this.active.children( \".ui-menu-item-wrapper\" ),\r\n\t\t\tnull, \"ui-state-active\" );\r\n\r\n\t\tthis._trigger( \"blur\", event, { item: this.active } );\r\n\t\tthis.active = null;\r\n\t},\r\n\r\n\t_startOpening: function( submenu ) {\r\n\t\tclearTimeout( this.timer );\r\n\r\n\t\t// Don't open if already open fixes a Firefox bug that caused a .5 pixel\r\n\t\t// shift in the submenu position when mousing over the caret icon\r\n\t\tif ( submenu.attr( \"aria-hidden\" ) !== \"true\" ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.timer = this._delay( function() {\r\n\t\t\tthis._close();\r\n\t\t\tthis._open( submenu );\r\n\t\t}, this.delay );\r\n\t},\r\n\r\n\t_open: function( submenu ) {\r\n\t\tvar position = $.extend( {\r\n\t\t\tof: this.active\r\n\t\t}, this.options.position );\r\n\r\n\t\tclearTimeout( this.timer );\r\n\t\tthis.element.find( \".ui-menu\" ).not( submenu.parents( \".ui-menu\" ) )\r\n\t\t\t.hide()\r\n\t\t\t.attr( \"aria-hidden\", \"true\" );\r\n\r\n\t\tsubmenu\r\n\t\t\t.show()\r\n\t\t\t.removeAttr( \"aria-hidden\" )\r\n\t\t\t.attr( \"aria-expanded\", \"true\" )\r\n\t\t\t.position( position );\r\n\t},\r\n\r\n\tcollapseAll: function( event, all ) {\r\n\t\tclearTimeout( this.timer );\r\n\t\tthis.timer = this._delay( function() {\r\n\r\n\t\t\t// If we were passed an event, look for the submenu that contains the event\r\n\t\t\tvar currentMenu = all ? this.element :\r\n\t\t\t\t$( event && event.target ).closest( this.element.find( \".ui-menu\" ) );\r\n\r\n\t\t\t// If we found no valid submenu ancestor, use the main menu to close all\r\n\t\t\t// sub menus anyway\r\n\t\t\tif ( !currentMenu.length ) {\r\n\t\t\t\tcurrentMenu = this.element;\r\n\t\t\t}\r\n\r\n\t\t\tthis._close( currentMenu );\r\n\r\n\t\t\tthis.blur( event );\r\n\r\n\t\t\t// Work around active item staying active after menu is blurred\r\n\t\t\tthis._removeClass( currentMenu.find( \".ui-state-active\" ), null, \"ui-state-active\" );\r\n\r\n\t\t\tthis.activeMenu = currentMenu;\r\n\t\t}, this.delay );\r\n\t},\r\n\r\n\t// With no arguments, closes the currently active menu - if nothing is active\r\n\t// it closes all menus.  If passed an argument, it will search for menus BELOW\r\n\t_close: function( startMenu ) {\r\n\t\tif ( !startMenu ) {\r\n\t\t\tstartMenu = this.active ? this.active.parent() : this.element;\r\n\t\t}\r\n\r\n\t\tstartMenu.find( \".ui-menu\" )\r\n\t\t\t.hide()\r\n\t\t\t.attr( \"aria-hidden\", \"true\" )\r\n\t\t\t.attr( \"aria-expanded\", \"false\" );\r\n\t},\r\n\r\n\t_closeOnDocumentClick: function( event ) {\r\n\t\treturn !$( event.target ).closest( \".ui-menu\" ).length;\r\n\t},\r\n\r\n\t_isDivider: function( item ) {\r\n\r\n\t\t// Match hyphen, em dash, en dash\r\n\t\treturn !/[^\\-\\u2014\\u2013\\s]/.test( item.text() );\r\n\t},\r\n\r\n\tcollapse: function( event ) {\r\n\t\tvar newItem = this.active &&\r\n\t\t\tthis.active.parent().closest( \".ui-menu-item\", this.element );\r\n\t\tif ( newItem && newItem.length ) {\r\n\t\t\tthis._close();\r\n\t\t\tthis.focus( event, newItem );\r\n\t\t}\r\n\t},\r\n\r\n\texpand: function( event ) {\r\n\t\tvar newItem = this.active &&\r\n\t\t\tthis.active\r\n\t\t\t\t.children( \".ui-menu \" )\r\n\t\t\t\t\t.find( this.options.items )\r\n\t\t\t\t\t\t.first();\r\n\r\n\t\tif ( newItem && newItem.length ) {\r\n\t\t\tthis._open( newItem.parent() );\r\n\r\n\t\t\t// Delay so Firefox will not hide activedescendant change in expanding submenu from AT\r\n\t\t\tthis._delay( function() {\r\n\t\t\t\tthis.focus( event, newItem );\r\n\t\t\t} );\r\n\t\t}\r\n\t},\r\n\r\n\tnext: function( event ) {\r\n\t\tthis._move( \"next\", \"first\", event );\r\n\t},\r\n\r\n\tprevious: function( event ) {\r\n\t\tthis._move( \"prev\", \"last\", event );\r\n\t},\r\n\r\n\tisFirstItem: function() {\r\n\t\treturn this.active && !this.active.prevAll( \".ui-menu-item\" ).length;\r\n\t},\r\n\r\n\tisLastItem: function() {\r\n\t\treturn this.active && !this.active.nextAll( \".ui-menu-item\" ).length;\r\n\t},\r\n\r\n\t_move: function( direction, filter, event ) {\r\n\t\tvar next;\r\n\t\tif ( this.active ) {\r\n\t\t\tif ( direction === \"first\" || direction === \"last\" ) {\r\n\t\t\t\tnext = this.active\r\n\t\t\t\t\t[ direction === \"first\" ? \"prevAll\" : \"nextAll\" ]( \".ui-menu-item\" )\r\n\t\t\t\t\t.eq( -1 );\r\n\t\t\t} else {\r\n\t\t\t\tnext = this.active\r\n\t\t\t\t\t[ direction + \"All\" ]( \".ui-menu-item\" )\r\n\t\t\t\t\t.eq( 0 );\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ( !next || !next.length || !this.active ) {\r\n\t\t\tnext = this.activeMenu.find( this.options.items )[ filter ]();\r\n\t\t}\r\n\r\n\t\tthis.focus( event, next );\r\n\t},\r\n\r\n\tnextPage: function( event ) {\r\n\t\tvar item, base, height;\r\n\r\n\t\tif ( !this.active ) {\r\n\t\t\tthis.next( event );\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( this.isLastItem() ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( this._hasScroll() ) {\r\n\t\t\tbase = this.active.offset().top;\r\n\t\t\theight = this.element.height();\r\n\t\t\tthis.active.nextAll( \".ui-menu-item\" ).each( function() {\r\n\t\t\t\titem = $( this );\r\n\t\t\t\treturn item.offset().top - base - height < 0;\r\n\t\t\t} );\r\n\r\n\t\t\tthis.focus( event, item );\r\n\t\t} else {\r\n\t\t\tthis.focus( event, this.activeMenu.find( this.options.items )\r\n\t\t\t\t[ !this.active ? \"first\" : \"last\" ]() );\r\n\t\t}\r\n\t},\r\n\r\n\tpreviousPage: function( event ) {\r\n\t\tvar item, base, height;\r\n\t\tif ( !this.active ) {\r\n\t\t\tthis.next( event );\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( this.isFirstItem() ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( this._hasScroll() ) {\r\n\t\t\tbase = this.active.offset().top;\r\n\t\t\theight = this.element.height();\r\n\t\t\tthis.active.prevAll( \".ui-menu-item\" ).each( function() {\r\n\t\t\t\titem = $( this );\r\n\t\t\t\treturn item.offset().top - base + height > 0;\r\n\t\t\t} );\r\n\r\n\t\t\tthis.focus( event, item );\r\n\t\t} else {\r\n\t\t\tthis.focus( event, this.activeMenu.find( this.options.items ).first() );\r\n\t\t}\r\n\t},\r\n\r\n\t_hasScroll: function() {\r\n\t\treturn this.element.outerHeight() < this.element.prop( \"scrollHeight\" );\r\n\t},\r\n\r\n\tselect: function( event ) {\r\n\r\n\t\t// TODO: It should never be possible to not have an active item at this\r\n\t\t// point, but the tests don't trigger mouseenter before click.\r\n\t\tthis.active = this.active || $( event.target ).closest( \".ui-menu-item\" );\r\n\t\tvar ui = { item: this.active };\r\n\t\tif ( !this.active.has( \".ui-menu\" ).length ) {\r\n\t\t\tthis.collapseAll( event, true );\r\n\t\t}\r\n\t\tthis._trigger( \"select\", event, ui );\r\n\t},\r\n\r\n\t_filterMenuItems: function( character ) {\r\n\t\tvar escapedCharacter = character.replace( /[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\" ),\r\n\t\t\tregex = new RegExp( \"^\" + escapedCharacter, \"i\" );\r\n\r\n\t\treturn this.activeMenu\r\n\t\t\t.find( this.options.items )\r\n\r\n\t\t\t\t// Only match on items, not dividers or other content (#10571)\r\n\t\t\t\t.filter( \".ui-menu-item\" )\r\n\t\t\t\t\t.filter( function() {\r\n\t\t\t\t\t\treturn regex.test(\r\n\t\t\t\t\t\t\t$.trim( $( this ).children( \".ui-menu-item-wrapper\" ).text() ) );\r\n\t\t\t\t\t} );\r\n\t}\r\n} );\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/mouse.js":"/*!\r\n * jQuery UI Mouse 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Mouse\r\n//>>group: Widgets\r\n//>>description: Abstracts mouse-based interactions to assist in creating certain widgets.\r\n//>>docs: http://api.jqueryui.com/mouse/\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"../ie\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\nvar mouseHandled = false;\r\n$( document ).on( \"mouseup\", function() {\r\n\tmouseHandled = false;\r\n} );\r\n\r\nreturn $.widget( \"ui.mouse\", {\r\n\tversion: \"1.12.1\",\r\n\toptions: {\r\n\t\tcancel: \"input, textarea, button, select, option\",\r\n\t\tdistance: 1,\r\n\t\tdelay: 0\r\n\t},\r\n\t_mouseInit: function() {\r\n\t\tvar that = this;\r\n\r\n\t\tthis.element\r\n\t\t\t.on( \"mousedown.\" + this.widgetName, function( event ) {\r\n\t\t\t\treturn that._mouseDown( event );\r\n\t\t\t} )\r\n\t\t\t.on( \"click.\" + this.widgetName, function( event ) {\r\n\t\t\t\tif ( true === $.data( event.target, that.widgetName + \".preventClickEvent\" ) ) {\r\n\t\t\t\t\t$.removeData( event.target, that.widgetName + \".preventClickEvent\" );\r\n\t\t\t\t\tevent.stopImmediatePropagation();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\tthis.started = false;\r\n\t},\r\n\r\n\t// TODO: make sure destroying one instance of mouse doesn't mess with\r\n\t// other instances of mouse\r\n\t_mouseDestroy: function() {\r\n\t\tthis.element.off( \".\" + this.widgetName );\r\n\t\tif ( this._mouseMoveDelegate ) {\r\n\t\t\tthis.document\r\n\t\t\t\t.off( \"mousemove.\" + this.widgetName, this._mouseMoveDelegate )\r\n\t\t\t\t.off( \"mouseup.\" + this.widgetName, this._mouseUpDelegate );\r\n\t\t}\r\n\t},\r\n\r\n\t_mouseDown: function( event ) {\r\n\r\n\t\t// don't let more than one widget handle mouseStart\r\n\t\tif ( mouseHandled ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._mouseMoved = false;\r\n\r\n\t\t// We may have missed mouseup (out of window)\r\n\t\t( this._mouseStarted && this._mouseUp( event ) );\r\n\r\n\t\tthis._mouseDownEvent = event;\r\n\r\n\t\tvar that = this,\r\n\t\t\tbtnIsLeft = ( event.which === 1 ),\r\n\r\n\t\t\t// event.target.nodeName works around a bug in IE 8 with\r\n\t\t\t// disabled inputs (#7620)\r\n\t\t\telIsCancel = ( typeof this.options.cancel === \"string\" && event.target.nodeName ?\r\n\t\t\t\t$( event.target ).closest( this.options.cancel ).length : false );\r\n\t\tif ( !btnIsLeft || elIsCancel || !this._mouseCapture( event ) ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tthis.mouseDelayMet = !this.options.delay;\r\n\t\tif ( !this.mouseDelayMet ) {\r\n\t\t\tthis._mouseDelayTimer = setTimeout( function() {\r\n\t\t\t\tthat.mouseDelayMet = true;\r\n\t\t\t}, this.options.delay );\r\n\t\t}\r\n\r\n\t\tif ( this._mouseDistanceMet( event ) && this._mouseDelayMet( event ) ) {\r\n\t\t\tthis._mouseStarted = ( this._mouseStart( event ) !== false );\r\n\t\t\tif ( !this._mouseStarted ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Click event may never have fired (Gecko & Opera)\r\n\t\tif ( true === $.data( event.target, this.widgetName + \".preventClickEvent\" ) ) {\r\n\t\t\t$.removeData( event.target, this.widgetName + \".preventClickEvent\" );\r\n\t\t}\r\n\r\n\t\t// These delegates are required to keep context\r\n\t\tthis._mouseMoveDelegate = function( event ) {\r\n\t\t\treturn that._mouseMove( event );\r\n\t\t};\r\n\t\tthis._mouseUpDelegate = function( event ) {\r\n\t\t\treturn that._mouseUp( event );\r\n\t\t};\r\n\r\n\t\tthis.document\r\n\t\t\t.on( \"mousemove.\" + this.widgetName, this._mouseMoveDelegate )\r\n\t\t\t.on( \"mouseup.\" + this.widgetName, this._mouseUpDelegate );\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tmouseHandled = true;\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_mouseMove: function( event ) {\r\n\r\n\t\t// Only check for mouseups outside the document if you've moved inside the document\r\n\t\t// at least once. This prevents the firing of mouseup in the case of IE<9, which will\r\n\t\t// fire a mousemove event if content is placed under the cursor. See #7778\r\n\t\t// Support: IE <9\r\n\t\tif ( this._mouseMoved ) {\r\n\r\n\t\t\t// IE mouseup check - mouseup happened when mouse was out of window\r\n\t\t\tif ( $.ui.ie && ( !document.documentMode || document.documentMode < 9 ) &&\r\n\t\t\t\t\t!event.button ) {\r\n\t\t\t\treturn this._mouseUp( event );\r\n\r\n\t\t\t// Iframe mouseup check - mouseup occurred in another document\r\n\t\t\t} else if ( !event.which ) {\r\n\r\n\t\t\t\t// Support: Safari <=8 - 9\r\n\t\t\t\t// Safari sets which to 0 if you press any of the following keys\r\n\t\t\t\t// during a drag (#14461)\r\n\t\t\t\tif ( event.originalEvent.altKey || event.originalEvent.ctrlKey ||\r\n\t\t\t\t\t\tevent.originalEvent.metaKey || event.originalEvent.shiftKey ) {\r\n\t\t\t\t\tthis.ignoreMissingWhich = true;\r\n\t\t\t\t} else if ( !this.ignoreMissingWhich ) {\r\n\t\t\t\t\treturn this._mouseUp( event );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( event.which || event.button ) {\r\n\t\t\tthis._mouseMoved = true;\r\n\t\t}\r\n\r\n\t\tif ( this._mouseStarted ) {\r\n\t\t\tthis._mouseDrag( event );\r\n\t\t\treturn event.preventDefault();\r\n\t\t}\r\n\r\n\t\tif ( this._mouseDistanceMet( event ) && this._mouseDelayMet( event ) ) {\r\n\t\t\tthis._mouseStarted =\r\n\t\t\t\t( this._mouseStart( this._mouseDownEvent, event ) !== false );\r\n\t\t\t( this._mouseStarted ? this._mouseDrag( event ) : this._mouseUp( event ) );\r\n\t\t}\r\n\r\n\t\treturn !this._mouseStarted;\r\n\t},\r\n\r\n\t_mouseUp: function( event ) {\r\n\t\tthis.document\r\n\t\t\t.off( \"mousemove.\" + this.widgetName, this._mouseMoveDelegate )\r\n\t\t\t.off( \"mouseup.\" + this.widgetName, this._mouseUpDelegate );\r\n\r\n\t\tif ( this._mouseStarted ) {\r\n\t\t\tthis._mouseStarted = false;\r\n\r\n\t\t\tif ( event.target === this._mouseDownEvent.target ) {\r\n\t\t\t\t$.data( event.target, this.widgetName + \".preventClickEvent\", true );\r\n\t\t\t}\r\n\r\n\t\t\tthis._mouseStop( event );\r\n\t\t}\r\n\r\n\t\tif ( this._mouseDelayTimer ) {\r\n\t\t\tclearTimeout( this._mouseDelayTimer );\r\n\t\t\tdelete this._mouseDelayTimer;\r\n\t\t}\r\n\r\n\t\tthis.ignoreMissingWhich = false;\r\n\t\tmouseHandled = false;\r\n\t\tevent.preventDefault();\r\n\t},\r\n\r\n\t_mouseDistanceMet: function( event ) {\r\n\t\treturn ( Math.max(\r\n\t\t\t\tMath.abs( this._mouseDownEvent.pageX - event.pageX ),\r\n\t\t\t\tMath.abs( this._mouseDownEvent.pageY - event.pageY )\r\n\t\t\t) >= this.options.distance\r\n\t\t);\r\n\t},\r\n\r\n\t_mouseDelayMet: function( /* event */ ) {\r\n\t\treturn this.mouseDelayMet;\r\n\t},\r\n\r\n\t// These are placeholder methods, to be overriden by extending plugin\r\n\t_mouseStart: function( /* event */ ) {},\r\n\t_mouseDrag: function( /* event */ ) {},\r\n\t_mouseStop: function( /* event */ ) {},\r\n\t_mouseCapture: function( /* event */ ) { return true; }\r\n} );\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/progressbar.js":"/*!\r\n * jQuery UI Progressbar 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Progressbar\r\n//>>group: Widgets\r\n// jscs:disable maximumLineLength\r\n//>>description: Displays a status indicator for loading state, standard percentage, and other progress indicators.\r\n// jscs:enable maximumLineLength\r\n//>>docs: http://api.jqueryui.com/progressbar/\r\n//>>demos: http://jqueryui.com/progressbar/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/progressbar.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\nreturn $.widget( \"ui.progressbar\", {\r\n\tversion: \"1.12.1\",\r\n\toptions: {\r\n\t\tclasses: {\r\n\t\t\t\"ui-progressbar\": \"ui-corner-all\",\r\n\t\t\t\"ui-progressbar-value\": \"ui-corner-left\",\r\n\t\t\t\"ui-progressbar-complete\": \"ui-corner-right\"\r\n\t\t},\r\n\t\tmax: 100,\r\n\t\tvalue: 0,\r\n\r\n\t\tchange: null,\r\n\t\tcomplete: null\r\n\t},\r\n\r\n\tmin: 0,\r\n\r\n\t_create: function() {\r\n\r\n\t\t// Constrain initial value\r\n\t\tthis.oldValue = this.options.value = this._constrainedValue();\r\n\r\n\t\tthis.element.attr( {\r\n\r\n\t\t\t// Only set static values; aria-valuenow and aria-valuemax are\r\n\t\t\t// set inside _refreshValue()\r\n\t\t\trole: \"progressbar\",\r\n\t\t\t\"aria-valuemin\": this.min\r\n\t\t} );\r\n\t\tthis._addClass( \"ui-progressbar\", \"ui-widget ui-widget-content\" );\r\n\r\n\t\tthis.valueDiv = $( \"<div>\" ).appendTo( this.element );\r\n\t\tthis._addClass( this.valueDiv, \"ui-progressbar-value\", \"ui-widget-header\" );\r\n\t\tthis._refreshValue();\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis.element.removeAttr( \"role aria-valuemin aria-valuemax aria-valuenow\" );\r\n\r\n\t\tthis.valueDiv.remove();\r\n\t},\r\n\r\n\tvalue: function( newValue ) {\r\n\t\tif ( newValue === undefined ) {\r\n\t\t\treturn this.options.value;\r\n\t\t}\r\n\r\n\t\tthis.options.value = this._constrainedValue( newValue );\r\n\t\tthis._refreshValue();\r\n\t},\r\n\r\n\t_constrainedValue: function( newValue ) {\r\n\t\tif ( newValue === undefined ) {\r\n\t\t\tnewValue = this.options.value;\r\n\t\t}\r\n\r\n\t\tthis.indeterminate = newValue === false;\r\n\r\n\t\t// Sanitize value\r\n\t\tif ( typeof newValue !== \"number\" ) {\r\n\t\t\tnewValue = 0;\r\n\t\t}\r\n\r\n\t\treturn this.indeterminate ? false :\r\n\t\t\tMath.min( this.options.max, Math.max( this.min, newValue ) );\r\n\t},\r\n\r\n\t_setOptions: function( options ) {\r\n\r\n\t\t// Ensure \"value\" option is set after other values (like max)\r\n\t\tvar value = options.value;\r\n\t\tdelete options.value;\r\n\r\n\t\tthis._super( options );\r\n\r\n\t\tthis.options.value = this._constrainedValue( value );\r\n\t\tthis._refreshValue();\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tif ( key === \"max\" ) {\r\n\r\n\t\t\t// Don't allow a max less than min\r\n\t\t\tvalue = Math.max( this.min, value );\r\n\t\t}\r\n\t\tthis._super( key, value );\r\n\t},\r\n\r\n\t_setOptionDisabled: function( value ) {\r\n\t\tthis._super( value );\r\n\r\n\t\tthis.element.attr( \"aria-disabled\", value );\r\n\t\tthis._toggleClass( null, \"ui-state-disabled\", !!value );\r\n\t},\r\n\r\n\t_percentage: function() {\r\n\t\treturn this.indeterminate ?\r\n\t\t\t100 :\r\n\t\t\t100 * ( this.options.value - this.min ) / ( this.options.max - this.min );\r\n\t},\r\n\r\n\t_refreshValue: function() {\r\n\t\tvar value = this.options.value,\r\n\t\t\tpercentage = this._percentage();\r\n\r\n\t\tthis.valueDiv\r\n\t\t\t.toggle( this.indeterminate || value > this.min )\r\n\t\t\t.width( percentage.toFixed( 0 ) + \"%\" );\r\n\r\n\t\tthis\r\n\t\t\t._toggleClass( this.valueDiv, \"ui-progressbar-complete\", null,\r\n\t\t\t\tvalue === this.options.max )\r\n\t\t\t._toggleClass( \"ui-progressbar-indeterminate\", null, this.indeterminate );\r\n\r\n\t\tif ( this.indeterminate ) {\r\n\t\t\tthis.element.removeAttr( \"aria-valuenow\" );\r\n\t\t\tif ( !this.overlayDiv ) {\r\n\t\t\t\tthis.overlayDiv = $( \"<div>\" ).appendTo( this.valueDiv );\r\n\t\t\t\tthis._addClass( this.overlayDiv, \"ui-progressbar-overlay\" );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.element.attr( {\r\n\t\t\t\t\"aria-valuemax\": this.options.max,\r\n\t\t\t\t\"aria-valuenow\": value\r\n\t\t\t} );\r\n\t\t\tif ( this.overlayDiv ) {\r\n\t\t\t\tthis.overlayDiv.remove();\r\n\t\t\t\tthis.overlayDiv = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( this.oldValue !== value ) {\r\n\t\t\tthis.oldValue = value;\r\n\t\t\tthis._trigger( \"change\" );\r\n\t\t}\r\n\t\tif ( value === this.options.max ) {\r\n\t\t\tthis._trigger( \"complete\" );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/resizable.js":"/*!\r\n * jQuery UI Resizable 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Resizable\r\n//>>group: Interactions\r\n//>>description: Enables resize functionality for any element.\r\n//>>docs: http://api.jqueryui.com/resizable/\r\n//>>demos: http://jqueryui.com/resizable/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/resizable.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"./mouse\",\r\n\t\t\t\"../disable-selection\",\r\n\t\t\t\"../plugin\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\n$.widget( \"ui.resizable\", $.ui.mouse, {\r\n\tversion: \"1.12.1\",\r\n\twidgetEventPrefix: \"resize\",\r\n\toptions: {\r\n\t\talsoResize: false,\r\n\t\tanimate: false,\r\n\t\tanimateDuration: \"slow\",\r\n\t\tanimateEasing: \"swing\",\r\n\t\taspectRatio: false,\r\n\t\tautoHide: false,\r\n\t\tclasses: {\r\n\t\t\t\"ui-resizable-se\": \"ui-icon ui-icon-gripsmall-diagonal-se\"\r\n\t\t},\r\n\t\tcontainment: false,\r\n\t\tghost: false,\r\n\t\tgrid: false,\r\n\t\thandles: \"e,s,se\",\r\n\t\thelper: false,\r\n\t\tmaxHeight: null,\r\n\t\tmaxWidth: null,\r\n\t\tminHeight: 10,\r\n\t\tminWidth: 10,\r\n\r\n\t\t// See #7960\r\n\t\tzIndex: 90,\r\n\r\n\t\t// Callbacks\r\n\t\tresize: null,\r\n\t\tstart: null,\r\n\t\tstop: null\r\n\t},\r\n\r\n\t_num: function( value ) {\r\n\t\treturn parseFloat( value ) || 0;\r\n\t},\r\n\r\n\t_isNumber: function( value ) {\r\n\t\treturn !isNaN( parseFloat( value ) );\r\n\t},\r\n\r\n\t_hasScroll: function( el, a ) {\r\n\r\n\t\tif ( $( el ).css( \"overflow\" ) === \"hidden\" ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar scroll = ( a && a === \"left\" ) ? \"scrollLeft\" : \"scrollTop\",\r\n\t\t\thas = false;\r\n\r\n\t\tif ( el[ scroll ] > 0 ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// TODO: determine which cases actually cause this to happen\r\n\t\t// if the element doesn't have the scroll set, see if it's possible to\r\n\t\t// set the scroll\r\n\t\tel[ scroll ] = 1;\r\n\t\thas = ( el[ scroll ] > 0 );\r\n\t\tel[ scroll ] = 0;\r\n\t\treturn has;\r\n\t},\r\n\r\n\t_create: function() {\r\n\r\n\t\tvar margins,\r\n\t\t\to = this.options,\r\n\t\t\tthat = this;\r\n\t\tthis._addClass( \"ui-resizable\" );\r\n\r\n\t\t$.extend( this, {\r\n\t\t\t_aspectRatio: !!( o.aspectRatio ),\r\n\t\t\taspectRatio: o.aspectRatio,\r\n\t\t\toriginalElement: this.element,\r\n\t\t\t_proportionallyResizeElements: [],\r\n\t\t\t_helper: o.helper || o.ghost || o.animate ? o.helper || \"ui-resizable-helper\" : null\r\n\t\t} );\r\n\r\n\t\t// Wrap the element if it cannot hold child nodes\r\n\t\tif ( this.element[ 0 ].nodeName.match( /^(canvas|textarea|input|select|button|img)$/i ) ) {\r\n\r\n\t\t\tthis.element.wrap(\r\n\t\t\t\t$( \"<div class='ui-wrapper' style='overflow: hidden;'></div>\" ).css( {\r\n\t\t\t\t\tposition: this.element.css( \"position\" ),\r\n\t\t\t\t\twidth: this.element.outerWidth(),\r\n\t\t\t\t\theight: this.element.outerHeight(),\r\n\t\t\t\t\ttop: this.element.css( \"top\" ),\r\n\t\t\t\t\tleft: this.element.css( \"left\" )\r\n\t\t\t\t} )\r\n\t\t\t);\r\n\r\n\t\t\tthis.element = this.element.parent().data(\r\n\t\t\t\t\"ui-resizable\", this.element.resizable( \"instance\" )\r\n\t\t\t);\r\n\r\n\t\t\tthis.elementIsWrapper = true;\r\n\r\n\t\t\tmargins = {\r\n\t\t\t\tmarginTop: this.originalElement.css( \"marginTop\" ),\r\n\t\t\t\tmarginRight: this.originalElement.css( \"marginRight\" ),\r\n\t\t\t\tmarginBottom: this.originalElement.css( \"marginBottom\" ),\r\n\t\t\t\tmarginLeft: this.originalElement.css( \"marginLeft\" )\r\n\t\t\t};\r\n\r\n\t\t\tthis.element.css( margins );\r\n\t\t\tthis.originalElement.css( \"margin\", 0 );\r\n\r\n\t\t\t// support: Safari\r\n\t\t\t// Prevent Safari textarea resize\r\n\t\t\tthis.originalResizeStyle = this.originalElement.css( \"resize\" );\r\n\t\t\tthis.originalElement.css( \"resize\", \"none\" );\r\n\r\n\t\t\tthis._proportionallyResizeElements.push( this.originalElement.css( {\r\n\t\t\t\tposition: \"static\",\r\n\t\t\t\tzoom: 1,\r\n\t\t\t\tdisplay: \"block\"\r\n\t\t\t} ) );\r\n\r\n\t\t\t// Support: IE9\r\n\t\t\t// avoid IE jump (hard set the margin)\r\n\t\t\tthis.originalElement.css( margins );\r\n\r\n\t\t\tthis._proportionallyResize();\r\n\t\t}\r\n\r\n\t\tthis._setupHandles();\r\n\r\n\t\tif ( o.autoHide ) {\r\n\t\t\t$( this.element )\r\n\t\t\t\t.on( \"mouseenter\", function() {\r\n\t\t\t\t\tif ( o.disabled ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat._removeClass( \"ui-resizable-autohide\" );\r\n\t\t\t\t\tthat._handles.show();\r\n\t\t\t\t} )\r\n\t\t\t\t.on( \"mouseleave\", function() {\r\n\t\t\t\t\tif ( o.disabled ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( !that.resizing ) {\r\n\t\t\t\t\t\tthat._addClass( \"ui-resizable-autohide\" );\r\n\t\t\t\t\t\tthat._handles.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t}\r\n\r\n\t\tthis._mouseInit();\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\r\n\t\tthis._mouseDestroy();\r\n\r\n\t\tvar wrapper,\r\n\t\t\t_destroy = function( exp ) {\r\n\t\t\t\t$( exp )\r\n\t\t\t\t\t.removeData( \"resizable\" )\r\n\t\t\t\t\t.removeData( \"ui-resizable\" )\r\n\t\t\t\t\t.off( \".resizable\" )\r\n\t\t\t\t\t.find( \".ui-resizable-handle\" )\r\n\t\t\t\t\t\t.remove();\r\n\t\t\t};\r\n\r\n\t\t// TODO: Unwrap at same DOM position\r\n\t\tif ( this.elementIsWrapper ) {\r\n\t\t\t_destroy( this.element );\r\n\t\t\twrapper = this.element;\r\n\t\t\tthis.originalElement.css( {\r\n\t\t\t\tposition: wrapper.css( \"position\" ),\r\n\t\t\t\twidth: wrapper.outerWidth(),\r\n\t\t\t\theight: wrapper.outerHeight(),\r\n\t\t\t\ttop: wrapper.css( \"top\" ),\r\n\t\t\t\tleft: wrapper.css( \"left\" )\r\n\t\t\t} ).insertAfter( wrapper );\r\n\t\t\twrapper.remove();\r\n\t\t}\r\n\r\n\t\tthis.originalElement.css( \"resize\", this.originalResizeStyle );\r\n\t\t_destroy( this.originalElement );\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tthis._super( key, value );\r\n\r\n\t\tswitch ( key ) {\r\n\t\tcase \"handles\":\r\n\t\t\tthis._removeHandles();\r\n\t\t\tthis._setupHandles();\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\r\n\t_setupHandles: function() {\r\n\t\tvar o = this.options, handle, i, n, hname, axis, that = this;\r\n\t\tthis.handles = o.handles ||\r\n\t\t\t( !$( \".ui-resizable-handle\", this.element ).length ?\r\n\t\t\t\t\"e,s,se\" : {\r\n\t\t\t\t\tn: \".ui-resizable-n\",\r\n\t\t\t\t\te: \".ui-resizable-e\",\r\n\t\t\t\t\ts: \".ui-resizable-s\",\r\n\t\t\t\t\tw: \".ui-resizable-w\",\r\n\t\t\t\t\tse: \".ui-resizable-se\",\r\n\t\t\t\t\tsw: \".ui-resizable-sw\",\r\n\t\t\t\t\tne: \".ui-resizable-ne\",\r\n\t\t\t\t\tnw: \".ui-resizable-nw\"\r\n\t\t\t\t} );\r\n\r\n\t\tthis._handles = $();\r\n\t\tif ( this.handles.constructor === String ) {\r\n\r\n\t\t\tif ( this.handles === \"all\" ) {\r\n\t\t\t\tthis.handles = \"n,e,s,w,se,sw,ne,nw\";\r\n\t\t\t}\r\n\r\n\t\t\tn = this.handles.split( \",\" );\r\n\t\t\tthis.handles = {};\r\n\r\n\t\t\tfor ( i = 0; i < n.length; i++ ) {\r\n\r\n\t\t\t\thandle = $.trim( n[ i ] );\r\n\t\t\t\thname = \"ui-resizable-\" + handle;\r\n\t\t\t\taxis = $( \"<div>\" );\r\n\t\t\t\tthis._addClass( axis, \"ui-resizable-handle \" + hname );\r\n\r\n\t\t\t\taxis.css( { zIndex: o.zIndex } );\r\n\r\n\t\t\t\tthis.handles[ handle ] = \".ui-resizable-\" + handle;\r\n\t\t\t\tthis.element.append( axis );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._renderAxis = function( target ) {\r\n\r\n\t\t\tvar i, axis, padPos, padWrapper;\r\n\r\n\t\t\ttarget = target || this.element;\r\n\r\n\t\t\tfor ( i in this.handles ) {\r\n\r\n\t\t\t\tif ( this.handles[ i ].constructor === String ) {\r\n\t\t\t\t\tthis.handles[ i ] = this.element.children( this.handles[ i ] ).first().show();\r\n\t\t\t\t} else if ( this.handles[ i ].jquery || this.handles[ i ].nodeType ) {\r\n\t\t\t\t\tthis.handles[ i ] = $( this.handles[ i ] );\r\n\t\t\t\t\tthis._on( this.handles[ i ], { \"mousedown\": that._mouseDown } );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.elementIsWrapper &&\r\n\t\t\t\t\t\tthis.originalElement[ 0 ]\r\n\t\t\t\t\t\t\t.nodeName\r\n\t\t\t\t\t\t\t.match( /^(textarea|input|select|button)$/i ) ) {\r\n\t\t\t\t\taxis = $( this.handles[ i ], this.element );\r\n\r\n\t\t\t\t\tpadWrapper = /sw|ne|nw|se|n|s/.test( i ) ?\r\n\t\t\t\t\t\taxis.outerHeight() :\r\n\t\t\t\t\t\taxis.outerWidth();\r\n\r\n\t\t\t\t\tpadPos = [ \"padding\",\r\n\t\t\t\t\t\t/ne|nw|n/.test( i ) ? \"Top\" :\r\n\t\t\t\t\t\t/se|sw|s/.test( i ) ? \"Bottom\" :\r\n\t\t\t\t\t\t/^e$/.test( i ) ? \"Right\" : \"Left\" ].join( \"\" );\r\n\r\n\t\t\t\t\ttarget.css( padPos, padWrapper );\r\n\r\n\t\t\t\t\tthis._proportionallyResize();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._handles = this._handles.add( this.handles[ i ] );\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// TODO: make renderAxis a prototype function\r\n\t\tthis._renderAxis( this.element );\r\n\r\n\t\tthis._handles = this._handles.add( this.element.find( \".ui-resizable-handle\" ) );\r\n\t\tthis._handles.disableSelection();\r\n\r\n\t\tthis._handles.on( \"mouseover\", function() {\r\n\t\t\tif ( !that.resizing ) {\r\n\t\t\t\tif ( this.className ) {\r\n\t\t\t\t\taxis = this.className.match( /ui-resizable-(se|sw|ne|nw|n|e|s|w)/i );\r\n\t\t\t\t}\r\n\t\t\t\tthat.axis = axis && axis[ 1 ] ? axis[ 1 ] : \"se\";\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tif ( o.autoHide ) {\r\n\t\t\tthis._handles.hide();\r\n\t\t\tthis._addClass( \"ui-resizable-autohide\" );\r\n\t\t}\r\n\t},\r\n\r\n\t_removeHandles: function() {\r\n\t\tthis._handles.remove();\r\n\t},\r\n\r\n\t_mouseCapture: function( event ) {\r\n\t\tvar i, handle,\r\n\t\t\tcapture = false;\r\n\r\n\t\tfor ( i in this.handles ) {\r\n\t\t\thandle = $( this.handles[ i ] )[ 0 ];\r\n\t\t\tif ( handle === event.target || $.contains( handle, event.target ) ) {\r\n\t\t\t\tcapture = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn !this.options.disabled && capture;\r\n\t},\r\n\r\n\t_mouseStart: function( event ) {\r\n\r\n\t\tvar curleft, curtop, cursor,\r\n\t\t\to = this.options,\r\n\t\t\tel = this.element;\r\n\r\n\t\tthis.resizing = true;\r\n\r\n\t\tthis._renderProxy();\r\n\r\n\t\tcurleft = this._num( this.helper.css( \"left\" ) );\r\n\t\tcurtop = this._num( this.helper.css( \"top\" ) );\r\n\r\n\t\tif ( o.containment ) {\r\n\t\t\tcurleft += $( o.containment ).scrollLeft() || 0;\r\n\t\t\tcurtop += $( o.containment ).scrollTop() || 0;\r\n\t\t}\r\n\r\n\t\tthis.offset = this.helper.offset();\r\n\t\tthis.position = { left: curleft, top: curtop };\r\n\r\n\t\tthis.size = this._helper ? {\r\n\t\t\t\twidth: this.helper.width(),\r\n\t\t\t\theight: this.helper.height()\r\n\t\t\t} : {\r\n\t\t\t\twidth: el.width(),\r\n\t\t\t\theight: el.height()\r\n\t\t\t};\r\n\r\n\t\tthis.originalSize = this._helper ? {\r\n\t\t\t\twidth: el.outerWidth(),\r\n\t\t\t\theight: el.outerHeight()\r\n\t\t\t} : {\r\n\t\t\t\twidth: el.width(),\r\n\t\t\t\theight: el.height()\r\n\t\t\t};\r\n\r\n\t\tthis.sizeDiff = {\r\n\t\t\twidth: el.outerWidth() - el.width(),\r\n\t\t\theight: el.outerHeight() - el.height()\r\n\t\t};\r\n\r\n\t\tthis.originalPosition = { left: curleft, top: curtop };\r\n\t\tthis.originalMousePosition = { left: event.pageX, top: event.pageY };\r\n\r\n\t\tthis.aspectRatio = ( typeof o.aspectRatio === \"number\" ) ?\r\n\t\t\to.aspectRatio :\r\n\t\t\t( ( this.originalSize.width / this.originalSize.height ) || 1 );\r\n\r\n\t\tcursor = $( \".ui-resizable-\" + this.axis ).css( \"cursor\" );\r\n\t\t$( \"body\" ).css( \"cursor\", cursor === \"auto\" ? this.axis + \"-resize\" : cursor );\r\n\r\n\t\tthis._addClass( \"ui-resizable-resizing\" );\r\n\t\tthis._propagate( \"start\", event );\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_mouseDrag: function( event ) {\r\n\r\n\t\tvar data, props,\r\n\t\t\tsmp = this.originalMousePosition,\r\n\t\t\ta = this.axis,\r\n\t\t\tdx = ( event.pageX - smp.left ) || 0,\r\n\t\t\tdy = ( event.pageY - smp.top ) || 0,\r\n\t\t\ttrigger = this._change[ a ];\r\n\r\n\t\tthis._updatePrevProperties();\r\n\r\n\t\tif ( !trigger ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tdata = trigger.apply( this, [ event, dx, dy ] );\r\n\r\n\t\tthis._updateVirtualBoundaries( event.shiftKey );\r\n\t\tif ( this._aspectRatio || event.shiftKey ) {\r\n\t\t\tdata = this._updateRatio( data, event );\r\n\t\t}\r\n\r\n\t\tdata = this._respectSize( data, event );\r\n\r\n\t\tthis._updateCache( data );\r\n\r\n\t\tthis._propagate( \"resize\", event );\r\n\r\n\t\tprops = this._applyChanges();\r\n\r\n\t\tif ( !this._helper && this._proportionallyResizeElements.length ) {\r\n\t\t\tthis._proportionallyResize();\r\n\t\t}\r\n\r\n\t\tif ( !$.isEmptyObject( props ) ) {\r\n\t\t\tthis._updatePrevProperties();\r\n\t\t\tthis._trigger( \"resize\", event, this.ui() );\r\n\t\t\tthis._applyChanges();\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_mouseStop: function( event ) {\r\n\r\n\t\tthis.resizing = false;\r\n\t\tvar pr, ista, soffseth, soffsetw, s, left, top,\r\n\t\t\to = this.options, that = this;\r\n\r\n\t\tif ( this._helper ) {\r\n\r\n\t\t\tpr = this._proportionallyResizeElements;\r\n\t\t\tista = pr.length && ( /textarea/i ).test( pr[ 0 ].nodeName );\r\n\t\t\tsoffseth = ista && this._hasScroll( pr[ 0 ], \"left\" ) ? 0 : that.sizeDiff.height;\r\n\t\t\tsoffsetw = ista ? 0 : that.sizeDiff.width;\r\n\r\n\t\t\ts = {\r\n\t\t\t\twidth: ( that.helper.width()  - soffsetw ),\r\n\t\t\t\theight: ( that.helper.height() - soffseth )\r\n\t\t\t};\r\n\t\t\tleft = ( parseFloat( that.element.css( \"left\" ) ) +\r\n\t\t\t\t( that.position.left - that.originalPosition.left ) ) || null;\r\n\t\t\ttop = ( parseFloat( that.element.css( \"top\" ) ) +\r\n\t\t\t\t( that.position.top - that.originalPosition.top ) ) || null;\r\n\r\n\t\t\tif ( !o.animate ) {\r\n\t\t\t\tthis.element.css( $.extend( s, { top: top, left: left } ) );\r\n\t\t\t}\r\n\r\n\t\t\tthat.helper.height( that.size.height );\r\n\t\t\tthat.helper.width( that.size.width );\r\n\r\n\t\t\tif ( this._helper && !o.animate ) {\r\n\t\t\t\tthis._proportionallyResize();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$( \"body\" ).css( \"cursor\", \"auto\" );\r\n\r\n\t\tthis._removeClass( \"ui-resizable-resizing\" );\r\n\r\n\t\tthis._propagate( \"stop\", event );\r\n\r\n\t\tif ( this._helper ) {\r\n\t\t\tthis.helper.remove();\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\t_updatePrevProperties: function() {\r\n\t\tthis.prevPosition = {\r\n\t\t\ttop: this.position.top,\r\n\t\t\tleft: this.position.left\r\n\t\t};\r\n\t\tthis.prevSize = {\r\n\t\t\twidth: this.size.width,\r\n\t\t\theight: this.size.height\r\n\t\t};\r\n\t},\r\n\r\n\t_applyChanges: function() {\r\n\t\tvar props = {};\r\n\r\n\t\tif ( this.position.top !== this.prevPosition.top ) {\r\n\t\t\tprops.top = this.position.top + \"px\";\r\n\t\t}\r\n\t\tif ( this.position.left !== this.prevPosition.left ) {\r\n\t\t\tprops.left = this.position.left + \"px\";\r\n\t\t}\r\n\t\tif ( this.size.width !== this.prevSize.width ) {\r\n\t\t\tprops.width = this.size.width + \"px\";\r\n\t\t}\r\n\t\tif ( this.size.height !== this.prevSize.height ) {\r\n\t\t\tprops.height = this.size.height + \"px\";\r\n\t\t}\r\n\r\n\t\tthis.helper.css( props );\r\n\r\n\t\treturn props;\r\n\t},\r\n\r\n\t_updateVirtualBoundaries: function( forceAspectRatio ) {\r\n\t\tvar pMinWidth, pMaxWidth, pMinHeight, pMaxHeight, b,\r\n\t\t\to = this.options;\r\n\r\n\t\tb = {\r\n\t\t\tminWidth: this._isNumber( o.minWidth ) ? o.minWidth : 0,\r\n\t\t\tmaxWidth: this._isNumber( o.maxWidth ) ? o.maxWidth : Infinity,\r\n\t\t\tminHeight: this._isNumber( o.minHeight ) ? o.minHeight : 0,\r\n\t\t\tmaxHeight: this._isNumber( o.maxHeight ) ? o.maxHeight : Infinity\r\n\t\t};\r\n\r\n\t\tif ( this._aspectRatio || forceAspectRatio ) {\r\n\t\t\tpMinWidth = b.minHeight * this.aspectRatio;\r\n\t\t\tpMinHeight = b.minWidth / this.aspectRatio;\r\n\t\t\tpMaxWidth = b.maxHeight * this.aspectRatio;\r\n\t\t\tpMaxHeight = b.maxWidth / this.aspectRatio;\r\n\r\n\t\t\tif ( pMinWidth > b.minWidth ) {\r\n\t\t\t\tb.minWidth = pMinWidth;\r\n\t\t\t}\r\n\t\t\tif ( pMinHeight > b.minHeight ) {\r\n\t\t\t\tb.minHeight = pMinHeight;\r\n\t\t\t}\r\n\t\t\tif ( pMaxWidth < b.maxWidth ) {\r\n\t\t\t\tb.maxWidth = pMaxWidth;\r\n\t\t\t}\r\n\t\t\tif ( pMaxHeight < b.maxHeight ) {\r\n\t\t\t\tb.maxHeight = pMaxHeight;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._vBoundaries = b;\r\n\t},\r\n\r\n\t_updateCache: function( data ) {\r\n\t\tthis.offset = this.helper.offset();\r\n\t\tif ( this._isNumber( data.left ) ) {\r\n\t\t\tthis.position.left = data.left;\r\n\t\t}\r\n\t\tif ( this._isNumber( data.top ) ) {\r\n\t\t\tthis.position.top = data.top;\r\n\t\t}\r\n\t\tif ( this._isNumber( data.height ) ) {\r\n\t\t\tthis.size.height = data.height;\r\n\t\t}\r\n\t\tif ( this._isNumber( data.width ) ) {\r\n\t\t\tthis.size.width = data.width;\r\n\t\t}\r\n\t},\r\n\r\n\t_updateRatio: function( data ) {\r\n\r\n\t\tvar cpos = this.position,\r\n\t\t\tcsize = this.size,\r\n\t\t\ta = this.axis;\r\n\r\n\t\tif ( this._isNumber( data.height ) ) {\r\n\t\t\tdata.width = ( data.height * this.aspectRatio );\r\n\t\t} else if ( this._isNumber( data.width ) ) {\r\n\t\t\tdata.height = ( data.width / this.aspectRatio );\r\n\t\t}\r\n\r\n\t\tif ( a === \"sw\" ) {\r\n\t\t\tdata.left = cpos.left + ( csize.width - data.width );\r\n\t\t\tdata.top = null;\r\n\t\t}\r\n\t\tif ( a === \"nw\" ) {\r\n\t\t\tdata.top = cpos.top + ( csize.height - data.height );\r\n\t\t\tdata.left = cpos.left + ( csize.width - data.width );\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t},\r\n\r\n\t_respectSize: function( data ) {\r\n\r\n\t\tvar o = this._vBoundaries,\r\n\t\t\ta = this.axis,\r\n\t\t\tismaxw = this._isNumber( data.width ) && o.maxWidth && ( o.maxWidth < data.width ),\r\n\t\t\tismaxh = this._isNumber( data.height ) && o.maxHeight && ( o.maxHeight < data.height ),\r\n\t\t\tisminw = this._isNumber( data.width ) && o.minWidth && ( o.minWidth > data.width ),\r\n\t\t\tisminh = this._isNumber( data.height ) && o.minHeight && ( o.minHeight > data.height ),\r\n\t\t\tdw = this.originalPosition.left + this.originalSize.width,\r\n\t\t\tdh = this.originalPosition.top + this.originalSize.height,\r\n\t\t\tcw = /sw|nw|w/.test( a ), ch = /nw|ne|n/.test( a );\r\n\t\tif ( isminw ) {\r\n\t\t\tdata.width = o.minWidth;\r\n\t\t}\r\n\t\tif ( isminh ) {\r\n\t\t\tdata.height = o.minHeight;\r\n\t\t}\r\n\t\tif ( ismaxw ) {\r\n\t\t\tdata.width = o.maxWidth;\r\n\t\t}\r\n\t\tif ( ismaxh ) {\r\n\t\t\tdata.height = o.maxHeight;\r\n\t\t}\r\n\r\n\t\tif ( isminw && cw ) {\r\n\t\t\tdata.left = dw - o.minWidth;\r\n\t\t}\r\n\t\tif ( ismaxw && cw ) {\r\n\t\t\tdata.left = dw - o.maxWidth;\r\n\t\t}\r\n\t\tif ( isminh && ch ) {\r\n\t\t\tdata.top = dh - o.minHeight;\r\n\t\t}\r\n\t\tif ( ismaxh && ch ) {\r\n\t\t\tdata.top = dh - o.maxHeight;\r\n\t\t}\r\n\r\n\t\t// Fixing jump error on top/left - bug #2330\r\n\t\tif ( !data.width && !data.height && !data.left && data.top ) {\r\n\t\t\tdata.top = null;\r\n\t\t} else if ( !data.width && !data.height && !data.top && data.left ) {\r\n\t\t\tdata.left = null;\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t},\r\n\r\n\t_getPaddingPlusBorderDimensions: function( element ) {\r\n\t\tvar i = 0,\r\n\t\t\twidths = [],\r\n\t\t\tborders = [\r\n\t\t\t\telement.css( \"borderTopWidth\" ),\r\n\t\t\t\telement.css( \"borderRightWidth\" ),\r\n\t\t\t\telement.css( \"borderBottomWidth\" ),\r\n\t\t\t\telement.css( \"borderLeftWidth\" )\r\n\t\t\t],\r\n\t\t\tpaddings = [\r\n\t\t\t\telement.css( \"paddingTop\" ),\r\n\t\t\t\telement.css( \"paddingRight\" ),\r\n\t\t\t\telement.css( \"paddingBottom\" ),\r\n\t\t\t\telement.css( \"paddingLeft\" )\r\n\t\t\t];\r\n\r\n\t\tfor ( ; i < 4; i++ ) {\r\n\t\t\twidths[ i ] = ( parseFloat( borders[ i ] ) || 0 );\r\n\t\t\twidths[ i ] += ( parseFloat( paddings[ i ] ) || 0 );\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\theight: widths[ 0 ] + widths[ 2 ],\r\n\t\t\twidth: widths[ 1 ] + widths[ 3 ]\r\n\t\t};\r\n\t},\r\n\r\n\t_proportionallyResize: function() {\r\n\r\n\t\tif ( !this._proportionallyResizeElements.length ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar prel,\r\n\t\t\ti = 0,\r\n\t\t\telement = this.helper || this.element;\r\n\r\n\t\tfor ( ; i < this._proportionallyResizeElements.length; i++ ) {\r\n\r\n\t\t\tprel = this._proportionallyResizeElements[ i ];\r\n\r\n\t\t\t// TODO: Seems like a bug to cache this.outerDimensions\r\n\t\t\t// considering that we are in a loop.\r\n\t\t\tif ( !this.outerDimensions ) {\r\n\t\t\t\tthis.outerDimensions = this._getPaddingPlusBorderDimensions( prel );\r\n\t\t\t}\r\n\r\n\t\t\tprel.css( {\r\n\t\t\t\theight: ( element.height() - this.outerDimensions.height ) || 0,\r\n\t\t\t\twidth: ( element.width() - this.outerDimensions.width ) || 0\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_renderProxy: function() {\r\n\r\n\t\tvar el = this.element, o = this.options;\r\n\t\tthis.elementOffset = el.offset();\r\n\r\n\t\tif ( this._helper ) {\r\n\r\n\t\t\tthis.helper = this.helper || $( \"<div style='overflow:hidden;'></div>\" );\r\n\r\n\t\t\tthis._addClass( this.helper, this._helper );\r\n\t\t\tthis.helper.css( {\r\n\t\t\t\twidth: this.element.outerWidth(),\r\n\t\t\t\theight: this.element.outerHeight(),\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tleft: this.elementOffset.left + \"px\",\r\n\t\t\t\ttop: this.elementOffset.top + \"px\",\r\n\t\t\t\tzIndex: ++o.zIndex //TODO: Don't modify option\r\n\t\t\t} );\r\n\r\n\t\t\tthis.helper\r\n\t\t\t\t.appendTo( \"body\" )\r\n\t\t\t\t.disableSelection();\r\n\r\n\t\t} else {\r\n\t\t\tthis.helper = this.element;\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_change: {\r\n\t\te: function( event, dx ) {\r\n\t\t\treturn { width: this.originalSize.width + dx };\r\n\t\t},\r\n\t\tw: function( event, dx ) {\r\n\t\t\tvar cs = this.originalSize, sp = this.originalPosition;\r\n\t\t\treturn { left: sp.left + dx, width: cs.width - dx };\r\n\t\t},\r\n\t\tn: function( event, dx, dy ) {\r\n\t\t\tvar cs = this.originalSize, sp = this.originalPosition;\r\n\t\t\treturn { top: sp.top + dy, height: cs.height - dy };\r\n\t\t},\r\n\t\ts: function( event, dx, dy ) {\r\n\t\t\treturn { height: this.originalSize.height + dy };\r\n\t\t},\r\n\t\tse: function( event, dx, dy ) {\r\n\t\t\treturn $.extend( this._change.s.apply( this, arguments ),\r\n\t\t\t\tthis._change.e.apply( this, [ event, dx, dy ] ) );\r\n\t\t},\r\n\t\tsw: function( event, dx, dy ) {\r\n\t\t\treturn $.extend( this._change.s.apply( this, arguments ),\r\n\t\t\t\tthis._change.w.apply( this, [ event, dx, dy ] ) );\r\n\t\t},\r\n\t\tne: function( event, dx, dy ) {\r\n\t\t\treturn $.extend( this._change.n.apply( this, arguments ),\r\n\t\t\t\tthis._change.e.apply( this, [ event, dx, dy ] ) );\r\n\t\t},\r\n\t\tnw: function( event, dx, dy ) {\r\n\t\t\treturn $.extend( this._change.n.apply( this, arguments ),\r\n\t\t\t\tthis._change.w.apply( this, [ event, dx, dy ] ) );\r\n\t\t}\r\n\t},\r\n\r\n\t_propagate: function( n, event ) {\r\n\t\t$.ui.plugin.call( this, n, [ event, this.ui() ] );\r\n\t\t( n !== \"resize\" && this._trigger( n, event, this.ui() ) );\r\n\t},\r\n\r\n\tplugins: {},\r\n\r\n\tui: function() {\r\n\t\treturn {\r\n\t\t\toriginalElement: this.originalElement,\r\n\t\t\telement: this.element,\r\n\t\t\thelper: this.helper,\r\n\t\t\tposition: this.position,\r\n\t\t\tsize: this.size,\r\n\t\t\toriginalSize: this.originalSize,\r\n\t\t\toriginalPosition: this.originalPosition\r\n\t\t};\r\n\t}\r\n\r\n} );\r\n\r\n/*\r\n * Resizable Extensions\r\n */\r\n\r\n$.ui.plugin.add( \"resizable\", \"animate\", {\r\n\r\n\tstop: function( event ) {\r\n\t\tvar that = $( this ).resizable( \"instance\" ),\r\n\t\t\to = that.options,\r\n\t\t\tpr = that._proportionallyResizeElements,\r\n\t\t\tista = pr.length && ( /textarea/i ).test( pr[ 0 ].nodeName ),\r\n\t\t\tsoffseth = ista && that._hasScroll( pr[ 0 ], \"left\" ) ? 0 : that.sizeDiff.height,\r\n\t\t\tsoffsetw = ista ? 0 : that.sizeDiff.width,\r\n\t\t\tstyle = {\r\n\t\t\t\twidth: ( that.size.width - soffsetw ),\r\n\t\t\t\theight: ( that.size.height - soffseth )\r\n\t\t\t},\r\n\t\t\tleft = ( parseFloat( that.element.css( \"left\" ) ) +\r\n\t\t\t\t( that.position.left - that.originalPosition.left ) ) || null,\r\n\t\t\ttop = ( parseFloat( that.element.css( \"top\" ) ) +\r\n\t\t\t\t( that.position.top - that.originalPosition.top ) ) || null;\r\n\r\n\t\tthat.element.animate(\r\n\t\t\t$.extend( style, top && left ? { top: top, left: left } : {} ), {\r\n\t\t\t\tduration: o.animateDuration,\r\n\t\t\t\teasing: o.animateEasing,\r\n\t\t\t\tstep: function() {\r\n\r\n\t\t\t\t\tvar data = {\r\n\t\t\t\t\t\twidth: parseFloat( that.element.css( \"width\" ) ),\r\n\t\t\t\t\t\theight: parseFloat( that.element.css( \"height\" ) ),\r\n\t\t\t\t\t\ttop: parseFloat( that.element.css( \"top\" ) ),\r\n\t\t\t\t\t\tleft: parseFloat( that.element.css( \"left\" ) )\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif ( pr && pr.length ) {\r\n\t\t\t\t\t\t$( pr[ 0 ] ).css( { width: data.width, height: data.height } );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Propagating resize, and updating values for each animation step\r\n\t\t\t\t\tthat._updateCache( data );\r\n\t\t\t\t\tthat._propagate( \"resize\", event );\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n} );\r\n\r\n$.ui.plugin.add( \"resizable\", \"containment\", {\r\n\r\n\tstart: function() {\r\n\t\tvar element, p, co, ch, cw, width, height,\r\n\t\t\tthat = $( this ).resizable( \"instance\" ),\r\n\t\t\to = that.options,\r\n\t\t\tel = that.element,\r\n\t\t\toc = o.containment,\r\n\t\t\tce = ( oc instanceof $ ) ?\r\n\t\t\t\toc.get( 0 ) :\r\n\t\t\t\t( /parent/.test( oc ) ) ? el.parent().get( 0 ) : oc;\r\n\r\n\t\tif ( !ce ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthat.containerElement = $( ce );\r\n\r\n\t\tif ( /document/.test( oc ) || oc === document ) {\r\n\t\t\tthat.containerOffset = {\r\n\t\t\t\tleft: 0,\r\n\t\t\t\ttop: 0\r\n\t\t\t};\r\n\t\t\tthat.containerPosition = {\r\n\t\t\t\tleft: 0,\r\n\t\t\t\ttop: 0\r\n\t\t\t};\r\n\r\n\t\t\tthat.parentData = {\r\n\t\t\t\telement: $( document ),\r\n\t\t\t\tleft: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\twidth: $( document ).width(),\r\n\t\t\t\theight: $( document ).height() || document.body.parentNode.scrollHeight\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\telement = $( ce );\r\n\t\t\tp = [];\r\n\t\t\t$( [ \"Top\", \"Right\", \"Left\", \"Bottom\" ] ).each( function( i, name ) {\r\n\t\t\t\tp[ i ] = that._num( element.css( \"padding\" + name ) );\r\n\t\t\t} );\r\n\r\n\t\t\tthat.containerOffset = element.offset();\r\n\t\t\tthat.containerPosition = element.position();\r\n\t\t\tthat.containerSize = {\r\n\t\t\t\theight: ( element.innerHeight() - p[ 3 ] ),\r\n\t\t\t\twidth: ( element.innerWidth() - p[ 1 ] )\r\n\t\t\t};\r\n\r\n\t\t\tco = that.containerOffset;\r\n\t\t\tch = that.containerSize.height;\r\n\t\t\tcw = that.containerSize.width;\r\n\t\t\twidth = ( that._hasScroll ( ce, \"left\" ) ? ce.scrollWidth : cw );\r\n\t\t\theight = ( that._hasScroll ( ce ) ? ce.scrollHeight : ch ) ;\r\n\r\n\t\t\tthat.parentData = {\r\n\t\t\t\telement: ce,\r\n\t\t\t\tleft: co.left,\r\n\t\t\t\ttop: co.top,\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\r\n\tresize: function( event ) {\r\n\t\tvar woset, hoset, isParent, isOffsetRelative,\r\n\t\t\tthat = $( this ).resizable( \"instance\" ),\r\n\t\t\to = that.options,\r\n\t\t\tco = that.containerOffset,\r\n\t\t\tcp = that.position,\r\n\t\t\tpRatio = that._aspectRatio || event.shiftKey,\r\n\t\t\tcop = {\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tleft: 0\r\n\t\t\t},\r\n\t\t\tce = that.containerElement,\r\n\t\t\tcontinueResize = true;\r\n\r\n\t\tif ( ce[ 0 ] !== document && ( /static/ ).test( ce.css( \"position\" ) ) ) {\r\n\t\t\tcop = co;\r\n\t\t}\r\n\r\n\t\tif ( cp.left < ( that._helper ? co.left : 0 ) ) {\r\n\t\t\tthat.size.width = that.size.width +\r\n\t\t\t\t( that._helper ?\r\n\t\t\t\t\t( that.position.left - co.left ) :\r\n\t\t\t\t\t( that.position.left - cop.left ) );\r\n\r\n\t\t\tif ( pRatio ) {\r\n\t\t\t\tthat.size.height = that.size.width / that.aspectRatio;\r\n\t\t\t\tcontinueResize = false;\r\n\t\t\t}\r\n\t\t\tthat.position.left = o.helper ? co.left : 0;\r\n\t\t}\r\n\r\n\t\tif ( cp.top < ( that._helper ? co.top : 0 ) ) {\r\n\t\t\tthat.size.height = that.size.height +\r\n\t\t\t\t( that._helper ?\r\n\t\t\t\t\t( that.position.top - co.top ) :\r\n\t\t\t\t\tthat.position.top );\r\n\r\n\t\t\tif ( pRatio ) {\r\n\t\t\t\tthat.size.width = that.size.height * that.aspectRatio;\r\n\t\t\t\tcontinueResize = false;\r\n\t\t\t}\r\n\t\t\tthat.position.top = that._helper ? co.top : 0;\r\n\t\t}\r\n\r\n\t\tisParent = that.containerElement.get( 0 ) === that.element.parent().get( 0 );\r\n\t\tisOffsetRelative = /relative|absolute/.test( that.containerElement.css( \"position\" ) );\r\n\r\n\t\tif ( isParent && isOffsetRelative ) {\r\n\t\t\tthat.offset.left = that.parentData.left + that.position.left;\r\n\t\t\tthat.offset.top = that.parentData.top + that.position.top;\r\n\t\t} else {\r\n\t\t\tthat.offset.left = that.element.offset().left;\r\n\t\t\tthat.offset.top = that.element.offset().top;\r\n\t\t}\r\n\r\n\t\twoset = Math.abs( that.sizeDiff.width +\r\n\t\t\t( that._helper ?\r\n\t\t\t\tthat.offset.left - cop.left :\r\n\t\t\t\t( that.offset.left - co.left ) ) );\r\n\r\n\t\thoset = Math.abs( that.sizeDiff.height +\r\n\t\t\t( that._helper ?\r\n\t\t\t\tthat.offset.top - cop.top :\r\n\t\t\t\t( that.offset.top - co.top ) ) );\r\n\r\n\t\tif ( woset + that.size.width >= that.parentData.width ) {\r\n\t\t\tthat.size.width = that.parentData.width - woset;\r\n\t\t\tif ( pRatio ) {\r\n\t\t\t\tthat.size.height = that.size.width / that.aspectRatio;\r\n\t\t\t\tcontinueResize = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( hoset + that.size.height >= that.parentData.height ) {\r\n\t\t\tthat.size.height = that.parentData.height - hoset;\r\n\t\t\tif ( pRatio ) {\r\n\t\t\t\tthat.size.width = that.size.height * that.aspectRatio;\r\n\t\t\t\tcontinueResize = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( !continueResize ) {\r\n\t\t\tthat.position.left = that.prevPosition.left;\r\n\t\t\tthat.position.top = that.prevPosition.top;\r\n\t\t\tthat.size.width = that.prevSize.width;\r\n\t\t\tthat.size.height = that.prevSize.height;\r\n\t\t}\r\n\t},\r\n\r\n\tstop: function() {\r\n\t\tvar that = $( this ).resizable( \"instance\" ),\r\n\t\t\to = that.options,\r\n\t\t\tco = that.containerOffset,\r\n\t\t\tcop = that.containerPosition,\r\n\t\t\tce = that.containerElement,\r\n\t\t\thelper = $( that.helper ),\r\n\t\t\tho = helper.offset(),\r\n\t\t\tw = helper.outerWidth() - that.sizeDiff.width,\r\n\t\t\th = helper.outerHeight() - that.sizeDiff.height;\r\n\r\n\t\tif ( that._helper && !o.animate && ( /relative/ ).test( ce.css( \"position\" ) ) ) {\r\n\t\t\t$( this ).css( {\r\n\t\t\t\tleft: ho.left - cop.left - co.left,\r\n\t\t\t\twidth: w,\r\n\t\t\t\theight: h\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( that._helper && !o.animate && ( /static/ ).test( ce.css( \"position\" ) ) ) {\r\n\t\t\t$( this ).css( {\r\n\t\t\t\tleft: ho.left - cop.left - co.left,\r\n\t\t\t\twidth: w,\r\n\t\t\t\theight: h\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n$.ui.plugin.add( \"resizable\", \"alsoResize\", {\r\n\r\n\tstart: function() {\r\n\t\tvar that = $( this ).resizable( \"instance\" ),\r\n\t\t\to = that.options;\r\n\r\n\t\t$( o.alsoResize ).each( function() {\r\n\t\t\tvar el = $( this );\r\n\t\t\tel.data( \"ui-resizable-alsoresize\", {\r\n\t\t\t\twidth: parseFloat( el.width() ), height: parseFloat( el.height() ),\r\n\t\t\t\tleft: parseFloat( el.css( \"left\" ) ), top: parseFloat( el.css( \"top\" ) )\r\n\t\t\t} );\r\n\t\t} );\r\n\t},\r\n\r\n\tresize: function( event, ui ) {\r\n\t\tvar that = $( this ).resizable( \"instance\" ),\r\n\t\t\to = that.options,\r\n\t\t\tos = that.originalSize,\r\n\t\t\top = that.originalPosition,\r\n\t\t\tdelta = {\r\n\t\t\t\theight: ( that.size.height - os.height ) || 0,\r\n\t\t\t\twidth: ( that.size.width - os.width ) || 0,\r\n\t\t\t\ttop: ( that.position.top - op.top ) || 0,\r\n\t\t\t\tleft: ( that.position.left - op.left ) || 0\r\n\t\t\t};\r\n\r\n\t\t\t$( o.alsoResize ).each( function() {\r\n\t\t\t\tvar el = $( this ), start = $( this ).data( \"ui-resizable-alsoresize\" ), style = {},\r\n\t\t\t\t\tcss = el.parents( ui.originalElement[ 0 ] ).length ?\r\n\t\t\t\t\t\t\t[ \"width\", \"height\" ] :\r\n\t\t\t\t\t\t\t[ \"width\", \"height\", \"top\", \"left\" ];\r\n\r\n\t\t\t\t$.each( css, function( i, prop ) {\r\n\t\t\t\t\tvar sum = ( start[ prop ] || 0 ) + ( delta[ prop ] || 0 );\r\n\t\t\t\t\tif ( sum && sum >= 0 ) {\r\n\t\t\t\t\t\tstyle[ prop ] = sum || null;\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tel.css( style );\r\n\t\t\t} );\r\n\t},\r\n\r\n\tstop: function() {\r\n\t\t$( this ).removeData( \"ui-resizable-alsoresize\" );\r\n\t}\r\n} );\r\n\r\n$.ui.plugin.add( \"resizable\", \"ghost\", {\r\n\r\n\tstart: function() {\r\n\r\n\t\tvar that = $( this ).resizable( \"instance\" ), cs = that.size;\r\n\r\n\t\tthat.ghost = that.originalElement.clone();\r\n\t\tthat.ghost.css( {\r\n\t\t\topacity: 0.25,\r\n\t\t\tdisplay: \"block\",\r\n\t\t\tposition: \"relative\",\r\n\t\t\theight: cs.height,\r\n\t\t\twidth: cs.width,\r\n\t\t\tmargin: 0,\r\n\t\t\tleft: 0,\r\n\t\t\ttop: 0\r\n\t\t} );\r\n\r\n\t\tthat._addClass( that.ghost, \"ui-resizable-ghost\" );\r\n\r\n\t\t// DEPRECATED\r\n\t\t// TODO: remove after 1.12\r\n\t\tif ( $.uiBackCompat !== false && typeof that.options.ghost === \"string\" ) {\r\n\r\n\t\t\t// Ghost option\r\n\t\t\tthat.ghost.addClass( this.options.ghost );\r\n\t\t}\r\n\r\n\t\tthat.ghost.appendTo( that.helper );\r\n\r\n\t},\r\n\r\n\tresize: function() {\r\n\t\tvar that = $( this ).resizable( \"instance\" );\r\n\t\tif ( that.ghost ) {\r\n\t\t\tthat.ghost.css( {\r\n\t\t\t\tposition: \"relative\",\r\n\t\t\t\theight: that.size.height,\r\n\t\t\t\twidth: that.size.width\r\n\t\t\t} );\r\n\t\t}\r\n\t},\r\n\r\n\tstop: function() {\r\n\t\tvar that = $( this ).resizable( \"instance\" );\r\n\t\tif ( that.ghost && that.helper ) {\r\n\t\t\tthat.helper.get( 0 ).removeChild( that.ghost.get( 0 ) );\r\n\t\t}\r\n\t}\r\n\r\n} );\r\n\r\n$.ui.plugin.add( \"resizable\", \"grid\", {\r\n\r\n\tresize: function() {\r\n\t\tvar outerDimensions,\r\n\t\t\tthat = $( this ).resizable( \"instance\" ),\r\n\t\t\to = that.options,\r\n\t\t\tcs = that.size,\r\n\t\t\tos = that.originalSize,\r\n\t\t\top = that.originalPosition,\r\n\t\t\ta = that.axis,\r\n\t\t\tgrid = typeof o.grid === \"number\" ? [ o.grid, o.grid ] : o.grid,\r\n\t\t\tgridX = ( grid[ 0 ] || 1 ),\r\n\t\t\tgridY = ( grid[ 1 ] || 1 ),\r\n\t\t\tox = Math.round( ( cs.width - os.width ) / gridX ) * gridX,\r\n\t\t\toy = Math.round( ( cs.height - os.height ) / gridY ) * gridY,\r\n\t\t\tnewWidth = os.width + ox,\r\n\t\t\tnewHeight = os.height + oy,\r\n\t\t\tisMaxWidth = o.maxWidth && ( o.maxWidth < newWidth ),\r\n\t\t\tisMaxHeight = o.maxHeight && ( o.maxHeight < newHeight ),\r\n\t\t\tisMinWidth = o.minWidth && ( o.minWidth > newWidth ),\r\n\t\t\tisMinHeight = o.minHeight && ( o.minHeight > newHeight );\r\n\r\n\t\to.grid = grid;\r\n\r\n\t\tif ( isMinWidth ) {\r\n\t\t\tnewWidth += gridX;\r\n\t\t}\r\n\t\tif ( isMinHeight ) {\r\n\t\t\tnewHeight += gridY;\r\n\t\t}\r\n\t\tif ( isMaxWidth ) {\r\n\t\t\tnewWidth -= gridX;\r\n\t\t}\r\n\t\tif ( isMaxHeight ) {\r\n\t\t\tnewHeight -= gridY;\r\n\t\t}\r\n\r\n\t\tif ( /^(se|s|e)$/.test( a ) ) {\r\n\t\t\tthat.size.width = newWidth;\r\n\t\t\tthat.size.height = newHeight;\r\n\t\t} else if ( /^(ne)$/.test( a ) ) {\r\n\t\t\tthat.size.width = newWidth;\r\n\t\t\tthat.size.height = newHeight;\r\n\t\t\tthat.position.top = op.top - oy;\r\n\t\t} else if ( /^(sw)$/.test( a ) ) {\r\n\t\t\tthat.size.width = newWidth;\r\n\t\t\tthat.size.height = newHeight;\r\n\t\t\tthat.position.left = op.left - ox;\r\n\t\t} else {\r\n\t\t\tif ( newHeight - gridY <= 0 || newWidth - gridX <= 0 ) {\r\n\t\t\t\touterDimensions = that._getPaddingPlusBorderDimensions( this );\r\n\t\t\t}\r\n\r\n\t\t\tif ( newHeight - gridY > 0 ) {\r\n\t\t\t\tthat.size.height = newHeight;\r\n\t\t\t\tthat.position.top = op.top - oy;\r\n\t\t\t} else {\r\n\t\t\t\tnewHeight = gridY - outerDimensions.height;\r\n\t\t\t\tthat.size.height = newHeight;\r\n\t\t\t\tthat.position.top = op.top + os.height - newHeight;\r\n\t\t\t}\r\n\t\t\tif ( newWidth - gridX > 0 ) {\r\n\t\t\t\tthat.size.width = newWidth;\r\n\t\t\t\tthat.position.left = op.left - ox;\r\n\t\t\t} else {\r\n\t\t\t\tnewWidth = gridX - outerDimensions.width;\r\n\t\t\t\tthat.size.width = newWidth;\r\n\t\t\t\tthat.position.left = op.left + os.width - newWidth;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n} );\r\n\r\nreturn $.ui.resizable;\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/selectable.js":"/*!\r\n * jQuery UI Selectable 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Selectable\r\n//>>group: Interactions\r\n//>>description: Allows groups of elements to be selected with the mouse.\r\n//>>docs: http://api.jqueryui.com/selectable/\r\n//>>demos: http://jqueryui.com/selectable/\r\n//>>css.structure: ../../themes/base/selectable.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"./mouse\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\nreturn $.widget( \"ui.selectable\", $.ui.mouse, {\r\n\tversion: \"1.12.1\",\r\n\toptions: {\r\n\t\tappendTo: \"body\",\r\n\t\tautoRefresh: true,\r\n\t\tdistance: 0,\r\n\t\tfilter: \"*\",\r\n\t\ttolerance: \"touch\",\r\n\r\n\t\t// Callbacks\r\n\t\tselected: null,\r\n\t\tselecting: null,\r\n\t\tstart: null,\r\n\t\tstop: null,\r\n\t\tunselected: null,\r\n\t\tunselecting: null\r\n\t},\r\n\t_create: function() {\r\n\t\tvar that = this;\r\n\r\n\t\tthis._addClass( \"ui-selectable\" );\r\n\r\n\t\tthis.dragged = false;\r\n\r\n\t\t// Cache selectee children based on filter\r\n\t\tthis.refresh = function() {\r\n\t\t\tthat.elementPos = $( that.element[ 0 ] ).offset();\r\n\t\t\tthat.selectees = $( that.options.filter, that.element[ 0 ] );\r\n\t\t\tthat._addClass( that.selectees, \"ui-selectee\" );\r\n\t\t\tthat.selectees.each( function() {\r\n\t\t\t\tvar $this = $( this ),\r\n\t\t\t\t\tselecteeOffset = $this.offset(),\r\n\t\t\t\t\tpos = {\r\n\t\t\t\t\t\tleft: selecteeOffset.left - that.elementPos.left,\r\n\t\t\t\t\t\ttop: selecteeOffset.top - that.elementPos.top\r\n\t\t\t\t\t};\r\n\t\t\t\t$.data( this, \"selectable-item\", {\r\n\t\t\t\t\telement: this,\r\n\t\t\t\t\t$element: $this,\r\n\t\t\t\t\tleft: pos.left,\r\n\t\t\t\t\ttop: pos.top,\r\n\t\t\t\t\tright: pos.left + $this.outerWidth(),\r\n\t\t\t\t\tbottom: pos.top + $this.outerHeight(),\r\n\t\t\t\t\tstartselected: false,\r\n\t\t\t\t\tselected: $this.hasClass( \"ui-selected\" ),\r\n\t\t\t\t\tselecting: $this.hasClass( \"ui-selecting\" ),\r\n\t\t\t\t\tunselecting: $this.hasClass( \"ui-unselecting\" )\r\n\t\t\t\t} );\r\n\t\t\t} );\r\n\t\t};\r\n\t\tthis.refresh();\r\n\r\n\t\tthis._mouseInit();\r\n\r\n\t\tthis.helper = $( \"<div>\" );\r\n\t\tthis._addClass( this.helper, \"ui-selectable-helper\" );\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis.selectees.removeData( \"selectable-item\" );\r\n\t\tthis._mouseDestroy();\r\n\t},\r\n\r\n\t_mouseStart: function( event ) {\r\n\t\tvar that = this,\r\n\t\t\toptions = this.options;\r\n\r\n\t\tthis.opos = [ event.pageX, event.pageY ];\r\n\t\tthis.elementPos = $( this.element[ 0 ] ).offset();\r\n\r\n\t\tif ( this.options.disabled ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.selectees = $( options.filter, this.element[ 0 ] );\r\n\r\n\t\tthis._trigger( \"start\", event );\r\n\r\n\t\t$( options.appendTo ).append( this.helper );\r\n\r\n\t\t// position helper (lasso)\r\n\t\tthis.helper.css( {\r\n\t\t\t\"left\": event.pageX,\r\n\t\t\t\"top\": event.pageY,\r\n\t\t\t\"width\": 0,\r\n\t\t\t\"height\": 0\r\n\t\t} );\r\n\r\n\t\tif ( options.autoRefresh ) {\r\n\t\t\tthis.refresh();\r\n\t\t}\r\n\r\n\t\tthis.selectees.filter( \".ui-selected\" ).each( function() {\r\n\t\t\tvar selectee = $.data( this, \"selectable-item\" );\r\n\t\t\tselectee.startselected = true;\r\n\t\t\tif ( !event.metaKey && !event.ctrlKey ) {\r\n\t\t\t\tthat._removeClass( selectee.$element, \"ui-selected\" );\r\n\t\t\t\tselectee.selected = false;\r\n\t\t\t\tthat._addClass( selectee.$element, \"ui-unselecting\" );\r\n\t\t\t\tselectee.unselecting = true;\r\n\r\n\t\t\t\t// selectable UNSELECTING callback\r\n\t\t\t\tthat._trigger( \"unselecting\", event, {\r\n\t\t\t\t\tunselecting: selectee.element\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t$( event.target ).parents().addBack().each( function() {\r\n\t\t\tvar doSelect,\r\n\t\t\t\tselectee = $.data( this, \"selectable-item\" );\r\n\t\t\tif ( selectee ) {\r\n\t\t\t\tdoSelect = ( !event.metaKey && !event.ctrlKey ) ||\r\n\t\t\t\t\t!selectee.$element.hasClass( \"ui-selected\" );\r\n\t\t\t\tthat._removeClass( selectee.$element, doSelect ? \"ui-unselecting\" : \"ui-selected\" )\r\n\t\t\t\t\t._addClass( selectee.$element, doSelect ? \"ui-selecting\" : \"ui-unselecting\" );\r\n\t\t\t\tselectee.unselecting = !doSelect;\r\n\t\t\t\tselectee.selecting = doSelect;\r\n\t\t\t\tselectee.selected = doSelect;\r\n\r\n\t\t\t\t// selectable (UN)SELECTING callback\r\n\t\t\t\tif ( doSelect ) {\r\n\t\t\t\t\tthat._trigger( \"selecting\", event, {\r\n\t\t\t\t\t\tselecting: selectee.element\r\n\t\t\t\t\t} );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthat._trigger( \"unselecting\", event, {\r\n\t\t\t\t\t\tunselecting: selectee.element\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\t_mouseDrag: function( event ) {\r\n\r\n\t\tthis.dragged = true;\r\n\r\n\t\tif ( this.options.disabled ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tmp,\r\n\t\t\tthat = this,\r\n\t\t\toptions = this.options,\r\n\t\t\tx1 = this.opos[ 0 ],\r\n\t\t\ty1 = this.opos[ 1 ],\r\n\t\t\tx2 = event.pageX,\r\n\t\t\ty2 = event.pageY;\r\n\r\n\t\tif ( x1 > x2 ) { tmp = x2; x2 = x1; x1 = tmp; }\r\n\t\tif ( y1 > y2 ) { tmp = y2; y2 = y1; y1 = tmp; }\r\n\t\tthis.helper.css( { left: x1, top: y1, width: x2 - x1, height: y2 - y1 } );\r\n\r\n\t\tthis.selectees.each( function() {\r\n\t\t\tvar selectee = $.data( this, \"selectable-item\" ),\r\n\t\t\t\thit = false,\r\n\t\t\t\toffset = {};\r\n\r\n\t\t\t//prevent helper from being selected if appendTo: selectable\r\n\t\t\tif ( !selectee || selectee.element === that.element[ 0 ] ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\toffset.left   = selectee.left   + that.elementPos.left;\r\n\t\t\toffset.right  = selectee.right  + that.elementPos.left;\r\n\t\t\toffset.top    = selectee.top    + that.elementPos.top;\r\n\t\t\toffset.bottom = selectee.bottom + that.elementPos.top;\r\n\r\n\t\t\tif ( options.tolerance === \"touch\" ) {\r\n\t\t\t\thit = ( !( offset.left > x2 || offset.right < x1 || offset.top > y2 ||\r\n                    offset.bottom < y1 ) );\r\n\t\t\t} else if ( options.tolerance === \"fit\" ) {\r\n\t\t\t\thit = ( offset.left > x1 && offset.right < x2 && offset.top > y1 &&\r\n                    offset.bottom < y2 );\r\n\t\t\t}\r\n\r\n\t\t\tif ( hit ) {\r\n\r\n\t\t\t\t// SELECT\r\n\t\t\t\tif ( selectee.selected ) {\r\n\t\t\t\t\tthat._removeClass( selectee.$element, \"ui-selected\" );\r\n\t\t\t\t\tselectee.selected = false;\r\n\t\t\t\t}\r\n\t\t\t\tif ( selectee.unselecting ) {\r\n\t\t\t\t\tthat._removeClass( selectee.$element, \"ui-unselecting\" );\r\n\t\t\t\t\tselectee.unselecting = false;\r\n\t\t\t\t}\r\n\t\t\t\tif ( !selectee.selecting ) {\r\n\t\t\t\t\tthat._addClass( selectee.$element, \"ui-selecting\" );\r\n\t\t\t\t\tselectee.selecting = true;\r\n\r\n\t\t\t\t\t// selectable SELECTING callback\r\n\t\t\t\t\tthat._trigger( \"selecting\", event, {\r\n\t\t\t\t\t\tselecting: selectee.element\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// UNSELECT\r\n\t\t\t\tif ( selectee.selecting ) {\r\n\t\t\t\t\tif ( ( event.metaKey || event.ctrlKey ) && selectee.startselected ) {\r\n\t\t\t\t\t\tthat._removeClass( selectee.$element, \"ui-selecting\" );\r\n\t\t\t\t\t\tselectee.selecting = false;\r\n\t\t\t\t\t\tthat._addClass( selectee.$element, \"ui-selected\" );\r\n\t\t\t\t\t\tselectee.selected = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthat._removeClass( selectee.$element, \"ui-selecting\" );\r\n\t\t\t\t\t\tselectee.selecting = false;\r\n\t\t\t\t\t\tif ( selectee.startselected ) {\r\n\t\t\t\t\t\t\tthat._addClass( selectee.$element, \"ui-unselecting\" );\r\n\t\t\t\t\t\t\tselectee.unselecting = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// selectable UNSELECTING callback\r\n\t\t\t\t\t\tthat._trigger( \"unselecting\", event, {\r\n\t\t\t\t\t\t\tunselecting: selectee.element\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif ( selectee.selected ) {\r\n\t\t\t\t\tif ( !event.metaKey && !event.ctrlKey && !selectee.startselected ) {\r\n\t\t\t\t\t\tthat._removeClass( selectee.$element, \"ui-selected\" );\r\n\t\t\t\t\t\tselectee.selected = false;\r\n\r\n\t\t\t\t\t\tthat._addClass( selectee.$element, \"ui-unselecting\" );\r\n\t\t\t\t\t\tselectee.unselecting = true;\r\n\r\n\t\t\t\t\t\t// selectable UNSELECTING callback\r\n\t\t\t\t\t\tthat._trigger( \"unselecting\", event, {\r\n\t\t\t\t\t\t\tunselecting: selectee.element\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_mouseStop: function( event ) {\r\n\t\tvar that = this;\r\n\r\n\t\tthis.dragged = false;\r\n\r\n\t\t$( \".ui-unselecting\", this.element[ 0 ] ).each( function() {\r\n\t\t\tvar selectee = $.data( this, \"selectable-item\" );\r\n\t\t\tthat._removeClass( selectee.$element, \"ui-unselecting\" );\r\n\t\t\tselectee.unselecting = false;\r\n\t\t\tselectee.startselected = false;\r\n\t\t\tthat._trigger( \"unselected\", event, {\r\n\t\t\t\tunselected: selectee.element\r\n\t\t\t} );\r\n\t\t} );\r\n\t\t$( \".ui-selecting\", this.element[ 0 ] ).each( function() {\r\n\t\t\tvar selectee = $.data( this, \"selectable-item\" );\r\n\t\t\tthat._removeClass( selectee.$element, \"ui-selecting\" )\r\n\t\t\t\t._addClass( selectee.$element, \"ui-selected\" );\r\n\t\t\tselectee.selecting = false;\r\n\t\t\tselectee.selected = true;\r\n\t\t\tselectee.startselected = true;\r\n\t\t\tthat._trigger( \"selected\", event, {\r\n\t\t\t\tselected: selectee.element\r\n\t\t\t} );\r\n\t\t} );\r\n\t\tthis._trigger( \"stop\", event );\r\n\r\n\t\tthis.helper.remove();\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n} );\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/selectmenu.js":"/*!\r\n * jQuery UI Selectmenu 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Selectmenu\r\n//>>group: Widgets\r\n// jscs:disable maximumLineLength\r\n//>>description: Duplicates and extends the functionality of a native HTML select element, allowing it to be customizable in behavior and appearance far beyond the limitations of a native select.\r\n// jscs:enable maximumLineLength\r\n//>>docs: http://api.jqueryui.com/selectmenu/\r\n//>>demos: http://jqueryui.com/selectmenu/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/selectmenu.css, ../../themes/base/button.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"./menu\",\r\n\t\t\t\"../escape-selector\",\r\n\t\t\t\"../form-reset-mixin\",\r\n\t\t\t\"../keycode\",\r\n\t\t\t\"../labels\",\r\n\t\t\t\"../position\",\r\n\t\t\t\"../unique-id\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\nreturn $.widget( \"ui.selectmenu\", [ $.ui.formResetMixin, {\r\n\tversion: \"1.12.1\",\r\n\tdefaultElement: \"<select>\",\r\n\toptions: {\r\n\t\tappendTo: null,\r\n\t\tclasses: {\r\n\t\t\t\"ui-selectmenu-button-open\": \"ui-corner-top\",\r\n\t\t\t\"ui-selectmenu-button-closed\": \"ui-corner-all\"\r\n\t\t},\r\n\t\tdisabled: null,\r\n\t\ticons: {\r\n\t\t\tbutton: \"ui-icon-triangle-1-s\"\r\n\t\t},\r\n\t\tposition: {\r\n\t\t\tmy: \"left top\",\r\n\t\t\tat: \"left bottom\",\r\n\t\t\tcollision: \"none\"\r\n\t\t},\r\n\t\twidth: false,\r\n\r\n\t\t// Callbacks\r\n\t\tchange: null,\r\n\t\tclose: null,\r\n\t\tfocus: null,\r\n\t\topen: null,\r\n\t\tselect: null\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tvar selectmenuId = this.element.uniqueId().attr( \"id\" );\r\n\t\tthis.ids = {\r\n\t\t\telement: selectmenuId,\r\n\t\t\tbutton: selectmenuId + \"-button\",\r\n\t\t\tmenu: selectmenuId + \"-menu\"\r\n\t\t};\r\n\r\n\t\tthis._drawButton();\r\n\t\tthis._drawMenu();\r\n\t\tthis._bindFormResetHandler();\r\n\r\n\t\tthis._rendered = false;\r\n\t\tthis.menuItems = $();\r\n\t},\r\n\r\n\t_drawButton: function() {\r\n\t\tvar icon,\r\n\t\t\tthat = this,\r\n\t\t\titem = this._parseOption(\r\n\t\t\t\tthis.element.find( \"option:selected\" ),\r\n\t\t\t\tthis.element[ 0 ].selectedIndex\r\n\t\t\t);\r\n\r\n\t\t// Associate existing label with the new button\r\n\t\tthis.labels = this.element.labels().attr( \"for\", this.ids.button );\r\n\t\tthis._on( this.labels, {\r\n\t\t\tclick: function( event ) {\r\n\t\t\t\tthis.button.focus();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Hide original select element\r\n\t\tthis.element.hide();\r\n\r\n\t\t// Create button\r\n\t\tthis.button = $( \"<span>\", {\r\n\t\t\ttabindex: this.options.disabled ? -1 : 0,\r\n\t\t\tid: this.ids.button,\r\n\t\t\trole: \"combobox\",\r\n\t\t\t\"aria-expanded\": \"false\",\r\n\t\t\t\"aria-autocomplete\": \"list\",\r\n\t\t\t\"aria-owns\": this.ids.menu,\r\n\t\t\t\"aria-haspopup\": \"true\",\r\n\t\t\ttitle: this.element.attr( \"title\" )\r\n\t\t} )\r\n\t\t\t.insertAfter( this.element );\r\n\r\n\t\tthis._addClass( this.button, \"ui-selectmenu-button ui-selectmenu-button-closed\",\r\n\t\t\t\"ui-button ui-widget\" );\r\n\r\n\t\ticon = $( \"<span>\" ).appendTo( this.button );\r\n\t\tthis._addClass( icon, \"ui-selectmenu-icon\", \"ui-icon \" + this.options.icons.button );\r\n\t\tthis.buttonItem = this._renderButtonItem( item )\r\n\t\t\t.appendTo( this.button );\r\n\r\n\t\tif ( this.options.width !== false ) {\r\n\t\t\tthis._resizeButton();\r\n\t\t}\r\n\r\n\t\tthis._on( this.button, this._buttonEvents );\r\n\t\tthis.button.one( \"focusin\", function() {\r\n\r\n\t\t\t// Delay rendering the menu items until the button receives focus.\r\n\t\t\t// The menu may have already been rendered via a programmatic open.\r\n\t\t\tif ( !that._rendered ) {\r\n\t\t\t\tthat._refreshMenu();\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\t_drawMenu: function() {\r\n\t\tvar that = this;\r\n\r\n\t\t// Create menu\r\n\t\tthis.menu = $( \"<ul>\", {\r\n\t\t\t\"aria-hidden\": \"true\",\r\n\t\t\t\"aria-labelledby\": this.ids.button,\r\n\t\t\tid: this.ids.menu\r\n\t\t} );\r\n\r\n\t\t// Wrap menu\r\n\t\tthis.menuWrap = $( \"<div>\" ).append( this.menu );\r\n\t\tthis._addClass( this.menuWrap, \"ui-selectmenu-menu\", \"ui-front\" );\r\n\t\tthis.menuWrap.appendTo( this._appendTo() );\r\n\r\n\t\t// Initialize menu widget\r\n\t\tthis.menuInstance = this.menu\r\n\t\t\t.menu( {\r\n\t\t\t\tclasses: {\r\n\t\t\t\t\t\"ui-menu\": \"ui-corner-bottom\"\r\n\t\t\t\t},\r\n\t\t\t\trole: \"listbox\",\r\n\t\t\t\tselect: function( event, ui ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\t\t// Support: IE8\r\n\t\t\t\t\t// If the item was selected via a click, the text selection\r\n\t\t\t\t\t// will be destroyed in IE\r\n\t\t\t\t\tthat._setSelection();\r\n\r\n\t\t\t\t\tthat._select( ui.item.data( \"ui-selectmenu-item\" ), event );\r\n\t\t\t\t},\r\n\t\t\t\tfocus: function( event, ui ) {\r\n\t\t\t\t\tvar item = ui.item.data( \"ui-selectmenu-item\" );\r\n\r\n\t\t\t\t\t// Prevent inital focus from firing and check if its a newly focused item\r\n\t\t\t\t\tif ( that.focusIndex != null && item.index !== that.focusIndex ) {\r\n\t\t\t\t\t\tthat._trigger( \"focus\", event, { item: item } );\r\n\t\t\t\t\t\tif ( !that.isOpen ) {\r\n\t\t\t\t\t\t\tthat._select( item, event );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.focusIndex = item.index;\r\n\r\n\t\t\t\t\tthat.button.attr( \"aria-activedescendant\",\r\n\t\t\t\t\t\tthat.menuItems.eq( item.index ).attr( \"id\" ) );\r\n\t\t\t\t}\r\n\t\t\t} )\r\n\t\t\t.menu( \"instance\" );\r\n\r\n\t\t// Don't close the menu on mouseleave\r\n\t\tthis.menuInstance._off( this.menu, \"mouseleave\" );\r\n\r\n\t\t// Cancel the menu's collapseAll on document click\r\n\t\tthis.menuInstance._closeOnDocumentClick = function() {\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\t// Selects often contain empty items, but never contain dividers\r\n\t\tthis.menuInstance._isDivider = function() {\r\n\t\t\treturn false;\r\n\t\t};\r\n\t},\r\n\r\n\trefresh: function() {\r\n\t\tthis._refreshMenu();\r\n\t\tthis.buttonItem.replaceWith(\r\n\t\t\tthis.buttonItem = this._renderButtonItem(\r\n\r\n\t\t\t\t// Fall back to an empty object in case there are no options\r\n\t\t\t\tthis._getSelectedItem().data( \"ui-selectmenu-item\" ) || {}\r\n\t\t\t)\r\n\t\t);\r\n\t\tif ( this.options.width === null ) {\r\n\t\t\tthis._resizeButton();\r\n\t\t}\r\n\t},\r\n\r\n\t_refreshMenu: function() {\r\n\t\tvar item,\r\n\t\t\toptions = this.element.find( \"option\" );\r\n\r\n\t\tthis.menu.empty();\r\n\r\n\t\tthis._parseOptions( options );\r\n\t\tthis._renderMenu( this.menu, this.items );\r\n\r\n\t\tthis.menuInstance.refresh();\r\n\t\tthis.menuItems = this.menu.find( \"li\" )\r\n\t\t\t.not( \".ui-selectmenu-optgroup\" )\r\n\t\t\t\t.find( \".ui-menu-item-wrapper\" );\r\n\r\n\t\tthis._rendered = true;\r\n\r\n\t\tif ( !options.length ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\titem = this._getSelectedItem();\r\n\r\n\t\t// Update the menu to have the correct item focused\r\n\t\tthis.menuInstance.focus( null, item );\r\n\t\tthis._setAria( item.data( \"ui-selectmenu-item\" ) );\r\n\r\n\t\t// Set disabled state\r\n\t\tthis._setOption( \"disabled\", this.element.prop( \"disabled\" ) );\r\n\t},\r\n\r\n\topen: function( event ) {\r\n\t\tif ( this.options.disabled ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If this is the first time the menu is being opened, render the items\r\n\t\tif ( !this._rendered ) {\r\n\t\t\tthis._refreshMenu();\r\n\t\t} else {\r\n\r\n\t\t\t// Menu clears focus on close, reset focus to selected item\r\n\t\t\tthis._removeClass( this.menu.find( \".ui-state-active\" ), null, \"ui-state-active\" );\r\n\t\t\tthis.menuInstance.focus( null, this._getSelectedItem() );\r\n\t\t}\r\n\r\n\t\t// If there are no options, don't open the menu\r\n\t\tif ( !this.menuItems.length ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.isOpen = true;\r\n\t\tthis._toggleAttr();\r\n\t\tthis._resizeMenu();\r\n\t\tthis._position();\r\n\r\n\t\tthis._on( this.document, this._documentClick );\r\n\r\n\t\tthis._trigger( \"open\", event );\r\n\t},\r\n\r\n\t_position: function() {\r\n\t\tthis.menuWrap.position( $.extend( { of: this.button }, this.options.position ) );\r\n\t},\r\n\r\n\tclose: function( event ) {\r\n\t\tif ( !this.isOpen ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.isOpen = false;\r\n\t\tthis._toggleAttr();\r\n\r\n\t\tthis.range = null;\r\n\t\tthis._off( this.document );\r\n\r\n\t\tthis._trigger( \"close\", event );\r\n\t},\r\n\r\n\twidget: function() {\r\n\t\treturn this.button;\r\n\t},\r\n\r\n\tmenuWidget: function() {\r\n\t\treturn this.menu;\r\n\t},\r\n\r\n\t_renderButtonItem: function( item ) {\r\n\t\tvar buttonItem = $( \"<span>\" );\r\n\r\n\t\tthis._setText( buttonItem, item.label );\r\n\t\tthis._addClass( buttonItem, \"ui-selectmenu-text\" );\r\n\r\n\t\treturn buttonItem;\r\n\t},\r\n\r\n\t_renderMenu: function( ul, items ) {\r\n\t\tvar that = this,\r\n\t\t\tcurrentOptgroup = \"\";\r\n\r\n\t\t$.each( items, function( index, item ) {\r\n\t\t\tvar li;\r\n\r\n\t\t\tif ( item.optgroup !== currentOptgroup ) {\r\n\t\t\t\tli = $( \"<li>\", {\r\n\t\t\t\t\ttext: item.optgroup\r\n\t\t\t\t} );\r\n\t\t\t\tthat._addClass( li, \"ui-selectmenu-optgroup\", \"ui-menu-divider\" +\r\n\t\t\t\t\t( item.element.parent( \"optgroup\" ).prop( \"disabled\" ) ?\r\n\t\t\t\t\t\t\" ui-state-disabled\" :\r\n\t\t\t\t\t\t\"\" ) );\r\n\r\n\t\t\t\tli.appendTo( ul );\r\n\r\n\t\t\t\tcurrentOptgroup = item.optgroup;\r\n\t\t\t}\r\n\r\n\t\t\tthat._renderItemData( ul, item );\r\n\t\t} );\r\n\t},\r\n\r\n\t_renderItemData: function( ul, item ) {\r\n\t\treturn this._renderItem( ul, item ).data( \"ui-selectmenu-item\", item );\r\n\t},\r\n\r\n\t_renderItem: function( ul, item ) {\r\n\t\tvar li = $( \"<li>\" ),\r\n\t\t\twrapper = $( \"<div>\", {\r\n\t\t\t\ttitle: item.element.attr( \"title\" )\r\n\t\t\t} );\r\n\r\n\t\tif ( item.disabled ) {\r\n\t\t\tthis._addClass( li, null, \"ui-state-disabled\" );\r\n\t\t}\r\n\t\tthis._setText( wrapper, item.label );\r\n\r\n\t\treturn li.append( wrapper ).appendTo( ul );\r\n\t},\r\n\r\n\t_setText: function( element, value ) {\r\n\t\tif ( value ) {\r\n\t\t\telement.text( value );\r\n\t\t} else {\r\n\t\t\telement.html( \"&#160;\" );\r\n\t\t}\r\n\t},\r\n\r\n\t_move: function( direction, event ) {\r\n\t\tvar item, next,\r\n\t\t\tfilter = \".ui-menu-item\";\r\n\r\n\t\tif ( this.isOpen ) {\r\n\t\t\titem = this.menuItems.eq( this.focusIndex ).parent( \"li\" );\r\n\t\t} else {\r\n\t\t\titem = this.menuItems.eq( this.element[ 0 ].selectedIndex ).parent( \"li\" );\r\n\t\t\tfilter += \":not(.ui-state-disabled)\";\r\n\t\t}\r\n\r\n\t\tif ( direction === \"first\" || direction === \"last\" ) {\r\n\t\t\tnext = item[ direction === \"first\" ? \"prevAll\" : \"nextAll\" ]( filter ).eq( -1 );\r\n\t\t} else {\r\n\t\t\tnext = item[ direction + \"All\" ]( filter ).eq( 0 );\r\n\t\t}\r\n\r\n\t\tif ( next.length ) {\r\n\t\t\tthis.menuInstance.focus( event, next );\r\n\t\t}\r\n\t},\r\n\r\n\t_getSelectedItem: function() {\r\n\t\treturn this.menuItems.eq( this.element[ 0 ].selectedIndex ).parent( \"li\" );\r\n\t},\r\n\r\n\t_toggle: function( event ) {\r\n\t\tthis[ this.isOpen ? \"close\" : \"open\" ]( event );\r\n\t},\r\n\r\n\t_setSelection: function() {\r\n\t\tvar selection;\r\n\r\n\t\tif ( !this.range ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( window.getSelection ) {\r\n\t\t\tselection = window.getSelection();\r\n\t\t\tselection.removeAllRanges();\r\n\t\t\tselection.addRange( this.range );\r\n\r\n\t\t// Support: IE8\r\n\t\t} else {\r\n\t\t\tthis.range.select();\r\n\t\t}\r\n\r\n\t\t// Support: IE\r\n\t\t// Setting the text selection kills the button focus in IE, but\r\n\t\t// restoring the focus doesn't kill the selection.\r\n\t\tthis.button.focus();\r\n\t},\r\n\r\n\t_documentClick: {\r\n\t\tmousedown: function( event ) {\r\n\t\t\tif ( !this.isOpen ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( !$( event.target ).closest( \".ui-selectmenu-menu, #\" +\r\n\t\t\t\t\t$.ui.escapeSelector( this.ids.button ) ).length ) {\r\n\t\t\t\tthis.close( event );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_buttonEvents: {\r\n\r\n\t\t// Prevent text selection from being reset when interacting with the selectmenu (#10144)\r\n\t\tmousedown: function() {\r\n\t\t\tvar selection;\r\n\r\n\t\t\tif ( window.getSelection ) {\r\n\t\t\t\tselection = window.getSelection();\r\n\t\t\t\tif ( selection.rangeCount ) {\r\n\t\t\t\t\tthis.range = selection.getRangeAt( 0 );\r\n\t\t\t\t}\r\n\r\n\t\t\t// Support: IE8\r\n\t\t\t} else {\r\n\t\t\t\tthis.range = document.selection.createRange();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclick: function( event ) {\r\n\t\t\tthis._setSelection();\r\n\t\t\tthis._toggle( event );\r\n\t\t},\r\n\r\n\t\tkeydown: function( event ) {\r\n\t\t\tvar preventDefault = true;\r\n\t\t\tswitch ( event.keyCode ) {\r\n\t\t\tcase $.ui.keyCode.TAB:\r\n\t\t\tcase $.ui.keyCode.ESCAPE:\r\n\t\t\t\tthis.close( event );\r\n\t\t\t\tpreventDefault = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase $.ui.keyCode.ENTER:\r\n\t\t\t\tif ( this.isOpen ) {\r\n\t\t\t\t\tthis._selectFocusedItem( event );\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase $.ui.keyCode.UP:\r\n\t\t\t\tif ( event.altKey ) {\r\n\t\t\t\t\tthis._toggle( event );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._move( \"prev\", event );\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase $.ui.keyCode.DOWN:\r\n\t\t\t\tif ( event.altKey ) {\r\n\t\t\t\t\tthis._toggle( event );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._move( \"next\", event );\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase $.ui.keyCode.SPACE:\r\n\t\t\t\tif ( this.isOpen ) {\r\n\t\t\t\t\tthis._selectFocusedItem( event );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._toggle( event );\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase $.ui.keyCode.LEFT:\r\n\t\t\t\tthis._move( \"prev\", event );\r\n\t\t\t\tbreak;\r\n\t\t\tcase $.ui.keyCode.RIGHT:\r\n\t\t\t\tthis._move( \"next\", event );\r\n\t\t\t\tbreak;\r\n\t\t\tcase $.ui.keyCode.HOME:\r\n\t\t\tcase $.ui.keyCode.PAGE_UP:\r\n\t\t\t\tthis._move( \"first\", event );\r\n\t\t\t\tbreak;\r\n\t\t\tcase $.ui.keyCode.END:\r\n\t\t\tcase $.ui.keyCode.PAGE_DOWN:\r\n\t\t\t\tthis._move( \"last\", event );\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.menu.trigger( event );\r\n\t\t\t\tpreventDefault = false;\r\n\t\t\t}\r\n\r\n\t\t\tif ( preventDefault ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_selectFocusedItem: function( event ) {\r\n\t\tvar item = this.menuItems.eq( this.focusIndex ).parent( \"li\" );\r\n\t\tif ( !item.hasClass( \"ui-state-disabled\" ) ) {\r\n\t\t\tthis._select( item.data( \"ui-selectmenu-item\" ), event );\r\n\t\t}\r\n\t},\r\n\r\n\t_select: function( item, event ) {\r\n\t\tvar oldIndex = this.element[ 0 ].selectedIndex;\r\n\r\n\t\t// Change native select element\r\n\t\tthis.element[ 0 ].selectedIndex = item.index;\r\n\t\tthis.buttonItem.replaceWith( this.buttonItem = this._renderButtonItem( item ) );\r\n\t\tthis._setAria( item );\r\n\t\tthis._trigger( \"select\", event, { item: item } );\r\n\r\n\t\tif ( item.index !== oldIndex ) {\r\n\t\t\tthis._trigger( \"change\", event, { item: item } );\r\n\t\t}\r\n\r\n\t\tthis.close( event );\r\n\t},\r\n\r\n\t_setAria: function( item ) {\r\n\t\tvar id = this.menuItems.eq( item.index ).attr( \"id\" );\r\n\r\n\t\tthis.button.attr( {\r\n\t\t\t\"aria-labelledby\": id,\r\n\t\t\t\"aria-activedescendant\": id\r\n\t\t} );\r\n\t\tthis.menu.attr( \"aria-activedescendant\", id );\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tif ( key === \"icons\" ) {\r\n\t\t\tvar icon = this.button.find( \"span.ui-icon\" );\r\n\t\t\tthis._removeClass( icon, null, this.options.icons.button )\r\n\t\t\t\t._addClass( icon, null, value.button );\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\r\n\t\tif ( key === \"appendTo\" ) {\r\n\t\t\tthis.menuWrap.appendTo( this._appendTo() );\r\n\t\t}\r\n\r\n\t\tif ( key === \"width\" ) {\r\n\t\t\tthis._resizeButton();\r\n\t\t}\r\n\t},\r\n\r\n\t_setOptionDisabled: function( value ) {\r\n\t\tthis._super( value );\r\n\r\n\t\tthis.menuInstance.option( \"disabled\", value );\r\n\t\tthis.button.attr( \"aria-disabled\", value );\r\n\t\tthis._toggleClass( this.button, null, \"ui-state-disabled\", value );\r\n\r\n\t\tthis.element.prop( \"disabled\", value );\r\n\t\tif ( value ) {\r\n\t\t\tthis.button.attr( \"tabindex\", -1 );\r\n\t\t\tthis.close();\r\n\t\t} else {\r\n\t\t\tthis.button.attr( \"tabindex\", 0 );\r\n\t\t}\r\n\t},\r\n\r\n\t_appendTo: function() {\r\n\t\tvar element = this.options.appendTo;\r\n\r\n\t\tif ( element ) {\r\n\t\t\telement = element.jquery || element.nodeType ?\r\n\t\t\t\t$( element ) :\r\n\t\t\t\tthis.document.find( element ).eq( 0 );\r\n\t\t}\r\n\r\n\t\tif ( !element || !element[ 0 ] ) {\r\n\t\t\telement = this.element.closest( \".ui-front, dialog\" );\r\n\t\t}\r\n\r\n\t\tif ( !element.length ) {\r\n\t\t\telement = this.document[ 0 ].body;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t},\r\n\r\n\t_toggleAttr: function() {\r\n\t\tthis.button.attr( \"aria-expanded\", this.isOpen );\r\n\r\n\t\t// We can't use two _toggleClass() calls here, because we need to make sure\r\n\t\t// we always remove classes first and add them second, otherwise if both classes have the\r\n\t\t// same theme class, it will be removed after we add it.\r\n\t\tthis._removeClass( this.button, \"ui-selectmenu-button-\" +\r\n\t\t\t( this.isOpen ? \"closed\" : \"open\" ) )\r\n\t\t\t._addClass( this.button, \"ui-selectmenu-button-\" +\r\n\t\t\t\t( this.isOpen ? \"open\" : \"closed\" ) )\r\n\t\t\t._toggleClass( this.menuWrap, \"ui-selectmenu-open\", null, this.isOpen );\r\n\r\n\t\tthis.menu.attr( \"aria-hidden\", !this.isOpen );\r\n\t},\r\n\r\n\t_resizeButton: function() {\r\n\t\tvar width = this.options.width;\r\n\r\n\t\t// For `width: false`, just remove inline style and stop\r\n\t\tif ( width === false ) {\r\n\t\t\tthis.button.css( \"width\", \"\" );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// For `width: null`, match the width of the original element\r\n\t\tif ( width === null ) {\r\n\t\t\twidth = this.element.show().outerWidth();\r\n\t\t\tthis.element.hide();\r\n\t\t}\r\n\r\n\t\tthis.button.outerWidth( width );\r\n\t},\r\n\r\n\t_resizeMenu: function() {\r\n\t\tthis.menu.outerWidth( Math.max(\r\n\t\t\tthis.button.outerWidth(),\r\n\r\n\t\t\t// Support: IE10\r\n\t\t\t// IE10 wraps long text (possibly a rounding bug)\r\n\t\t\t// so we add 1px to avoid the wrapping\r\n\t\t\tthis.menu.width( \"\" ).outerWidth() + 1\r\n\t\t) );\r\n\t},\r\n\r\n\t_getCreateOptions: function() {\r\n\t\tvar options = this._super();\r\n\r\n\t\toptions.disabled = this.element.prop( \"disabled\" );\r\n\r\n\t\treturn options;\r\n\t},\r\n\r\n\t_parseOptions: function( options ) {\r\n\t\tvar that = this,\r\n\t\t\tdata = [];\r\n\t\toptions.each( function( index, item ) {\r\n\t\t\tdata.push( that._parseOption( $( item ), index ) );\r\n\t\t} );\r\n\t\tthis.items = data;\r\n\t},\r\n\r\n\t_parseOption: function( option, index ) {\r\n\t\tvar optgroup = option.parent( \"optgroup\" );\r\n\r\n\t\treturn {\r\n\t\t\telement: option,\r\n\t\t\tindex: index,\r\n\t\t\tvalue: option.val(),\r\n\t\t\tlabel: option.text(),\r\n\t\t\toptgroup: optgroup.attr( \"label\" ) || \"\",\r\n\t\t\tdisabled: optgroup.prop( \"disabled\" ) || option.prop( \"disabled\" )\r\n\t\t};\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis._unbindFormResetHandler();\r\n\t\tthis.menuWrap.remove();\r\n\t\tthis.button.remove();\r\n\t\tthis.element.show();\r\n\t\tthis.element.removeUniqueId();\r\n\t\tthis.labels.attr( \"for\", this.ids.element );\r\n\t}\r\n} ] );\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/slider.js":"/*!\r\n * jQuery UI Slider 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Slider\r\n//>>group: Widgets\r\n//>>description: Displays a flexible slider with ranges and accessibility via keyboard.\r\n//>>docs: http://api.jqueryui.com/slider/\r\n//>>demos: http://jqueryui.com/slider/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/slider.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"./mouse\",\r\n\t\t\t\"../keycode\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\nreturn $.widget( \"ui.slider\", $.ui.mouse, {\r\n\tversion: \"1.12.1\",\r\n\twidgetEventPrefix: \"slide\",\r\n\r\n\toptions: {\r\n\t\tanimate: false,\r\n\t\tclasses: {\r\n\t\t\t\"ui-slider\": \"ui-corner-all\",\r\n\t\t\t\"ui-slider-handle\": \"ui-corner-all\",\r\n\r\n\t\t\t// Note: ui-widget-header isn't the most fittingly semantic framework class for this\r\n\t\t\t// element, but worked best visually with a variety of themes\r\n\t\t\t\"ui-slider-range\": \"ui-corner-all ui-widget-header\"\r\n\t\t},\r\n\t\tdistance: 0,\r\n\t\tmax: 100,\r\n\t\tmin: 0,\r\n\t\torientation: \"horizontal\",\r\n\t\trange: false,\r\n\t\tstep: 1,\r\n\t\tvalue: 0,\r\n\t\tvalues: null,\r\n\r\n\t\t// Callbacks\r\n\t\tchange: null,\r\n\t\tslide: null,\r\n\t\tstart: null,\r\n\t\tstop: null\r\n\t},\r\n\r\n\t// Number of pages in a slider\r\n\t// (how many times can you page up/down to go through the whole range)\r\n\tnumPages: 5,\r\n\r\n\t_create: function() {\r\n\t\tthis._keySliding = false;\r\n\t\tthis._mouseSliding = false;\r\n\t\tthis._animateOff = true;\r\n\t\tthis._handleIndex = null;\r\n\t\tthis._detectOrientation();\r\n\t\tthis._mouseInit();\r\n\t\tthis._calculateNewMax();\r\n\r\n\t\tthis._addClass( \"ui-slider ui-slider-\" + this.orientation,\r\n\t\t\t\"ui-widget ui-widget-content\" );\r\n\r\n\t\tthis._refresh();\r\n\r\n\t\tthis._animateOff = false;\r\n\t},\r\n\r\n\t_refresh: function() {\r\n\t\tthis._createRange();\r\n\t\tthis._createHandles();\r\n\t\tthis._setupEvents();\r\n\t\tthis._refreshValue();\r\n\t},\r\n\r\n\t_createHandles: function() {\r\n\t\tvar i, handleCount,\r\n\t\t\toptions = this.options,\r\n\t\t\texistingHandles = this.element.find( \".ui-slider-handle\" ),\r\n\t\t\thandle = \"<span tabindex='0'></span>\",\r\n\t\t\thandles = [];\r\n\r\n\t\thandleCount = ( options.values && options.values.length ) || 1;\r\n\r\n\t\tif ( existingHandles.length > handleCount ) {\r\n\t\t\texistingHandles.slice( handleCount ).remove();\r\n\t\t\texistingHandles = existingHandles.slice( 0, handleCount );\r\n\t\t}\r\n\r\n\t\tfor ( i = existingHandles.length; i < handleCount; i++ ) {\r\n\t\t\thandles.push( handle );\r\n\t\t}\r\n\r\n\t\tthis.handles = existingHandles.add( $( handles.join( \"\" ) ).appendTo( this.element ) );\r\n\r\n\t\tthis._addClass( this.handles, \"ui-slider-handle\", \"ui-state-default\" );\r\n\r\n\t\tthis.handle = this.handles.eq( 0 );\r\n\r\n\t\tthis.handles.each( function( i ) {\r\n\t\t\t$( this )\r\n\t\t\t\t.data( \"ui-slider-handle-index\", i )\r\n\t\t\t\t.attr( \"tabIndex\", 0 );\r\n\t\t} );\r\n\t},\r\n\r\n\t_createRange: function() {\r\n\t\tvar options = this.options;\r\n\r\n\t\tif ( options.range ) {\r\n\t\t\tif ( options.range === true ) {\r\n\t\t\t\tif ( !options.values ) {\r\n\t\t\t\t\toptions.values = [ this._valueMin(), this._valueMin() ];\r\n\t\t\t\t} else if ( options.values.length && options.values.length !== 2 ) {\r\n\t\t\t\t\toptions.values = [ options.values[ 0 ], options.values[ 0 ] ];\r\n\t\t\t\t} else if ( $.isArray( options.values ) ) {\r\n\t\t\t\t\toptions.values = options.values.slice( 0 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( !this.range || !this.range.length ) {\r\n\t\t\t\tthis.range = $( \"<div>\" )\r\n\t\t\t\t\t.appendTo( this.element );\r\n\r\n\t\t\t\tthis._addClass( this.range, \"ui-slider-range\" );\r\n\t\t\t} else {\r\n\t\t\t\tthis._removeClass( this.range, \"ui-slider-range-min ui-slider-range-max\" );\r\n\r\n\t\t\t\t// Handle range switching from true to min/max\r\n\t\t\t\tthis.range.css( {\r\n\t\t\t\t\t\"left\": \"\",\r\n\t\t\t\t\t\"bottom\": \"\"\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t\tif ( options.range === \"min\" || options.range === \"max\" ) {\r\n\t\t\t\tthis._addClass( this.range, \"ui-slider-range-\" + options.range );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif ( this.range ) {\r\n\t\t\t\tthis.range.remove();\r\n\t\t\t}\r\n\t\t\tthis.range = null;\r\n\t\t}\r\n\t},\r\n\r\n\t_setupEvents: function() {\r\n\t\tthis._off( this.handles );\r\n\t\tthis._on( this.handles, this._handleEvents );\r\n\t\tthis._hoverable( this.handles );\r\n\t\tthis._focusable( this.handles );\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis.handles.remove();\r\n\t\tif ( this.range ) {\r\n\t\t\tthis.range.remove();\r\n\t\t}\r\n\r\n\t\tthis._mouseDestroy();\r\n\t},\r\n\r\n\t_mouseCapture: function( event ) {\r\n\t\tvar position, normValue, distance, closestHandle, index, allowed, offset, mouseOverHandle,\r\n\t\t\tthat = this,\r\n\t\t\to = this.options;\r\n\r\n\t\tif ( o.disabled ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis.elementSize = {\r\n\t\t\twidth: this.element.outerWidth(),\r\n\t\t\theight: this.element.outerHeight()\r\n\t\t};\r\n\t\tthis.elementOffset = this.element.offset();\r\n\r\n\t\tposition = { x: event.pageX, y: event.pageY };\r\n\t\tnormValue = this._normValueFromMouse( position );\r\n\t\tdistance = this._valueMax() - this._valueMin() + 1;\r\n\t\tthis.handles.each( function( i ) {\r\n\t\t\tvar thisDistance = Math.abs( normValue - that.values( i ) );\r\n\t\t\tif ( ( distance > thisDistance ) ||\r\n\t\t\t\t( distance === thisDistance &&\r\n\t\t\t\t\t( i === that._lastChangedValue || that.values( i ) === o.min ) ) ) {\r\n\t\t\t\tdistance = thisDistance;\r\n\t\t\t\tclosestHandle = $( this );\r\n\t\t\t\tindex = i;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tallowed = this._start( event, index );\r\n\t\tif ( allowed === false ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis._mouseSliding = true;\r\n\r\n\t\tthis._handleIndex = index;\r\n\r\n\t\tthis._addClass( closestHandle, null, \"ui-state-active\" );\r\n\t\tclosestHandle.trigger( \"focus\" );\r\n\r\n\t\toffset = closestHandle.offset();\r\n\t\tmouseOverHandle = !$( event.target ).parents().addBack().is( \".ui-slider-handle\" );\r\n\t\tthis._clickOffset = mouseOverHandle ? { left: 0, top: 0 } : {\r\n\t\t\tleft: event.pageX - offset.left - ( closestHandle.width() / 2 ),\r\n\t\t\ttop: event.pageY - offset.top -\r\n\t\t\t\t( closestHandle.height() / 2 ) -\r\n\t\t\t\t( parseInt( closestHandle.css( \"borderTopWidth\" ), 10 ) || 0 ) -\r\n\t\t\t\t( parseInt( closestHandle.css( \"borderBottomWidth\" ), 10 ) || 0 ) +\r\n\t\t\t\t( parseInt( closestHandle.css( \"marginTop\" ), 10 ) || 0 )\r\n\t\t};\r\n\r\n\t\tif ( !this.handles.hasClass( \"ui-state-hover\" ) ) {\r\n\t\t\tthis._slide( event, index, normValue );\r\n\t\t}\r\n\t\tthis._animateOff = true;\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_mouseStart: function() {\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_mouseDrag: function( event ) {\r\n\t\tvar position = { x: event.pageX, y: event.pageY },\r\n\t\t\tnormValue = this._normValueFromMouse( position );\r\n\r\n\t\tthis._slide( event, this._handleIndex, normValue );\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_mouseStop: function( event ) {\r\n\t\tthis._removeClass( this.handles, null, \"ui-state-active\" );\r\n\t\tthis._mouseSliding = false;\r\n\r\n\t\tthis._stop( event, this._handleIndex );\r\n\t\tthis._change( event, this._handleIndex );\r\n\r\n\t\tthis._handleIndex = null;\r\n\t\tthis._clickOffset = null;\r\n\t\tthis._animateOff = false;\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_detectOrientation: function() {\r\n\t\tthis.orientation = ( this.options.orientation === \"vertical\" ) ? \"vertical\" : \"horizontal\";\r\n\t},\r\n\r\n\t_normValueFromMouse: function( position ) {\r\n\t\tvar pixelTotal,\r\n\t\t\tpixelMouse,\r\n\t\t\tpercentMouse,\r\n\t\t\tvalueTotal,\r\n\t\t\tvalueMouse;\r\n\r\n\t\tif ( this.orientation === \"horizontal\" ) {\r\n\t\t\tpixelTotal = this.elementSize.width;\r\n\t\t\tpixelMouse = position.x - this.elementOffset.left -\r\n\t\t\t\t( this._clickOffset ? this._clickOffset.left : 0 );\r\n\t\t} else {\r\n\t\t\tpixelTotal = this.elementSize.height;\r\n\t\t\tpixelMouse = position.y - this.elementOffset.top -\r\n\t\t\t\t( this._clickOffset ? this._clickOffset.top : 0 );\r\n\t\t}\r\n\r\n\t\tpercentMouse = ( pixelMouse / pixelTotal );\r\n\t\tif ( percentMouse > 1 ) {\r\n\t\t\tpercentMouse = 1;\r\n\t\t}\r\n\t\tif ( percentMouse < 0 ) {\r\n\t\t\tpercentMouse = 0;\r\n\t\t}\r\n\t\tif ( this.orientation === \"vertical\" ) {\r\n\t\t\tpercentMouse = 1 - percentMouse;\r\n\t\t}\r\n\r\n\t\tvalueTotal = this._valueMax() - this._valueMin();\r\n\t\tvalueMouse = this._valueMin() + percentMouse * valueTotal;\r\n\r\n\t\treturn this._trimAlignValue( valueMouse );\r\n\t},\r\n\r\n\t_uiHash: function( index, value, values ) {\r\n\t\tvar uiHash = {\r\n\t\t\thandle: this.handles[ index ],\r\n\t\t\thandleIndex: index,\r\n\t\t\tvalue: value !== undefined ? value : this.value()\r\n\t\t};\r\n\r\n\t\tif ( this._hasMultipleValues() ) {\r\n\t\t\tuiHash.value = value !== undefined ? value : this.values( index );\r\n\t\t\tuiHash.values = values || this.values();\r\n\t\t}\r\n\r\n\t\treturn uiHash;\r\n\t},\r\n\r\n\t_hasMultipleValues: function() {\r\n\t\treturn this.options.values && this.options.values.length;\r\n\t},\r\n\r\n\t_start: function( event, index ) {\r\n\t\treturn this._trigger( \"start\", event, this._uiHash( index ) );\r\n\t},\r\n\r\n\t_slide: function( event, index, newVal ) {\r\n\t\tvar allowed, otherVal,\r\n\t\t\tcurrentValue = this.value(),\r\n\t\t\tnewValues = this.values();\r\n\r\n\t\tif ( this._hasMultipleValues() ) {\r\n\t\t\totherVal = this.values( index ? 0 : 1 );\r\n\t\t\tcurrentValue = this.values( index );\r\n\r\n\t\t\tif ( this.options.values.length === 2 && this.options.range === true ) {\r\n\t\t\t\tnewVal =  index === 0 ? Math.min( otherVal, newVal ) : Math.max( otherVal, newVal );\r\n\t\t\t}\r\n\r\n\t\t\tnewValues[ index ] = newVal;\r\n\t\t}\r\n\r\n\t\tif ( newVal === currentValue ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tallowed = this._trigger( \"slide\", event, this._uiHash( index, newVal, newValues ) );\r\n\r\n\t\t// A slide can be canceled by returning false from the slide callback\r\n\t\tif ( allowed === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( this._hasMultipleValues() ) {\r\n\t\t\tthis.values( index, newVal );\r\n\t\t} else {\r\n\t\t\tthis.value( newVal );\r\n\t\t}\r\n\t},\r\n\r\n\t_stop: function( event, index ) {\r\n\t\tthis._trigger( \"stop\", event, this._uiHash( index ) );\r\n\t},\r\n\r\n\t_change: function( event, index ) {\r\n\t\tif ( !this._keySliding && !this._mouseSliding ) {\r\n\r\n\t\t\t//store the last changed value index for reference when handles overlap\r\n\t\t\tthis._lastChangedValue = index;\r\n\t\t\tthis._trigger( \"change\", event, this._uiHash( index ) );\r\n\t\t}\r\n\t},\r\n\r\n\tvalue: function( newValue ) {\r\n\t\tif ( arguments.length ) {\r\n\t\t\tthis.options.value = this._trimAlignValue( newValue );\r\n\t\t\tthis._refreshValue();\r\n\t\t\tthis._change( null, 0 );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn this._value();\r\n\t},\r\n\r\n\tvalues: function( index, newValue ) {\r\n\t\tvar vals,\r\n\t\t\tnewValues,\r\n\t\t\ti;\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\t\t\tthis.options.values[ index ] = this._trimAlignValue( newValue );\r\n\t\t\tthis._refreshValue();\r\n\t\t\tthis._change( null, index );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( arguments.length ) {\r\n\t\t\tif ( $.isArray( arguments[ 0 ] ) ) {\r\n\t\t\t\tvals = this.options.values;\r\n\t\t\t\tnewValues = arguments[ 0 ];\r\n\t\t\t\tfor ( i = 0; i < vals.length; i += 1 ) {\r\n\t\t\t\t\tvals[ i ] = this._trimAlignValue( newValues[ i ] );\r\n\t\t\t\t\tthis._change( null, i );\r\n\t\t\t\t}\r\n\t\t\t\tthis._refreshValue();\r\n\t\t\t} else {\r\n\t\t\t\tif ( this._hasMultipleValues() ) {\r\n\t\t\t\t\treturn this._values( index );\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.value();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn this._values();\r\n\t\t}\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tvar i,\r\n\t\t\tvalsLength = 0;\r\n\r\n\t\tif ( key === \"range\" && this.options.range === true ) {\r\n\t\t\tif ( value === \"min\" ) {\r\n\t\t\t\tthis.options.value = this._values( 0 );\r\n\t\t\t\tthis.options.values = null;\r\n\t\t\t} else if ( value === \"max\" ) {\r\n\t\t\t\tthis.options.value = this._values( this.options.values.length - 1 );\r\n\t\t\t\tthis.options.values = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( $.isArray( this.options.values ) ) {\r\n\t\t\tvalsLength = this.options.values.length;\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\r\n\t\tswitch ( key ) {\r\n\t\t\tcase \"orientation\":\r\n\t\t\t\tthis._detectOrientation();\r\n\t\t\t\tthis._removeClass( \"ui-slider-horizontal ui-slider-vertical\" )\r\n\t\t\t\t\t._addClass( \"ui-slider-\" + this.orientation );\r\n\t\t\t\tthis._refreshValue();\r\n\t\t\t\tif ( this.options.range ) {\r\n\t\t\t\t\tthis._refreshRange( value );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset positioning from previous orientation\r\n\t\t\t\tthis.handles.css( value === \"horizontal\" ? \"bottom\" : \"left\", \"\" );\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"value\":\r\n\t\t\t\tthis._animateOff = true;\r\n\t\t\t\tthis._refreshValue();\r\n\t\t\t\tthis._change( null, 0 );\r\n\t\t\t\tthis._animateOff = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"values\":\r\n\t\t\t\tthis._animateOff = true;\r\n\t\t\t\tthis._refreshValue();\r\n\r\n\t\t\t\t// Start from the last handle to prevent unreachable handles (#9046)\r\n\t\t\t\tfor ( i = valsLength - 1; i >= 0; i-- ) {\r\n\t\t\t\t\tthis._change( null, i );\r\n\t\t\t\t}\r\n\t\t\t\tthis._animateOff = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"step\":\r\n\t\t\tcase \"min\":\r\n\t\t\tcase \"max\":\r\n\t\t\t\tthis._animateOff = true;\r\n\t\t\t\tthis._calculateNewMax();\r\n\t\t\t\tthis._refreshValue();\r\n\t\t\t\tthis._animateOff = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"range\":\r\n\t\t\t\tthis._animateOff = true;\r\n\t\t\t\tthis._refresh();\r\n\t\t\t\tthis._animateOff = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\r\n\t_setOptionDisabled: function( value ) {\r\n\t\tthis._super( value );\r\n\r\n\t\tthis._toggleClass( null, \"ui-state-disabled\", !!value );\r\n\t},\r\n\r\n\t//internal value getter\r\n\t// _value() returns value trimmed by min and max, aligned by step\r\n\t_value: function() {\r\n\t\tvar val = this.options.value;\r\n\t\tval = this._trimAlignValue( val );\r\n\r\n\t\treturn val;\r\n\t},\r\n\r\n\t//internal values getter\r\n\t// _values() returns array of values trimmed by min and max, aligned by step\r\n\t// _values( index ) returns single value trimmed by min and max, aligned by step\r\n\t_values: function( index ) {\r\n\t\tvar val,\r\n\t\t\tvals,\r\n\t\t\ti;\r\n\r\n\t\tif ( arguments.length ) {\r\n\t\t\tval = this.options.values[ index ];\r\n\t\t\tval = this._trimAlignValue( val );\r\n\r\n\t\t\treturn val;\r\n\t\t} else if ( this._hasMultipleValues() ) {\r\n\r\n\t\t\t// .slice() creates a copy of the array\r\n\t\t\t// this copy gets trimmed by min and max and then returned\r\n\t\t\tvals = this.options.values.slice();\r\n\t\t\tfor ( i = 0; i < vals.length; i += 1 ) {\r\n\t\t\t\tvals[ i ] = this._trimAlignValue( vals[ i ] );\r\n\t\t\t}\r\n\r\n\t\t\treturn vals;\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t},\r\n\r\n\t// Returns the step-aligned value that val is closest to, between (inclusive) min and max\r\n\t_trimAlignValue: function( val ) {\r\n\t\tif ( val <= this._valueMin() ) {\r\n\t\t\treturn this._valueMin();\r\n\t\t}\r\n\t\tif ( val >= this._valueMax() ) {\r\n\t\t\treturn this._valueMax();\r\n\t\t}\r\n\t\tvar step = ( this.options.step > 0 ) ? this.options.step : 1,\r\n\t\t\tvalModStep = ( val - this._valueMin() ) % step,\r\n\t\t\talignValue = val - valModStep;\r\n\r\n\t\tif ( Math.abs( valModStep ) * 2 >= step ) {\r\n\t\t\talignValue += ( valModStep > 0 ) ? step : ( -step );\r\n\t\t}\r\n\r\n\t\t// Since JavaScript has problems with large floats, round\r\n\t\t// the final value to 5 digits after the decimal point (see #4124)\r\n\t\treturn parseFloat( alignValue.toFixed( 5 ) );\r\n\t},\r\n\r\n\t_calculateNewMax: function() {\r\n\t\tvar max = this.options.max,\r\n\t\t\tmin = this._valueMin(),\r\n\t\t\tstep = this.options.step,\r\n\t\t\taboveMin = Math.round( ( max - min ) / step ) * step;\r\n\t\tmax = aboveMin + min;\r\n\t\tif ( max > this.options.max ) {\r\n\r\n\t\t\t//If max is not divisible by step, rounding off may increase its value\r\n\t\t\tmax -= step;\r\n\t\t}\r\n\t\tthis.max = parseFloat( max.toFixed( this._precision() ) );\r\n\t},\r\n\r\n\t_precision: function() {\r\n\t\tvar precision = this._precisionOf( this.options.step );\r\n\t\tif ( this.options.min !== null ) {\r\n\t\t\tprecision = Math.max( precision, this._precisionOf( this.options.min ) );\r\n\t\t}\r\n\t\treturn precision;\r\n\t},\r\n\r\n\t_precisionOf: function( num ) {\r\n\t\tvar str = num.toString(),\r\n\t\t\tdecimal = str.indexOf( \".\" );\r\n\t\treturn decimal === -1 ? 0 : str.length - decimal - 1;\r\n\t},\r\n\r\n\t_valueMin: function() {\r\n\t\treturn this.options.min;\r\n\t},\r\n\r\n\t_valueMax: function() {\r\n\t\treturn this.max;\r\n\t},\r\n\r\n\t_refreshRange: function( orientation ) {\r\n\t\tif ( orientation === \"vertical\" ) {\r\n\t\t\tthis.range.css( { \"width\": \"\", \"left\": \"\" } );\r\n\t\t}\r\n\t\tif ( orientation === \"horizontal\" ) {\r\n\t\t\tthis.range.css( { \"height\": \"\", \"bottom\": \"\" } );\r\n\t\t}\r\n\t},\r\n\r\n\t_refreshValue: function() {\r\n\t\tvar lastValPercent, valPercent, value, valueMin, valueMax,\r\n\t\t\toRange = this.options.range,\r\n\t\t\to = this.options,\r\n\t\t\tthat = this,\r\n\t\t\tanimate = ( !this._animateOff ) ? o.animate : false,\r\n\t\t\t_set = {};\r\n\r\n\t\tif ( this._hasMultipleValues() ) {\r\n\t\t\tthis.handles.each( function( i ) {\r\n\t\t\t\tvalPercent = ( that.values( i ) - that._valueMin() ) / ( that._valueMax() -\r\n\t\t\t\t\tthat._valueMin() ) * 100;\r\n\t\t\t\t_set[ that.orientation === \"horizontal\" ? \"left\" : \"bottom\" ] = valPercent + \"%\";\r\n\t\t\t\t$( this ).stop( 1, 1 )[ animate ? \"animate\" : \"css\" ]( _set, o.animate );\r\n\t\t\t\tif ( that.options.range === true ) {\r\n\t\t\t\t\tif ( that.orientation === \"horizontal\" ) {\r\n\t\t\t\t\t\tif ( i === 0 ) {\r\n\t\t\t\t\t\t\tthat.range.stop( 1, 1 )[ animate ? \"animate\" : \"css\" ]( {\r\n\t\t\t\t\t\t\t\tleft: valPercent + \"%\"\r\n\t\t\t\t\t\t\t}, o.animate );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( i === 1 ) {\r\n\t\t\t\t\t\t\tthat.range[ animate ? \"animate\" : \"css\" ]( {\r\n\t\t\t\t\t\t\t\twidth: ( valPercent - lastValPercent ) + \"%\"\r\n\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\tqueue: false,\r\n\t\t\t\t\t\t\t\tduration: o.animate\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif ( i === 0 ) {\r\n\t\t\t\t\t\t\tthat.range.stop( 1, 1 )[ animate ? \"animate\" : \"css\" ]( {\r\n\t\t\t\t\t\t\t\tbottom: ( valPercent ) + \"%\"\r\n\t\t\t\t\t\t\t}, o.animate );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( i === 1 ) {\r\n\t\t\t\t\t\t\tthat.range[ animate ? \"animate\" : \"css\" ]( {\r\n\t\t\t\t\t\t\t\theight: ( valPercent - lastValPercent ) + \"%\"\r\n\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\tqueue: false,\r\n\t\t\t\t\t\t\t\tduration: o.animate\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlastValPercent = valPercent;\r\n\t\t\t} );\r\n\t\t} else {\r\n\t\t\tvalue = this.value();\r\n\t\t\tvalueMin = this._valueMin();\r\n\t\t\tvalueMax = this._valueMax();\r\n\t\t\tvalPercent = ( valueMax !== valueMin ) ?\r\n\t\t\t\t\t( value - valueMin ) / ( valueMax - valueMin ) * 100 :\r\n\t\t\t\t\t0;\r\n\t\t\t_set[ this.orientation === \"horizontal\" ? \"left\" : \"bottom\" ] = valPercent + \"%\";\r\n\t\t\tthis.handle.stop( 1, 1 )[ animate ? \"animate\" : \"css\" ]( _set, o.animate );\r\n\r\n\t\t\tif ( oRange === \"min\" && this.orientation === \"horizontal\" ) {\r\n\t\t\t\tthis.range.stop( 1, 1 )[ animate ? \"animate\" : \"css\" ]( {\r\n\t\t\t\t\twidth: valPercent + \"%\"\r\n\t\t\t\t}, o.animate );\r\n\t\t\t}\r\n\t\t\tif ( oRange === \"max\" && this.orientation === \"horizontal\" ) {\r\n\t\t\t\tthis.range.stop( 1, 1 )[ animate ? \"animate\" : \"css\" ]( {\r\n\t\t\t\t\twidth: ( 100 - valPercent ) + \"%\"\r\n\t\t\t\t}, o.animate );\r\n\t\t\t}\r\n\t\t\tif ( oRange === \"min\" && this.orientation === \"vertical\" ) {\r\n\t\t\t\tthis.range.stop( 1, 1 )[ animate ? \"animate\" : \"css\" ]( {\r\n\t\t\t\t\theight: valPercent + \"%\"\r\n\t\t\t\t}, o.animate );\r\n\t\t\t}\r\n\t\t\tif ( oRange === \"max\" && this.orientation === \"vertical\" ) {\r\n\t\t\t\tthis.range.stop( 1, 1 )[ animate ? \"animate\" : \"css\" ]( {\r\n\t\t\t\t\theight: ( 100 - valPercent ) + \"%\"\r\n\t\t\t\t}, o.animate );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_handleEvents: {\r\n\t\tkeydown: function( event ) {\r\n\t\t\tvar allowed, curVal, newVal, step,\r\n\t\t\t\tindex = $( event.target ).data( \"ui-slider-handle-index\" );\r\n\r\n\t\t\tswitch ( event.keyCode ) {\r\n\t\t\t\tcase $.ui.keyCode.HOME:\r\n\t\t\t\tcase $.ui.keyCode.END:\r\n\t\t\t\tcase $.ui.keyCode.PAGE_UP:\r\n\t\t\t\tcase $.ui.keyCode.PAGE_DOWN:\r\n\t\t\t\tcase $.ui.keyCode.UP:\r\n\t\t\t\tcase $.ui.keyCode.RIGHT:\r\n\t\t\t\tcase $.ui.keyCode.DOWN:\r\n\t\t\t\tcase $.ui.keyCode.LEFT:\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\tif ( !this._keySliding ) {\r\n\t\t\t\t\t\tthis._keySliding = true;\r\n\t\t\t\t\t\tthis._addClass( $( event.target ), null, \"ui-state-active\" );\r\n\t\t\t\t\t\tallowed = this._start( event, index );\r\n\t\t\t\t\t\tif ( allowed === false ) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tstep = this.options.step;\r\n\t\t\tif ( this._hasMultipleValues() ) {\r\n\t\t\t\tcurVal = newVal = this.values( index );\r\n\t\t\t} else {\r\n\t\t\t\tcurVal = newVal = this.value();\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( event.keyCode ) {\r\n\t\t\t\tcase $.ui.keyCode.HOME:\r\n\t\t\t\t\tnewVal = this._valueMin();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase $.ui.keyCode.END:\r\n\t\t\t\t\tnewVal = this._valueMax();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase $.ui.keyCode.PAGE_UP:\r\n\t\t\t\t\tnewVal = this._trimAlignValue(\r\n\t\t\t\t\t\tcurVal + ( ( this._valueMax() - this._valueMin() ) / this.numPages )\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase $.ui.keyCode.PAGE_DOWN:\r\n\t\t\t\t\tnewVal = this._trimAlignValue(\r\n\t\t\t\t\t\tcurVal - ( ( this._valueMax() - this._valueMin() ) / this.numPages ) );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase $.ui.keyCode.UP:\r\n\t\t\t\tcase $.ui.keyCode.RIGHT:\r\n\t\t\t\t\tif ( curVal === this._valueMax() ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewVal = this._trimAlignValue( curVal + step );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase $.ui.keyCode.DOWN:\r\n\t\t\t\tcase $.ui.keyCode.LEFT:\r\n\t\t\t\t\tif ( curVal === this._valueMin() ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewVal = this._trimAlignValue( curVal - step );\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis._slide( event, index, newVal );\r\n\t\t},\r\n\t\tkeyup: function( event ) {\r\n\t\t\tvar index = $( event.target ).data( \"ui-slider-handle-index\" );\r\n\r\n\t\t\tif ( this._keySliding ) {\r\n\t\t\t\tthis._keySliding = false;\r\n\t\t\t\tthis._stop( event, index );\r\n\t\t\t\tthis._change( event, index );\r\n\t\t\t\tthis._removeClass( $( event.target ), null, \"ui-state-active\" );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/sortable.js":"/*!\r\n * jQuery UI Sortable 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Sortable\r\n//>>group: Interactions\r\n//>>description: Enables items in a list to be sorted using the mouse.\r\n//>>docs: http://api.jqueryui.com/sortable/\r\n//>>demos: http://jqueryui.com/sortable/\r\n//>>css.structure: ../../themes/base/sortable.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"./mouse\",\r\n\t\t\t\"../data\",\r\n\t\t\t\"../ie\",\r\n\t\t\t\"../scroll-parent\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\nreturn $.widget( \"ui.sortable\", $.ui.mouse, {\r\n\tversion: \"1.12.1\",\r\n\twidgetEventPrefix: \"sort\",\r\n\tready: false,\r\n\toptions: {\r\n\t\tappendTo: \"parent\",\r\n\t\taxis: false,\r\n\t\tconnectWith: false,\r\n\t\tcontainment: false,\r\n\t\tcursor: \"auto\",\r\n\t\tcursorAt: false,\r\n\t\tdropOnEmpty: true,\r\n\t\tforcePlaceholderSize: false,\r\n\t\tforceHelperSize: false,\r\n\t\tgrid: false,\r\n\t\thandle: false,\r\n\t\thelper: \"original\",\r\n\t\titems: \"> *\",\r\n\t\topacity: false,\r\n\t\tplaceholder: false,\r\n\t\trevert: false,\r\n\t\tscroll: true,\r\n\t\tscrollSensitivity: 20,\r\n\t\tscrollSpeed: 20,\r\n\t\tscope: \"default\",\r\n\t\ttolerance: \"intersect\",\r\n\t\tzIndex: 1000,\r\n\r\n\t\t// Callbacks\r\n\t\tactivate: null,\r\n\t\tbeforeStop: null,\r\n\t\tchange: null,\r\n\t\tdeactivate: null,\r\n\t\tout: null,\r\n\t\tover: null,\r\n\t\treceive: null,\r\n\t\tremove: null,\r\n\t\tsort: null,\r\n\t\tstart: null,\r\n\t\tstop: null,\r\n\t\tupdate: null\r\n\t},\r\n\r\n\t_isOverAxis: function( x, reference, size ) {\r\n\t\treturn ( x >= reference ) && ( x < ( reference + size ) );\r\n\t},\r\n\r\n\t_isFloating: function( item ) {\r\n\t\treturn ( /left|right/ ).test( item.css( \"float\" ) ) ||\r\n\t\t\t( /inline|table-cell/ ).test( item.css( \"display\" ) );\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tthis.containerCache = {};\r\n\t\tthis._addClass( \"ui-sortable\" );\r\n\r\n\t\t//Get the items\r\n\t\tthis.refresh();\r\n\r\n\t\t//Let's determine the parent's offset\r\n\t\tthis.offset = this.element.offset();\r\n\r\n\t\t//Initialize mouse events for interaction\r\n\t\tthis._mouseInit();\r\n\r\n\t\tthis._setHandleClassName();\r\n\r\n\t\t//We're ready to go\r\n\t\tthis.ready = true;\r\n\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tthis._super( key, value );\r\n\r\n\t\tif ( key === \"handle\" ) {\r\n\t\t\tthis._setHandleClassName();\r\n\t\t}\r\n\t},\r\n\r\n\t_setHandleClassName: function() {\r\n\t\tvar that = this;\r\n\t\tthis._removeClass( this.element.find( \".ui-sortable-handle\" ), \"ui-sortable-handle\" );\r\n\t\t$.each( this.items, function() {\r\n\t\t\tthat._addClass(\r\n\t\t\t\tthis.instance.options.handle ?\r\n\t\t\t\t\tthis.item.find( this.instance.options.handle ) :\r\n\t\t\t\t\tthis.item,\r\n\t\t\t\t\"ui-sortable-handle\"\r\n\t\t\t);\r\n\t\t} );\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis._mouseDestroy();\r\n\r\n\t\tfor ( var i = this.items.length - 1; i >= 0; i-- ) {\r\n\t\t\tthis.items[ i ].item.removeData( this.widgetName + \"-item\" );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_mouseCapture: function( event, overrideHandle ) {\r\n\t\tvar currentItem = null,\r\n\t\t\tvalidHandle = false,\r\n\t\t\tthat = this;\r\n\r\n\t\tif ( this.reverting ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif ( this.options.disabled || this.options.type === \"static\" ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//We have to refresh the items data once first\r\n\t\tthis._refreshItems( event );\r\n\r\n\t\t//Find out if the clicked node (or one of its parents) is a actual item in this.items\r\n\t\t$( event.target ).parents().each( function() {\r\n\t\t\tif ( $.data( this, that.widgetName + \"-item\" ) === that ) {\r\n\t\t\t\tcurrentItem = $( this );\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} );\r\n\t\tif ( $.data( event.target, that.widgetName + \"-item\" ) === that ) {\r\n\t\t\tcurrentItem = $( event.target );\r\n\t\t}\r\n\r\n\t\tif ( !currentItem ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ( this.options.handle && !overrideHandle ) {\r\n\t\t\t$( this.options.handle, currentItem ).find( \"*\" ).addBack().each( function() {\r\n\t\t\t\tif ( this === event.target ) {\r\n\t\t\t\t\tvalidHandle = true;\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t\tif ( !validHandle ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.currentItem = currentItem;\r\n\t\tthis._removeCurrentsFromItems();\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\t_mouseStart: function( event, overrideHandle, noActivation ) {\r\n\r\n\t\tvar i, body,\r\n\t\t\to = this.options;\r\n\r\n\t\tthis.currentContainer = this;\r\n\r\n\t\t//We only need to call refreshPositions, because the refreshItems call has been moved to\r\n\t\t// mouseCapture\r\n\t\tthis.refreshPositions();\r\n\r\n\t\t//Create and append the visible helper\r\n\t\tthis.helper = this._createHelper( event );\r\n\r\n\t\t//Cache the helper size\r\n\t\tthis._cacheHelperProportions();\r\n\r\n\t\t/*\r\n\t\t * - Position generation -\r\n\t\t * This block generates everything position related - it's the core of draggables.\r\n\t\t */\r\n\r\n\t\t//Cache the margins of the original element\r\n\t\tthis._cacheMargins();\r\n\r\n\t\t//Get the next scrolling parent\r\n\t\tthis.scrollParent = this.helper.scrollParent();\r\n\r\n\t\t//The element's absolute position on the page minus margins\r\n\t\tthis.offset = this.currentItem.offset();\r\n\t\tthis.offset = {\r\n\t\t\ttop: this.offset.top - this.margins.top,\r\n\t\t\tleft: this.offset.left - this.margins.left\r\n\t\t};\r\n\r\n\t\t$.extend( this.offset, {\r\n\t\t\tclick: { //Where the click happened, relative to the element\r\n\t\t\t\tleft: event.pageX - this.offset.left,\r\n\t\t\t\ttop: event.pageY - this.offset.top\r\n\t\t\t},\r\n\t\t\tparent: this._getParentOffset(),\r\n\r\n\t\t\t// This is a relative to absolute position minus the actual position calculation -\r\n\t\t\t// only used for relative positioned helper\r\n\t\t\trelative: this._getRelativeOffset()\r\n\t\t} );\r\n\r\n\t\t// Only after we got the offset, we can change the helper's position to absolute\r\n\t\t// TODO: Still need to figure out a way to make relative sorting possible\r\n\t\tthis.helper.css( \"position\", \"absolute\" );\r\n\t\tthis.cssPosition = this.helper.css( \"position\" );\r\n\r\n\t\t//Generate the original position\r\n\t\tthis.originalPosition = this._generatePosition( event );\r\n\t\tthis.originalPageX = event.pageX;\r\n\t\tthis.originalPageY = event.pageY;\r\n\r\n\t\t//Adjust the mouse offset relative to the helper if \"cursorAt\" is supplied\r\n\t\t( o.cursorAt && this._adjustOffsetFromHelper( o.cursorAt ) );\r\n\r\n\t\t//Cache the former DOM position\r\n\t\tthis.domPosition = {\r\n\t\t\tprev: this.currentItem.prev()[ 0 ],\r\n\t\t\tparent: this.currentItem.parent()[ 0 ]\r\n\t\t};\r\n\r\n\t\t// If the helper is not the original, hide the original so it's not playing any role during\r\n\t\t// the drag, won't cause anything bad this way\r\n\t\tif ( this.helper[ 0 ] !== this.currentItem[ 0 ] ) {\r\n\t\t\tthis.currentItem.hide();\r\n\t\t}\r\n\r\n\t\t//Create the placeholder\r\n\t\tthis._createPlaceholder();\r\n\r\n\t\t//Set a containment if given in the options\r\n\t\tif ( o.containment ) {\r\n\t\t\tthis._setContainment();\r\n\t\t}\r\n\r\n\t\tif ( o.cursor && o.cursor !== \"auto\" ) { // cursor option\r\n\t\t\tbody = this.document.find( \"body\" );\r\n\r\n\t\t\t// Support: IE\r\n\t\t\tthis.storedCursor = body.css( \"cursor\" );\r\n\t\t\tbody.css( \"cursor\", o.cursor );\r\n\r\n\t\t\tthis.storedStylesheet =\r\n\t\t\t\t$( \"<style>*{ cursor: \" + o.cursor + \" !important; }</style>\" ).appendTo( body );\r\n\t\t}\r\n\r\n\t\tif ( o.opacity ) { // opacity option\r\n\t\t\tif ( this.helper.css( \"opacity\" ) ) {\r\n\t\t\t\tthis._storedOpacity = this.helper.css( \"opacity\" );\r\n\t\t\t}\r\n\t\t\tthis.helper.css( \"opacity\", o.opacity );\r\n\t\t}\r\n\r\n\t\tif ( o.zIndex ) { // zIndex option\r\n\t\t\tif ( this.helper.css( \"zIndex\" ) ) {\r\n\t\t\t\tthis._storedZIndex = this.helper.css( \"zIndex\" );\r\n\t\t\t}\r\n\t\t\tthis.helper.css( \"zIndex\", o.zIndex );\r\n\t\t}\r\n\r\n\t\t//Prepare scrolling\r\n\t\tif ( this.scrollParent[ 0 ] !== this.document[ 0 ] &&\r\n\t\t\t\tthis.scrollParent[ 0 ].tagName !== \"HTML\" ) {\r\n\t\t\tthis.overflowOffset = this.scrollParent.offset();\r\n\t\t}\r\n\r\n\t\t//Call callbacks\r\n\t\tthis._trigger( \"start\", event, this._uiHash() );\r\n\r\n\t\t//Recache the helper size\r\n\t\tif ( !this._preserveHelperProportions ) {\r\n\t\t\tthis._cacheHelperProportions();\r\n\t\t}\r\n\r\n\t\t//Post \"activate\" events to possible containers\r\n\t\tif ( !noActivation ) {\r\n\t\t\tfor ( i = this.containers.length - 1; i >= 0; i-- ) {\r\n\t\t\t\tthis.containers[ i ]._trigger( \"activate\", event, this._uiHash( this ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Prepare possible droppables\r\n\t\tif ( $.ui.ddmanager ) {\r\n\t\t\t$.ui.ddmanager.current = this;\r\n\t\t}\r\n\r\n\t\tif ( $.ui.ddmanager && !o.dropBehaviour ) {\r\n\t\t\t$.ui.ddmanager.prepareOffsets( this, event );\r\n\t\t}\r\n\r\n\t\tthis.dragging = true;\r\n\r\n\t\tthis._addClass( this.helper, \"ui-sortable-helper\" );\r\n\r\n\t\t// Execute the drag once - this causes the helper not to be visiblebefore getting its\r\n\t\t// correct position\r\n\t\tthis._mouseDrag( event );\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\t_mouseDrag: function( event ) {\r\n\t\tvar i, item, itemElement, intersection,\r\n\t\t\to = this.options,\r\n\t\t\tscrolled = false;\r\n\r\n\t\t//Compute the helpers position\r\n\t\tthis.position = this._generatePosition( event );\r\n\t\tthis.positionAbs = this._convertPositionTo( \"absolute\" );\r\n\r\n\t\tif ( !this.lastPositionAbs ) {\r\n\t\t\tthis.lastPositionAbs = this.positionAbs;\r\n\t\t}\r\n\r\n\t\t//Do scrolling\r\n\t\tif ( this.options.scroll ) {\r\n\t\t\tif ( this.scrollParent[ 0 ] !== this.document[ 0 ] &&\r\n\t\t\t\t\tthis.scrollParent[ 0 ].tagName !== \"HTML\" ) {\r\n\r\n\t\t\t\tif ( ( this.overflowOffset.top + this.scrollParent[ 0 ].offsetHeight ) -\r\n\t\t\t\t\t\tevent.pageY < o.scrollSensitivity ) {\r\n\t\t\t\t\tthis.scrollParent[ 0 ].scrollTop =\r\n\t\t\t\t\t\tscrolled = this.scrollParent[ 0 ].scrollTop + o.scrollSpeed;\r\n\t\t\t\t} else if ( event.pageY - this.overflowOffset.top < o.scrollSensitivity ) {\r\n\t\t\t\t\tthis.scrollParent[ 0 ].scrollTop =\r\n\t\t\t\t\t\tscrolled = this.scrollParent[ 0 ].scrollTop - o.scrollSpeed;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ( this.overflowOffset.left + this.scrollParent[ 0 ].offsetWidth ) -\r\n\t\t\t\t\t\tevent.pageX < o.scrollSensitivity ) {\r\n\t\t\t\t\tthis.scrollParent[ 0 ].scrollLeft = scrolled =\r\n\t\t\t\t\t\tthis.scrollParent[ 0 ].scrollLeft + o.scrollSpeed;\r\n\t\t\t\t} else if ( event.pageX - this.overflowOffset.left < o.scrollSensitivity ) {\r\n\t\t\t\t\tthis.scrollParent[ 0 ].scrollLeft = scrolled =\r\n\t\t\t\t\t\tthis.scrollParent[ 0 ].scrollLeft - o.scrollSpeed;\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( event.pageY - this.document.scrollTop() < o.scrollSensitivity ) {\r\n\t\t\t\t\tscrolled = this.document.scrollTop( this.document.scrollTop() - o.scrollSpeed );\r\n\t\t\t\t} else if ( this.window.height() - ( event.pageY - this.document.scrollTop() ) <\r\n\t\t\t\t\t\to.scrollSensitivity ) {\r\n\t\t\t\t\tscrolled = this.document.scrollTop( this.document.scrollTop() + o.scrollSpeed );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( event.pageX - this.document.scrollLeft() < o.scrollSensitivity ) {\r\n\t\t\t\t\tscrolled = this.document.scrollLeft(\r\n\t\t\t\t\t\tthis.document.scrollLeft() - o.scrollSpeed\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if ( this.window.width() - ( event.pageX - this.document.scrollLeft() ) <\r\n\t\t\t\t\t\to.scrollSensitivity ) {\r\n\t\t\t\t\tscrolled = this.document.scrollLeft(\r\n\t\t\t\t\t\tthis.document.scrollLeft() + o.scrollSpeed\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( scrolled !== false && $.ui.ddmanager && !o.dropBehaviour ) {\r\n\t\t\t\t$.ui.ddmanager.prepareOffsets( this, event );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Regenerate the absolute position used for position checks\r\n\t\tthis.positionAbs = this._convertPositionTo( \"absolute\" );\r\n\r\n\t\t//Set the helper position\r\n\t\tif ( !this.options.axis || this.options.axis !== \"y\" ) {\r\n\t\t\tthis.helper[ 0 ].style.left = this.position.left + \"px\";\r\n\t\t}\r\n\t\tif ( !this.options.axis || this.options.axis !== \"x\" ) {\r\n\t\t\tthis.helper[ 0 ].style.top = this.position.top + \"px\";\r\n\t\t}\r\n\r\n\t\t//Rearrange\r\n\t\tfor ( i = this.items.length - 1; i >= 0; i-- ) {\r\n\r\n\t\t\t//Cache variables and intersection, continue if no intersection\r\n\t\t\titem = this.items[ i ];\r\n\t\t\titemElement = item.item[ 0 ];\r\n\t\t\tintersection = this._intersectsWithPointer( item );\r\n\t\t\tif ( !intersection ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Only put the placeholder inside the current Container, skip all\r\n\t\t\t// items from other containers. This works because when moving\r\n\t\t\t// an item from one container to another the\r\n\t\t\t// currentContainer is switched before the placeholder is moved.\r\n\t\t\t//\r\n\t\t\t// Without this, moving items in \"sub-sortables\" can cause\r\n\t\t\t// the placeholder to jitter between the outer and inner container.\r\n\t\t\tif ( item.instance !== this.currentContainer ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Cannot intersect with itself\r\n\t\t\t// no useless actions that have been done before\r\n\t\t\t// no action if the item moved is the parent of the item checked\r\n\t\t\tif ( itemElement !== this.currentItem[ 0 ] &&\r\n\t\t\t\tthis.placeholder[ intersection === 1 ? \"next\" : \"prev\" ]()[ 0 ] !== itemElement &&\r\n\t\t\t\t!$.contains( this.placeholder[ 0 ], itemElement ) &&\r\n\t\t\t\t( this.options.type === \"semi-dynamic\" ?\r\n\t\t\t\t\t!$.contains( this.element[ 0 ], itemElement ) :\r\n\t\t\t\t\ttrue\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\r\n\t\t\t\tthis.direction = intersection === 1 ? \"down\" : \"up\";\r\n\r\n\t\t\t\tif ( this.options.tolerance === \"pointer\" || this._intersectsWithSides( item ) ) {\r\n\t\t\t\t\tthis._rearrange( event, item );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._trigger( \"change\", event, this._uiHash() );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Post events to containers\r\n\t\tthis._contactContainers( event );\r\n\r\n\t\t//Interconnect with droppables\r\n\t\tif ( $.ui.ddmanager ) {\r\n\t\t\t$.ui.ddmanager.drag( this, event );\r\n\t\t}\r\n\r\n\t\t//Call callbacks\r\n\t\tthis._trigger( \"sort\", event, this._uiHash() );\r\n\r\n\t\tthis.lastPositionAbs = this.positionAbs;\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\t_mouseStop: function( event, noPropagation ) {\r\n\r\n\t\tif ( !event ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//If we are using droppables, inform the manager about the drop\r\n\t\tif ( $.ui.ddmanager && !this.options.dropBehaviour ) {\r\n\t\t\t$.ui.ddmanager.drop( this, event );\r\n\t\t}\r\n\r\n\t\tif ( this.options.revert ) {\r\n\t\t\tvar that = this,\r\n\t\t\t\tcur = this.placeholder.offset(),\r\n\t\t\t\taxis = this.options.axis,\r\n\t\t\t\tanimation = {};\r\n\r\n\t\t\tif ( !axis || axis === \"x\" ) {\r\n\t\t\t\tanimation.left = cur.left - this.offset.parent.left - this.margins.left +\r\n\t\t\t\t\t( this.offsetParent[ 0 ] === this.document[ 0 ].body ?\r\n\t\t\t\t\t\t0 :\r\n\t\t\t\t\t\tthis.offsetParent[ 0 ].scrollLeft\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif ( !axis || axis === \"y\" ) {\r\n\t\t\t\tanimation.top = cur.top - this.offset.parent.top - this.margins.top +\r\n\t\t\t\t\t( this.offsetParent[ 0 ] === this.document[ 0 ].body ?\r\n\t\t\t\t\t\t0 :\r\n\t\t\t\t\t\tthis.offsetParent[ 0 ].scrollTop\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tthis.reverting = true;\r\n\t\t\t$( this.helper ).animate(\r\n\t\t\t\tanimation,\r\n\t\t\t\tparseInt( this.options.revert, 10 ) || 500,\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tthat._clear( event );\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis._clear( event, noPropagation );\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tcancel: function() {\r\n\r\n\t\tif ( this.dragging ) {\r\n\r\n\t\t\tthis._mouseUp( new $.Event( \"mouseup\", { target: null } ) );\r\n\r\n\t\t\tif ( this.options.helper === \"original\" ) {\r\n\t\t\t\tthis.currentItem.css( this._storedCSS );\r\n\t\t\t\tthis._removeClass( this.currentItem, \"ui-sortable-helper\" );\r\n\t\t\t} else {\r\n\t\t\t\tthis.currentItem.show();\r\n\t\t\t}\r\n\r\n\t\t\t//Post deactivating events to containers\r\n\t\t\tfor ( var i = this.containers.length - 1; i >= 0; i-- ) {\r\n\t\t\t\tthis.containers[ i ]._trigger( \"deactivate\", null, this._uiHash( this ) );\r\n\t\t\t\tif ( this.containers[ i ].containerCache.over ) {\r\n\t\t\t\t\tthis.containers[ i ]._trigger( \"out\", null, this._uiHash( this ) );\r\n\t\t\t\t\tthis.containers[ i ].containerCache.over = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.placeholder ) {\r\n\r\n\t\t\t//$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately,\r\n\t\t\t// it unbinds ALL events from the original node!\r\n\t\t\tif ( this.placeholder[ 0 ].parentNode ) {\r\n\t\t\t\tthis.placeholder[ 0 ].parentNode.removeChild( this.placeholder[ 0 ] );\r\n\t\t\t}\r\n\t\t\tif ( this.options.helper !== \"original\" && this.helper &&\r\n\t\t\t\t\tthis.helper[ 0 ].parentNode ) {\r\n\t\t\t\tthis.helper.remove();\r\n\t\t\t}\r\n\r\n\t\t\t$.extend( this, {\r\n\t\t\t\thelper: null,\r\n\t\t\t\tdragging: false,\r\n\t\t\t\treverting: false,\r\n\t\t\t\t_noFinalSort: null\r\n\t\t\t} );\r\n\r\n\t\t\tif ( this.domPosition.prev ) {\r\n\t\t\t\t$( this.domPosition.prev ).after( this.currentItem );\r\n\t\t\t} else {\r\n\t\t\t\t$( this.domPosition.parent ).prepend( this.currentItem );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tserialize: function( o ) {\r\n\r\n\t\tvar items = this._getItemsAsjQuery( o && o.connected ),\r\n\t\t\tstr = [];\r\n\t\to = o || {};\r\n\r\n\t\t$( items ).each( function() {\r\n\t\t\tvar res = ( $( o.item || this ).attr( o.attribute || \"id\" ) || \"\" )\r\n\t\t\t\t.match( o.expression || ( /(.+)[\\-=_](.+)/ ) );\r\n\t\t\tif ( res ) {\r\n\t\t\t\tstr.push(\r\n\t\t\t\t\t( o.key || res[ 1 ] + \"[]\" ) +\r\n\t\t\t\t\t\"=\" + ( o.key && o.expression ? res[ 1 ] : res[ 2 ] ) );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tif ( !str.length && o.key ) {\r\n\t\t\tstr.push( o.key + \"=\" );\r\n\t\t}\r\n\r\n\t\treturn str.join( \"&\" );\r\n\r\n\t},\r\n\r\n\ttoArray: function( o ) {\r\n\r\n\t\tvar items = this._getItemsAsjQuery( o && o.connected ),\r\n\t\t\tret = [];\r\n\r\n\t\to = o || {};\r\n\r\n\t\titems.each( function() {\r\n\t\t\tret.push( $( o.item || this ).attr( o.attribute || \"id\" ) || \"\" );\r\n\t\t} );\r\n\t\treturn ret;\r\n\r\n\t},\r\n\r\n\t/* Be careful with the following core functions */\r\n\t_intersectsWith: function( item ) {\r\n\r\n\t\tvar x1 = this.positionAbs.left,\r\n\t\t\tx2 = x1 + this.helperProportions.width,\r\n\t\t\ty1 = this.positionAbs.top,\r\n\t\t\ty2 = y1 + this.helperProportions.height,\r\n\t\t\tl = item.left,\r\n\t\t\tr = l + item.width,\r\n\t\t\tt = item.top,\r\n\t\t\tb = t + item.height,\r\n\t\t\tdyClick = this.offset.click.top,\r\n\t\t\tdxClick = this.offset.click.left,\r\n\t\t\tisOverElementHeight = ( this.options.axis === \"x\" ) || ( ( y1 + dyClick ) > t &&\r\n\t\t\t\t( y1 + dyClick ) < b ),\r\n\t\t\tisOverElementWidth = ( this.options.axis === \"y\" ) || ( ( x1 + dxClick ) > l &&\r\n\t\t\t\t( x1 + dxClick ) < r ),\r\n\t\t\tisOverElement = isOverElementHeight && isOverElementWidth;\r\n\r\n\t\tif ( this.options.tolerance === \"pointer\" ||\r\n\t\t\tthis.options.forcePointerForContainers ||\r\n\t\t\t( this.options.tolerance !== \"pointer\" &&\r\n\t\t\t\tthis.helperProportions[ this.floating ? \"width\" : \"height\" ] >\r\n\t\t\t\titem[ this.floating ? \"width\" : \"height\" ] )\r\n\t\t) {\r\n\t\t\treturn isOverElement;\r\n\t\t} else {\r\n\r\n\t\t\treturn ( l < x1 + ( this.helperProportions.width / 2 ) && // Right Half\r\n\t\t\t\tx2 - ( this.helperProportions.width / 2 ) < r && // Left Half\r\n\t\t\t\tt < y1 + ( this.helperProportions.height / 2 ) && // Bottom Half\r\n\t\t\t\ty2 - ( this.helperProportions.height / 2 ) < b ); // Top Half\r\n\r\n\t\t}\r\n\t},\r\n\r\n\t_intersectsWithPointer: function( item ) {\r\n\t\tvar verticalDirection, horizontalDirection,\r\n\t\t\tisOverElementHeight = ( this.options.axis === \"x\" ) ||\r\n\t\t\t\tthis._isOverAxis(\r\n\t\t\t\t\tthis.positionAbs.top + this.offset.click.top, item.top, item.height ),\r\n\t\t\tisOverElementWidth = ( this.options.axis === \"y\" ) ||\r\n\t\t\t\tthis._isOverAxis(\r\n\t\t\t\t\tthis.positionAbs.left + this.offset.click.left, item.left, item.width ),\r\n\t\t\tisOverElement = isOverElementHeight && isOverElementWidth;\r\n\r\n\t\tif ( !isOverElement ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tverticalDirection = this._getDragVerticalDirection();\r\n\t\thorizontalDirection = this._getDragHorizontalDirection();\r\n\r\n\t\treturn this.floating ?\r\n\t\t\t( ( horizontalDirection === \"right\" || verticalDirection === \"down\" ) ? 2 : 1 )\r\n\t\t\t: ( verticalDirection && ( verticalDirection === \"down\" ? 2 : 1 ) );\r\n\r\n\t},\r\n\r\n\t_intersectsWithSides: function( item ) {\r\n\r\n\t\tvar isOverBottomHalf = this._isOverAxis( this.positionAbs.top +\r\n\t\t\t\tthis.offset.click.top, item.top + ( item.height / 2 ), item.height ),\r\n\t\t\tisOverRightHalf = this._isOverAxis( this.positionAbs.left +\r\n\t\t\t\tthis.offset.click.left, item.left + ( item.width / 2 ), item.width ),\r\n\t\t\tverticalDirection = this._getDragVerticalDirection(),\r\n\t\t\thorizontalDirection = this._getDragHorizontalDirection();\r\n\r\n\t\tif ( this.floating && horizontalDirection ) {\r\n\t\t\treturn ( ( horizontalDirection === \"right\" && isOverRightHalf ) ||\r\n\t\t\t\t( horizontalDirection === \"left\" && !isOverRightHalf ) );\r\n\t\t} else {\r\n\t\t\treturn verticalDirection && ( ( verticalDirection === \"down\" && isOverBottomHalf ) ||\r\n\t\t\t\t( verticalDirection === \"up\" && !isOverBottomHalf ) );\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_getDragVerticalDirection: function() {\r\n\t\tvar delta = this.positionAbs.top - this.lastPositionAbs.top;\r\n\t\treturn delta !== 0 && ( delta > 0 ? \"down\" : \"up\" );\r\n\t},\r\n\r\n\t_getDragHorizontalDirection: function() {\r\n\t\tvar delta = this.positionAbs.left - this.lastPositionAbs.left;\r\n\t\treturn delta !== 0 && ( delta > 0 ? \"right\" : \"left\" );\r\n\t},\r\n\r\n\trefresh: function( event ) {\r\n\t\tthis._refreshItems( event );\r\n\t\tthis._setHandleClassName();\r\n\t\tthis.refreshPositions();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_connectWith: function() {\r\n\t\tvar options = this.options;\r\n\t\treturn options.connectWith.constructor === String ?\r\n\t\t\t[ options.connectWith ] :\r\n\t\t\toptions.connectWith;\r\n\t},\r\n\r\n\t_getItemsAsjQuery: function( connected ) {\r\n\r\n\t\tvar i, j, cur, inst,\r\n\t\t\titems = [],\r\n\t\t\tqueries = [],\r\n\t\t\tconnectWith = this._connectWith();\r\n\r\n\t\tif ( connectWith && connected ) {\r\n\t\t\tfor ( i = connectWith.length - 1; i >= 0; i-- ) {\r\n\t\t\t\tcur = $( connectWith[ i ], this.document[ 0 ] );\r\n\t\t\t\tfor ( j = cur.length - 1; j >= 0; j-- ) {\r\n\t\t\t\t\tinst = $.data( cur[ j ], this.widgetFullName );\r\n\t\t\t\t\tif ( inst && inst !== this && !inst.options.disabled ) {\r\n\t\t\t\t\t\tqueries.push( [ $.isFunction( inst.options.items ) ?\r\n\t\t\t\t\t\t\tinst.options.items.call( inst.element ) :\r\n\t\t\t\t\t\t\t$( inst.options.items, inst.element )\r\n\t\t\t\t\t\t\t\t.not( \".ui-sortable-helper\" )\r\n\t\t\t\t\t\t\t\t.not( \".ui-sortable-placeholder\" ), inst ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tqueries.push( [ $.isFunction( this.options.items ) ?\r\n\t\t\tthis.options.items\r\n\t\t\t\t.call( this.element, null, { options: this.options, item: this.currentItem } ) :\r\n\t\t\t$( this.options.items, this.element )\r\n\t\t\t\t.not( \".ui-sortable-helper\" )\r\n\t\t\t\t.not( \".ui-sortable-placeholder\" ), this ] );\r\n\r\n\t\tfunction addItems() {\r\n\t\t\titems.push( this );\r\n\t\t}\r\n\t\tfor ( i = queries.length - 1; i >= 0; i-- ) {\r\n\t\t\tqueries[ i ][ 0 ].each( addItems );\r\n\t\t}\r\n\r\n\t\treturn $( items );\r\n\r\n\t},\r\n\r\n\t_removeCurrentsFromItems: function() {\r\n\r\n\t\tvar list = this.currentItem.find( \":data(\" + this.widgetName + \"-item)\" );\r\n\r\n\t\tthis.items = $.grep( this.items, function( item ) {\r\n\t\t\tfor ( var j = 0; j < list.length; j++ ) {\r\n\t\t\t\tif ( list[ j ] === item.item[ 0 ] ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\t_refreshItems: function( event ) {\r\n\r\n\t\tthis.items = [];\r\n\t\tthis.containers = [ this ];\r\n\r\n\t\tvar i, j, cur, inst, targetData, _queries, item, queriesLength,\r\n\t\t\titems = this.items,\r\n\t\t\tqueries = [ [ $.isFunction( this.options.items ) ?\r\n\t\t\t\tthis.options.items.call( this.element[ 0 ], event, { item: this.currentItem } ) :\r\n\t\t\t\t$( this.options.items, this.element ), this ] ],\r\n\t\t\tconnectWith = this._connectWith();\r\n\r\n\t\t//Shouldn't be run the first time through due to massive slow-down\r\n\t\tif ( connectWith && this.ready ) {\r\n\t\t\tfor ( i = connectWith.length - 1; i >= 0; i-- ) {\r\n\t\t\t\tcur = $( connectWith[ i ], this.document[ 0 ] );\r\n\t\t\t\tfor ( j = cur.length - 1; j >= 0; j-- ) {\r\n\t\t\t\t\tinst = $.data( cur[ j ], this.widgetFullName );\r\n\t\t\t\t\tif ( inst && inst !== this && !inst.options.disabled ) {\r\n\t\t\t\t\t\tqueries.push( [ $.isFunction( inst.options.items ) ?\r\n\t\t\t\t\t\t\tinst.options.items\r\n\t\t\t\t\t\t\t\t.call( inst.element[ 0 ], event, { item: this.currentItem } ) :\r\n\t\t\t\t\t\t\t$( inst.options.items, inst.element ), inst ] );\r\n\t\t\t\t\t\tthis.containers.push( inst );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor ( i = queries.length - 1; i >= 0; i-- ) {\r\n\t\t\ttargetData = queries[ i ][ 1 ];\r\n\t\t\t_queries = queries[ i ][ 0 ];\r\n\r\n\t\t\tfor ( j = 0, queriesLength = _queries.length; j < queriesLength; j++ ) {\r\n\t\t\t\titem = $( _queries[ j ] );\r\n\r\n\t\t\t\t// Data for target checking (mouse manager)\r\n\t\t\t\titem.data( this.widgetName + \"-item\", targetData );\r\n\r\n\t\t\t\titems.push( {\r\n\t\t\t\t\titem: item,\r\n\t\t\t\t\tinstance: targetData,\r\n\t\t\t\t\twidth: 0, height: 0,\r\n\t\t\t\t\tleft: 0, top: 0\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t},\r\n\r\n\trefreshPositions: function( fast ) {\r\n\r\n\t\t// Determine whether items are being displayed horizontally\r\n\t\tthis.floating = this.items.length ?\r\n\t\t\tthis.options.axis === \"x\" || this._isFloating( this.items[ 0 ].item ) :\r\n\t\t\tfalse;\r\n\r\n\t\t//This has to be redone because due to the item being moved out/into the offsetParent,\r\n\t\t// the offsetParent's position will change\r\n\t\tif ( this.offsetParent && this.helper ) {\r\n\t\t\tthis.offset.parent = this._getParentOffset();\r\n\t\t}\r\n\r\n\t\tvar i, item, t, p;\r\n\r\n\t\tfor ( i = this.items.length - 1; i >= 0; i-- ) {\r\n\t\t\titem = this.items[ i ];\r\n\r\n\t\t\t//We ignore calculating positions of all connected containers when we're not over them\r\n\t\t\tif ( item.instance !== this.currentContainer && this.currentContainer &&\r\n\t\t\t\t\titem.item[ 0 ] !== this.currentItem[ 0 ] ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tt = this.options.toleranceElement ?\r\n\t\t\t\t$( this.options.toleranceElement, item.item ) :\r\n\t\t\t\titem.item;\r\n\r\n\t\t\tif ( !fast ) {\r\n\t\t\t\titem.width = t.outerWidth();\r\n\t\t\t\titem.height = t.outerHeight();\r\n\t\t\t}\r\n\r\n\t\t\tp = t.offset();\r\n\t\t\titem.left = p.left;\r\n\t\t\titem.top = p.top;\r\n\t\t}\r\n\r\n\t\tif ( this.options.custom && this.options.custom.refreshContainers ) {\r\n\t\t\tthis.options.custom.refreshContainers.call( this );\r\n\t\t} else {\r\n\t\t\tfor ( i = this.containers.length - 1; i >= 0; i-- ) {\r\n\t\t\t\tp = this.containers[ i ].element.offset();\r\n\t\t\t\tthis.containers[ i ].containerCache.left = p.left;\r\n\t\t\t\tthis.containers[ i ].containerCache.top = p.top;\r\n\t\t\t\tthis.containers[ i ].containerCache.width =\r\n\t\t\t\t\tthis.containers[ i ].element.outerWidth();\r\n\t\t\t\tthis.containers[ i ].containerCache.height =\r\n\t\t\t\t\tthis.containers[ i ].element.outerHeight();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_createPlaceholder: function( that ) {\r\n\t\tthat = that || this;\r\n\t\tvar className,\r\n\t\t\to = that.options;\r\n\r\n\t\tif ( !o.placeholder || o.placeholder.constructor === String ) {\r\n\t\t\tclassName = o.placeholder;\r\n\t\t\to.placeholder = {\r\n\t\t\t\telement: function() {\r\n\r\n\t\t\t\t\tvar nodeName = that.currentItem[ 0 ].nodeName.toLowerCase(),\r\n\t\t\t\t\t\telement = $( \"<\" + nodeName + \">\", that.document[ 0 ] );\r\n\r\n\t\t\t\t\t\tthat._addClass( element, \"ui-sortable-placeholder\",\r\n\t\t\t\t\t\t\t\tclassName || that.currentItem[ 0 ].className )\r\n\t\t\t\t\t\t\t._removeClass( element, \"ui-sortable-helper\" );\r\n\r\n\t\t\t\t\tif ( nodeName === \"tbody\" ) {\r\n\t\t\t\t\t\tthat._createTrPlaceholder(\r\n\t\t\t\t\t\t\tthat.currentItem.find( \"tr\" ).eq( 0 ),\r\n\t\t\t\t\t\t\t$( \"<tr>\", that.document[ 0 ] ).appendTo( element )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else if ( nodeName === \"tr\" ) {\r\n\t\t\t\t\t\tthat._createTrPlaceholder( that.currentItem, element );\r\n\t\t\t\t\t} else if ( nodeName === \"img\" ) {\r\n\t\t\t\t\t\telement.attr( \"src\", that.currentItem.attr( \"src\" ) );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( !className ) {\r\n\t\t\t\t\t\telement.css( \"visibility\", \"hidden\" );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn element;\r\n\t\t\t\t},\r\n\t\t\t\tupdate: function( container, p ) {\r\n\r\n\t\t\t\t\t// 1. If a className is set as 'placeholder option, we don't force sizes -\r\n\t\t\t\t\t// the class is responsible for that\r\n\t\t\t\t\t// 2. The option 'forcePlaceholderSize can be enabled to force it even if a\r\n\t\t\t\t\t// class name is specified\r\n\t\t\t\t\tif ( className && !o.forcePlaceholderSize ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//If the element doesn't have a actual height by itself (without styles coming\r\n\t\t\t\t\t// from a stylesheet), it receives the inline height from the dragged item\r\n\t\t\t\t\tif ( !p.height() ) {\r\n\t\t\t\t\t\tp.height(\r\n\t\t\t\t\t\t\tthat.currentItem.innerHeight() -\r\n\t\t\t\t\t\t\tparseInt( that.currentItem.css( \"paddingTop\" ) || 0, 10 ) -\r\n\t\t\t\t\t\t\tparseInt( that.currentItem.css( \"paddingBottom\" ) || 0, 10 ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( !p.width() ) {\r\n\t\t\t\t\t\tp.width(\r\n\t\t\t\t\t\t\tthat.currentItem.innerWidth() -\r\n\t\t\t\t\t\t\tparseInt( that.currentItem.css( \"paddingLeft\" ) || 0, 10 ) -\r\n\t\t\t\t\t\t\tparseInt( that.currentItem.css( \"paddingRight\" ) || 0, 10 ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t//Create the placeholder\r\n\t\tthat.placeholder = $( o.placeholder.element.call( that.element, that.currentItem ) );\r\n\r\n\t\t//Append it after the actual current item\r\n\t\tthat.currentItem.after( that.placeholder );\r\n\r\n\t\t//Update the size of the placeholder (TODO: Logic to fuzzy, see line 316/317)\r\n\t\to.placeholder.update( that, that.placeholder );\r\n\r\n\t},\r\n\r\n\t_createTrPlaceholder: function( sourceTr, targetTr ) {\r\n\t\tvar that = this;\r\n\r\n\t\tsourceTr.children().each( function() {\r\n\t\t\t$( \"<td>&#160;</td>\", that.document[ 0 ] )\r\n\t\t\t\t.attr( \"colspan\", $( this ).attr( \"colspan\" ) || 1 )\r\n\t\t\t\t.appendTo( targetTr );\r\n\t\t} );\r\n\t},\r\n\r\n\t_contactContainers: function( event ) {\r\n\t\tvar i, j, dist, itemWithLeastDistance, posProperty, sizeProperty, cur, nearBottom,\r\n\t\t\tfloating, axis,\r\n\t\t\tinnermostContainer = null,\r\n\t\t\tinnermostIndex = null;\r\n\r\n\t\t// Get innermost container that intersects with item\r\n\t\tfor ( i = this.containers.length - 1; i >= 0; i-- ) {\r\n\r\n\t\t\t// Never consider a container that's located within the item itself\r\n\t\t\tif ( $.contains( this.currentItem[ 0 ], this.containers[ i ].element[ 0 ] ) ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif ( this._intersectsWith( this.containers[ i ].containerCache ) ) {\r\n\r\n\t\t\t\t// If we've already found a container and it's more \"inner\" than this, then continue\r\n\t\t\t\tif ( innermostContainer &&\r\n\t\t\t\t\t\t$.contains(\r\n\t\t\t\t\t\t\tthis.containers[ i ].element[ 0 ],\r\n\t\t\t\t\t\t\tinnermostContainer.element[ 0 ] ) ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinnermostContainer = this.containers[ i ];\r\n\t\t\t\tinnermostIndex = i;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// container doesn't intersect. trigger \"out\" event if necessary\r\n\t\t\t\tif ( this.containers[ i ].containerCache.over ) {\r\n\t\t\t\t\tthis.containers[ i ]._trigger( \"out\", event, this._uiHash( this ) );\r\n\t\t\t\t\tthis.containers[ i ].containerCache.over = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If no intersecting containers found, return\r\n\t\tif ( !innermostContainer ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Move the item into the container if it's not there already\r\n\t\tif ( this.containers.length === 1 ) {\r\n\t\t\tif ( !this.containers[ innermostIndex ].containerCache.over ) {\r\n\t\t\t\tthis.containers[ innermostIndex ]._trigger( \"over\", event, this._uiHash( this ) );\r\n\t\t\t\tthis.containers[ innermostIndex ].containerCache.over = 1;\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\t// When entering a new container, we will find the item with the least distance and\r\n\t\t\t// append our item near it\r\n\t\t\tdist = 10000;\r\n\t\t\titemWithLeastDistance = null;\r\n\t\t\tfloating = innermostContainer.floating || this._isFloating( this.currentItem );\r\n\t\t\tposProperty = floating ? \"left\" : \"top\";\r\n\t\t\tsizeProperty = floating ? \"width\" : \"height\";\r\n\t\t\taxis = floating ? \"pageX\" : \"pageY\";\r\n\r\n\t\t\tfor ( j = this.items.length - 1; j >= 0; j-- ) {\r\n\t\t\t\tif ( !$.contains(\r\n\t\t\t\t\t\tthis.containers[ innermostIndex ].element[ 0 ], this.items[ j ].item[ 0 ] )\r\n\t\t\t\t) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif ( this.items[ j ].item[ 0 ] === this.currentItem[ 0 ] ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcur = this.items[ j ].item.offset()[ posProperty ];\r\n\t\t\t\tnearBottom = false;\r\n\t\t\t\tif ( event[ axis ] - cur > this.items[ j ][ sizeProperty ] / 2 ) {\r\n\t\t\t\t\tnearBottom = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( Math.abs( event[ axis ] - cur ) < dist ) {\r\n\t\t\t\t\tdist = Math.abs( event[ axis ] - cur );\r\n\t\t\t\t\titemWithLeastDistance = this.items[ j ];\r\n\t\t\t\t\tthis.direction = nearBottom ? \"up\" : \"down\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//Check if dropOnEmpty is enabled\r\n\t\t\tif ( !itemWithLeastDistance && !this.options.dropOnEmpty ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.currentContainer === this.containers[ innermostIndex ] ) {\r\n\t\t\t\tif ( !this.currentContainer.containerCache.over ) {\r\n\t\t\t\t\tthis.containers[ innermostIndex ]._trigger( \"over\", event, this._uiHash() );\r\n\t\t\t\t\tthis.currentContainer.containerCache.over = 1;\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\titemWithLeastDistance ?\r\n\t\t\t\tthis._rearrange( event, itemWithLeastDistance, null, true ) :\r\n\t\t\t\tthis._rearrange( event, null, this.containers[ innermostIndex ].element, true );\r\n\t\t\tthis._trigger( \"change\", event, this._uiHash() );\r\n\t\t\tthis.containers[ innermostIndex ]._trigger( \"change\", event, this._uiHash( this ) );\r\n\t\t\tthis.currentContainer = this.containers[ innermostIndex ];\r\n\r\n\t\t\t//Update the placeholder\r\n\t\t\tthis.options.placeholder.update( this.currentContainer, this.placeholder );\r\n\r\n\t\t\tthis.containers[ innermostIndex ]._trigger( \"over\", event, this._uiHash( this ) );\r\n\t\t\tthis.containers[ innermostIndex ].containerCache.over = 1;\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_createHelper: function( event ) {\r\n\r\n\t\tvar o = this.options,\r\n\t\t\thelper = $.isFunction( o.helper ) ?\r\n\t\t\t\t$( o.helper.apply( this.element[ 0 ], [ event, this.currentItem ] ) ) :\r\n\t\t\t\t( o.helper === \"clone\" ? this.currentItem.clone() : this.currentItem );\r\n\r\n\t\t//Add the helper to the DOM if that didn't happen already\r\n\t\tif ( !helper.parents( \"body\" ).length ) {\r\n\t\t\t$( o.appendTo !== \"parent\" ?\r\n\t\t\t\to.appendTo :\r\n\t\t\t\tthis.currentItem[ 0 ].parentNode )[ 0 ].appendChild( helper[ 0 ] );\r\n\t\t}\r\n\r\n\t\tif ( helper[ 0 ] === this.currentItem[ 0 ] ) {\r\n\t\t\tthis._storedCSS = {\r\n\t\t\t\twidth: this.currentItem[ 0 ].style.width,\r\n\t\t\t\theight: this.currentItem[ 0 ].style.height,\r\n\t\t\t\tposition: this.currentItem.css( \"position\" ),\r\n\t\t\t\ttop: this.currentItem.css( \"top\" ),\r\n\t\t\t\tleft: this.currentItem.css( \"left\" )\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif ( !helper[ 0 ].style.width || o.forceHelperSize ) {\r\n\t\t\thelper.width( this.currentItem.width() );\r\n\t\t}\r\n\t\tif ( !helper[ 0 ].style.height || o.forceHelperSize ) {\r\n\t\t\thelper.height( this.currentItem.height() );\r\n\t\t}\r\n\r\n\t\treturn helper;\r\n\r\n\t},\r\n\r\n\t_adjustOffsetFromHelper: function( obj ) {\r\n\t\tif ( typeof obj === \"string\" ) {\r\n\t\t\tobj = obj.split( \" \" );\r\n\t\t}\r\n\t\tif ( $.isArray( obj ) ) {\r\n\t\t\tobj = { left: +obj[ 0 ], top: +obj[ 1 ] || 0 };\r\n\t\t}\r\n\t\tif ( \"left\" in obj ) {\r\n\t\t\tthis.offset.click.left = obj.left + this.margins.left;\r\n\t\t}\r\n\t\tif ( \"right\" in obj ) {\r\n\t\t\tthis.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;\r\n\t\t}\r\n\t\tif ( \"top\" in obj ) {\r\n\t\t\tthis.offset.click.top = obj.top + this.margins.top;\r\n\t\t}\r\n\t\tif ( \"bottom\" in obj ) {\r\n\t\t\tthis.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;\r\n\t\t}\r\n\t},\r\n\r\n\t_getParentOffset: function() {\r\n\r\n\t\t//Get the offsetParent and cache its position\r\n\t\tthis.offsetParent = this.helper.offsetParent();\r\n\t\tvar po = this.offsetParent.offset();\r\n\r\n\t\t// This is a special case where we need to modify a offset calculated on start, since the\r\n\t\t// following happened:\r\n\t\t// 1. The position of the helper is absolute, so it's position is calculated based on the\r\n\t\t// next positioned parent\r\n\t\t// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't\r\n\t\t// the document, which means that the scroll is included in the initial calculation of the\r\n\t\t// offset of the parent, and never recalculated upon drag\r\n\t\tif ( this.cssPosition === \"absolute\" && this.scrollParent[ 0 ] !== this.document[ 0 ] &&\r\n\t\t\t\t$.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) {\r\n\t\t\tpo.left += this.scrollParent.scrollLeft();\r\n\t\t\tpo.top += this.scrollParent.scrollTop();\r\n\t\t}\r\n\r\n\t\t// This needs to be actually done for all browsers, since pageX/pageY includes this\r\n\t\t// information with an ugly IE fix\r\n\t\tif ( this.offsetParent[ 0 ] === this.document[ 0 ].body ||\r\n\t\t\t\t( this.offsetParent[ 0 ].tagName &&\r\n\t\t\t\tthis.offsetParent[ 0 ].tagName.toLowerCase() === \"html\" && $.ui.ie ) ) {\r\n\t\t\tpo = { top: 0, left: 0 };\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: po.top + ( parseInt( this.offsetParent.css( \"borderTopWidth\" ), 10 ) || 0 ),\r\n\t\t\tleft: po.left + ( parseInt( this.offsetParent.css( \"borderLeftWidth\" ), 10 ) || 0 )\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t_getRelativeOffset: function() {\r\n\r\n\t\tif ( this.cssPosition === \"relative\" ) {\r\n\t\t\tvar p = this.currentItem.position();\r\n\t\t\treturn {\r\n\t\t\t\ttop: p.top - ( parseInt( this.helper.css( \"top\" ), 10 ) || 0 ) +\r\n\t\t\t\t\tthis.scrollParent.scrollTop(),\r\n\t\t\t\tleft: p.left - ( parseInt( this.helper.css( \"left\" ), 10 ) || 0 ) +\r\n\t\t\t\t\tthis.scrollParent.scrollLeft()\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn { top: 0, left: 0 };\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_cacheMargins: function() {\r\n\t\tthis.margins = {\r\n\t\t\tleft: ( parseInt( this.currentItem.css( \"marginLeft\" ), 10 ) || 0 ),\r\n\t\t\ttop: ( parseInt( this.currentItem.css( \"marginTop\" ), 10 ) || 0 )\r\n\t\t};\r\n\t},\r\n\r\n\t_cacheHelperProportions: function() {\r\n\t\tthis.helperProportions = {\r\n\t\t\twidth: this.helper.outerWidth(),\r\n\t\t\theight: this.helper.outerHeight()\r\n\t\t};\r\n\t},\r\n\r\n\t_setContainment: function() {\r\n\r\n\t\tvar ce, co, over,\r\n\t\t\to = this.options;\r\n\t\tif ( o.containment === \"parent\" ) {\r\n\t\t\to.containment = this.helper[ 0 ].parentNode;\r\n\t\t}\r\n\t\tif ( o.containment === \"document\" || o.containment === \"window\" ) {\r\n\t\t\tthis.containment = [\r\n\t\t\t\t0 - this.offset.relative.left - this.offset.parent.left,\r\n\t\t\t\t0 - this.offset.relative.top - this.offset.parent.top,\r\n\t\t\t\to.containment === \"document\" ?\r\n\t\t\t\t\tthis.document.width() :\r\n\t\t\t\t\tthis.window.width() - this.helperProportions.width - this.margins.left,\r\n\t\t\t\t( o.containment === \"document\" ?\r\n\t\t\t\t\t( this.document.height() || document.body.parentNode.scrollHeight ) :\r\n\t\t\t\t\tthis.window.height() || this.document[ 0 ].body.parentNode.scrollHeight\r\n\t\t\t\t) - this.helperProportions.height - this.margins.top\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\tif ( !( /^(document|window|parent)$/ ).test( o.containment ) ) {\r\n\t\t\tce = $( o.containment )[ 0 ];\r\n\t\t\tco = $( o.containment ).offset();\r\n\t\t\tover = ( $( ce ).css( \"overflow\" ) !== \"hidden\" );\r\n\r\n\t\t\tthis.containment = [\r\n\t\t\t\tco.left + ( parseInt( $( ce ).css( \"borderLeftWidth\" ), 10 ) || 0 ) +\r\n\t\t\t\t\t( parseInt( $( ce ).css( \"paddingLeft\" ), 10 ) || 0 ) - this.margins.left,\r\n\t\t\t\tco.top + ( parseInt( $( ce ).css( \"borderTopWidth\" ), 10 ) || 0 ) +\r\n\t\t\t\t\t( parseInt( $( ce ).css( \"paddingTop\" ), 10 ) || 0 ) - this.margins.top,\r\n\t\t\t\tco.left + ( over ? Math.max( ce.scrollWidth, ce.offsetWidth ) : ce.offsetWidth ) -\r\n\t\t\t\t\t( parseInt( $( ce ).css( \"borderLeftWidth\" ), 10 ) || 0 ) -\r\n\t\t\t\t\t( parseInt( $( ce ).css( \"paddingRight\" ), 10 ) || 0 ) -\r\n\t\t\t\t\tthis.helperProportions.width - this.margins.left,\r\n\t\t\t\tco.top + ( over ? Math.max( ce.scrollHeight, ce.offsetHeight ) : ce.offsetHeight ) -\r\n\t\t\t\t\t( parseInt( $( ce ).css( \"borderTopWidth\" ), 10 ) || 0 ) -\r\n\t\t\t\t\t( parseInt( $( ce ).css( \"paddingBottom\" ), 10 ) || 0 ) -\r\n\t\t\t\t\tthis.helperProportions.height - this.margins.top\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_convertPositionTo: function( d, pos ) {\r\n\r\n\t\tif ( !pos ) {\r\n\t\t\tpos = this.position;\r\n\t\t}\r\n\t\tvar mod = d === \"absolute\" ? 1 : -1,\r\n\t\t\tscroll = this.cssPosition === \"absolute\" &&\r\n\t\t\t\t!( this.scrollParent[ 0 ] !== this.document[ 0 ] &&\r\n\t\t\t\t$.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) ?\r\n\t\t\t\t\tthis.offsetParent :\r\n\t\t\t\t\tthis.scrollParent,\r\n\t\t\tscrollIsRootNode = ( /(html|body)/i ).test( scroll[ 0 ].tagName );\r\n\r\n\t\treturn {\r\n\t\t\ttop: (\r\n\r\n\t\t\t\t// The absolute mouse position\r\n\t\t\t\tpos.top\t+\r\n\r\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.relative.top * mod +\r\n\r\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\tthis.offset.parent.top * mod -\r\n\t\t\t\t( ( this.cssPosition === \"fixed\" ?\r\n\t\t\t\t\t-this.scrollParent.scrollTop() :\r\n\t\t\t\t\t( scrollIsRootNode ? 0 : scroll.scrollTop() ) ) * mod )\r\n\t\t\t),\r\n\t\t\tleft: (\r\n\r\n\t\t\t\t// The absolute mouse position\r\n\t\t\t\tpos.left +\r\n\r\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.relative.left * mod +\r\n\r\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\tthis.offset.parent.left * mod\t-\r\n\t\t\t\t( ( this.cssPosition === \"fixed\" ?\r\n\t\t\t\t\t-this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 :\r\n\t\t\t\t\tscroll.scrollLeft() ) * mod )\r\n\t\t\t)\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t_generatePosition: function( event ) {\r\n\r\n\t\tvar top, left,\r\n\t\t\to = this.options,\r\n\t\t\tpageX = event.pageX,\r\n\t\t\tpageY = event.pageY,\r\n\t\t\tscroll = this.cssPosition === \"absolute\" &&\r\n\t\t\t\t!( this.scrollParent[ 0 ] !== this.document[ 0 ] &&\r\n\t\t\t\t$.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) ?\r\n\t\t\t\t\tthis.offsetParent :\r\n\t\t\t\t\tthis.scrollParent,\r\n\t\t\t\tscrollIsRootNode = ( /(html|body)/i ).test( scroll[ 0 ].tagName );\r\n\r\n\t\t// This is another very weird special case that only happens for relative elements:\r\n\t\t// 1. If the css position is relative\r\n\t\t// 2. and the scroll parent is the document or similar to the offset parent\r\n\t\t// we have to refresh the relative offset during the scroll so there are no jumps\r\n\t\tif ( this.cssPosition === \"relative\" && !( this.scrollParent[ 0 ] !== this.document[ 0 ] &&\r\n\t\t\t\tthis.scrollParent[ 0 ] !== this.offsetParent[ 0 ] ) ) {\r\n\t\t\tthis.offset.relative = this._getRelativeOffset();\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * - Position constraining -\r\n\t\t * Constrain the position to a mix of grid, containment.\r\n\t\t */\r\n\r\n\t\tif ( this.originalPosition ) { //If we are not dragging yet, we won't check for options\r\n\r\n\t\t\tif ( this.containment ) {\r\n\t\t\t\tif ( event.pageX - this.offset.click.left < this.containment[ 0 ] ) {\r\n\t\t\t\t\tpageX = this.containment[ 0 ] + this.offset.click.left;\r\n\t\t\t\t}\r\n\t\t\t\tif ( event.pageY - this.offset.click.top < this.containment[ 1 ] ) {\r\n\t\t\t\t\tpageY = this.containment[ 1 ] + this.offset.click.top;\r\n\t\t\t\t}\r\n\t\t\t\tif ( event.pageX - this.offset.click.left > this.containment[ 2 ] ) {\r\n\t\t\t\t\tpageX = this.containment[ 2 ] + this.offset.click.left;\r\n\t\t\t\t}\r\n\t\t\t\tif ( event.pageY - this.offset.click.top > this.containment[ 3 ] ) {\r\n\t\t\t\t\tpageY = this.containment[ 3 ] + this.offset.click.top;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( o.grid ) {\r\n\t\t\t\ttop = this.originalPageY + Math.round( ( pageY - this.originalPageY ) /\r\n\t\t\t\t\to.grid[ 1 ] ) * o.grid[ 1 ];\r\n\t\t\t\tpageY = this.containment ?\r\n\t\t\t\t\t( ( top - this.offset.click.top >= this.containment[ 1 ] &&\r\n\t\t\t\t\t\ttop - this.offset.click.top <= this.containment[ 3 ] ) ?\r\n\t\t\t\t\t\t\ttop :\r\n\t\t\t\t\t\t\t( ( top - this.offset.click.top >= this.containment[ 1 ] ) ?\r\n\t\t\t\t\t\t\t\ttop - o.grid[ 1 ] : top + o.grid[ 1 ] ) ) :\r\n\t\t\t\t\t\t\t\ttop;\r\n\r\n\t\t\t\tleft = this.originalPageX + Math.round( ( pageX - this.originalPageX ) /\r\n\t\t\t\t\to.grid[ 0 ] ) * o.grid[ 0 ];\r\n\t\t\t\tpageX = this.containment ?\r\n\t\t\t\t\t( ( left - this.offset.click.left >= this.containment[ 0 ] &&\r\n\t\t\t\t\t\tleft - this.offset.click.left <= this.containment[ 2 ] ) ?\r\n\t\t\t\t\t\t\tleft :\r\n\t\t\t\t\t\t\t( ( left - this.offset.click.left >= this.containment[ 0 ] ) ?\r\n\t\t\t\t\t\t\t\tleft - o.grid[ 0 ] : left + o.grid[ 0 ] ) ) :\r\n\t\t\t\t\t\t\t\tleft;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: (\r\n\r\n\t\t\t\t// The absolute mouse position\r\n\t\t\t\tpageY -\r\n\r\n\t\t\t\t// Click offset (relative to the element)\r\n\t\t\t\tthis.offset.click.top -\r\n\r\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.relative.top -\r\n\r\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\tthis.offset.parent.top +\r\n\t\t\t\t( ( this.cssPosition === \"fixed\" ?\r\n\t\t\t\t\t-this.scrollParent.scrollTop() :\r\n\t\t\t\t\t( scrollIsRootNode ? 0 : scroll.scrollTop() ) ) )\r\n\t\t\t),\r\n\t\t\tleft: (\r\n\r\n\t\t\t\t// The absolute mouse position\r\n\t\t\t\tpageX -\r\n\r\n\t\t\t\t// Click offset (relative to the element)\r\n\t\t\t\tthis.offset.click.left -\r\n\r\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\r\n\t\t\t\tthis.offset.relative.left -\r\n\r\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\r\n\t\t\t\tthis.offset.parent.left +\r\n\t\t\t\t( ( this.cssPosition === \"fixed\" ?\r\n\t\t\t\t\t-this.scrollParent.scrollLeft() :\r\n\t\t\t\t\tscrollIsRootNode ? 0 : scroll.scrollLeft() ) )\r\n\t\t\t)\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t_rearrange: function( event, i, a, hardRefresh ) {\r\n\r\n\t\ta ? a[ 0 ].appendChild( this.placeholder[ 0 ] ) :\r\n\t\t\ti.item[ 0 ].parentNode.insertBefore( this.placeholder[ 0 ],\r\n\t\t\t\t( this.direction === \"down\" ? i.item[ 0 ] : i.item[ 0 ].nextSibling ) );\r\n\r\n\t\t//Various things done here to improve the performance:\r\n\t\t// 1. we create a setTimeout, that calls refreshPositions\r\n\t\t// 2. on the instance, we have a counter variable, that get's higher after every append\r\n\t\t// 3. on the local scope, we copy the counter variable, and check in the timeout,\r\n\t\t// if it's still the same\r\n\t\t// 4. this lets only the last addition to the timeout stack through\r\n\t\tthis.counter = this.counter ? ++this.counter : 1;\r\n\t\tvar counter = this.counter;\r\n\r\n\t\tthis._delay( function() {\r\n\t\t\tif ( counter === this.counter ) {\r\n\r\n\t\t\t\t//Precompute after each DOM insertion, NOT on mousemove\r\n\t\t\t\tthis.refreshPositions( !hardRefresh );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\t_clear: function( event, noPropagation ) {\r\n\r\n\t\tthis.reverting = false;\r\n\r\n\t\t// We delay all events that have to be triggered to after the point where the placeholder\r\n\t\t// has been removed and everything else normalized again\r\n\t\tvar i,\r\n\t\t\tdelayedTriggers = [];\r\n\r\n\t\t// We first have to update the dom position of the actual currentItem\r\n\t\t// Note: don't do it if the current item is already removed (by a user), or it gets\r\n\t\t// reappended (see #4088)\r\n\t\tif ( !this._noFinalSort && this.currentItem.parent().length ) {\r\n\t\t\tthis.placeholder.before( this.currentItem );\r\n\t\t}\r\n\t\tthis._noFinalSort = null;\r\n\r\n\t\tif ( this.helper[ 0 ] === this.currentItem[ 0 ] ) {\r\n\t\t\tfor ( i in this._storedCSS ) {\r\n\t\t\t\tif ( this._storedCSS[ i ] === \"auto\" || this._storedCSS[ i ] === \"static\" ) {\r\n\t\t\t\t\tthis._storedCSS[ i ] = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.currentItem.css( this._storedCSS );\r\n\t\t\tthis._removeClass( this.currentItem, \"ui-sortable-helper\" );\r\n\t\t} else {\r\n\t\t\tthis.currentItem.show();\r\n\t\t}\r\n\r\n\t\tif ( this.fromOutside && !noPropagation ) {\r\n\t\t\tdelayedTriggers.push( function( event ) {\r\n\t\t\t\tthis._trigger( \"receive\", event, this._uiHash( this.fromOutside ) );\r\n\t\t\t} );\r\n\t\t}\r\n\t\tif ( ( this.fromOutside ||\r\n\t\t\t\tthis.domPosition.prev !==\r\n\t\t\t\tthis.currentItem.prev().not( \".ui-sortable-helper\" )[ 0 ] ||\r\n\t\t\t\tthis.domPosition.parent !== this.currentItem.parent()[ 0 ] ) && !noPropagation ) {\r\n\r\n\t\t\t// Trigger update callback if the DOM position has changed\r\n\t\t\tdelayedTriggers.push( function( event ) {\r\n\t\t\t\tthis._trigger( \"update\", event, this._uiHash() );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// Check if the items Container has Changed and trigger appropriate\r\n\t\t// events.\r\n\t\tif ( this !== this.currentContainer ) {\r\n\t\t\tif ( !noPropagation ) {\r\n\t\t\t\tdelayedTriggers.push( function( event ) {\r\n\t\t\t\t\tthis._trigger( \"remove\", event, this._uiHash() );\r\n\t\t\t\t} );\r\n\t\t\t\tdelayedTriggers.push( ( function( c ) {\r\n\t\t\t\t\treturn function( event ) {\r\n\t\t\t\t\t\tc._trigger( \"receive\", event, this._uiHash( this ) );\r\n\t\t\t\t\t};\r\n\t\t\t\t} ).call( this, this.currentContainer ) );\r\n\t\t\t\tdelayedTriggers.push( ( function( c ) {\r\n\t\t\t\t\treturn function( event ) {\r\n\t\t\t\t\t\tc._trigger( \"update\", event, this._uiHash( this ) );\r\n\t\t\t\t\t};\r\n\t\t\t\t} ).call( this, this.currentContainer ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Post events to containers\r\n\t\tfunction delayEvent( type, instance, container ) {\r\n\t\t\treturn function( event ) {\r\n\t\t\t\tcontainer._trigger( type, event, instance._uiHash( instance ) );\r\n\t\t\t};\r\n\t\t}\r\n\t\tfor ( i = this.containers.length - 1; i >= 0; i-- ) {\r\n\t\t\tif ( !noPropagation ) {\r\n\t\t\t\tdelayedTriggers.push( delayEvent( \"deactivate\", this, this.containers[ i ] ) );\r\n\t\t\t}\r\n\t\t\tif ( this.containers[ i ].containerCache.over ) {\r\n\t\t\t\tdelayedTriggers.push( delayEvent( \"out\", this, this.containers[ i ] ) );\r\n\t\t\t\tthis.containers[ i ].containerCache.over = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Do what was originally in plugins\r\n\t\tif ( this.storedCursor ) {\r\n\t\t\tthis.document.find( \"body\" ).css( \"cursor\", this.storedCursor );\r\n\t\t\tthis.storedStylesheet.remove();\r\n\t\t}\r\n\t\tif ( this._storedOpacity ) {\r\n\t\t\tthis.helper.css( \"opacity\", this._storedOpacity );\r\n\t\t}\r\n\t\tif ( this._storedZIndex ) {\r\n\t\t\tthis.helper.css( \"zIndex\", this._storedZIndex === \"auto\" ? \"\" : this._storedZIndex );\r\n\t\t}\r\n\r\n\t\tthis.dragging = false;\r\n\r\n\t\tif ( !noPropagation ) {\r\n\t\t\tthis._trigger( \"beforeStop\", event, this._uiHash() );\r\n\t\t}\r\n\r\n\t\t//$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately,\r\n\t\t// it unbinds ALL events from the original node!\r\n\t\tthis.placeholder[ 0 ].parentNode.removeChild( this.placeholder[ 0 ] );\r\n\r\n\t\tif ( !this.cancelHelperRemoval ) {\r\n\t\t\tif ( this.helper[ 0 ] !== this.currentItem[ 0 ] ) {\r\n\t\t\t\tthis.helper.remove();\r\n\t\t\t}\r\n\t\t\tthis.helper = null;\r\n\t\t}\r\n\r\n\t\tif ( !noPropagation ) {\r\n\t\t\tfor ( i = 0; i < delayedTriggers.length; i++ ) {\r\n\r\n\t\t\t\t// Trigger all delayed events\r\n\t\t\t\tdelayedTriggers[ i ].call( this, event );\r\n\t\t\t}\r\n\t\t\tthis._trigger( \"stop\", event, this._uiHash() );\r\n\t\t}\r\n\r\n\t\tthis.fromOutside = false;\r\n\t\treturn !this.cancelHelperRemoval;\r\n\r\n\t},\r\n\r\n\t_trigger: function() {\r\n\t\tif ( $.Widget.prototype._trigger.apply( this, arguments ) === false ) {\r\n\t\t\tthis.cancel();\r\n\t\t}\r\n\t},\r\n\r\n\t_uiHash: function( _inst ) {\r\n\t\tvar inst = _inst || this;\r\n\t\treturn {\r\n\t\t\thelper: inst.helper,\r\n\t\t\tplaceholder: inst.placeholder || $( [] ),\r\n\t\t\tposition: inst.position,\r\n\t\t\toriginalPosition: inst.originalPosition,\r\n\t\t\toffset: inst.positionAbs,\r\n\t\t\titem: inst.currentItem,\r\n\t\t\tsender: _inst ? _inst.element : null\r\n\t\t};\r\n\t}\r\n\r\n} );\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/spinner.js":"/*!\r\n * jQuery UI Spinner 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Spinner\r\n//>>group: Widgets\r\n//>>description: Displays buttons to easily input numbers via the keyboard or mouse.\r\n//>>docs: http://api.jqueryui.com/spinner/\r\n//>>demos: http://jqueryui.com/spinner/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/spinner.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"./button\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../keycode\",\r\n\t\t\t\"../safe-active-element\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\nfunction spinnerModifer( fn ) {\r\n\treturn function() {\r\n\t\tvar previous = this.element.val();\r\n\t\tfn.apply( this, arguments );\r\n\t\tthis._refresh();\r\n\t\tif ( previous !== this.element.val() ) {\r\n\t\t\tthis._trigger( \"change\" );\r\n\t\t}\r\n\t};\r\n}\r\n\r\n$.widget( \"ui.spinner\", {\r\n\tversion: \"1.12.1\",\r\n\tdefaultElement: \"<input>\",\r\n\twidgetEventPrefix: \"spin\",\r\n\toptions: {\r\n\t\tclasses: {\r\n\t\t\t\"ui-spinner\": \"ui-corner-all\",\r\n\t\t\t\"ui-spinner-down\": \"ui-corner-br\",\r\n\t\t\t\"ui-spinner-up\": \"ui-corner-tr\"\r\n\t\t},\r\n\t\tculture: null,\r\n\t\ticons: {\r\n\t\t\tdown: \"ui-icon-triangle-1-s\",\r\n\t\t\tup: \"ui-icon-triangle-1-n\"\r\n\t\t},\r\n\t\tincremental: true,\r\n\t\tmax: null,\r\n\t\tmin: null,\r\n\t\tnumberFormat: null,\r\n\t\tpage: 10,\r\n\t\tstep: 1,\r\n\r\n\t\tchange: null,\r\n\t\tspin: null,\r\n\t\tstart: null,\r\n\t\tstop: null\r\n\t},\r\n\r\n\t_create: function() {\r\n\r\n\t\t// handle string values that need to be parsed\r\n\t\tthis._setOption( \"max\", this.options.max );\r\n\t\tthis._setOption( \"min\", this.options.min );\r\n\t\tthis._setOption( \"step\", this.options.step );\r\n\r\n\t\t// Only format if there is a value, prevents the field from being marked\r\n\t\t// as invalid in Firefox, see #9573.\r\n\t\tif ( this.value() !== \"\" ) {\r\n\r\n\t\t\t// Format the value, but don't constrain.\r\n\t\t\tthis._value( this.element.val(), true );\r\n\t\t}\r\n\r\n\t\tthis._draw();\r\n\t\tthis._on( this._events );\r\n\t\tthis._refresh();\r\n\r\n\t\t// Turning off autocomplete prevents the browser from remembering the\r\n\t\t// value when navigating through history, so we re-enable autocomplete\r\n\t\t// if the page is unloaded before the widget is destroyed. #7790\r\n\t\tthis._on( this.window, {\r\n\t\t\tbeforeunload: function() {\r\n\t\t\t\tthis.element.removeAttr( \"autocomplete\" );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\t_getCreateOptions: function() {\r\n\t\tvar options = this._super();\r\n\t\tvar element = this.element;\r\n\r\n\t\t$.each( [ \"min\", \"max\", \"step\" ], function( i, option ) {\r\n\t\t\tvar value = element.attr( option );\r\n\t\t\tif ( value != null && value.length ) {\r\n\t\t\t\toptions[ option ] = value;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn options;\r\n\t},\r\n\r\n\t_events: {\r\n\t\tkeydown: function( event ) {\r\n\t\t\tif ( this._start( event ) && this._keydown( event ) ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\t\tkeyup: \"_stop\",\r\n\t\tfocus: function() {\r\n\t\t\tthis.previous = this.element.val();\r\n\t\t},\r\n\t\tblur: function( event ) {\r\n\t\t\tif ( this.cancelBlur ) {\r\n\t\t\t\tdelete this.cancelBlur;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._stop();\r\n\t\t\tthis._refresh();\r\n\t\t\tif ( this.previous !== this.element.val() ) {\r\n\t\t\t\tthis._trigger( \"change\", event );\r\n\t\t\t}\r\n\t\t},\r\n\t\tmousewheel: function( event, delta ) {\r\n\t\t\tif ( !delta ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ( !this.spinning && !this._start( event ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tthis._spin( ( delta > 0 ? 1 : -1 ) * this.options.step, event );\r\n\t\t\tclearTimeout( this.mousewheelTimer );\r\n\t\t\tthis.mousewheelTimer = this._delay( function() {\r\n\t\t\t\tif ( this.spinning ) {\r\n\t\t\t\t\tthis._stop( event );\r\n\t\t\t\t}\r\n\t\t\t}, 100 );\r\n\t\t\tevent.preventDefault();\r\n\t\t},\r\n\t\t\"mousedown .ui-spinner-button\": function( event ) {\r\n\t\t\tvar previous;\r\n\r\n\t\t\t// We never want the buttons to have focus; whenever the user is\r\n\t\t\t// interacting with the spinner, the focus should be on the input.\r\n\t\t\t// If the input is focused then this.previous is properly set from\r\n\t\t\t// when the input first received focus. If the input is not focused\r\n\t\t\t// then we need to set this.previous based on the value before spinning.\r\n\t\t\tprevious = this.element[ 0 ] === $.ui.safeActiveElement( this.document[ 0 ] ) ?\r\n\t\t\t\tthis.previous : this.element.val();\r\n\t\t\tfunction checkFocus() {\r\n\t\t\t\tvar isActive = this.element[ 0 ] === $.ui.safeActiveElement( this.document[ 0 ] );\r\n\t\t\t\tif ( !isActive ) {\r\n\t\t\t\t\tthis.element.trigger( \"focus\" );\r\n\t\t\t\t\tthis.previous = previous;\r\n\r\n\t\t\t\t\t// support: IE\r\n\t\t\t\t\t// IE sets focus asynchronously, so we need to check if focus\r\n\t\t\t\t\t// moved off of the input because the user clicked on the button.\r\n\t\t\t\t\tthis._delay( function() {\r\n\t\t\t\t\t\tthis.previous = previous;\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Ensure focus is on (or stays on) the text field\r\n\t\t\tevent.preventDefault();\r\n\t\t\tcheckFocus.call( this );\r\n\r\n\t\t\t// Support: IE\r\n\t\t\t// IE doesn't prevent moving focus even with event.preventDefault()\r\n\t\t\t// so we set a flag to know when we should ignore the blur event\r\n\t\t\t// and check (again) if focus moved off of the input.\r\n\t\t\tthis.cancelBlur = true;\r\n\t\t\tthis._delay( function() {\r\n\t\t\t\tdelete this.cancelBlur;\r\n\t\t\t\tcheckFocus.call( this );\r\n\t\t\t} );\r\n\r\n\t\t\tif ( this._start( event ) === false ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._repeat( null, $( event.currentTarget )\r\n\t\t\t\t.hasClass( \"ui-spinner-up\" ) ? 1 : -1, event );\r\n\t\t},\r\n\t\t\"mouseup .ui-spinner-button\": \"_stop\",\r\n\t\t\"mouseenter .ui-spinner-button\": function( event ) {\r\n\r\n\t\t\t// button will add ui-state-active if mouse was down while mouseleave and kept down\r\n\t\t\tif ( !$( event.currentTarget ).hasClass( \"ui-state-active\" ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( this._start( event ) === false ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis._repeat( null, $( event.currentTarget )\r\n\t\t\t\t.hasClass( \"ui-spinner-up\" ) ? 1 : -1, event );\r\n\t\t},\r\n\r\n\t\t// TODO: do we really want to consider this a stop?\r\n\t\t// shouldn't we just stop the repeater and wait until mouseup before\r\n\t\t// we trigger the stop event?\r\n\t\t\"mouseleave .ui-spinner-button\": \"_stop\"\r\n\t},\r\n\r\n\t// Support mobile enhanced option and make backcompat more sane\r\n\t_enhance: function() {\r\n\t\tthis.uiSpinner = this.element\r\n\t\t\t.attr( \"autocomplete\", \"off\" )\r\n\t\t\t.wrap( \"<span>\" )\r\n\t\t\t.parent()\r\n\r\n\t\t\t\t// Add buttons\r\n\t\t\t\t.append(\r\n\t\t\t\t\t\"<a></a><a></a>\"\r\n\t\t\t\t);\r\n\t},\r\n\r\n\t_draw: function() {\r\n\t\tthis._enhance();\r\n\r\n\t\tthis._addClass( this.uiSpinner, \"ui-spinner\", \"ui-widget ui-widget-content\" );\r\n\t\tthis._addClass( \"ui-spinner-input\" );\r\n\r\n\t\tthis.element.attr( \"role\", \"spinbutton\" );\r\n\r\n\t\t// Button bindings\r\n\t\tthis.buttons = this.uiSpinner.children( \"a\" )\r\n\t\t\t.attr( \"tabIndex\", -1 )\r\n\t\t\t.attr( \"aria-hidden\", true )\r\n\t\t\t.button( {\r\n\t\t\t\tclasses: {\r\n\t\t\t\t\t\"ui-button\": \"\"\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t// TODO: Right now button does not support classes this is already updated in button PR\r\n\t\tthis._removeClass( this.buttons, \"ui-corner-all\" );\r\n\r\n\t\tthis._addClass( this.buttons.first(), \"ui-spinner-button ui-spinner-up\" );\r\n\t\tthis._addClass( this.buttons.last(), \"ui-spinner-button ui-spinner-down\" );\r\n\t\tthis.buttons.first().button( {\r\n\t\t\t\"icon\": this.options.icons.up,\r\n\t\t\t\"showLabel\": false\r\n\t\t} );\r\n\t\tthis.buttons.last().button( {\r\n\t\t\t\"icon\": this.options.icons.down,\r\n\t\t\t\"showLabel\": false\r\n\t\t} );\r\n\r\n\t\t// IE 6 doesn't understand height: 50% for the buttons\r\n\t\t// unless the wrapper has an explicit height\r\n\t\tif ( this.buttons.height() > Math.ceil( this.uiSpinner.height() * 0.5 ) &&\r\n\t\t\t\tthis.uiSpinner.height() > 0 ) {\r\n\t\t\tthis.uiSpinner.height( this.uiSpinner.height() );\r\n\t\t}\r\n\t},\r\n\r\n\t_keydown: function( event ) {\r\n\t\tvar options = this.options,\r\n\t\t\tkeyCode = $.ui.keyCode;\r\n\r\n\t\tswitch ( event.keyCode ) {\r\n\t\tcase keyCode.UP:\r\n\t\t\tthis._repeat( null, 1, event );\r\n\t\t\treturn true;\r\n\t\tcase keyCode.DOWN:\r\n\t\t\tthis._repeat( null, -1, event );\r\n\t\t\treturn true;\r\n\t\tcase keyCode.PAGE_UP:\r\n\t\t\tthis._repeat( null, options.page, event );\r\n\t\t\treturn true;\r\n\t\tcase keyCode.PAGE_DOWN:\r\n\t\t\tthis._repeat( null, -options.page, event );\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t_start: function( event ) {\r\n\t\tif ( !this.spinning && this._trigger( \"start\", event ) === false ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif ( !this.counter ) {\r\n\t\t\tthis.counter = 1;\r\n\t\t}\r\n\t\tthis.spinning = true;\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_repeat: function( i, steps, event ) {\r\n\t\ti = i || 500;\r\n\r\n\t\tclearTimeout( this.timer );\r\n\t\tthis.timer = this._delay( function() {\r\n\t\t\tthis._repeat( 40, steps, event );\r\n\t\t}, i );\r\n\r\n\t\tthis._spin( steps * this.options.step, event );\r\n\t},\r\n\r\n\t_spin: function( step, event ) {\r\n\t\tvar value = this.value() || 0;\r\n\r\n\t\tif ( !this.counter ) {\r\n\t\t\tthis.counter = 1;\r\n\t\t}\r\n\r\n\t\tvalue = this._adjustValue( value + step * this._increment( this.counter ) );\r\n\r\n\t\tif ( !this.spinning || this._trigger( \"spin\", event, { value: value } ) !== false ) {\r\n\t\t\tthis._value( value );\r\n\t\t\tthis.counter++;\r\n\t\t}\r\n\t},\r\n\r\n\t_increment: function( i ) {\r\n\t\tvar incremental = this.options.incremental;\r\n\r\n\t\tif ( incremental ) {\r\n\t\t\treturn $.isFunction( incremental ) ?\r\n\t\t\t\tincremental( i ) :\r\n\t\t\t\tMath.floor( i * i * i / 50000 - i * i / 500 + 17 * i / 200 + 1 );\r\n\t\t}\r\n\r\n\t\treturn 1;\r\n\t},\r\n\r\n\t_precision: function() {\r\n\t\tvar precision = this._precisionOf( this.options.step );\r\n\t\tif ( this.options.min !== null ) {\r\n\t\t\tprecision = Math.max( precision, this._precisionOf( this.options.min ) );\r\n\t\t}\r\n\t\treturn precision;\r\n\t},\r\n\r\n\t_precisionOf: function( num ) {\r\n\t\tvar str = num.toString(),\r\n\t\t\tdecimal = str.indexOf( \".\" );\r\n\t\treturn decimal === -1 ? 0 : str.length - decimal - 1;\r\n\t},\r\n\r\n\t_adjustValue: function( value ) {\r\n\t\tvar base, aboveMin,\r\n\t\t\toptions = this.options;\r\n\r\n\t\t// Make sure we're at a valid step\r\n\t\t// - find out where we are relative to the base (min or 0)\r\n\t\tbase = options.min !== null ? options.min : 0;\r\n\t\taboveMin = value - base;\r\n\r\n\t\t// - round to the nearest step\r\n\t\taboveMin = Math.round( aboveMin / options.step ) * options.step;\r\n\r\n\t\t// - rounding is based on 0, so adjust back to our base\r\n\t\tvalue = base + aboveMin;\r\n\r\n\t\t// Fix precision from bad JS floating point math\r\n\t\tvalue = parseFloat( value.toFixed( this._precision() ) );\r\n\r\n\t\t// Clamp the value\r\n\t\tif ( options.max !== null && value > options.max ) {\r\n\t\t\treturn options.max;\r\n\t\t}\r\n\t\tif ( options.min !== null && value < options.min ) {\r\n\t\t\treturn options.min;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t},\r\n\r\n\t_stop: function( event ) {\r\n\t\tif ( !this.spinning ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tclearTimeout( this.timer );\r\n\t\tclearTimeout( this.mousewheelTimer );\r\n\t\tthis.counter = 0;\r\n\t\tthis.spinning = false;\r\n\t\tthis._trigger( \"stop\", event );\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tvar prevValue, first, last;\r\n\r\n\t\tif ( key === \"culture\" || key === \"numberFormat\" ) {\r\n\t\t\tprevValue = this._parse( this.element.val() );\r\n\t\t\tthis.options[ key ] = value;\r\n\t\t\tthis.element.val( this._format( prevValue ) );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( key === \"max\" || key === \"min\" || key === \"step\" ) {\r\n\t\t\tif ( typeof value === \"string\" ) {\r\n\t\t\t\tvalue = this._parse( value );\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ( key === \"icons\" ) {\r\n\t\t\tfirst = this.buttons.first().find( \".ui-icon\" );\r\n\t\t\tthis._removeClass( first, null, this.options.icons.up );\r\n\t\t\tthis._addClass( first, null, value.up );\r\n\t\t\tlast = this.buttons.last().find( \".ui-icon\" );\r\n\t\t\tthis._removeClass( last, null, this.options.icons.down );\r\n\t\t\tthis._addClass( last, null, value.down );\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\t},\r\n\r\n\t_setOptionDisabled: function( value ) {\r\n\t\tthis._super( value );\r\n\r\n\t\tthis._toggleClass( this.uiSpinner, null, \"ui-state-disabled\", !!value );\r\n\t\tthis.element.prop( \"disabled\", !!value );\r\n\t\tthis.buttons.button( value ? \"disable\" : \"enable\" );\r\n\t},\r\n\r\n\t_setOptions: spinnerModifer( function( options ) {\r\n\t\tthis._super( options );\r\n\t} ),\r\n\r\n\t_parse: function( val ) {\r\n\t\tif ( typeof val === \"string\" && val !== \"\" ) {\r\n\t\t\tval = window.Globalize && this.options.numberFormat ?\r\n\t\t\t\tGlobalize.parseFloat( val, 10, this.options.culture ) : +val;\r\n\t\t}\r\n\t\treturn val === \"\" || isNaN( val ) ? null : val;\r\n\t},\r\n\r\n\t_format: function( value ) {\r\n\t\tif ( value === \"\" ) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\treturn window.Globalize && this.options.numberFormat ?\r\n\t\t\tGlobalize.format( value, this.options.numberFormat, this.options.culture ) :\r\n\t\t\tvalue;\r\n\t},\r\n\r\n\t_refresh: function() {\r\n\t\tthis.element.attr( {\r\n\t\t\t\"aria-valuemin\": this.options.min,\r\n\t\t\t\"aria-valuemax\": this.options.max,\r\n\r\n\t\t\t// TODO: what should we do with values that can't be parsed?\r\n\t\t\t\"aria-valuenow\": this._parse( this.element.val() )\r\n\t\t} );\r\n\t},\r\n\r\n\tisValid: function() {\r\n\t\tvar value = this.value();\r\n\r\n\t\t// Null is invalid\r\n\t\tif ( value === null ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If value gets adjusted, it's invalid\r\n\t\treturn value === this._adjustValue( value );\r\n\t},\r\n\r\n\t// Update the value without triggering change\r\n\t_value: function( value, allowAny ) {\r\n\t\tvar parsed;\r\n\t\tif ( value !== \"\" ) {\r\n\t\t\tparsed = this._parse( value );\r\n\t\t\tif ( parsed !== null ) {\r\n\t\t\t\tif ( !allowAny ) {\r\n\t\t\t\t\tparsed = this._adjustValue( parsed );\r\n\t\t\t\t}\r\n\t\t\t\tvalue = this._format( parsed );\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.element.val( value );\r\n\t\tthis._refresh();\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis.element\r\n\t\t\t.prop( \"disabled\", false )\r\n\t\t\t.removeAttr( \"autocomplete role aria-valuemin aria-valuemax aria-valuenow\" );\r\n\r\n\t\tthis.uiSpinner.replaceWith( this.element );\r\n\t},\r\n\r\n\tstepUp: spinnerModifer( function( steps ) {\r\n\t\tthis._stepUp( steps );\r\n\t} ),\r\n\t_stepUp: function( steps ) {\r\n\t\tif ( this._start() ) {\r\n\t\t\tthis._spin( ( steps || 1 ) * this.options.step );\r\n\t\t\tthis._stop();\r\n\t\t}\r\n\t},\r\n\r\n\tstepDown: spinnerModifer( function( steps ) {\r\n\t\tthis._stepDown( steps );\r\n\t} ),\r\n\t_stepDown: function( steps ) {\r\n\t\tif ( this._start() ) {\r\n\t\t\tthis._spin( ( steps || 1 ) * -this.options.step );\r\n\t\t\tthis._stop();\r\n\t\t}\r\n\t},\r\n\r\n\tpageUp: spinnerModifer( function( pages ) {\r\n\t\tthis._stepUp( ( pages || 1 ) * this.options.page );\r\n\t} ),\r\n\r\n\tpageDown: spinnerModifer( function( pages ) {\r\n\t\tthis._stepDown( ( pages || 1 ) * this.options.page );\r\n\t} ),\r\n\r\n\tvalue: function( newVal ) {\r\n\t\tif ( !arguments.length ) {\r\n\t\t\treturn this._parse( this.element.val() );\r\n\t\t}\r\n\t\tspinnerModifer( this._value ).call( this, newVal );\r\n\t},\r\n\r\n\twidget: function() {\r\n\t\treturn this.uiSpinner;\r\n\t}\r\n} );\r\n\r\n// DEPRECATED\r\n// TODO: switch return back to widget declaration at top of file when this is removed\r\nif ( $.uiBackCompat !== false ) {\r\n\r\n\t// Backcompat for spinner html extension points\r\n\t$.widget( \"ui.spinner\", $.ui.spinner, {\r\n\t\t_enhance: function() {\r\n\t\t\tthis.uiSpinner = this.element\r\n\t\t\t\t.attr( \"autocomplete\", \"off\" )\r\n\t\t\t\t.wrap( this._uiSpinnerHtml() )\r\n\t\t\t\t.parent()\r\n\r\n\t\t\t\t\t// Add buttons\r\n\t\t\t\t\t.append( this._buttonHtml() );\r\n\t\t},\r\n\t\t_uiSpinnerHtml: function() {\r\n\t\t\treturn \"<span>\";\r\n\t\t},\r\n\r\n\t\t_buttonHtml: function() {\r\n\t\t\treturn \"<a></a><a></a>\";\r\n\t\t}\r\n\t} );\r\n}\r\n\r\nreturn $.ui.spinner;\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/tabs.js":"/*!\r\n * jQuery UI Tabs 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Tabs\r\n//>>group: Widgets\r\n//>>description: Transforms a set of container elements into a tab structure.\r\n//>>docs: http://api.jqueryui.com/tabs/\r\n//>>demos: http://jqueryui.com/tabs/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/tabs.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"../escape-selector\",\r\n\t\t\t\"../keycode\",\r\n\t\t\t\"../safe-active-element\",\r\n\t\t\t\"../unique-id\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\n$.widget( \"ui.tabs\", {\r\n\tversion: \"1.12.1\",\r\n\tdelay: 300,\r\n\toptions: {\r\n\t\tactive: null,\r\n\t\tclasses: {\r\n\t\t\t\"ui-tabs\": \"ui-corner-all\",\r\n\t\t\t\"ui-tabs-nav\": \"ui-corner-all\",\r\n\t\t\t\"ui-tabs-panel\": \"ui-corner-bottom\",\r\n\t\t\t\"ui-tabs-tab\": \"ui-corner-top\"\r\n\t\t},\r\n\t\tcollapsible: false,\r\n\t\tevent: \"click\",\r\n\t\theightStyle: \"content\",\r\n\t\thide: null,\r\n\t\tshow: null,\r\n\r\n\t\t// Callbacks\r\n\t\tactivate: null,\r\n\t\tbeforeActivate: null,\r\n\t\tbeforeLoad: null,\r\n\t\tload: null\r\n\t},\r\n\r\n\t_isLocal: ( function() {\r\n\t\tvar rhash = /#.*$/;\r\n\r\n\t\treturn function( anchor ) {\r\n\t\t\tvar anchorUrl, locationUrl;\r\n\r\n\t\t\tanchorUrl = anchor.href.replace( rhash, \"\" );\r\n\t\t\tlocationUrl = location.href.replace( rhash, \"\" );\r\n\r\n\t\t\t// Decoding may throw an error if the URL isn't UTF-8 (#9518)\r\n\t\t\ttry {\r\n\t\t\t\tanchorUrl = decodeURIComponent( anchorUrl );\r\n\t\t\t} catch ( error ) {}\r\n\t\t\ttry {\r\n\t\t\t\tlocationUrl = decodeURIComponent( locationUrl );\r\n\t\t\t} catch ( error ) {}\r\n\r\n\t\t\treturn anchor.hash.length > 1 && anchorUrl === locationUrl;\r\n\t\t};\r\n\t} )(),\r\n\r\n\t_create: function() {\r\n\t\tvar that = this,\r\n\t\t\toptions = this.options;\r\n\r\n\t\tthis.running = false;\r\n\r\n\t\tthis._addClass( \"ui-tabs\", \"ui-widget ui-widget-content\" );\r\n\t\tthis._toggleClass( \"ui-tabs-collapsible\", null, options.collapsible );\r\n\r\n\t\tthis._processTabs();\r\n\t\toptions.active = this._initialActive();\r\n\r\n\t\t// Take disabling tabs via class attribute from HTML\r\n\t\t// into account and update option properly.\r\n\t\tif ( $.isArray( options.disabled ) ) {\r\n\t\t\toptions.disabled = $.unique( options.disabled.concat(\r\n\t\t\t\t$.map( this.tabs.filter( \".ui-state-disabled\" ), function( li ) {\r\n\t\t\t\t\treturn that.tabs.index( li );\r\n\t\t\t\t} )\r\n\t\t\t) ).sort();\r\n\t\t}\r\n\r\n\t\t// Check for length avoids error when initializing empty list\r\n\t\tif ( this.options.active !== false && this.anchors.length ) {\r\n\t\t\tthis.active = this._findActive( options.active );\r\n\t\t} else {\r\n\t\t\tthis.active = $();\r\n\t\t}\r\n\r\n\t\tthis._refresh();\r\n\r\n\t\tif ( this.active.length ) {\r\n\t\t\tthis.load( options.active );\r\n\t\t}\r\n\t},\r\n\r\n\t_initialActive: function() {\r\n\t\tvar active = this.options.active,\r\n\t\t\tcollapsible = this.options.collapsible,\r\n\t\t\tlocationHash = location.hash.substring( 1 );\r\n\r\n\t\tif ( active === null ) {\r\n\r\n\t\t\t// check the fragment identifier in the URL\r\n\t\t\tif ( locationHash ) {\r\n\t\t\t\tthis.tabs.each( function( i, tab ) {\r\n\t\t\t\t\tif ( $( tab ).attr( \"aria-controls\" ) === locationHash ) {\r\n\t\t\t\t\t\tactive = i;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\t// Check for a tab marked active via a class\r\n\t\t\tif ( active === null ) {\r\n\t\t\t\tactive = this.tabs.index( this.tabs.filter( \".ui-tabs-active\" ) );\r\n\t\t\t}\r\n\r\n\t\t\t// No active tab, set to false\r\n\t\t\tif ( active === null || active === -1 ) {\r\n\t\t\t\tactive = this.tabs.length ? 0 : false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Handle numbers: negative, out of range\r\n\t\tif ( active !== false ) {\r\n\t\t\tactive = this.tabs.index( this.tabs.eq( active ) );\r\n\t\t\tif ( active === -1 ) {\r\n\t\t\t\tactive = collapsible ? false : 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Don't allow collapsible: false and active: false\r\n\t\tif ( !collapsible && active === false && this.anchors.length ) {\r\n\t\t\tactive = 0;\r\n\t\t}\r\n\r\n\t\treturn active;\r\n\t},\r\n\r\n\t_getCreateEventData: function() {\r\n\t\treturn {\r\n\t\t\ttab: this.active,\r\n\t\t\tpanel: !this.active.length ? $() : this._getPanelForTab( this.active )\r\n\t\t};\r\n\t},\r\n\r\n\t_tabKeydown: function( event ) {\r\n\t\tvar focusedTab = $( $.ui.safeActiveElement( this.document[ 0 ] ) ).closest( \"li\" ),\r\n\t\t\tselectedIndex = this.tabs.index( focusedTab ),\r\n\t\t\tgoingForward = true;\r\n\r\n\t\tif ( this._handlePageNav( event ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch ( event.keyCode ) {\r\n\t\tcase $.ui.keyCode.RIGHT:\r\n\t\tcase $.ui.keyCode.DOWN:\r\n\t\t\tselectedIndex++;\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.UP:\r\n\t\tcase $.ui.keyCode.LEFT:\r\n\t\t\tgoingForward = false;\r\n\t\t\tselectedIndex--;\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.END:\r\n\t\t\tselectedIndex = this.anchors.length - 1;\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.HOME:\r\n\t\t\tselectedIndex = 0;\r\n\t\t\tbreak;\r\n\t\tcase $.ui.keyCode.SPACE:\r\n\r\n\t\t\t// Activate only, no collapsing\r\n\t\t\tevent.preventDefault();\r\n\t\t\tclearTimeout( this.activating );\r\n\t\t\tthis._activate( selectedIndex );\r\n\t\t\treturn;\r\n\t\tcase $.ui.keyCode.ENTER:\r\n\r\n\t\t\t// Toggle (cancel delayed activation, allow collapsing)\r\n\t\t\tevent.preventDefault();\r\n\t\t\tclearTimeout( this.activating );\r\n\r\n\t\t\t// Determine if we should collapse or activate\r\n\t\t\tthis._activate( selectedIndex === this.options.active ? false : selectedIndex );\r\n\t\t\treturn;\r\n\t\tdefault:\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Focus the appropriate tab, based on which key was pressed\r\n\t\tevent.preventDefault();\r\n\t\tclearTimeout( this.activating );\r\n\t\tselectedIndex = this._focusNextTab( selectedIndex, goingForward );\r\n\r\n\t\t// Navigating with control/command key will prevent automatic activation\r\n\t\tif ( !event.ctrlKey && !event.metaKey ) {\r\n\r\n\t\t\t// Update aria-selected immediately so that AT think the tab is already selected.\r\n\t\t\t// Otherwise AT may confuse the user by stating that they need to activate the tab,\r\n\t\t\t// but the tab will already be activated by the time the announcement finishes.\r\n\t\t\tfocusedTab.attr( \"aria-selected\", \"false\" );\r\n\t\t\tthis.tabs.eq( selectedIndex ).attr( \"aria-selected\", \"true\" );\r\n\r\n\t\t\tthis.activating = this._delay( function() {\r\n\t\t\t\tthis.option( \"active\", selectedIndex );\r\n\t\t\t}, this.delay );\r\n\t\t}\r\n\t},\r\n\r\n\t_panelKeydown: function( event ) {\r\n\t\tif ( this._handlePageNav( event ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Ctrl+up moves focus to the current tab\r\n\t\tif ( event.ctrlKey && event.keyCode === $.ui.keyCode.UP ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tthis.active.trigger( \"focus\" );\r\n\t\t}\r\n\t},\r\n\r\n\t// Alt+page up/down moves focus to the previous/next tab (and activates)\r\n\t_handlePageNav: function( event ) {\r\n\t\tif ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_UP ) {\r\n\t\t\tthis._activate( this._focusNextTab( this.options.active - 1, false ) );\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_DOWN ) {\r\n\t\t\tthis._activate( this._focusNextTab( this.options.active + 1, true ) );\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\r\n\t_findNextTab: function( index, goingForward ) {\r\n\t\tvar lastTabIndex = this.tabs.length - 1;\r\n\r\n\t\tfunction constrain() {\r\n\t\t\tif ( index > lastTabIndex ) {\r\n\t\t\t\tindex = 0;\r\n\t\t\t}\r\n\t\t\tif ( index < 0 ) {\r\n\t\t\t\tindex = lastTabIndex;\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t}\r\n\r\n\t\twhile ( $.inArray( constrain(), this.options.disabled ) !== -1 ) {\r\n\t\t\tindex = goingForward ? index + 1 : index - 1;\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\t},\r\n\r\n\t_focusNextTab: function( index, goingForward ) {\r\n\t\tindex = this._findNextTab( index, goingForward );\r\n\t\tthis.tabs.eq( index ).trigger( \"focus\" );\r\n\t\treturn index;\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tif ( key === \"active\" ) {\r\n\r\n\t\t\t// _activate() will handle invalid values and update this.options\r\n\t\t\tthis._activate( value );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\r\n\t\tif ( key === \"collapsible\" ) {\r\n\t\t\tthis._toggleClass( \"ui-tabs-collapsible\", null, value );\r\n\r\n\t\t\t// Setting collapsible: false while collapsed; open first panel\r\n\t\t\tif ( !value && this.options.active === false ) {\r\n\t\t\t\tthis._activate( 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( key === \"event\" ) {\r\n\t\t\tthis._setupEvents( value );\r\n\t\t}\r\n\r\n\t\tif ( key === \"heightStyle\" ) {\r\n\t\t\tthis._setupHeightStyle( value );\r\n\t\t}\r\n\t},\r\n\r\n\t_sanitizeSelector: function( hash ) {\r\n\t\treturn hash ? hash.replace( /[!\"$%&'()*+,.\\/:;<=>?@\\[\\]\\^`{|}~]/g, \"\\\\$&\" ) : \"\";\r\n\t},\r\n\r\n\trefresh: function() {\r\n\t\tvar options = this.options,\r\n\t\t\tlis = this.tablist.children( \":has(a[href])\" );\r\n\r\n\t\t// Get disabled tabs from class attribute from HTML\r\n\t\t// this will get converted to a boolean if needed in _refresh()\r\n\t\toptions.disabled = $.map( lis.filter( \".ui-state-disabled\" ), function( tab ) {\r\n\t\t\treturn lis.index( tab );\r\n\t\t} );\r\n\r\n\t\tthis._processTabs();\r\n\r\n\t\t// Was collapsed or no tabs\r\n\t\tif ( options.active === false || !this.anchors.length ) {\r\n\t\t\toptions.active = false;\r\n\t\t\tthis.active = $();\r\n\r\n\t\t// was active, but active tab is gone\r\n\t\t} else if ( this.active.length && !$.contains( this.tablist[ 0 ], this.active[ 0 ] ) ) {\r\n\r\n\t\t\t// all remaining tabs are disabled\r\n\t\t\tif ( this.tabs.length === options.disabled.length ) {\r\n\t\t\t\toptions.active = false;\r\n\t\t\t\tthis.active = $();\r\n\r\n\t\t\t// activate previous tab\r\n\t\t\t} else {\r\n\t\t\t\tthis._activate( this._findNextTab( Math.max( 0, options.active - 1 ), false ) );\r\n\t\t\t}\r\n\r\n\t\t// was active, active tab still exists\r\n\t\t} else {\r\n\r\n\t\t\t// make sure active index is correct\r\n\t\t\toptions.active = this.tabs.index( this.active );\r\n\t\t}\r\n\r\n\t\tthis._refresh();\r\n\t},\r\n\r\n\t_refresh: function() {\r\n\t\tthis._setOptionDisabled( this.options.disabled );\r\n\t\tthis._setupEvents( this.options.event );\r\n\t\tthis._setupHeightStyle( this.options.heightStyle );\r\n\r\n\t\tthis.tabs.not( this.active ).attr( {\r\n\t\t\t\"aria-selected\": \"false\",\r\n\t\t\t\"aria-expanded\": \"false\",\r\n\t\t\ttabIndex: -1\r\n\t\t} );\r\n\t\tthis.panels.not( this._getPanelForTab( this.active ) )\r\n\t\t\t.hide()\r\n\t\t\t.attr( {\r\n\t\t\t\t\"aria-hidden\": \"true\"\r\n\t\t\t} );\r\n\r\n\t\t// Make sure one tab is in the tab order\r\n\t\tif ( !this.active.length ) {\r\n\t\t\tthis.tabs.eq( 0 ).attr( \"tabIndex\", 0 );\r\n\t\t} else {\r\n\t\t\tthis.active\r\n\t\t\t\t.attr( {\r\n\t\t\t\t\t\"aria-selected\": \"true\",\r\n\t\t\t\t\t\"aria-expanded\": \"true\",\r\n\t\t\t\t\ttabIndex: 0\r\n\t\t\t\t} );\r\n\t\t\tthis._addClass( this.active, \"ui-tabs-active\", \"ui-state-active\" );\r\n\t\t\tthis._getPanelForTab( this.active )\r\n\t\t\t\t.show()\r\n\t\t\t\t.attr( {\r\n\t\t\t\t\t\"aria-hidden\": \"false\"\r\n\t\t\t\t} );\r\n\t\t}\r\n\t},\r\n\r\n\t_processTabs: function() {\r\n\t\tvar that = this,\r\n\t\t\tprevTabs = this.tabs,\r\n\t\t\tprevAnchors = this.anchors,\r\n\t\t\tprevPanels = this.panels;\r\n\r\n\t\tthis.tablist = this._getList().attr( \"role\", \"tablist\" );\r\n\t\tthis._addClass( this.tablist, \"ui-tabs-nav\",\r\n\t\t\t\"ui-helper-reset ui-helper-clearfix ui-widget-header\" );\r\n\r\n\t\t// Prevent users from focusing disabled tabs via click\r\n\t\tthis.tablist\r\n\t\t\t.on( \"mousedown\" + this.eventNamespace, \"> li\", function( event ) {\r\n\t\t\t\tif ( $( this ).is( \".ui-state-disabled\" ) ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t} )\r\n\r\n\t\t\t// Support: IE <9\r\n\t\t\t// Preventing the default action in mousedown doesn't prevent IE\r\n\t\t\t// from focusing the element, so if the anchor gets focused, blur.\r\n\t\t\t// We don't have to worry about focusing the previously focused\r\n\t\t\t// element since clicking on a non-focusable element should focus\r\n\t\t\t// the body anyway.\r\n\t\t\t.on( \"focus\" + this.eventNamespace, \".ui-tabs-anchor\", function() {\r\n\t\t\t\tif ( $( this ).closest( \"li\" ).is( \".ui-state-disabled\" ) ) {\r\n\t\t\t\t\tthis.blur();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\tthis.tabs = this.tablist.find( \"> li:has(a[href])\" )\r\n\t\t\t.attr( {\r\n\t\t\t\trole: \"tab\",\r\n\t\t\t\ttabIndex: -1\r\n\t\t\t} );\r\n\t\tthis._addClass( this.tabs, \"ui-tabs-tab\", \"ui-state-default\" );\r\n\r\n\t\tthis.anchors = this.tabs.map( function() {\r\n\t\t\treturn $( \"a\", this )[ 0 ];\r\n\t\t} )\r\n\t\t\t.attr( {\r\n\t\t\t\trole: \"presentation\",\r\n\t\t\t\ttabIndex: -1\r\n\t\t\t} );\r\n\t\tthis._addClass( this.anchors, \"ui-tabs-anchor\" );\r\n\r\n\t\tthis.panels = $();\r\n\r\n\t\tthis.anchors.each( function( i, anchor ) {\r\n\t\t\tvar selector, panel, panelId,\r\n\t\t\t\tanchorId = $( anchor ).uniqueId().attr( \"id\" ),\r\n\t\t\t\ttab = $( anchor ).closest( \"li\" ),\r\n\t\t\t\toriginalAriaControls = tab.attr( \"aria-controls\" );\r\n\r\n\t\t\t// Inline tab\r\n\t\t\tif ( that._isLocal( anchor ) ) {\r\n\t\t\t\tselector = anchor.hash;\r\n\t\t\t\tpanelId = selector.substring( 1 );\r\n\t\t\t\tpanel = that.element.find( that._sanitizeSelector( selector ) );\r\n\r\n\t\t\t// remote tab\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// If the tab doesn't already have aria-controls,\r\n\t\t\t\t// generate an id by using a throw-away element\r\n\t\t\t\tpanelId = tab.attr( \"aria-controls\" ) || $( {} ).uniqueId()[ 0 ].id;\r\n\t\t\t\tselector = \"#\" + panelId;\r\n\t\t\t\tpanel = that.element.find( selector );\r\n\t\t\t\tif ( !panel.length ) {\r\n\t\t\t\t\tpanel = that._createPanel( panelId );\r\n\t\t\t\t\tpanel.insertAfter( that.panels[ i - 1 ] || that.tablist );\r\n\t\t\t\t}\r\n\t\t\t\tpanel.attr( \"aria-live\", \"polite\" );\r\n\t\t\t}\r\n\r\n\t\t\tif ( panel.length ) {\r\n\t\t\t\tthat.panels = that.panels.add( panel );\r\n\t\t\t}\r\n\t\t\tif ( originalAriaControls ) {\r\n\t\t\t\ttab.data( \"ui-tabs-aria-controls\", originalAriaControls );\r\n\t\t\t}\r\n\t\t\ttab.attr( {\r\n\t\t\t\t\"aria-controls\": panelId,\r\n\t\t\t\t\"aria-labelledby\": anchorId\r\n\t\t\t} );\r\n\t\t\tpanel.attr( \"aria-labelledby\", anchorId );\r\n\t\t} );\r\n\r\n\t\tthis.panels.attr( \"role\", \"tabpanel\" );\r\n\t\tthis._addClass( this.panels, \"ui-tabs-panel\", \"ui-widget-content\" );\r\n\r\n\t\t// Avoid memory leaks (#10056)\r\n\t\tif ( prevTabs ) {\r\n\t\t\tthis._off( prevTabs.not( this.tabs ) );\r\n\t\t\tthis._off( prevAnchors.not( this.anchors ) );\r\n\t\t\tthis._off( prevPanels.not( this.panels ) );\r\n\t\t}\r\n\t},\r\n\r\n\t// Allow overriding how to find the list for rare usage scenarios (#7715)\r\n\t_getList: function() {\r\n\t\treturn this.tablist || this.element.find( \"ol, ul\" ).eq( 0 );\r\n\t},\r\n\r\n\t_createPanel: function( id ) {\r\n\t\treturn $( \"<div>\" )\r\n\t\t\t.attr( \"id\", id )\r\n\t\t\t.data( \"ui-tabs-destroy\", true );\r\n\t},\r\n\r\n\t_setOptionDisabled: function( disabled ) {\r\n\t\tvar currentItem, li, i;\r\n\r\n\t\tif ( $.isArray( disabled ) ) {\r\n\t\t\tif ( !disabled.length ) {\r\n\t\t\t\tdisabled = false;\r\n\t\t\t} else if ( disabled.length === this.anchors.length ) {\r\n\t\t\t\tdisabled = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Disable tabs\r\n\t\tfor ( i = 0; ( li = this.tabs[ i ] ); i++ ) {\r\n\t\t\tcurrentItem = $( li );\r\n\t\t\tif ( disabled === true || $.inArray( i, disabled ) !== -1 ) {\r\n\t\t\t\tcurrentItem.attr( \"aria-disabled\", \"true\" );\r\n\t\t\t\tthis._addClass( currentItem, null, \"ui-state-disabled\" );\r\n\t\t\t} else {\r\n\t\t\t\tcurrentItem.removeAttr( \"aria-disabled\" );\r\n\t\t\t\tthis._removeClass( currentItem, null, \"ui-state-disabled\" );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.options.disabled = disabled;\r\n\r\n\t\tthis._toggleClass( this.widget(), this.widgetFullName + \"-disabled\", null,\r\n\t\t\tdisabled === true );\r\n\t},\r\n\r\n\t_setupEvents: function( event ) {\r\n\t\tvar events = {};\r\n\t\tif ( event ) {\r\n\t\t\t$.each( event.split( \" \" ), function( index, eventName ) {\r\n\t\t\t\tevents[ eventName ] = \"_eventHandler\";\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tthis._off( this.anchors.add( this.tabs ).add( this.panels ) );\r\n\r\n\t\t// Always prevent the default action, even when disabled\r\n\t\tthis._on( true, this.anchors, {\r\n\t\t\tclick: function( event ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t} );\r\n\t\tthis._on( this.anchors, events );\r\n\t\tthis._on( this.tabs, { keydown: \"_tabKeydown\" } );\r\n\t\tthis._on( this.panels, { keydown: \"_panelKeydown\" } );\r\n\r\n\t\tthis._focusable( this.tabs );\r\n\t\tthis._hoverable( this.tabs );\r\n\t},\r\n\r\n\t_setupHeightStyle: function( heightStyle ) {\r\n\t\tvar maxHeight,\r\n\t\t\tparent = this.element.parent();\r\n\r\n\t\tif ( heightStyle === \"fill\" ) {\r\n\t\t\tmaxHeight = parent.height();\r\n\t\t\tmaxHeight -= this.element.outerHeight() - this.element.height();\r\n\r\n\t\t\tthis.element.siblings( \":visible\" ).each( function() {\r\n\t\t\t\tvar elem = $( this ),\r\n\t\t\t\t\tposition = elem.css( \"position\" );\r\n\r\n\t\t\t\tif ( position === \"absolute\" || position === \"fixed\" ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tmaxHeight -= elem.outerHeight( true );\r\n\t\t\t} );\r\n\r\n\t\t\tthis.element.children().not( this.panels ).each( function() {\r\n\t\t\t\tmaxHeight -= $( this ).outerHeight( true );\r\n\t\t\t} );\r\n\r\n\t\t\tthis.panels.each( function() {\r\n\t\t\t\t$( this ).height( Math.max( 0, maxHeight -\r\n\t\t\t\t\t$( this ).innerHeight() + $( this ).height() ) );\r\n\t\t\t} )\r\n\t\t\t\t.css( \"overflow\", \"auto\" );\r\n\t\t} else if ( heightStyle === \"auto\" ) {\r\n\t\t\tmaxHeight = 0;\r\n\t\t\tthis.panels.each( function() {\r\n\t\t\t\tmaxHeight = Math.max( maxHeight, $( this ).height( \"\" ).height() );\r\n\t\t\t} ).height( maxHeight );\r\n\t\t}\r\n\t},\r\n\r\n\t_eventHandler: function( event ) {\r\n\t\tvar options = this.options,\r\n\t\t\tactive = this.active,\r\n\t\t\tanchor = $( event.currentTarget ),\r\n\t\t\ttab = anchor.closest( \"li\" ),\r\n\t\t\tclickedIsActive = tab[ 0 ] === active[ 0 ],\r\n\t\t\tcollapsing = clickedIsActive && options.collapsible,\r\n\t\t\ttoShow = collapsing ? $() : this._getPanelForTab( tab ),\r\n\t\t\ttoHide = !active.length ? $() : this._getPanelForTab( active ),\r\n\t\t\teventData = {\r\n\t\t\t\toldTab: active,\r\n\t\t\t\toldPanel: toHide,\r\n\t\t\t\tnewTab: collapsing ? $() : tab,\r\n\t\t\t\tnewPanel: toShow\r\n\t\t\t};\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif ( tab.hasClass( \"ui-state-disabled\" ) ||\r\n\r\n\t\t\t\t// tab is already loading\r\n\t\t\t\ttab.hasClass( \"ui-tabs-loading\" ) ||\r\n\r\n\t\t\t\t// can't switch durning an animation\r\n\t\t\t\tthis.running ||\r\n\r\n\t\t\t\t// click on active header, but not collapsible\r\n\t\t\t\t( clickedIsActive && !options.collapsible ) ||\r\n\r\n\t\t\t\t// allow canceling activation\r\n\t\t\t\t( this._trigger( \"beforeActivate\", event, eventData ) === false ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\toptions.active = collapsing ? false : this.tabs.index( tab );\r\n\r\n\t\tthis.active = clickedIsActive ? $() : tab;\r\n\t\tif ( this.xhr ) {\r\n\t\t\tthis.xhr.abort();\r\n\t\t}\r\n\r\n\t\tif ( !toHide.length && !toShow.length ) {\r\n\t\t\t$.error( \"jQuery UI Tabs: Mismatching fragment identifier.\" );\r\n\t\t}\r\n\r\n\t\tif ( toShow.length ) {\r\n\t\t\tthis.load( this.tabs.index( tab ), event );\r\n\t\t}\r\n\t\tthis._toggle( event, eventData );\r\n\t},\r\n\r\n\t// Handles show/hide for selecting tabs\r\n\t_toggle: function( event, eventData ) {\r\n\t\tvar that = this,\r\n\t\t\ttoShow = eventData.newPanel,\r\n\t\t\ttoHide = eventData.oldPanel;\r\n\r\n\t\tthis.running = true;\r\n\r\n\t\tfunction complete() {\r\n\t\t\tthat.running = false;\r\n\t\t\tthat._trigger( \"activate\", event, eventData );\r\n\t\t}\r\n\r\n\t\tfunction show() {\r\n\t\t\tthat._addClass( eventData.newTab.closest( \"li\" ), \"ui-tabs-active\", \"ui-state-active\" );\r\n\r\n\t\t\tif ( toShow.length && that.options.show ) {\r\n\t\t\t\tthat._show( toShow, that.options.show, complete );\r\n\t\t\t} else {\r\n\t\t\t\ttoShow.show();\r\n\t\t\t\tcomplete();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Start out by hiding, then showing, then completing\r\n\t\tif ( toHide.length && this.options.hide ) {\r\n\t\t\tthis._hide( toHide, this.options.hide, function() {\r\n\t\t\t\tthat._removeClass( eventData.oldTab.closest( \"li\" ),\r\n\t\t\t\t\t\"ui-tabs-active\", \"ui-state-active\" );\r\n\t\t\t\tshow();\r\n\t\t\t} );\r\n\t\t} else {\r\n\t\t\tthis._removeClass( eventData.oldTab.closest( \"li\" ),\r\n\t\t\t\t\"ui-tabs-active\", \"ui-state-active\" );\r\n\t\t\ttoHide.hide();\r\n\t\t\tshow();\r\n\t\t}\r\n\r\n\t\ttoHide.attr( \"aria-hidden\", \"true\" );\r\n\t\teventData.oldTab.attr( {\r\n\t\t\t\"aria-selected\": \"false\",\r\n\t\t\t\"aria-expanded\": \"false\"\r\n\t\t} );\r\n\r\n\t\t// If we're switching tabs, remove the old tab from the tab order.\r\n\t\t// If we're opening from collapsed state, remove the previous tab from the tab order.\r\n\t\t// If we're collapsing, then keep the collapsing tab in the tab order.\r\n\t\tif ( toShow.length && toHide.length ) {\r\n\t\t\teventData.oldTab.attr( \"tabIndex\", -1 );\r\n\t\t} else if ( toShow.length ) {\r\n\t\t\tthis.tabs.filter( function() {\r\n\t\t\t\treturn $( this ).attr( \"tabIndex\" ) === 0;\r\n\t\t\t} )\r\n\t\t\t\t.attr( \"tabIndex\", -1 );\r\n\t\t}\r\n\r\n\t\ttoShow.attr( \"aria-hidden\", \"false\" );\r\n\t\teventData.newTab.attr( {\r\n\t\t\t\"aria-selected\": \"true\",\r\n\t\t\t\"aria-expanded\": \"true\",\r\n\t\t\ttabIndex: 0\r\n\t\t} );\r\n\t},\r\n\r\n\t_activate: function( index ) {\r\n\t\tvar anchor,\r\n\t\t\tactive = this._findActive( index );\r\n\r\n\t\t// Trying to activate the already active panel\r\n\t\tif ( active[ 0 ] === this.active[ 0 ] ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Trying to collapse, simulate a click on the current active header\r\n\t\tif ( !active.length ) {\r\n\t\t\tactive = this.active;\r\n\t\t}\r\n\r\n\t\tanchor = active.find( \".ui-tabs-anchor\" )[ 0 ];\r\n\t\tthis._eventHandler( {\r\n\t\t\ttarget: anchor,\r\n\t\t\tcurrentTarget: anchor,\r\n\t\t\tpreventDefault: $.noop\r\n\t\t} );\r\n\t},\r\n\r\n\t_findActive: function( index ) {\r\n\t\treturn index === false ? $() : this.tabs.eq( index );\r\n\t},\r\n\r\n\t_getIndex: function( index ) {\r\n\r\n\t\t// meta-function to give users option to provide a href string instead of a numerical index.\r\n\t\tif ( typeof index === \"string\" ) {\r\n\t\t\tindex = this.anchors.index( this.anchors.filter( \"[href$='\" +\r\n\t\t\t\t$.ui.escapeSelector( index ) + \"']\" ) );\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tif ( this.xhr ) {\r\n\t\t\tthis.xhr.abort();\r\n\t\t}\r\n\r\n\t\tthis.tablist\r\n\t\t\t.removeAttr( \"role\" )\r\n\t\t\t.off( this.eventNamespace );\r\n\r\n\t\tthis.anchors\r\n\t\t\t.removeAttr( \"role tabIndex\" )\r\n\t\t\t.removeUniqueId();\r\n\r\n\t\tthis.tabs.add( this.panels ).each( function() {\r\n\t\t\tif ( $.data( this, \"ui-tabs-destroy\" ) ) {\r\n\t\t\t\t$( this ).remove();\r\n\t\t\t} else {\r\n\t\t\t\t$( this ).removeAttr( \"role tabIndex \" +\r\n\t\t\t\t\t\"aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded\" );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.tabs.each( function() {\r\n\t\t\tvar li = $( this ),\r\n\t\t\t\tprev = li.data( \"ui-tabs-aria-controls\" );\r\n\t\t\tif ( prev ) {\r\n\t\t\t\tli\r\n\t\t\t\t\t.attr( \"aria-controls\", prev )\r\n\t\t\t\t\t.removeData( \"ui-tabs-aria-controls\" );\r\n\t\t\t} else {\r\n\t\t\t\tli.removeAttr( \"aria-controls\" );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.panels.show();\r\n\r\n\t\tif ( this.options.heightStyle !== \"content\" ) {\r\n\t\t\tthis.panels.css( \"height\", \"\" );\r\n\t\t}\r\n\t},\r\n\r\n\tenable: function( index ) {\r\n\t\tvar disabled = this.options.disabled;\r\n\t\tif ( disabled === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( index === undefined ) {\r\n\t\t\tdisabled = false;\r\n\t\t} else {\r\n\t\t\tindex = this._getIndex( index );\r\n\t\t\tif ( $.isArray( disabled ) ) {\r\n\t\t\t\tdisabled = $.map( disabled, function( num ) {\r\n\t\t\t\t\treturn num !== index ? num : null;\r\n\t\t\t\t} );\r\n\t\t\t} else {\r\n\t\t\t\tdisabled = $.map( this.tabs, function( li, num ) {\r\n\t\t\t\t\treturn num !== index ? num : null;\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._setOptionDisabled( disabled );\r\n\t},\r\n\r\n\tdisable: function( index ) {\r\n\t\tvar disabled = this.options.disabled;\r\n\t\tif ( disabled === true ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( index === undefined ) {\r\n\t\t\tdisabled = true;\r\n\t\t} else {\r\n\t\t\tindex = this._getIndex( index );\r\n\t\t\tif ( $.inArray( index, disabled ) !== -1 ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ( $.isArray( disabled ) ) {\r\n\t\t\t\tdisabled = $.merge( [ index ], disabled ).sort();\r\n\t\t\t} else {\r\n\t\t\t\tdisabled = [ index ];\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._setOptionDisabled( disabled );\r\n\t},\r\n\r\n\tload: function( index, event ) {\r\n\t\tindex = this._getIndex( index );\r\n\t\tvar that = this,\r\n\t\t\ttab = this.tabs.eq( index ),\r\n\t\t\tanchor = tab.find( \".ui-tabs-anchor\" ),\r\n\t\t\tpanel = this._getPanelForTab( tab ),\r\n\t\t\teventData = {\r\n\t\t\t\ttab: tab,\r\n\t\t\t\tpanel: panel\r\n\t\t\t},\r\n\t\t\tcomplete = function( jqXHR, status ) {\r\n\t\t\t\tif ( status === \"abort\" ) {\r\n\t\t\t\t\tthat.panels.stop( false, true );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthat._removeClass( tab, \"ui-tabs-loading\" );\r\n\t\t\t\tpanel.removeAttr( \"aria-busy\" );\r\n\r\n\t\t\t\tif ( jqXHR === that.xhr ) {\r\n\t\t\t\t\tdelete that.xhr;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t// Not remote\r\n\t\tif ( this._isLocal( anchor[ 0 ] ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.xhr = $.ajax( this._ajaxSettings( anchor, event, eventData ) );\r\n\r\n\t\t// Support: jQuery <1.8\r\n\t\t// jQuery <1.8 returns false if the request is canceled in beforeSend,\r\n\t\t// but as of 1.8, $.ajax() always returns a jqXHR object.\r\n\t\tif ( this.xhr && this.xhr.statusText !== \"canceled\" ) {\r\n\t\t\tthis._addClass( tab, \"ui-tabs-loading\" );\r\n\t\t\tpanel.attr( \"aria-busy\", \"true\" );\r\n\r\n\t\t\tthis.xhr\r\n\t\t\t\t.done( function( response, status, jqXHR ) {\r\n\r\n\t\t\t\t\t// support: jQuery <1.8\r\n\t\t\t\t\t// http://bugs.jquery.com/ticket/11778\r\n\t\t\t\t\tsetTimeout( function() {\r\n\t\t\t\t\t\tpanel.html( response );\r\n\t\t\t\t\t\tthat._trigger( \"load\", event, eventData );\r\n\r\n\t\t\t\t\t\tcomplete( jqXHR, status );\r\n\t\t\t\t\t}, 1 );\r\n\t\t\t\t} )\r\n\t\t\t\t.fail( function( jqXHR, status ) {\r\n\r\n\t\t\t\t\t// support: jQuery <1.8\r\n\t\t\t\t\t// http://bugs.jquery.com/ticket/11778\r\n\t\t\t\t\tsetTimeout( function() {\r\n\t\t\t\t\t\tcomplete( jqXHR, status );\r\n\t\t\t\t\t}, 1 );\r\n\t\t\t\t} );\r\n\t\t}\r\n\t},\r\n\r\n\t_ajaxSettings: function( anchor, event, eventData ) {\r\n\t\tvar that = this;\r\n\t\treturn {\r\n\r\n\t\t\t// Support: IE <11 only\r\n\t\t\t// Strip any hash that exists to prevent errors with the Ajax request\r\n\t\t\turl: anchor.attr( \"href\" ).replace( /#.*$/, \"\" ),\r\n\t\t\tbeforeSend: function( jqXHR, settings ) {\r\n\t\t\t\treturn that._trigger( \"beforeLoad\", event,\r\n\t\t\t\t\t$.extend( { jqXHR: jqXHR, ajaxSettings: settings }, eventData ) );\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\r\n\t_getPanelForTab: function( tab ) {\r\n\t\tvar id = $( tab ).attr( \"aria-controls\" );\r\n\t\treturn this.element.find( this._sanitizeSelector( \"#\" + id ) );\r\n\t}\r\n} );\r\n\r\n// DEPRECATED\r\n// TODO: Switch return back to widget declaration at top of file when this is removed\r\nif ( $.uiBackCompat !== false ) {\r\n\r\n\t// Backcompat for ui-tab class (now ui-tabs-tab)\r\n\t$.widget( \"ui.tabs\", $.ui.tabs, {\r\n\t\t_processTabs: function() {\r\n\t\t\tthis._superApply( arguments );\r\n\t\t\tthis._addClass( this.tabs, \"ui-tab\" );\r\n\t\t}\r\n\t} );\r\n}\r\n\r\nreturn $.ui.tabs;\r\n\r\n} ) );\r\n","jquery/ui-modules/widgets/tooltip.js":"/*!\r\n * jQuery UI Tooltip 1.12.1\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Tooltip\r\n//>>group: Widgets\r\n//>>description: Shows additional information for any element on hover or focus.\r\n//>>docs: http://api.jqueryui.com/tooltip/\r\n//>>demos: http://jqueryui.com/tooltip/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/tooltip.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\n( function( factory ) {\r\n\tif ( typeof define === \"function\" && define.amd ) {\r\n\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine( [\r\n\t\t\t\"jquery\",\r\n\t\t\t\"../keycode\",\r\n\t\t\t\"../position\",\r\n\t\t\t\"../unique-id\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../widget\"\r\n\t\t], factory );\r\n\t} else {\r\n\r\n\t\t// Browser globals\r\n\t\tfactory( jQuery );\r\n\t}\r\n}( function( $ ) {\r\n\r\n$.widget( \"ui.tooltip\", {\r\n\tversion: \"1.12.1\",\r\n\toptions: {\r\n\t\tclasses: {\r\n\t\t\t\"ui-tooltip\": \"ui-corner-all ui-widget-shadow\"\r\n\t\t},\r\n\t\tcontent: function() {\r\n\r\n\t\t\t// support: IE<9, Opera in jQuery <1.7\r\n\t\t\t// .text() can't accept undefined, so coerce to a string\r\n\t\t\tvar title = $( this ).attr( \"title\" ) || \"\";\r\n\r\n\t\t\t// Escape title, since we're going from an attribute to raw HTML\r\n\t\t\treturn $( \"<a>\" ).text( title ).html();\r\n\t\t},\r\n\t\thide: true,\r\n\r\n\t\t// Disabled elements have inconsistent behavior across browsers (#8661)\r\n\t\titems: \"[title]:not([disabled])\",\r\n\t\tposition: {\r\n\t\t\tmy: \"left top+15\",\r\n\t\t\tat: \"left bottom\",\r\n\t\t\tcollision: \"flipfit flip\"\r\n\t\t},\r\n\t\tshow: true,\r\n\t\ttrack: false,\r\n\r\n\t\t// Callbacks\r\n\t\tclose: null,\r\n\t\topen: null\r\n\t},\r\n\r\n\t_addDescribedBy: function( elem, id ) {\r\n\t\tvar describedby = ( elem.attr( \"aria-describedby\" ) || \"\" ).split( /\\s+/ );\r\n\t\tdescribedby.push( id );\r\n\t\telem\r\n\t\t\t.data( \"ui-tooltip-id\", id )\r\n\t\t\t.attr( \"aria-describedby\", $.trim( describedby.join( \" \" ) ) );\r\n\t},\r\n\r\n\t_removeDescribedBy: function( elem ) {\r\n\t\tvar id = elem.data( \"ui-tooltip-id\" ),\r\n\t\t\tdescribedby = ( elem.attr( \"aria-describedby\" ) || \"\" ).split( /\\s+/ ),\r\n\t\t\tindex = $.inArray( id, describedby );\r\n\r\n\t\tif ( index !== -1 ) {\r\n\t\t\tdescribedby.splice( index, 1 );\r\n\t\t}\r\n\r\n\t\telem.removeData( \"ui-tooltip-id\" );\r\n\t\tdescribedby = $.trim( describedby.join( \" \" ) );\r\n\t\tif ( describedby ) {\r\n\t\t\telem.attr( \"aria-describedby\", describedby );\r\n\t\t} else {\r\n\t\t\telem.removeAttr( \"aria-describedby\" );\r\n\t\t}\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tthis._on( {\r\n\t\t\tmouseover: \"open\",\r\n\t\t\tfocusin: \"open\"\r\n\t\t} );\r\n\r\n\t\t// IDs of generated tooltips, needed for destroy\r\n\t\tthis.tooltips = {};\r\n\r\n\t\t// IDs of parent tooltips where we removed the title attribute\r\n\t\tthis.parents = {};\r\n\r\n\t\t// Append the aria-live region so tooltips announce correctly\r\n\t\tthis.liveRegion = $( \"<div>\" )\r\n\t\t\t.attr( {\r\n\t\t\t\trole: \"log\",\r\n\t\t\t\t\"aria-live\": \"assertive\",\r\n\t\t\t\t\"aria-relevant\": \"additions\"\r\n\t\t\t} )\r\n\t\t\t.appendTo( this.document[ 0 ].body );\r\n\t\tthis._addClass( this.liveRegion, null, \"ui-helper-hidden-accessible\" );\r\n\r\n\t\tthis.disabledTitles = $( [] );\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tvar that = this;\r\n\r\n\t\tthis._super( key, value );\r\n\r\n\t\tif ( key === \"content\" ) {\r\n\t\t\t$.each( this.tooltips, function( id, tooltipData ) {\r\n\t\t\t\tthat._updateContent( tooltipData.element );\r\n\t\t\t} );\r\n\t\t}\r\n\t},\r\n\r\n\t_setOptionDisabled: function( value ) {\r\n\t\tthis[ value ? \"_disable\" : \"_enable\" ]();\r\n\t},\r\n\r\n\t_disable: function() {\r\n\t\tvar that = this;\r\n\r\n\t\t// Close open tooltips\r\n\t\t$.each( this.tooltips, function( id, tooltipData ) {\r\n\t\t\tvar event = $.Event( \"blur\" );\r\n\t\t\tevent.target = event.currentTarget = tooltipData.element[ 0 ];\r\n\t\t\tthat.close( event, true );\r\n\t\t} );\r\n\r\n\t\t// Remove title attributes to prevent native tooltips\r\n\t\tthis.disabledTitles = this.disabledTitles.add(\r\n\t\t\tthis.element.find( this.options.items ).addBack()\r\n\t\t\t\t.filter( function() {\r\n\t\t\t\t\tvar element = $( this );\r\n\t\t\t\t\tif ( element.is( \"[title]\" ) ) {\r\n\t\t\t\t\t\treturn element\r\n\t\t\t\t\t\t\t.data( \"ui-tooltip-title\", element.attr( \"title\" ) )\r\n\t\t\t\t\t\t\t.removeAttr( \"title\" );\r\n\t\t\t\t\t}\r\n\t\t\t\t} )\r\n\t\t);\r\n\t},\r\n\r\n\t_enable: function() {\r\n\r\n\t\t// restore title attributes\r\n\t\tthis.disabledTitles.each( function() {\r\n\t\t\tvar element = $( this );\r\n\t\t\tif ( element.data( \"ui-tooltip-title\" ) ) {\r\n\t\t\t\telement.attr( \"title\", element.data( \"ui-tooltip-title\" ) );\r\n\t\t\t}\r\n\t\t} );\r\n\t\tthis.disabledTitles = $( [] );\r\n\t},\r\n\r\n\topen: function( event ) {\r\n\t\tvar that = this,\r\n\t\t\ttarget = $( event ? event.target : this.element )\r\n\r\n\t\t\t\t// we need closest here due to mouseover bubbling,\r\n\t\t\t\t// but always pointing at the same event target\r\n\t\t\t\t.closest( this.options.items );\r\n\r\n\t\t// No element to show a tooltip for or the tooltip is already open\r\n\t\tif ( !target.length || target.data( \"ui-tooltip-id\" ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( target.attr( \"title\" ) ) {\r\n\t\t\ttarget.data( \"ui-tooltip-title\", target.attr( \"title\" ) );\r\n\t\t}\r\n\r\n\t\ttarget.data( \"ui-tooltip-open\", true );\r\n\r\n\t\t// Kill parent tooltips, custom or native, for hover\r\n\t\tif ( event && event.type === \"mouseover\" ) {\r\n\t\t\ttarget.parents().each( function() {\r\n\t\t\t\tvar parent = $( this ),\r\n\t\t\t\t\tblurEvent;\r\n\t\t\t\tif ( parent.data( \"ui-tooltip-open\" ) ) {\r\n\t\t\t\t\tblurEvent = $.Event( \"blur\" );\r\n\t\t\t\t\tblurEvent.target = blurEvent.currentTarget = this;\r\n\t\t\t\t\tthat.close( blurEvent, true );\r\n\t\t\t\t}\r\n\t\t\t\tif ( parent.attr( \"title\" ) ) {\r\n\t\t\t\t\tparent.uniqueId();\r\n\t\t\t\t\tthat.parents[ this.id ] = {\r\n\t\t\t\t\t\telement: this,\r\n\t\t\t\t\t\ttitle: parent.attr( \"title\" )\r\n\t\t\t\t\t};\r\n\t\t\t\t\tparent.attr( \"title\", \"\" );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tthis._registerCloseHandlers( event, target );\r\n\t\tthis._updateContent( target, event );\r\n\t},\r\n\r\n\t_updateContent: function( target, event ) {\r\n\t\tvar content,\r\n\t\t\tcontentOption = this.options.content,\r\n\t\t\tthat = this,\r\n\t\t\teventType = event ? event.type : null;\r\n\r\n\t\tif ( typeof contentOption === \"string\" || contentOption.nodeType ||\r\n\t\t\t\tcontentOption.jquery ) {\r\n\t\t\treturn this._open( event, target, contentOption );\r\n\t\t}\r\n\r\n\t\tcontent = contentOption.call( target[ 0 ], function( response ) {\r\n\r\n\t\t\t// IE may instantly serve a cached response for ajax requests\r\n\t\t\t// delay this call to _open so the other call to _open runs first\r\n\t\t\tthat._delay( function() {\r\n\r\n\t\t\t\t// Ignore async response if tooltip was closed already\r\n\t\t\t\tif ( !target.data( \"ui-tooltip-open\" ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// JQuery creates a special event for focusin when it doesn't\r\n\t\t\t\t// exist natively. To improve performance, the native event\r\n\t\t\t\t// object is reused and the type is changed. Therefore, we can't\r\n\t\t\t\t// rely on the type being correct after the event finished\r\n\t\t\t\t// bubbling, so we set it back to the previous value. (#8740)\r\n\t\t\t\tif ( event ) {\r\n\t\t\t\t\tevent.type = eventType;\r\n\t\t\t\t}\r\n\t\t\t\tthis._open( event, target, response );\r\n\t\t\t} );\r\n\t\t} );\r\n\t\tif ( content ) {\r\n\t\t\tthis._open( event, target, content );\r\n\t\t}\r\n\t},\r\n\r\n\t_open: function( event, target, content ) {\r\n\t\tvar tooltipData, tooltip, delayedShow, a11yContent,\r\n\t\t\tpositionOption = $.extend( {}, this.options.position );\r\n\r\n\t\tif ( !content ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Content can be updated multiple times. If the tooltip already\r\n\t\t// exists, then just update the content and bail.\r\n\t\ttooltipData = this._find( target );\r\n\t\tif ( tooltipData ) {\r\n\t\t\ttooltipData.tooltip.find( \".ui-tooltip-content\" ).html( content );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If we have a title, clear it to prevent the native tooltip\r\n\t\t// we have to check first to avoid defining a title if none exists\r\n\t\t// (we don't want to cause an element to start matching [title])\r\n\t\t//\r\n\t\t// We use removeAttr only for key events, to allow IE to export the correct\r\n\t\t// accessible attributes. For mouse events, set to empty string to avoid\r\n\t\t// native tooltip showing up (happens only when removing inside mouseover).\r\n\t\tif ( target.is( \"[title]\" ) ) {\r\n\t\t\tif ( event && event.type === \"mouseover\" ) {\r\n\t\t\t\ttarget.attr( \"title\", \"\" );\r\n\t\t\t} else {\r\n\t\t\t\ttarget.removeAttr( \"title\" );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttooltipData = this._tooltip( target );\r\n\t\ttooltip = tooltipData.tooltip;\r\n\t\tthis._addDescribedBy( target, tooltip.attr( \"id\" ) );\r\n\t\ttooltip.find( \".ui-tooltip-content\" ).html( content );\r\n\r\n\t\t// Support: Voiceover on OS X, JAWS on IE <= 9\r\n\t\t// JAWS announces deletions even when aria-relevant=\"additions\"\r\n\t\t// Voiceover will sometimes re-read the entire log region's contents from the beginning\r\n\t\tthis.liveRegion.children().hide();\r\n\t\ta11yContent = $( \"<div>\" ).html( tooltip.find( \".ui-tooltip-content\" ).html() );\r\n\t\ta11yContent.removeAttr( \"name\" ).find( \"[name]\" ).removeAttr( \"name\" );\r\n\t\ta11yContent.removeAttr( \"id\" ).find( \"[id]\" ).removeAttr( \"id\" );\r\n\t\ta11yContent.appendTo( this.liveRegion );\r\n\r\n\t\tfunction position( event ) {\r\n\t\t\tpositionOption.of = event;\r\n\t\t\tif ( tooltip.is( \":hidden\" ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttooltip.position( positionOption );\r\n\t\t}\r\n\t\tif ( this.options.track && event && /^mouse/.test( event.type ) ) {\r\n\t\t\tthis._on( this.document, {\r\n\t\t\t\tmousemove: position\r\n\t\t\t} );\r\n\r\n\t\t\t// trigger once to override element-relative positioning\r\n\t\t\tposition( event );\r\n\t\t} else {\r\n\t\t\ttooltip.position( $.extend( {\r\n\t\t\t\tof: target\r\n\t\t\t}, this.options.position ) );\r\n\t\t}\r\n\r\n\t\ttooltip.hide();\r\n\r\n\t\tthis._show( tooltip, this.options.show );\r\n\r\n\t\t// Handle tracking tooltips that are shown with a delay (#8644). As soon\r\n\t\t// as the tooltip is visible, position the tooltip using the most recent\r\n\t\t// event.\r\n\t\t// Adds the check to add the timers only when both delay and track options are set (#14682)\r\n\t\tif ( this.options.track && this.options.show && this.options.show.delay ) {\r\n\t\t\tdelayedShow = this.delayedShow = setInterval( function() {\r\n\t\t\t\tif ( tooltip.is( \":visible\" ) ) {\r\n\t\t\t\t\tposition( positionOption.of );\r\n\t\t\t\t\tclearInterval( delayedShow );\r\n\t\t\t\t}\r\n\t\t\t}, $.fx.interval );\r\n\t\t}\r\n\r\n\t\tthis._trigger( \"open\", event, { tooltip: tooltip } );\r\n\t},\r\n\r\n\t_registerCloseHandlers: function( event, target ) {\r\n\t\tvar events = {\r\n\t\t\tkeyup: function( event ) {\r\n\t\t\t\tif ( event.keyCode === $.ui.keyCode.ESCAPE ) {\r\n\t\t\t\t\tvar fakeEvent = $.Event( event );\r\n\t\t\t\t\tfakeEvent.currentTarget = target[ 0 ];\r\n\t\t\t\t\tthis.close( fakeEvent, true );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Only bind remove handler for delegated targets. Non-delegated\r\n\t\t// tooltips will handle this in destroy.\r\n\t\tif ( target[ 0 ] !== this.element[ 0 ] ) {\r\n\t\t\tevents.remove = function() {\r\n\t\t\t\tthis._removeTooltip( this._find( target ).tooltip );\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif ( !event || event.type === \"mouseover\" ) {\r\n\t\t\tevents.mouseleave = \"close\";\r\n\t\t}\r\n\t\tif ( !event || event.type === \"focusin\" ) {\r\n\t\t\tevents.focusout = \"close\";\r\n\t\t}\r\n\t\tthis._on( true, target, events );\r\n\t},\r\n\r\n\tclose: function( event ) {\r\n\t\tvar tooltip,\r\n\t\t\tthat = this,\r\n\t\t\ttarget = $( event ? event.currentTarget : this.element ),\r\n\t\t\ttooltipData = this._find( target );\r\n\r\n\t\t// The tooltip may already be closed\r\n\t\tif ( !tooltipData ) {\r\n\r\n\t\t\t// We set ui-tooltip-open immediately upon open (in open()), but only set the\r\n\t\t\t// additional data once there's actually content to show (in _open()). So even if the\r\n\t\t\t// tooltip doesn't have full data, we always remove ui-tooltip-open in case we're in\r\n\t\t\t// the period between open() and _open().\r\n\t\t\ttarget.removeData( \"ui-tooltip-open\" );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttooltip = tooltipData.tooltip;\r\n\r\n\t\t// Disabling closes the tooltip, so we need to track when we're closing\r\n\t\t// to avoid an infinite loop in case the tooltip becomes disabled on close\r\n\t\tif ( tooltipData.closing ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Clear the interval for delayed tracking tooltips\r\n\t\tclearInterval( this.delayedShow );\r\n\r\n\t\t// Only set title if we had one before (see comment in _open())\r\n\t\t// If the title attribute has changed since open(), don't restore\r\n\t\tif ( target.data( \"ui-tooltip-title\" ) && !target.attr( \"title\" ) ) {\r\n\t\t\ttarget.attr( \"title\", target.data( \"ui-tooltip-title\" ) );\r\n\t\t}\r\n\r\n\t\tthis._removeDescribedBy( target );\r\n\r\n\t\ttooltipData.hiding = true;\r\n\t\ttooltip.stop( true );\r\n\t\tthis._hide( tooltip, this.options.hide, function() {\r\n\t\t\tthat._removeTooltip( $( this ) );\r\n\t\t} );\r\n\r\n\t\ttarget.removeData( \"ui-tooltip-open\" );\r\n\t\tthis._off( target, \"mouseleave focusout keyup\" );\r\n\r\n\t\t// Remove 'remove' binding only on delegated targets\r\n\t\tif ( target[ 0 ] !== this.element[ 0 ] ) {\r\n\t\t\tthis._off( target, \"remove\" );\r\n\t\t}\r\n\t\tthis._off( this.document, \"mousemove\" );\r\n\r\n\t\tif ( event && event.type === \"mouseleave\" ) {\r\n\t\t\t$.each( this.parents, function( id, parent ) {\r\n\t\t\t\t$( parent.element ).attr( \"title\", parent.title );\r\n\t\t\t\tdelete that.parents[ id ];\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\ttooltipData.closing = true;\r\n\t\tthis._trigger( \"close\", event, { tooltip: tooltip } );\r\n\t\tif ( !tooltipData.hiding ) {\r\n\t\t\ttooltipData.closing = false;\r\n\t\t}\r\n\t},\r\n\r\n\t_tooltip: function( element ) {\r\n\t\tvar tooltip = $( \"<div>\" ).attr( \"role\", \"tooltip\" ),\r\n\t\t\tcontent = $( \"<div>\" ).appendTo( tooltip ),\r\n\t\t\tid = tooltip.uniqueId().attr( \"id\" );\r\n\r\n\t\tthis._addClass( content, \"ui-tooltip-content\" );\r\n\t\tthis._addClass( tooltip, \"ui-tooltip\", \"ui-widget ui-widget-content\" );\r\n\r\n\t\ttooltip.appendTo( this._appendTo( element ) );\r\n\r\n\t\treturn this.tooltips[ id ] = {\r\n\t\t\telement: element,\r\n\t\t\ttooltip: tooltip\r\n\t\t};\r\n\t},\r\n\r\n\t_find: function( target ) {\r\n\t\tvar id = target.data( \"ui-tooltip-id\" );\r\n\t\treturn id ? this.tooltips[ id ] : null;\r\n\t},\r\n\r\n\t_removeTooltip: function( tooltip ) {\r\n\t\ttooltip.remove();\r\n\t\tdelete this.tooltips[ tooltip.attr( \"id\" ) ];\r\n\t},\r\n\r\n\t_appendTo: function( target ) {\r\n\t\tvar element = target.closest( \".ui-front, dialog\" );\r\n\r\n\t\tif ( !element.length ) {\r\n\t\t\telement = this.document[ 0 ].body;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tvar that = this;\r\n\r\n\t\t// Close open tooltips\r\n\t\t$.each( this.tooltips, function( id, tooltipData ) {\r\n\r\n\t\t\t// Delegate to close method to handle common cleanup\r\n\t\t\tvar event = $.Event( \"blur\" ),\r\n\t\t\t\telement = tooltipData.element;\r\n\t\t\tevent.target = event.currentTarget = element[ 0 ];\r\n\t\t\tthat.close( event, true );\r\n\r\n\t\t\t// Remove immediately; destroying an open tooltip doesn't use the\r\n\t\t\t// hide animation\r\n\t\t\t$( \"#\" + id ).remove();\r\n\r\n\t\t\t// Restore the title\r\n\t\t\tif ( element.data( \"ui-tooltip-title\" ) ) {\r\n\r\n\t\t\t\t// If the title attribute has changed since open(), don't restore\r\n\t\t\t\tif ( !element.attr( \"title\" ) ) {\r\n\t\t\t\t\telement.attr( \"title\", element.data( \"ui-tooltip-title\" ) );\r\n\t\t\t\t}\r\n\t\t\t\telement.removeData( \"ui-tooltip-title\" );\r\n\t\t\t}\r\n\t\t} );\r\n\t\tthis.liveRegion.remove();\r\n\t}\r\n} );\r\n\r\n// DEPRECATED\r\n// TODO: Switch return back to widget declaration at top of file when this is removed\r\nif ( $.uiBackCompat !== false ) {\r\n\r\n\t// Backcompat for tooltipClass option\r\n\t$.widget( \"ui.tooltip\", $.ui.tooltip, {\r\n\t\toptions: {\r\n\t\t\ttooltipClass: null\r\n\t\t},\r\n\t\t_tooltip: function() {\r\n\t\t\tvar tooltipData = this._superApply( arguments );\r\n\t\t\tif ( this.options.tooltipClass ) {\r\n\t\t\t\ttooltipData.tooltip.addClass( this.options.tooltipClass );\r\n\t\t\t}\r\n\t\t\treturn tooltipData;\r\n\t\t}\r\n\t} );\r\n}\r\n\r\nreturn $.ui.tooltip;\r\n\r\n} ) );\r\n","js/navigation-menu.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * @deprecated\r\n * @see lib/web/mage/menu.js\r\n */\r\ndefine([\r\n    'jquery',\r\n    'matchMedia',\r\n    'mage/template',\r\n    'mage/dropdowns',\r\n    'mage/terms'\r\n], function ($, mediaCheck, mageTemplate) {\r\n    'use strict';\r\n\r\n    $.widget('mage.navigationMenu', {\r\n        options: {\r\n            itemsContainer: '> ul',\r\n            topLevel: 'li.level0',\r\n            topLevelSubmenu: '> .submenu',\r\n            topLevelHoverClass: 'hover',\r\n            expandedTopLevel: '.more',\r\n            hoverInTimeout: 300,\r\n            hoverOutTimeout: 500,\r\n            submenuAnimationSpeed: 200,\r\n            collapsable: true,\r\n            collapsableDropdownTemplate:\r\n                '<script type=\"text/x-magento-template\">' +\r\n                    '<li class=\"level0 level-top more parent\">' +\r\n                        '<div class=\"submenu\">' +\r\n                            '<ul><%= elems %></ul>' +\r\n                        '</div>' +\r\n                    '</li>' +\r\n                '</script>'\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this.itemsContainer = $(this.options.itemsContainer, this.element);\r\n            this.topLevel = $(this.options.topLevel, this.element);\r\n            this.topLevelSubmenu = $(this.options.topLevelSubmenu, this.topLevel);\r\n\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            if (this.options.collapsable) {\r\n                setTimeout($.proxy(function () {\r\n                    this._checkToCollapseOrExpand();\r\n                }, this), 100);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            this._on({\r\n                /**\r\n                 * @param {jQuery.Event} e\r\n                 */\r\n                'mouseenter > ul > li.level0': function (e) {\r\n                    if (!this.entered) { // fix IE bug with 'mouseenter' event\r\n                        this.timeoutId && clearTimeout(this.timeoutId);\r\n                        this.timeoutId = setTimeout($.proxy(function () {\r\n                            this._openSubmenu(e);\r\n                        }, this), this.options.hoverInTimeout);\r\n                        this.entered = true;\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * @param {jQuery.Event} e\r\n                 */\r\n                'mouseleave > ul > li.level0': function (e) {\r\n                    this.entered = null;\r\n\r\n                    this.timeoutId && clearTimeout(this.timeoutId);\r\n                    this.timeoutId = setTimeout($.proxy(function () {\r\n                        this._closeSubmenu(e.currentTarget);\r\n                    }, this), this.options.hoverOutTimeout);\r\n                },\r\n\r\n                /**\r\n                 * @param {jQuert.Event} e\r\n                 */\r\n                'click': function (e) {\r\n                    e.stopPropagation();\r\n                }\r\n            });\r\n\r\n            $(document)\r\n                .on('click.hideMenu', $.proxy(function () {\r\n                    var isOpened = this.topLevel.filter(function () {\r\n                        return $(this).data('opened');\r\n                    });\r\n\r\n                    if (isOpened) {\r\n                        this._closeSubmenu(null, false);\r\n                    }\r\n                }, this));\r\n\r\n            $(window)\r\n                .on('resize', $.proxy(function () {\r\n                    this.timeoutOnResize && clearTimeout(this.timeoutOnResize);\r\n                    this.timeoutOnResize = setTimeout($.proxy(function () {\r\n                        if (this.options.collapsable) {\r\n                            if ($(this.options.expandedTopLevel, this.element).length) {\r\n                                this._expandMenu();\r\n                            }\r\n                            this._checkToCollapseOrExpand();\r\n                        }\r\n                    }, this), 300);\r\n                }, this));\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} e\r\n         * @private\r\n         */\r\n        _openSubmenu: function (e) {\r\n            var menuItem = e.currentTarget;\r\n\r\n            if (!$(menuItem).data('opened')) {\r\n                this._closeSubmenu(menuItem, true, true);\r\n\r\n                $(this.options.topLevelSubmenu, menuItem)\r\n                    .slideDown(this.options.submenuAnimationSpeed, $.proxy(function () {\r\n                        $(menuItem).addClass(this.options.topLevelHoverClass);\r\n                        $(menuItem).data('opened', true);\r\n                    }, this));\r\n            } else if ($(e.target).closest(this.options.topLevel)) {\r\n                $(e.target)\r\n                    .addClass(this.options.topLevelHoverClass)\r\n                    .siblings(this.options.topLevel)\r\n                        .removeClass(this.options.topLevelHoverClass);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {*} menuItem\r\n         * @param {*} excludeCurrent\r\n         * @param {*} fast\r\n         * @private\r\n         */\r\n        _closeSubmenu: function (menuItem, excludeCurrent, fast) {\r\n            var topLevel = $(this.options.topLevel, this.element),\r\n                activeSubmenu = $(this.options.topLevelSubmenu, menuItem || null);\r\n\r\n            $(this.options.topLevelSubmenu, topLevel)\r\n                .filter(function () {\r\n                    return excludeCurrent ? $(this).not(activeSubmenu) : true;\r\n                })\r\n                .slideUp(fast ? 0 : this.options.submenuAnimationSpeed);\r\n\r\n            topLevel\r\n                .removeClass(this.options.topLevelHoverClass)\r\n                .data('opened', false);\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _checkToCollapseOrExpand: function () {\r\n            var navWidth, totalWidth, startCollapseIndex;\r\n\r\n            if ($('html').hasClass('lt-640') || $('html').hasClass('w-640')) {\r\n                return;\r\n            }\r\n\r\n            navWidth = this.itemsContainer.width();\r\n            totalWidth = 0;\r\n            startCollapseIndex = 0;\r\n\r\n            $.each($(this.options.topLevel, this.element), function (index, item) {\r\n                totalWidth += $(item).outerWidth(true);\r\n\r\n                if (totalWidth > navWidth && !startCollapseIndex) {\r\n                    startCollapseIndex = index - 2;\r\n                }\r\n            });\r\n\r\n            this[startCollapseIndex ? '_collapseMenu' : '_expandMenu'](startCollapseIndex);\r\n        },\r\n\r\n        /**\r\n         * @param {*} startCollapseIndex\r\n         * @private\r\n         */\r\n        _collapseMenu: function (startCollapseIndex) {\r\n            this.elemsToCollapse = this.topLevel.filter(function (index) {\r\n                return index > startCollapseIndex;\r\n            });\r\n            this.elemsToCollapseClone = $('<div></div>').append(this.elemsToCollapse.clone()).html();\r\n\r\n            this.collapsableDropdown = $(\r\n                mageTemplate(\r\n                    this.options.collapsableDropdownTemplate,\r\n                    {\r\n                        elems: this.elemsToCollapseClone\r\n                    }\r\n                )\r\n            );\r\n\r\n            this.itemsContainer.append(this.collapsableDropdown);\r\n            this.elemsToCollapse.detach();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _expandMenu: function () {\r\n            this.elemsToCollapse && this.elemsToCollapse.appendTo(this.itemsContainer);\r\n            this.collapsableDropdown && this.collapsableDropdown.remove();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _destroy: function () {\r\n            this._expandMenu();\r\n        }\r\n    });\r\n\r\n    /*\r\n     * Provides \"Continium\" effect for submenu\r\n     * */\r\n    $.widget('mage.navigationMenu', $.mage.navigationMenu, {\r\n        options: {\r\n            parentLevel: '> ul > li.level0',\r\n            submenuAnimationSpeed: 150,\r\n            submenuContiniumEffect: false\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            this._super();\r\n            this._applySubmenuStyles();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _applySubmenuStyles: function () {\r\n            $(this.options.topLevelSubmenu, $(this.options.topLevel, this.element))\r\n                .removeAttr('style');\r\n\r\n            $(this.options.topLevelSubmenu, $(this.options.parentLevel, this.element))\r\n                .css({\r\n                    display: 'block',\r\n                    height: 0,\r\n                    overflow: 'hidden'\r\n                });\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} e\r\n         * @private\r\n         */\r\n        _openSubmenu: function (e) {\r\n            var menuItem = e.currentTarget,\r\n                submenu = $(this.options.topLevelSubmenu, menuItem),\r\n                openedItems = $(this.options.topLevel, this.element).filter(function () {\r\n                    return $(this).data('opened');\r\n                });\r\n\r\n            if (submenu.length) {\r\n                this.heightToAnimate = $(this.options.itemsContainer, submenu).outerHeight(true);\r\n\r\n                if (openedItems.length) {\r\n                    this._closeSubmenu(menuItem, true, this.heightToAnimate, $.proxy(function () {\r\n                        submenu.css({\r\n                            height: 'auto'\r\n                        });\r\n                        $(menuItem)\r\n                            .addClass(this.options.topLevelHoverClass);\r\n                    }, this), e);\r\n                } else {\r\n                    submenu.animate({\r\n                        height: this.heightToAnimate\r\n                    }, this.options.submenuAnimationSpeed, $.proxy(function () {\r\n                        $(menuItem)\r\n                            .addClass(this.options.topLevelHoverClass);\r\n                    }, this));\r\n                }\r\n\r\n                $(menuItem)\r\n                    .data('opened', true);\r\n            } else {\r\n                this._closeSubmenu(menuItem);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {*} menuItem\r\n         * @param {*} excludeCurrent\r\n         * @param {*} heightToAnimate\r\n         * @param {Function} callback\r\n         * @private\r\n         */\r\n        _closeSubmenu: function (menuItem, excludeCurrent, heightToAnimate, callback) {\r\n            var topLevel = $(this.options.topLevel, this.itemsContainer),\r\n                prevOpenedItem, prevOpenedSubmenu;\r\n\r\n            if (!excludeCurrent) {\r\n                $(this.options.topLevelSubmenu, $(this.options.parentLevel, this.element))\r\n                    .animate({\r\n                        height: 0\r\n                    });\r\n\r\n                topLevel\r\n                    .data('opened', false)\r\n                    .removeClass(this.options.topLevelHoverClass);\r\n            } else {\r\n                prevOpenedItem = topLevel.filter(function () {\r\n                    return $(this).data('opened');\r\n                });\r\n                prevOpenedSubmenu = $(this.options.topLevelSubmenu, prevOpenedItem);\r\n\r\n                prevOpenedSubmenu.animate({\r\n                    height: heightToAnimate\r\n                }, this.options.submenuAnimationSpeed, 'linear', function () {\r\n                    $(this).css({\r\n                        height: 0\r\n                    });\r\n                    callback && callback();\r\n                });\r\n\r\n                prevOpenedItem\r\n                    .data('opened', false)\r\n                    .removeClass(this.options.topLevelHoverClass);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _collapseMenu: function () {\r\n            this._superApply(arguments);\r\n            this._applySubmenuStyles();\r\n        }\r\n    });\r\n\r\n    //  Responsive menu\r\n    $.widget('mage.navigationMenu', $.mage.navigationMenu, {\r\n        options: {\r\n            responsive: false,\r\n            origNavPlaceholder: '.page-header',\r\n            mainContainer: 'body',\r\n            pageWrapper: '.page-wrapper',\r\n            openedMenuClass: 'opened',\r\n            toggleActionPlaceholder: '.block-search',\r\n            itemWithSubmenu: 'li.parent',\r\n            titleWithSubmenu: 'li.parent > a',\r\n            submenu: 'li.parent > .submenu',\r\n            toggleActionTemplate:\r\n                '<script type=\"text/x-magento-template\">' +\r\n                    '<span data-action=\"toggle-nav\" class=\"action toggle nav\">Toggle Nav</span>' +\r\n                '</script>',\r\n            submenuActionsTemplate:\r\n                '<script type=\"text/x-magento-template\">' +\r\n                    '<li class=\"action all\">' +\r\n                        '<a href=\"<%= categoryURL %>\"><span>All <%= category %></span></a>' +\r\n                    '</li>' +\r\n                '</script>',\r\n            navigationSectionsWrapperTemplate:\r\n                '<script type=\"text/x-magento-template\">' +\r\n                    '<dl class=\"navigation-tabs\" data-sections=\"tabs\">' +\r\n                    '</dl>' +\r\n                '</script>',\r\n            navigationItemWrapperTemplate:\r\n                '<script type=\"text/x-magento-template\">' +\r\n                    '<dt class=\"item title <% if (active) { %>active<% } %>\" data-section=\"title\">' +\r\n                        '<a class=\"switch\" data-toggle=\"switch\" href=\"#TODO\"><%= title %></a>' +\r\n                    '</dt>' +\r\n                    '<dd class=\"item content <% if (active) { %>active<%}%>\" data-section=\"content\">' +\r\n                    '</dd>' +\r\n                '</script>'\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            this._super();\r\n\r\n            this.mainContainer = $(this.options.mainContainer);\r\n            this.pageWrapper = $(this.options.pageWrapper);\r\n            this.toggleAction = $(mageTemplate(this.options.toggleActionTemplate, {}));\r\n\r\n            if (this.options.responsive) {\r\n                mediaCheck({\r\n                    media: '(min-width: 768px)',\r\n                    entry: $.proxy(function () {\r\n                        this._toggleDesktopMode();\r\n                    }, this),\r\n                    exit: $.proxy(function () {\r\n                        this._toggleMobileMode();\r\n                    }, this)\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            this._super();\r\n            this._bindDocumentEvents();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bindDocumentEvents: function () {\r\n            if (!this.eventsBound) {\r\n                $(document)\r\n                    .on('click.toggleMenu', '.action.toggle.nav', $.proxy(function (e) {\r\n                        if ($(this.element).data('opened')) {\r\n                            this._hideMenu();\r\n                        } else {\r\n                            this._showMenu();\r\n                        }\r\n                        e.stopPropagation();\r\n                        this.mobileNav.scrollTop(0);\r\n                        this._fixedBackLink();\r\n                    }, this))\r\n                    .on('click.hideMenu', this.options.pageWrapper, $.proxy(function () {\r\n                        if ($(this.element).data('opened')) {\r\n                            this._hideMenu();\r\n                            this.mobileNav.scrollTop(0);\r\n                            this._fixedBackLink();\r\n                        }\r\n                    }, this))\r\n                    .on('click.showSubmenu', this.options.titleWithSubmenu, $.proxy(function (e) {\r\n                        this._showSubmenu(e);\r\n\r\n                        e.preventDefault();\r\n                        this.mobileNav.scrollTop(0);\r\n                        this._fixedBackLink();\r\n                    }, this))\r\n                    .on('click.hideSubmenu', '.action.back', $.proxy(function (e) {\r\n                        this._hideSubmenu(e);\r\n                        this.mobileNav.scrollTop(0);\r\n                        this._fixedBackLink();\r\n                    }, this));\r\n\r\n                this.eventsBound = true;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _showMenu: function () {\r\n            $(this.element).data('opened', true);\r\n            this.mainContainer.add('html').addClass(this.options.openedMenuClass);\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _hideMenu: function () {\r\n            $(this.element).data('opened', false);\r\n            this.mainContainer.add('html').removeClass(this.options.openedMenuClass);\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} e\r\n         * @private\r\n         */\r\n        _showSubmenu: function (e) {\r\n            var submenu;\r\n\r\n            $(e.currentTarget).addClass('action back');\r\n            submenu = $(e.currentTarget).siblings('.submenu');\r\n\r\n            submenu.addClass('opened');\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} e\r\n         * @private\r\n         */\r\n        _hideSubmenu: function (e) {\r\n            var submenuSelector = '.submenu',\r\n                submenu = $(e.currentTarget).next(submenuSelector);\r\n\r\n            $(e.currentTarget).removeClass('action back');\r\n            submenu.removeClass('opened');\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _renderSubmenuActions: function () {\r\n            $.each(\r\n                $(this.options.itemWithSubmenu),\r\n                $.proxy(function (index, item) {\r\n                    var actions = $(mageTemplate(\r\n                            this.options.submenuActionsTemplate,\r\n                            {\r\n                                category: $('> a > span', item).text(),\r\n                                categoryURL: $('> a', item).attr('href')\r\n                            }\r\n                        )),\r\n                        submenu = $('> .submenu', item),\r\n                        items = $('> ul', submenu);\r\n\r\n                    items.prepend(actions);\r\n                }, this)\r\n            );\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _toggleMobileMode: function () {\r\n            this._expandMenu();\r\n\r\n            $(this.options.topLevelSubmenu, $(this.options.topLevel, this.element))\r\n                .removeAttr('style');\r\n\r\n            this.toggleAction.insertBefore(this.options.toggleActionPlaceholder);\r\n            this.mobileNav = $(this.element).detach().clone();\r\n            this.mainContainer.prepend(this.mobileNav);\r\n            this.mobileNav.find('> ul').addClass('nav');\r\n            this._insertExtraItems();\r\n            this._wrapItemsInSections();\r\n            this.mobileNav.scroll($.proxy(function () {\r\n                this._fixedBackLink();\r\n            }, this));\r\n\r\n            this._renderSubmenuActions();\r\n            this._bindDocumentEvents();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _toggleDesktopMode: function () {\r\n            this.mobileNav && this.mobileNav.remove();\r\n            this.toggleAction.detach();\r\n            $(this.element).insertAfter(this.options.origNavPlaceholder);\r\n\r\n            $(document)\r\n                .off('click.toggleMenu', '.action.toggle.nav')\r\n                .off('click.hideMenu', this.options.pageWrapper)\r\n                .off('click.showSubmenu', this.options.titleWithSubmenu)\r\n                .off('click.hideSubmenu', '.action.back');\r\n\r\n            this.eventsBound = false;\r\n\r\n            this._applySubmenuStyles();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _insertExtraItems: function () {\r\n            var settings, footerSettings, account;\r\n\r\n            if ($('.header.panel .switcher').length) {\r\n                settings = $('.header.panel .switcher')\r\n                    .clone()\r\n                    .addClass('settings');\r\n\r\n                this.mobileNav.prepend(settings);\r\n            }\r\n\r\n            if ($('.footer .switcher').length) {\r\n                footerSettings = $('.footer .switcher')\r\n                    .clone()\r\n                    .addClass('settings');\r\n\r\n                this.mobileNav.prepend(footerSettings);\r\n            }\r\n\r\n            if ($('.header.panel .header.links li').length) {\r\n                account = $('.header.panel > .header.links')\r\n                    .clone()\r\n                    .addClass('account');\r\n\r\n                this.mobileNav.prepend(account);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _wrapItemsInSections: function () {\r\n            var account = $('> .account', this.mobileNav),\r\n                settings = $('> .settings', this.mobileNav),\r\n                nav = $('> .nav', this.mobileNav),\r\n                navigationSectionsWrapper = $(mageTemplate(this.options.navigationSectionsWrapperTemplate, {})),\r\n                navigationItemWrapper;\r\n\r\n            this.mobileNav.append(navigationSectionsWrapper);\r\n\r\n            if (nav.length) {\r\n                navigationItemWrapper = $(mageTemplate(this.options.navigationItemWrapperTemplate, {\r\n                    title: 'Menu'\r\n                }));\r\n                navigationSectionsWrapper.append(navigationItemWrapper);\r\n                navigationItemWrapper.eq(1).append(nav);\r\n            }\r\n\r\n            if (account.length) {\r\n                navigationItemWrapper = $(mageTemplate(this.options.navigationItemWrapperTemplate, {\r\n                    title: 'Account'\r\n                }));\r\n                navigationSectionsWrapper.append(navigationItemWrapper);\r\n                navigationItemWrapper.eq(1).append(account);\r\n            }\r\n\r\n            if (settings.length) {\r\n                navigationItemWrapper = $(\r\n                    mageTemplate(this.options.navigationItemWrapperTemplate, {\r\n                        title: 'Settings'\r\n                    })\r\n                );\r\n                navigationSectionsWrapper.append(navigationItemWrapper);\r\n                navigationItemWrapper.eq(1).append(settings);\r\n            }\r\n\r\n            navigationSectionsWrapper.addClass(\r\n                'navigation-tabs-' + navigationSectionsWrapper.find('[data-section=\"title\"]').length\r\n            );\r\n            navigationSectionsWrapper.terms();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _fixedBackLink: function () {\r\n            var linksBack = this.mobileNav.find('.submenu .action.back'),\r\n                linkBack = this.mobileNav.find('.submenu.opened > ul > .action.back').last(),\r\n                subMenu, navOffset, linkBackHeight;\r\n\r\n            linksBack.removeClass('fixed');\r\n\r\n            if (linkBack.length) {\r\n                subMenu = linkBack.parent();\r\n                navOffset = this.mobileNav.find('.nav').position().top;\r\n                linkBackHeight = linkBack.height();\r\n\r\n                if (navOffset <= 0) {\r\n                    linkBack.addClass('fixed');\r\n                    subMenu.css({\r\n                        paddingTop: linkBackHeight\r\n                    });\r\n                } else {\r\n                    linkBack.removeClass('fixed');\r\n                    subMenu.css({\r\n                        paddingTop: 0\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.navigationMenu;\r\n});\r\n","knockoutjs/knockout-es5.js":"/*!\r\n * Knockout ES5 plugin - https://github.com/SteveSanderson/knockout-es5\r\n * Copyright (c) Steve Sanderson\r\n * MIT license\r\n */\r\n\r\n(function(global, undefined) {\r\n  'use strict';\r\n\r\n  var ko;\r\n\r\n  // Model tracking\r\n  // --------------\r\n  //\r\n  // This is the central feature of Knockout-ES5. We augment model objects by converting properties\r\n  // into ES5 getter/setter pairs that read/write an underlying Knockout observable. This means you can\r\n  // use plain JavaScript syntax to read/write the property while still getting the full benefits of\r\n  // Knockout's automatic dependency detection and notification triggering.\r\n  //\r\n  // For comparison, here's Knockout ES3-compatible syntax:\r\n  //\r\n  //     var firstNameLength = myModel.user().firstName().length; // Read\r\n  //     myModel.user().firstName('Bert'); // Write\r\n  //\r\n  // ... versus Knockout-ES5 syntax:\r\n  //\r\n  //     var firstNameLength = myModel.user.firstName.length; // Read\r\n  //     myModel.user.firstName = 'Bert'; // Write\r\n\r\n  // `ko.track(model)` converts each property on the given model object into a getter/setter pair that\r\n  // wraps a Knockout observable. Optionally specify an array of property names to wrap; otherwise we\r\n  // wrap all properties. If any of the properties are already observables, we replace them with\r\n  // ES5 getter/setter pairs that wrap your original observable instances. In the case of readonly\r\n  // ko.computed properties, we simply do not define a setter (so attempted writes will be ignored,\r\n  // which is how ES5 readonly properties normally behave).\r\n  //\r\n  // By design, this does *not* recursively walk child object properties, because making literally\r\n  // everything everywhere independently observable is usually unhelpful. When you do want to track\r\n  // child object properties independently, define your own class for those child objects and put\r\n  // a separate ko.track call into its constructor --- this gives you far more control.\r\n  /**\r\n   * @param {object} obj\r\n   * @param {object|array.<string>} propertyNamesOrSettings\r\n   * @param {boolean} propertyNamesOrSettings.deep Use deep track.\r\n   * @param {array.<string>} propertyNamesOrSettings.fields Array of property names to wrap.\r\n   * todo: @param {array.<string>} propertyNamesOrSettings.exclude Array of exclude property names to wrap.\r\n   * todo: @param {function(string, *):boolean} propertyNamesOrSettings.filter Function to filter property \r\n   *   names to wrap. A function that takes ... params\r\n   * @return {object}\r\n   */\r\n  function track(obj, propertyNamesOrSettings) {\r\n    if (!obj || typeof obj !== 'object') {\r\n      throw new Error('When calling ko.track, you must pass an object as the first parameter.');\r\n    }\r\n\r\n    var propertyNames;\r\n\r\n    if ( isPlainObject(propertyNamesOrSettings) ) {\r\n      // defaults\r\n      propertyNamesOrSettings.deep = propertyNamesOrSettings.deep || false;\r\n      propertyNamesOrSettings.fields = propertyNamesOrSettings.fields || Object.getOwnPropertyNames(obj);\r\n      propertyNamesOrSettings.lazy = propertyNamesOrSettings.lazy || false;\r\n\r\n      wrap(obj, propertyNamesOrSettings.fields, propertyNamesOrSettings);\r\n    } else {\r\n      propertyNames = propertyNamesOrSettings || Object.getOwnPropertyNames(obj);\r\n      wrap(obj, propertyNames, {});\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  // fix for ie\r\n  var rFunctionName = /^function\\s*([^\\s(]+)/;\r\n  function getFunctionName( ctor ){\r\n    if (ctor.name) {\r\n      return ctor.name;\r\n    }\r\n    return (ctor.toString().trim().match( rFunctionName ) || [])[1];\r\n  }\r\n\r\n  function canTrack(obj) {\r\n    return obj && typeof obj === 'object' && getFunctionName(obj.constructor) === 'Object';\r\n  }\r\n\r\n  function createPropertyDescriptor(originalValue, prop, map) {\r\n    var isObservable = ko.isObservable(originalValue);\r\n    var isArray = !isObservable && Array.isArray(originalValue);\r\n    var observable = isObservable ? originalValue\r\n        : isArray ? ko.observableArray(originalValue)\r\n        : ko.observable(originalValue);\r\n\r\n    map[prop] = function () { return observable; };\r\n\r\n    // add check in case the object is already an observable array\r\n    if (isArray || (isObservable && 'push' in observable)) {\r\n      notifyWhenPresentOrFutureArrayValuesMutate(ko, observable);\r\n    }\r\n\r\n    return {\r\n      configurable: true,\r\n      enumerable: true,\r\n      get: observable,\r\n      set: ko.isWriteableObservable(observable) ? observable : undefined\r\n    };\r\n  }\r\n\r\n  function createLazyPropertyDescriptor(originalValue, prop, map) {\r\n    if (ko.isObservable(originalValue)) {\r\n      // no need to be lazy if we already have an observable\r\n      return createPropertyDescriptor(originalValue, prop, map);\r\n    }\r\n\r\n    var observable;\r\n\r\n    function getOrCreateObservable(value, writing) {\r\n      if (observable) {\r\n        return writing ? observable(value) : observable;\r\n      }\r\n\r\n      if (Array.isArray(value)) {\r\n        observable = ko.observableArray(value);\r\n        notifyWhenPresentOrFutureArrayValuesMutate(ko, observable);\r\n        return observable;\r\n      }\r\n\r\n      return (observable = ko.observable(value));\r\n    }\r\n\r\n    map[prop] = function () { return getOrCreateObservable(originalValue); };\r\n    return {\r\n      configurable: true,\r\n      enumerable: true,\r\n      get: function () { return getOrCreateObservable(originalValue)(); },\r\n      set: function (value) { getOrCreateObservable(value, true); }\r\n    };\r\n  }\r\n\r\n  function wrap(obj, props, options) {\r\n    if (!props.length) {\r\n      return;\r\n    }\r\n\r\n    var allObservablesForObject = getAllObservablesForObject(obj, true);\r\n    var descriptors = {};\r\n\r\n    props.forEach(function (prop) {\r\n      // Skip properties that are already tracked\r\n      if (prop in allObservablesForObject) {\r\n        return;\r\n      }\r\n\r\n      // Skip properties where descriptor can't be redefined\r\n      if (Object.getOwnPropertyDescriptor(obj, prop).configurable === false){\r\n        return;\r\n      }\r\n\r\n      var originalValue = obj[prop];\r\n      descriptors[prop] = (options.lazy ? createLazyPropertyDescriptor : createPropertyDescriptor)\r\n        (originalValue, prop, allObservablesForObject);\r\n\r\n      if (options.deep && canTrack(originalValue)) {\r\n        wrap(originalValue, Object.keys(originalValue), options);\r\n      }\r\n    });\r\n\r\n    Object.defineProperties(obj, descriptors);\r\n  }\r\n\r\n  function isPlainObject( obj ){\r\n    return !!obj && typeof obj === 'object' && obj.constructor === Object;\r\n  }\r\n\r\n  // Lazily created by `getAllObservablesForObject` below. Has to be created lazily because the\r\n  // WeakMap factory isn't available until the module has finished loading (may be async).\r\n  var objectToObservableMap;\r\n\r\n  // Gets or creates the hidden internal key-value collection of observables corresponding to\r\n  // properties on the model object.\r\n  function getAllObservablesForObject(obj, createIfNotDefined) {\r\n    if (!objectToObservableMap) {\r\n      objectToObservableMap = weakMapFactory();\r\n    }\r\n\r\n    var result = objectToObservableMap.get(obj);\r\n    if (!result && createIfNotDefined) {\r\n      result = {};\r\n      objectToObservableMap.set(obj, result);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  // Removes the internal references to observables mapped to the specified properties\r\n  // or the entire object reference if no properties are passed in. This allows the\r\n  // observables to be replaced and tracked again.\r\n  function untrack(obj, propertyNames) {\r\n    if (!objectToObservableMap) {\r\n      return;\r\n    }\r\n\r\n    if (arguments.length === 1) {\r\n      objectToObservableMap['delete'](obj);\r\n    } else {\r\n      var allObservablesForObject = getAllObservablesForObject(obj, false);\r\n      if (allObservablesForObject) {\r\n        propertyNames.forEach(function(propertyName) {\r\n          delete allObservablesForObject[propertyName];\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  // Computed properties\r\n  // -------------------\r\n  //\r\n  // The preceding code is already sufficient to upgrade ko.computed model properties to ES5\r\n  // getter/setter pairs (or in the case of readonly ko.computed properties, just a getter).\r\n  // These then behave like a regular property with a getter function, except they are smarter:\r\n  // your evaluator is only invoked when one of its dependencies changes. The result is cached\r\n  // and used for all evaluations until the next time a dependency changes).\r\n  //\r\n  // However, instead of forcing developers to declare a ko.computed property explicitly, it's\r\n  // nice to offer a utility function that declares a computed getter directly.\r\n\r\n  // Implements `ko.defineProperty`\r\n  function defineComputedProperty(obj, propertyName, evaluatorOrOptions) {\r\n    var ko = this,\r\n      computedOptions = { owner: obj, deferEvaluation: true };\r\n\r\n    if (typeof evaluatorOrOptions === 'function') {\r\n      computedOptions.read = evaluatorOrOptions;\r\n    } else {\r\n      if ('value' in evaluatorOrOptions) {\r\n        throw new Error('For ko.defineProperty, you must not specify a \"value\" for the property. ' +\r\n                        'You must provide a \"get\" function.');\r\n      }\r\n\r\n      if (typeof evaluatorOrOptions.get !== 'function') {\r\n        throw new Error('For ko.defineProperty, the third parameter must be either an evaluator function, ' +\r\n                        'or an options object containing a function called \"get\".');\r\n      }\r\n\r\n      computedOptions.read = evaluatorOrOptions.get;\r\n      computedOptions.write = evaluatorOrOptions.set;\r\n    }\r\n\r\n    obj[propertyName] = ko.computed(computedOptions);\r\n    track.call(ko, obj, [propertyName]);\r\n    return obj;\r\n  }\r\n\r\n  // Array handling\r\n  // --------------\r\n  //\r\n  // Arrays are special, because unlike other property types, they have standard mutator functions\r\n  // (`push`/`pop`/`splice`/etc.) and it's desirable to trigger a change notification whenever one of\r\n  // those mutator functions is invoked.\r\n  //\r\n  // Traditionally, Knockout handles this by putting special versions of `push`/`pop`/etc. on observable\r\n  // arrays that mutate the underlying array and then trigger a notification. That approach doesn't\r\n  // work for Knockout-ES5 because properties now return the underlying arrays, so the mutator runs\r\n  // in the context of the underlying array, not any particular observable:\r\n  //\r\n  //     // Operates on the underlying array value\r\n  //     myModel.someCollection.push('New value');\r\n  //\r\n  // To solve this, Knockout-ES5 detects array values, and modifies them as follows:\r\n  //  1. Associates a hidden subscribable with each array instance that it encounters\r\n  //  2. Intercepts standard mutators (`push`/`pop`/etc.) and makes them trigger the subscribable\r\n  // Then, for model properties whose values are arrays, the property's underlying observable\r\n  // subscribes to the array subscribable, so it can trigger a change notification after mutation.\r\n\r\n  // Given an observable that underlies a model property, watch for any array value that might\r\n  // be assigned as the property value, and hook into its change events\r\n  function notifyWhenPresentOrFutureArrayValuesMutate(ko, observable) {\r\n    var watchingArraySubscription = null;\r\n    ko.computed(function () {\r\n      // Unsubscribe to any earlier array instance\r\n      if (watchingArraySubscription) {\r\n        watchingArraySubscription.dispose();\r\n        watchingArraySubscription = null;\r\n      }\r\n\r\n      // Subscribe to the new array instance\r\n      var newArrayInstance = observable();\r\n      if (newArrayInstance instanceof Array) {\r\n        watchingArraySubscription = startWatchingArrayInstance(ko, observable, newArrayInstance);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Listens for array mutations, and when they happen, cause the observable to fire notifications.\r\n  // This is used to make model properties of type array fire notifications when the array changes.\r\n  // Returns a subscribable that can later be disposed.\r\n  function startWatchingArrayInstance(ko, observable, arrayInstance) {\r\n    var subscribable = getSubscribableForArray(ko, arrayInstance);\r\n    return subscribable.subscribe(observable);\r\n  }\r\n\r\n  // Lazily created by `getSubscribableForArray` below. Has to be created lazily because the\r\n  // WeakMap factory isn't available until the module has finished loading (may be async).\r\n  var arraySubscribablesMap;\r\n\r\n  // Gets or creates a subscribable that fires after each array mutation\r\n  function getSubscribableForArray(ko, arrayInstance) {\r\n    if (!arraySubscribablesMap) {\r\n      arraySubscribablesMap = weakMapFactory();\r\n    }\r\n\r\n    var subscribable = arraySubscribablesMap.get(arrayInstance);\r\n    if (!subscribable) {\r\n      subscribable = new ko.subscribable();\r\n      arraySubscribablesMap.set(arrayInstance, subscribable);\r\n\r\n      var notificationPauseSignal = {};\r\n      wrapStandardArrayMutators(arrayInstance, subscribable, notificationPauseSignal);\r\n      addKnockoutArrayMutators(ko, arrayInstance, subscribable, notificationPauseSignal);\r\n    }\r\n\r\n    return subscribable;\r\n  }\r\n\r\n  // After each array mutation, fires a notification on the given subscribable\r\n  function wrapStandardArrayMutators(arrayInstance, subscribable, notificationPauseSignal) {\r\n    ['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'].forEach(function(fnName) {\r\n      var origMutator = arrayInstance[fnName];\r\n      arrayInstance[fnName] = function() {\r\n        var result = origMutator.apply(this, arguments);\r\n        if (notificationPauseSignal.pause !== true) {\r\n          subscribable.notifySubscribers(this);\r\n        }\r\n        return result;\r\n      };\r\n    });\r\n  }\r\n\r\n  // Adds Knockout's additional array mutation functions to the array\r\n  function addKnockoutArrayMutators(ko, arrayInstance, subscribable, notificationPauseSignal) {\r\n    ['remove', 'removeAll', 'destroy', 'destroyAll', 'replace'].forEach(function(fnName) {\r\n      // Make it a non-enumerable property for consistency with standard Array functions\r\n      Object.defineProperty(arrayInstance, fnName, {\r\n        enumerable: false,\r\n        value: function() {\r\n          var result;\r\n\r\n          // These additional array mutators are built using the underlying push/pop/etc.\r\n          // mutators, which are wrapped to trigger notifications. But we don't want to\r\n          // trigger multiple notifications, so pause the push/pop/etc. wrappers and\r\n          // delivery only one notification at the end of the process.\r\n          notificationPauseSignal.pause = true;\r\n          try {\r\n            // Creates a temporary observableArray that can perform the operation.\r\n            result = ko.observableArray.fn[fnName].apply(ko.observableArray(arrayInstance), arguments);\r\n          }\r\n          finally {\r\n            notificationPauseSignal.pause = false;\r\n          }\r\n          subscribable.notifySubscribers(arrayInstance);\r\n          return result;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Static utility functions\r\n  // ------------------------\r\n  //\r\n  // Since Knockout-ES5 sets up properties that return values, not observables, you can't\r\n  // trivially subscribe to the underlying observables (e.g., `someProperty.subscribe(...)`),\r\n  // or tell them that object values have mutated, etc. To handle this, we set up some\r\n  // extra utility functions that can return or work with the underlying observables.\r\n\r\n  // Returns the underlying observable associated with a model property (or `null` if the\r\n  // model or property doesn't exist, or isn't associated with an observable). This means\r\n  // you can subscribe to the property, e.g.:\r\n  //\r\n  //     ko.getObservable(model, 'propertyName')\r\n  //       .subscribe(function(newValue) { ... });\r\n  function getObservable(obj, propertyName) {\r\n    if (!obj || typeof obj !== 'object') {\r\n      return null;\r\n    }\r\n\r\n    var allObservablesForObject = getAllObservablesForObject(obj, false);\r\n    if (allObservablesForObject && propertyName in allObservablesForObject) {\r\n      return allObservablesForObject[propertyName]();\r\n    }\r\n\r\n    return null;\r\n  }\r\n  \r\n  // Returns a boolean indicating whether the property on the object has an underlying\r\n  // observables. This does the check in a way not to create an observable if the\r\n  // object was created with lazily created observables\r\n  function isTracked(obj, propertyName) {\r\n    if (!obj || typeof obj !== 'object') {\r\n      return false;\r\n    }\r\n    \r\n    var allObservablesForObject = getAllObservablesForObject(obj, false);\r\n    return !!allObservablesForObject && propertyName in allObservablesForObject;\r\n  }\r\n\r\n  // Causes a property's associated observable to fire a change notification. Useful when\r\n  // the property value is a complex object and you've modified a child property.\r\n  function valueHasMutated(obj, propertyName) {\r\n    var observable = getObservable(obj, propertyName);\r\n\r\n    if (observable) {\r\n      observable.valueHasMutated();\r\n    }\r\n  }\r\n\r\n  // Module initialisation\r\n  // ---------------------\r\n  //\r\n  // When this script is first evaluated, it works out what kind of module loading scenario\r\n  // it is in (Node.js or a browser `<script>` tag), stashes a reference to its dependencies\r\n  // (currently that's just the WeakMap shim), and then finally attaches itself to whichever\r\n  // instance of Knockout.js it can find.\r\n\r\n  // A function that returns a new ES6-compatible WeakMap instance (using ES5 shim if needed).\r\n  // Instantiated by prepareExports, accounting for which module loader is being used.\r\n  var weakMapFactory;\r\n\r\n  // Extends a Knockout instance with Knockout-ES5 functionality\r\n  function attachToKo(ko) {\r\n    ko.track = track;\r\n    ko.untrack = untrack;\r\n    ko.getObservable = getObservable;\r\n    ko.valueHasMutated = valueHasMutated;\r\n    ko.defineProperty = defineComputedProperty;\r\n\r\n    // todo: test it, maybe added it to ko. directly\r\n    ko.es5 = {\r\n      getAllObservablesForObject: getAllObservablesForObject,\r\n      notifyWhenPresentOrFutureArrayValuesMutate: notifyWhenPresentOrFutureArrayValuesMutate,\r\n      isTracked: isTracked\r\n    };\r\n  }\r\n\r\n  // Determines which module loading scenario we're in, grabs dependencies, and attaches to KO\r\n  function prepareExports() {\r\n    if (typeof exports === 'object' && typeof module === 'object') {\r\n      // Node.js case - load KO and WeakMap modules synchronously\r\n      ko = require('knockout');\r\n      var WM = require('../lib/weakmap');\r\n      attachToKo(ko);\r\n      weakMapFactory = function() { return new WM(); };\r\n      module.exports = ko;\r\n    } else if (typeof define === 'function' && define.amd) {\r\n      define(['knockout'], function(koModule) {\r\n        ko = koModule;\r\n        attachToKo(koModule);\r\n        weakMapFactory = function() { return new global.WeakMap(); };\r\n        return koModule;\r\n      });\r\n    } else if ('ko' in global) {\r\n      // Non-module case - attach to the global instance, and assume a global WeakMap constructor\r\n      ko = global.ko;\r\n      attachToKo(global.ko);\r\n      weakMapFactory = function() { return new global.WeakMap(); };\r\n    }\r\n  }\r\n\r\n  prepareExports();\r\n\r\n})(this);","knockoutjs/knockout-fast-foreach.js":"/*!\r\n  Knockout Fast Foreach v0.4.1 (2015-07-17T14:06:15.974Z)\r\n  By: Brian M Hunt (C) 2015\r\n  License: MIT\r\n\r\n  Adds `fastForEach` to `ko.bindingHandlers`.\r\n*/\r\n(function (root, factory) {\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(['knockout'], factory);\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = factory(require('knockout'));\r\n  } else {\r\n    root.KnockoutFastForeach = factory(root.ko);\r\n  }\r\n}(this, function (ko) {\r\n  \"use strict\";\r\n// index.js\r\n// --------\r\n// Fast For Each\r\n//\r\n// Employing sound techniques to make a faster Knockout foreach binding.\r\n// --------\r\n\r\n//      Utilities\r\n\r\n// from https://github.com/jonschlinkert/is-plain-object\r\nfunction isPlainObject(o) {\r\n  return !!o && typeof o === 'object' && o.constructor === Object;\r\n}\r\n\r\n// From knockout/src/virtualElements.js\r\nvar commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\r\nvar startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\r\nvar supportsDocumentFragment = document && typeof document.createDocumentFragment === \"function\";\r\nfunction isVirtualNode(node) {\r\n  return (node.nodeType === 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\r\n}\r\n\r\n\r\n// Get a copy of the (possibly virtual) child nodes of the given element,\r\n// put them into a container, then empty the given node.\r\nfunction makeTemplateNode(sourceNode) {\r\n  var container = document.createElement(\"div\");\r\n  var parentNode;\r\n  if (sourceNode.content) {\r\n    // For e.g. <template> tags\r\n    parentNode = sourceNode.content;\r\n  } else if (sourceNode.tagName === 'SCRIPT') {\r\n    parentNode = document.createElement(\"div\");\r\n    parentNode.innerHTML = sourceNode.text;\r\n  } else {\r\n    // Anything else e.g. <div>\r\n    parentNode = sourceNode;\r\n  }\r\n  ko.utils.arrayForEach(ko.virtualElements.childNodes(parentNode), function (child) {\r\n    // FIXME - This cloneNode could be expensive; we may prefer to iterate over the\r\n    // parentNode children in reverse (so as not to foul the indexes as childNodes are\r\n    // removed from parentNode when inserted into the container)\r\n    if (child) {\r\n      container.insertBefore(child.cloneNode(true), null);\r\n    }\r\n  });\r\n  return container;\r\n}\r\n\r\nfunction insertAllAfter(containerNode, nodeOrNodeArrayToInsert, insertAfterNode) {\r\n  var frag, len, i;\r\n  // poor man's node and array check, should be enough for this\r\n  if (typeof nodeOrNodeArrayToInsert.nodeType !== \"undefined\" && typeof nodeOrNodeArrayToInsert.length === \"undefined\") {\r\n    throw new Error(\"Expected a single node or a node array\");\r\n  }\r\n\r\n  if (typeof nodeOrNodeArrayToInsert.nodeType !== \"undefined\") {\r\n    ko.virtualElements.insertAfter(containerNode, nodeOrNodeArrayToInsert, insertAfterNode);\r\n    return;\r\n  }\r\n\r\n  if (nodeOrNodeArrayToInsert.length === 1) {\r\n    ko.virtualElements.insertAfter(containerNode, nodeOrNodeArrayToInsert[0], insertAfterNode);\r\n    return;\r\n  }\r\n\r\n  if (supportsDocumentFragment) {\r\n    frag = document.createDocumentFragment();\r\n\r\n    for (i = 0, len = nodeOrNodeArrayToInsert.length; i !== len; ++i) {\r\n      frag.appendChild(nodeOrNodeArrayToInsert[i]);\r\n    }\r\n    ko.virtualElements.insertAfter(containerNode, frag, insertAfterNode);\r\n  } else {\r\n    // Nodes are inserted in reverse order - pushed down immediately after\r\n    // the last node for the previous item or as the first node of element.\r\n    for (i = nodeOrNodeArrayToInsert.length - 1; i >= 0; --i) {\r\n      var child = nodeOrNodeArrayToInsert[i];\r\n      if (!child) {\r\n        return;\r\n      }\r\n      ko.virtualElements.insertAfter(containerNode, child, insertAfterNode);\r\n    }\r\n  }\r\n}\r\n\r\n// Mimic a KO change item 'add'\r\nfunction valueToChangeAddItem(value, index) {\r\n  return {\r\n    status: 'added',\r\n    value: value,\r\n    index: index\r\n  };\r\n}\r\n\r\nfunction isAdditionAdjacentToLast(changeIndex, arrayChanges) {\r\n  return changeIndex > 0 &&\r\n    changeIndex < arrayChanges.length &&\r\n    arrayChanges[changeIndex].status === \"added\" &&\r\n    arrayChanges[changeIndex - 1].status === \"added\" &&\r\n    arrayChanges[changeIndex - 1].index === arrayChanges[changeIndex].index - 1;\r\n}\r\n\r\nfunction FastForEach(spec) {\r\n  this.element = spec.element;\r\n  this.container = isVirtualNode(this.element) ?\r\n                   this.element.parentNode : this.element;\r\n  this.$context = spec.$context;\r\n  this.data = spec.data;\r\n  this.as = spec.as;\r\n  this.noContext = spec.noContext;\r\n  this.templateNode = makeTemplateNode(\r\n    spec.name ? document.getElementById(spec.name).cloneNode(true) : spec.element\r\n  );\r\n  this.afterQueueFlush = spec.afterQueueFlush;\r\n  this.beforeQueueFlush = spec.beforeQueueFlush;\r\n  this.changeQueue = [];\r\n  this.lastNodesList = [];\r\n  this.indexesToDelete = [];\r\n  this.rendering_queued = false;\r\n\r\n  // Remove existing content.\r\n  ko.virtualElements.emptyNode(this.element);\r\n\r\n  // Prime content\r\n  var primeData = ko.unwrap(this.data);\r\n  if (primeData.map) {\r\n    this.onArrayChange(primeData.map(valueToChangeAddItem));\r\n  }\r\n\r\n  // Watch for changes\r\n  if (ko.isObservable(this.data)) {\r\n    if (!this.data.indexOf) {\r\n      // Make sure the observable is trackable.\r\n      this.data = this.data.extend({trackArrayChanges: true});\r\n    }\r\n    this.changeSubs = this.data.subscribe(this.onArrayChange, this, 'arrayChange');\r\n  }\r\n}\r\n\r\n\r\nFastForEach.animateFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\r\n  window.mozRequestAnimationFrame || window.msRequestAnimationFrame ||\r\n  function(cb) { return window.setTimeout(cb, 1000 / 60); };\r\n\r\n\r\nFastForEach.prototype.dispose = function () {\r\n  if (this.changeSubs) {\r\n    this.changeSubs.dispose();\r\n  }\r\n};\r\n\r\n\r\n// If the array changes we register the change.\r\nFastForEach.prototype.onArrayChange = function (changeSet) {\r\n  var self = this;\r\n  var changeMap = {\r\n    added: [],\r\n    deleted: []\r\n  };\r\n  for (var i = 0, len = changeSet.length; i < len; i++) {\r\n    // the change is appended to a last change info object when both are 'added' and have indexes next to each other\r\n    // here I presume that ko is sending changes in monotonic order (in index variable) which happens to be true, tested with push and splice with multiple pushed values\r\n    if (isAdditionAdjacentToLast(i, changeSet)) {\r\n      var batchValues = changeMap.added[changeMap.added.length - 1].values;\r\n      if (!batchValues) {\r\n        // transform the last addition into a batch addition object\r\n        var lastAddition = changeMap.added.pop();\r\n        var batchAddition = {\r\n          isBatch: true,\r\n          status: 'added',\r\n          index: lastAddition.index,\r\n          values: [lastAddition.value]\r\n        };\r\n        batchValues = batchAddition.values;\r\n        changeMap.added.push(batchAddition);\r\n      }\r\n      batchValues.push(changeSet[i].value);\r\n    } else {\r\n      changeMap[changeSet[i].status].push(changeSet[i]);\r\n    }\r\n  }\r\n  if (changeMap.deleted.length > 0) {\r\n    this.changeQueue.push.apply(this.changeQueue, changeMap.deleted);\r\n    this.changeQueue.push({status: 'clearDeletedIndexes'});\r\n  }\r\n  this.changeQueue.push.apply(this.changeQueue, changeMap.added);\r\n  // Once a change is registered, the ticking count-down starts for the processQueue.\r\n  if (this.changeQueue.length > 0 && !this.rendering_queued) {\r\n    this.rendering_queued = true;\r\n    FastForEach.animateFrame.call(window, function () { self.processQueue(); });\r\n  }\r\n};\r\n\r\n\r\n// Reflect all the changes in the queue in the DOM, then wipe the queue.\r\nFastForEach.prototype.processQueue = function () {\r\n  var self = this;\r\n\r\n  // Callback so folks can do things before the queue flush.\r\n  if (typeof this.beforeQueueFlush === 'function') {\r\n    this.beforeQueueFlush(this.changeQueue);\r\n  }\r\n\r\n  ko.utils.arrayForEach(this.changeQueue, function (changeItem) {\r\n    // console.log(self.data(), \"CI\", JSON.stringify(changeItem, null, 2), JSON.stringify($(self.element).text()))\r\n    self[changeItem.status](changeItem);\r\n    // console.log(\"  ==> \", JSON.stringify($(self.element).text()))\r\n  });\r\n  this.rendering_queued = false;\r\n  // Callback so folks can do things.\r\n  if (typeof this.afterQueueFlush === 'function') {\r\n    this.afterQueueFlush(this.changeQueue);\r\n  }\r\n  this.changeQueue = [];\r\n};\r\n\r\n\r\n// Process a changeItem with {status: 'added', ...}\r\nFastForEach.prototype.added = function (changeItem) {\r\n  var index = changeItem.index;\r\n  var valuesToAdd = changeItem.isBatch ? changeItem.values : [changeItem.value];\r\n  var referenceElement = this.lastNodesList[index - 1] || null;\r\n  // gather all childnodes for a possible batch insertion\r\n  var allChildNodes = [];\r\n\r\n  for (var i = 0, len = valuesToAdd.length; i < len; ++i) {\r\n    var templateClone = this.templateNode.cloneNode(true);\r\n    var childContext;\r\n\r\n    if (this.noContext) {\r\n      childContext = this.$context.extend({\r\n        '$item': valuesToAdd[i]\r\n      });\r\n    } else {\r\n      childContext = this.$context.createChildContext(valuesToAdd[i], this.as || null);\r\n    }\r\n\r\n    // apply bindings first, and then process child nodes, because bindings can add childnodes\r\n    ko.applyBindingsToDescendants(childContext, templateClone);\r\n\r\n    var childNodes = ko.virtualElements.childNodes(templateClone);\r\n    // Note discussion at https://github.com/angular/angular.js/issues/7851\r\n    allChildNodes.push.apply(allChildNodes, Array.prototype.slice.call(childNodes));\r\n    this.lastNodesList.splice(index + i, 0, childNodes[childNodes.length - 1]);\r\n  }\r\n\r\n  insertAllAfter(this.element, allChildNodes, referenceElement);\r\n};\r\n\r\n\r\n// Process a changeItem with {status: 'deleted', ...}\r\nFastForEach.prototype.deleted = function (changeItem) {\r\n  var index = changeItem.index;\r\n  var ptr = this.lastNodesList[index],\r\n      // We use this.element because that will be the last previous node\r\n      // for virtual element lists.\r\n      lastNode = this.lastNodesList[index - 1] || this.element;\r\n  do {\r\n    ptr = ptr.previousSibling;\r\n    ko.removeNode((ptr && ptr.nextSibling) || ko.virtualElements.firstChild(this.element));\r\n  } while (ptr && ptr !== lastNode);\r\n  // The \"last node\" in the DOM from which we begin our delets of the next adjacent node is\r\n  // now the sibling that preceded the first node of this item.\r\n  this.lastNodesList[index] = this.lastNodesList[index - 1];\r\n  this.indexesToDelete.push(index);\r\n};\r\n\r\n\r\n// We batch our deletion of item indexes in our parallel array.\r\n// See brianmhunt/knockout-fast-foreach#6/#8\r\nFastForEach.prototype.clearDeletedIndexes = function () {\r\n  // We iterate in reverse on the presumption (following the unit tests) that KO's diff engine\r\n  // processes diffs (esp. deletes) monotonically ascending i.e. from index 0 -> N.\r\n  for (var i = this.indexesToDelete.length - 1; i >= 0; --i) {\r\n    this.lastNodesList.splice(this.indexesToDelete[i], 1);\r\n  }\r\n  this.indexesToDelete = [];\r\n};\r\n\r\n\r\nko.bindingHandlers.fastForEach = {\r\n  // Valid valueAccessors:\r\n  //    []\r\n  //    ko.observable([])\r\n  //    ko.observableArray([])\r\n  //    ko.computed\r\n  //    {data: array, name: string, as: string}\r\n  init: function init(element, valueAccessor, bindings, vm, context) {\r\n    var value = valueAccessor(),\r\n        ffe;\r\n    if (isPlainObject(value)) {\r\n      value.element = value.element || element;\r\n      value.$context = context;\r\n      ffe = new FastForEach(value);\r\n    } else {\r\n      ffe = new FastForEach({\r\n        element: element,\r\n        data: ko.unwrap(context.$rawData) === value ? context.$rawData : value,\r\n        $context: context\r\n      });\r\n    }\r\n    ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n      ffe.dispose();\r\n    });\r\n    return {controlsDescendantBindings: true};\r\n  },\r\n\r\n  // Export for testing, debugging, and overloading.\r\n  FastForEach: FastForEach\r\n};\r\n\r\nko.virtualElements.allowedBindings.fastForEach = true;\r\n}));","knockoutjs/knockout-repeat.js":"// REPEAT binding for Knockout http://knockoutjs.com/\r\n// (c) Michael Best\r\n// License: MIT (http://www.opensource.org/licenses/mit-license.php)\r\n// Version 2.1.0\r\n\r\n(function(factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // [1] AMD anonymous module\r\n        define(['knockout'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        // [2] commonJS\r\n        factory(require('knockout'));\r\n    } else {\r\n        // [3] No module loader (plain <script> tag) - put directly in global namespace\r\n        factory(window.ko);\r\n    }\r\n})(function(ko) {\r\n\r\nif (!ko.virtualElements)\r\n    throw Error('Repeat requires at least Knockout 2.1');\r\n\r\nvar ko_bindingFlags = ko.bindingFlags || {};\r\nvar ko_unwrap = ko.utils.unwrapObservable;\r\n\r\nvar koProtoName = '__ko_proto__';\r\n\r\nif (ko.version >= \"3.0.0\") {\r\n    // In Knockout 3.0.0, use the node preprocessor to replace a node with a repeat binding with a virtual element\r\n    var provider = ko.bindingProvider.instance, previousPreprocessFn = provider.preprocessNode;\r\n    provider.preprocessNode = function(node) {\r\n        var newNodes, nodeBinding;\r\n        if (!previousPreprocessFn || !(newNodes = previousPreprocessFn.call(this, node))) {\r\n            if (node.nodeType === 1 && (nodeBinding = node.getAttribute('data-bind'))) {\r\n                if (/^\\s*repeat\\s*:/.test(nodeBinding)) {\r\n                    var leadingComment = node.ownerDocument.createComment('ko ' + nodeBinding),\r\n                        trailingComment = node.ownerDocument.createComment('/ko');\r\n                    node.parentNode.insertBefore(leadingComment, node);\r\n                    node.parentNode.insertBefore(trailingComment, node.nextSibling);\r\n                    node.removeAttribute('data-bind');\r\n                    newNodes = [leadingComment, node, trailingComment];\r\n                }\r\n            }\r\n        }\r\n        return newNodes;\r\n    };\r\n}\r\n\r\nko.virtualElements.allowedBindings.repeat = true;\r\nko.bindingHandlers.repeat = {\r\n    flags: ko_bindingFlags.contentBind | ko_bindingFlags.canUseVirtual,\r\n    init: function(element, valueAccessor, allBindingsAccessor, xxx, bindingContext) {\r\n\r\n        // Read and set fixed options--these options cannot be changed\r\n        var repeatParam = ko_unwrap(valueAccessor());\r\n        if (repeatParam && typeof repeatParam == 'object' && !('length' in repeatParam)) {\r\n            var repeatIndex = repeatParam.index,\r\n                repeatData = repeatParam.item,\r\n                repeatStep = repeatParam.step,\r\n                repeatReversed = repeatParam.reverse,\r\n                repeatBind = repeatParam.bind,\r\n                repeatInit = repeatParam.init,\r\n                repeatUpdate = repeatParam.update;\r\n        }\r\n        // Set default values for options that need it\r\n        repeatIndex = repeatIndex || '$index';\r\n        repeatData = repeatData || ko.bindingHandlers.repeat.itemName || '$item';\r\n        repeatStep = repeatStep || 1;\r\n        repeatReversed = repeatReversed || false;\r\n\r\n        var parent = element.parentNode, placeholder;\r\n        if (element.nodeType == 8) {    // virtual element\r\n            // Extract the \"children\" and find the single element node\r\n            var childNodes = ko.utils.arrayFilter(ko.virtualElements.childNodes(element), function(node) { return node.nodeType == 1;});\r\n            if (childNodes.length !== 1) {\r\n                throw Error(\"Repeat binding requires a single element to repeat\");\r\n            }\r\n            ko.virtualElements.emptyNode(element);\r\n\r\n            // The placeholder is the closing comment normally, or the opening comment if reversed\r\n            placeholder = repeatReversed ? element : element.nextSibling;\r\n            // The element to repeat is the contained element\r\n            element = childNodes[0];\r\n        } else {    // regular element\r\n            // First clean the element node and remove node's binding\r\n            var origBindString = element.getAttribute('data-bind');\r\n            ko.cleanNode(element);\r\n            element.removeAttribute('data-bind');\r\n\r\n            // Original element is no longer needed: delete it and create a placeholder comment\r\n            placeholder = element.ownerDocument.createComment('ko_repeatplaceholder ' + origBindString);\r\n            parent.replaceChild(placeholder, element);\r\n        }\r\n\r\n        // extract and remove a data-repeat-bind attribute, if present\r\n        if (!repeatBind) {\r\n            repeatBind = element.getAttribute('data-repeat-bind');\r\n            if (repeatBind) {\r\n                element.removeAttribute('data-repeat-bind');\r\n            }\r\n        }\r\n\r\n        // Make a copy of the element node to be copied for each repetition\r\n        var cleanNode = element.cloneNode(true);\r\n        if (typeof repeatBind == \"string\") {\r\n            cleanNode.setAttribute('data-bind', repeatBind);\r\n            repeatBind = null;\r\n        }\r\n\r\n        // Set up persistent data\r\n        var lastRepeatCount = 0,\r\n            notificationObservable = ko.observable(),\r\n            repeatArray, arrayObservable;\r\n\r\n        if (repeatInit) {\r\n            repeatInit(parent);\r\n        }\r\n\r\n        var subscribable = ko.computed(function() {\r\n            function makeArrayItemAccessor(index) {\r\n                var f = function(newValue) {\r\n                    var item = repeatArray[index];\r\n                    // Reading the value of the item\r\n                    if (!arguments.length) {\r\n                        notificationObservable();   // for dependency tracking\r\n                        return ko_unwrap(item);\r\n                    }\r\n                    // Writing a value to the item\r\n                    if (ko.isObservable(item)) {\r\n                        item(newValue);\r\n                    } else if (arrayObservable && arrayObservable.splice) {\r\n                        arrayObservable.splice(index, 1, newValue);\r\n                    } else {\r\n                        repeatArray[index] = newValue;\r\n                    }\r\n                    return this;\r\n                };\r\n                // Pretend that our accessor function is an observable\r\n                f[koProtoName] = ko.observable;\r\n                return f;\r\n            }\r\n\r\n            function makeBinding(item, index, context) {\r\n                return repeatArray\r\n                    ? function() { return repeatBind.call(bindingContext.$data, item, index, context); }\r\n                    : function() { return repeatBind.call(bindingContext.$data, index, context); }\r\n            }\r\n\r\n            // Read and set up variable options--these options can change and will update the binding\r\n            var paramObservable = valueAccessor(), repeatParam = ko_unwrap(paramObservable), repeatCount = 0;\r\n            if (repeatParam && typeof repeatParam == 'object') {\r\n                if ('length' in repeatParam) {\r\n                    repeatArray = repeatParam;\r\n                    repeatCount = repeatArray.length;\r\n                } else {\r\n                    if ('foreach' in repeatParam) {\r\n                        repeatArray = ko_unwrap(paramObservable = repeatParam.foreach);\r\n                        if (repeatArray && typeof repeatArray == 'object' && 'length' in repeatArray) {\r\n                            repeatCount = repeatArray.length || 0;\r\n                        } else {\r\n                            repeatCount = repeatArray || 0;\r\n                            repeatArray = null;\r\n                        }\r\n                    }\r\n                    // If a count value is provided (>0), always output that number of items\r\n                    if ('count' in repeatParam)\r\n                        repeatCount = ko_unwrap(repeatParam.count) || repeatCount;\r\n                    // If a limit is provided, don't output more than the limit\r\n                    if ('limit' in repeatParam)\r\n                        repeatCount = Math.min(repeatCount, ko_unwrap(repeatParam.limit)) || repeatCount;\r\n                }\r\n                arrayObservable = repeatArray && ko.isObservable(paramObservable) ? paramObservable : null;\r\n            } else {\r\n                repeatCount = repeatParam || 0;\r\n            }\r\n\r\n            // Remove nodes from end if array is shorter\r\n            for (; lastRepeatCount > repeatCount; lastRepeatCount-=repeatStep) {\r\n                ko.removeNode(repeatReversed ? placeholder.nextSibling : placeholder.previousSibling);\r\n            }\r\n\r\n            // Notify existing nodes of change\r\n            notificationObservable.notifySubscribers();\r\n\r\n            // Add nodes to end if array is longer (also initially populates nodes)\r\n            for (; lastRepeatCount < repeatCount; lastRepeatCount+=repeatStep) {\r\n                // Clone node and add to document\r\n                var newNode = cleanNode.cloneNode(true);\r\n                parent.insertBefore(newNode, repeatReversed ? placeholder.nextSibling : placeholder);\r\n                newNode.setAttribute('data-repeat-index', lastRepeatCount);\r\n\r\n                // Apply bindings to inserted node\r\n                if (repeatArray && repeatData == '$data') {\r\n                    var newContext = bindingContext.createChildContext(makeArrayItemAccessor(lastRepeatCount));\r\n                } else {\r\n                    var newContext = bindingContext.extend();\r\n                    if (repeatArray)\r\n                        newContext[repeatData] = makeArrayItemAccessor(lastRepeatCount);\r\n                }\r\n                newContext[repeatIndex] = lastRepeatCount;\r\n                if (repeatBind) {\r\n                    var result = ko.applyBindingsToNode(newNode, makeBinding(newContext[repeatData], lastRepeatCount, newContext), newContext, true),\r\n                        shouldBindDescendants = result && result.shouldBindDescendants;\r\n                }\r\n                if (!repeatBind || (result && shouldBindDescendants !== false)) {\r\n                    ko.applyBindings(newContext, newNode);\r\n                }\r\n            }\r\n            if (repeatUpdate) {\r\n                repeatUpdate(parent);\r\n            }\r\n        }, null, {disposeWhenNodeIsRemoved: placeholder});\r\n\r\n        return { controlsDescendantBindings: true, subscribable: subscribable };\r\n    }\r\n};\r\n});","knockoutjs/knockout.js":"/*!\r\n * Knockout JavaScript library v3.5.1\r\n * (c) The Knockout.js team - http://knockoutjs.com/\r\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\r\n */\r\n\r\n(function(){\r\n    var DEBUG=true;\r\n    (function(undefined){\r\n        // (0, eval)('this') is a robust way of getting a reference to the global object\r\n        // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023\r\n        var window = this || (0, eval)('this'),\r\n            document = window['document'],\r\n            navigator = window['navigator'],\r\n            jQueryInstance = window[\"jQuery\"],\r\n            JSON = window[\"JSON\"];\r\n\r\n        if (!jQueryInstance && typeof jQuery !== \"undefined\") {\r\n            jQueryInstance = jQuery;\r\n        }\r\n        (function(factory) {\r\n            // Support three module loading scenarios\r\n            if (typeof define === 'function' && define['amd']) {\r\n                // [1] AMD anonymous module\r\n                define(['exports', 'require'], factory);\r\n            } else if (typeof exports === 'object' && typeof module === 'object') {\r\n                // [2] CommonJS/Node.js\r\n                factory(module['exports'] || exports);  // module.exports is for Node.js\r\n            } else {\r\n                // [3] No module loader (plain <script> tag) - put directly in global namespace\r\n                factory(window['ko'] = {});\r\n            }\r\n        }(function(koExports, amdRequire){\r\n// Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\r\n// In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\r\n            var ko = typeof koExports !== 'undefined' ? koExports : {};\r\n// Google Closure Compiler helpers (used only to make the minified file smaller)\r\n            ko.exportSymbol = function(koPath, object) {\r\n                var tokens = koPath.split(\".\");\r\n\r\n                // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\r\n                // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\r\n                var target = ko;\r\n\r\n                for (var i = 0; i < tokens.length - 1; i++)\r\n                    target = target[tokens[i]];\r\n                target[tokens[tokens.length - 1]] = object;\r\n            };\r\n            ko.exportProperty = function(owner, publicName, object) {\r\n                owner[publicName] = object;\r\n            };\r\n            ko.version = \"3.5.1\";\r\n\r\n            ko.exportSymbol('version', ko.version);\r\n// For any options that may affect various areas of Knockout and aren't directly associated with data binding.\r\n            ko.options = {\r\n                'deferUpdates': false,\r\n                'useOnlyNativeEvents': false,\r\n                'foreachHidesDestroyed': false\r\n            };\r\n\r\n//ko.exportSymbol('options', ko.options);   // 'options' isn't minified\r\n            ko.utils = (function () {\r\n                var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n                function objectForEach(obj, action) {\r\n                    for (var prop in obj) {\r\n                        if (hasOwnProperty.call(obj, prop)) {\r\n                            action(prop, obj[prop]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function extend(target, source) {\r\n                    if (source) {\r\n                        for(var prop in source) {\r\n                            if(hasOwnProperty.call(source, prop)) {\r\n                                target[prop] = source[prop];\r\n                            }\r\n                        }\r\n                    }\r\n                    return target;\r\n                }\r\n\r\n                function setPrototypeOf(obj, proto) {\r\n                    obj.__proto__ = proto;\r\n                    return obj;\r\n                }\r\n\r\n                var canSetPrototype = ({ __proto__: [] } instanceof Array);\r\n                var canUseSymbols = !DEBUG && typeof Symbol === 'function';\r\n\r\n                // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\r\n                var knownEvents = {}, knownEventTypesByEventName = {};\r\n                var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\r\n                knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\r\n                knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\r\n                objectForEach(knownEvents, function(eventType, knownEventsForType) {\r\n                    if (knownEventsForType.length) {\r\n                        for (var i = 0, j = knownEventsForType.length; i < j; i++)\r\n                            knownEventTypesByEventName[knownEventsForType[i]] = eventType;\r\n                    }\r\n                });\r\n                var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\r\n\r\n                // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\r\n                // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\r\n                // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\r\n                // If there is a future need to detect specific versions of IE10+, we will amend this.\r\n                var ieVersion = document && (function() {\r\n                    var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\r\n\r\n                    // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\r\n                    while (\r\n                        div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\r\n                            iElems[0]\r\n                        ) {}\r\n                    return version > 4 ? version : undefined;\r\n                }());\r\n                var isIe6 = ieVersion === 6,\r\n                    isIe7 = ieVersion === 7;\r\n\r\n                function isClickOnCheckableElement(element, eventType) {\r\n                    if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\r\n                    if (eventType.toLowerCase() != \"click\") return false;\r\n                    var inputType = element.type;\r\n                    return (inputType == \"checkbox\") || (inputType == \"radio\");\r\n                }\r\n\r\n                // For details on the pattern for changing node classes\r\n                // see: https://github.com/knockout/knockout/issues/1597\r\n                var cssClassNameRegex = /\\S+/g;\r\n\r\n                var jQueryEventAttachName;\r\n\r\n                function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\r\n                    var addOrRemoveFn;\r\n                    if (classNames) {\r\n                        if (typeof node.classList === 'object') {\r\n                            addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\r\n                            ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\r\n                                addOrRemoveFn.call(node.classList, className);\r\n                            });\r\n                        } else if (typeof node.className['baseVal'] === 'string') {\r\n                            // SVG tag .classNames is an SVGAnimatedString instance\r\n                            toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\r\n                        } else {\r\n                            // node.className ought to be a string.\r\n                            toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\r\n                    // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\r\n                    var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\r\n                    ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\r\n                        ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\r\n                    });\r\n                    obj[prop] = currentClassNames.join(\" \");\r\n                }\r\n\r\n                return {\r\n                    fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\r\n\r\n                    arrayForEach: function (array, action, actionOwner) {\r\n                        for (var i = 0, j = array.length; i < j; i++) {\r\n                            action.call(actionOwner, array[i], i, array);\r\n                        }\r\n                    },\r\n\r\n                    arrayIndexOf: typeof Array.prototype.indexOf == \"function\"\r\n                        ? function (array, item) {\r\n                            return Array.prototype.indexOf.call(array, item);\r\n                        }\r\n                        : function (array, item) {\r\n                            for (var i = 0, j = array.length; i < j; i++) {\r\n                                if (array[i] === item)\r\n                                    return i;\r\n                            }\r\n                            return -1;\r\n                        },\r\n\r\n                    arrayFirst: function (array, predicate, predicateOwner) {\r\n                        for (var i = 0, j = array.length; i < j; i++) {\r\n                            if (predicate.call(predicateOwner, array[i], i, array))\r\n                                return array[i];\r\n                        }\r\n                        return undefined;\r\n                    },\r\n\r\n                    arrayRemoveItem: function (array, itemToRemove) {\r\n                        var index = ko.utils.arrayIndexOf(array, itemToRemove);\r\n                        if (index > 0) {\r\n                            array.splice(index, 1);\r\n                        }\r\n                        else if (index === 0) {\r\n                            array.shift();\r\n                        }\r\n                    },\r\n\r\n                    arrayGetDistinctValues: function (array) {\r\n                        var result = [];\r\n                        if (array) {\r\n                            ko.utils.arrayForEach(array, function(item) {\r\n                                if (ko.utils.arrayIndexOf(result, item) < 0)\r\n                                    result.push(item);\r\n                            });\r\n                        }\r\n                        return result;\r\n                    },\r\n\r\n                    arrayMap: function (array, mapping, mappingOwner) {\r\n                        var result = [];\r\n                        if (array) {\r\n                            for (var i = 0, j = array.length; i < j; i++)\r\n                                result.push(mapping.call(mappingOwner, array[i], i));\r\n                        }\r\n                        return result;\r\n                    },\r\n\r\n                    arrayFilter: function (array, predicate, predicateOwner) {\r\n                        var result = [];\r\n                        if (array) {\r\n                            for (var i = 0, j = array.length; i < j; i++)\r\n                                if (predicate.call(predicateOwner, array[i], i))\r\n                                    result.push(array[i]);\r\n                        }\r\n                        return result;\r\n                    },\r\n\r\n                    arrayPushAll: function (array, valuesToPush) {\r\n                        if (valuesToPush instanceof Array)\r\n                            array.push.apply(array, valuesToPush);\r\n                        else\r\n                            for (var i = 0, j = valuesToPush.length; i < j; i++)\r\n                                array.push(valuesToPush[i]);\r\n                        return array;\r\n                    },\r\n\r\n                    addOrRemoveItem: function(array, value, included) {\r\n                        var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\r\n                        if (existingEntryIndex < 0) {\r\n                            if (included)\r\n                                array.push(value);\r\n                        } else {\r\n                            if (!included)\r\n                                array.splice(existingEntryIndex, 1);\r\n                        }\r\n                    },\r\n\r\n                    canSetPrototype: canSetPrototype,\r\n\r\n                    extend: extend,\r\n\r\n                    setPrototypeOf: setPrototypeOf,\r\n\r\n                    setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\r\n\r\n                    objectForEach: objectForEach,\r\n\r\n                    objectMap: function(source, mapping, mappingOwner) {\r\n                        if (!source)\r\n                            return source;\r\n                        var target = {};\r\n                        for (var prop in source) {\r\n                            if (hasOwnProperty.call(source, prop)) {\r\n                                target[prop] = mapping.call(mappingOwner, source[prop], prop, source);\r\n                            }\r\n                        }\r\n                        return target;\r\n                    },\r\n\r\n                    emptyDomNode: function (domNode) {\r\n                        while (domNode.firstChild) {\r\n                            ko.removeNode(domNode.firstChild);\r\n                        }\r\n                    },\r\n\r\n                    moveCleanedNodesToContainerElement: function(nodes) {\r\n                        // Ensure it's a real array, as we're about to reparent the nodes and\r\n                        // we don't want the underlying collection to change while we're doing that.\r\n                        var nodesArray = ko.utils.makeArray(nodes);\r\n                        var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\r\n\r\n                        var container = templateDocument.createElement('div');\r\n                        for (var i = 0, j = nodesArray.length; i < j; i++) {\r\n                            container.appendChild(ko.cleanNode(nodesArray[i]));\r\n                        }\r\n                        return container;\r\n                    },\r\n\r\n                    cloneNodes: function (nodesArray, shouldCleanNodes) {\r\n                        for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\r\n                            var clonedNode = nodesArray[i].cloneNode(true);\r\n                            newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\r\n                        }\r\n                        return newNodesArray;\r\n                    },\r\n\r\n                    setDomNodeChildren: function (domNode, childNodes) {\r\n                        ko.utils.emptyDomNode(domNode);\r\n                        if (childNodes) {\r\n                            for (var i = 0, j = childNodes.length; i < j; i++)\r\n                                domNode.appendChild(childNodes[i]);\r\n                        }\r\n                    },\r\n\r\n                    replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\r\n                        var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\r\n                        if (nodesToReplaceArray.length > 0) {\r\n                            var insertionPoint = nodesToReplaceArray[0];\r\n                            var parent = insertionPoint.parentNode;\r\n                            for (var i = 0, j = newNodesArray.length; i < j; i++)\r\n                                parent.insertBefore(newNodesArray[i], insertionPoint);\r\n                            for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\r\n                                ko.removeNode(nodesToReplaceArray[i]);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\r\n                        // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\r\n                        // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\r\n                        // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\r\n                        // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\r\n                        // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\r\n                        //\r\n                        // Rules:\r\n                        //   [A] Any leading nodes that have been removed should be ignored\r\n                        //       These most likely correspond to memoization nodes that were already removed during binding\r\n                        //       See https://github.com/knockout/knockout/pull/440\r\n                        //   [B] Any trailing nodes that have been remove should be ignored\r\n                        //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\r\n                        //       See https://github.com/knockout/knockout/pull/1903\r\n                        //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\r\n                        //       and include any nodes that have been inserted among the previous collection\r\n\r\n                        if (continuousNodeArray.length) {\r\n                            // The parent node can be a virtual element; so get the real parent node\r\n                            parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\r\n\r\n                            // Rule [A]\r\n                            while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\r\n                                continuousNodeArray.splice(0, 1);\r\n\r\n                            // Rule [B]\r\n                            while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode)\r\n                                continuousNodeArray.length--;\r\n\r\n                            // Rule [C]\r\n                            if (continuousNodeArray.length > 1) {\r\n                                var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\r\n                                // Replace with the actual new continuous node set\r\n                                continuousNodeArray.length = 0;\r\n                                while (current !== last) {\r\n                                    continuousNodeArray.push(current);\r\n                                    current = current.nextSibling;\r\n                                }\r\n                                continuousNodeArray.push(last);\r\n                            }\r\n                        }\r\n                        return continuousNodeArray;\r\n                    },\r\n\r\n                    setOptionNodeSelectionState: function (optionNode, isSelected) {\r\n                        // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\r\n                        if (ieVersion < 7)\r\n                            optionNode.setAttribute(\"selected\", isSelected);\r\n                        else\r\n                            optionNode.selected = isSelected;\r\n                    },\r\n\r\n                    stringTrim: function (string) {\r\n                        return string === null || string === undefined ? '' :\r\n                            string.trim ?\r\n                                string.trim() :\r\n                                string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\r\n                    },\r\n\r\n                    stringStartsWith: function (string, startsWith) {\r\n                        string = string || \"\";\r\n                        if (startsWith.length > string.length)\r\n                            return false;\r\n                        return string.substring(0, startsWith.length) === startsWith;\r\n                    },\r\n\r\n                    domNodeIsContainedBy: function (node, containedByNode) {\r\n                        if (node === containedByNode)\r\n                            return true;\r\n                        if (node.nodeType === 11)\r\n                            return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\r\n                        if (containedByNode.contains)\r\n                            return containedByNode.contains(node.nodeType !== 1 ? node.parentNode : node);\r\n                        if (containedByNode.compareDocumentPosition)\r\n                            return (containedByNode.compareDocumentPosition(node) & 16) == 16;\r\n                        while (node && node != containedByNode) {\r\n                            node = node.parentNode;\r\n                        }\r\n                        return !!node;\r\n                    },\r\n\r\n                    domNodeIsAttachedToDocument: function (node) {\r\n                        return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\r\n                    },\r\n\r\n                    anyDomNodeIsAttachedToDocument: function(nodes) {\r\n                        return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\r\n                    },\r\n\r\n                    tagNameLower: function(element) {\r\n                        // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\r\n                        // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\r\n                        // we don't need to do the .toLowerCase() as it will always be lower case anyway.\r\n                        return element && element.tagName && element.tagName.toLowerCase();\r\n                    },\r\n\r\n                    catchFunctionErrors: function (delegate) {\r\n                        return ko['onError'] ? function () {\r\n                            try {\r\n                                return delegate.apply(this, arguments);\r\n                            } catch (e) {\r\n                                ko['onError'] && ko['onError'](e);\r\n                                throw e;\r\n                            }\r\n                        } : delegate;\r\n                    },\r\n\r\n                    setTimeout: function (handler, timeout) {\r\n                        return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);\r\n                    },\r\n\r\n                    deferError: function (error) {\r\n                        setTimeout(function () {\r\n                            ko['onError'] && ko['onError'](error);\r\n                            throw error;\r\n                        }, 0);\r\n                    },\r\n\r\n                    registerEventHandler: function (element, eventType, handler) {\r\n                        var wrappedHandler = ko.utils.catchFunctionErrors(handler);\r\n\r\n                        var mustUseAttachEvent = eventsThatMustBeRegisteredUsingAttachEvent[eventType];\r\n                        if (!ko.options['useOnlyNativeEvents'] && !mustUseAttachEvent && jQueryInstance) {\r\n                            if (!jQueryEventAttachName) {\r\n                                jQueryEventAttachName = (typeof jQueryInstance(element)['on'] == 'function') ? 'on' : 'bind';\r\n                            }\r\n                            jQueryInstance(element)[jQueryEventAttachName](eventType, wrappedHandler);\r\n                        } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\r\n                            element.addEventListener(eventType, wrappedHandler, false);\r\n                        else if (typeof element.attachEvent != \"undefined\") {\r\n                            var attachEventHandler = function (event) { wrappedHandler.call(element, event); },\r\n                                attachEventName = \"on\" + eventType;\r\n                            element.attachEvent(attachEventName, attachEventHandler);\r\n\r\n                            // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\r\n                            // so to avoid leaks, we have to remove them manually. See bug #856\r\n                            ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\r\n                                element.detachEvent(attachEventName, attachEventHandler);\r\n                            });\r\n                        } else\r\n                            throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\r\n                    },\r\n\r\n                    triggerEvent: function (element, eventType) {\r\n                        if (!(element && element.nodeType))\r\n                            throw new Error(\"element must be a DOM node when calling triggerEvent\");\r\n\r\n                        // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\r\n                        // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\r\n                        // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\r\n                        // In both cases, we'll use the click method instead.\r\n                        var useClickWorkaround = isClickOnCheckableElement(element, eventType);\r\n\r\n                        if (!ko.options['useOnlyNativeEvents'] && jQueryInstance && !useClickWorkaround) {\r\n                            jQueryInstance(element)['trigger'](eventType);\r\n                        } else if (typeof document.createEvent == \"function\") {\r\n                            if (typeof element.dispatchEvent == \"function\") {\r\n                                var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\r\n                                var event = document.createEvent(eventCategory);\r\n                                event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\r\n                                element.dispatchEvent(event);\r\n                            }\r\n                            else\r\n                                throw new Error(\"The supplied element doesn't support dispatchEvent\");\r\n                        } else if (useClickWorkaround && element.click) {\r\n                            element.click();\r\n                        } else if (typeof element.fireEvent != \"undefined\") {\r\n                            element.fireEvent(\"on\" + eventType);\r\n                        } else {\r\n                            throw new Error(\"Browser doesn't support triggering events\");\r\n                        }\r\n                    },\r\n\r\n                    unwrapObservable: function (value) {\r\n                        return ko.isObservable(value) ? value() : value;\r\n                    },\r\n\r\n                    peekObservable: function (value) {\r\n                        return ko.isObservable(value) ? value.peek() : value;\r\n                    },\r\n\r\n                    toggleDomNodeCssClass: toggleDomNodeCssClass,\r\n\r\n                    setTextContent: function(element, textContent) {\r\n                        var value = ko.utils.unwrapObservable(textContent);\r\n                        if ((value === null) || (value === undefined))\r\n                            value = \"\";\r\n\r\n                        // We need there to be exactly one child: a text node.\r\n                        // If there are no children, more than one, or if it's not a text node,\r\n                        // we'll clear everything and create a single text node.\r\n                        var innerTextNode = ko.virtualElements.firstChild(element);\r\n                        if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\r\n                            ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\r\n                        } else {\r\n                            innerTextNode.data = value;\r\n                        }\r\n\r\n                        ko.utils.forceRefresh(element);\r\n                    },\r\n\r\n                    setElementName: function(element, name) {\r\n                        element.name = name;\r\n\r\n                        // Workaround IE 6/7 issue\r\n                        // - https://github.com/SteveSanderson/knockout/issues/197\r\n                        // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/\r\n                        if (ieVersion <= 7) {\r\n                            try {\r\n                                var escapedName = element.name.replace(/[&<>'\"]/g, function(r){ return \"&#\" + r.charCodeAt(0) + \";\"; });\r\n                                element.mergeAttributes(document.createElement(\"<input name='\" + escapedName + \"'/>\"), false);\r\n                            }\r\n                            catch(e) {} // For IE9 with doc mode \"IE9 Standards\" and browser mode \"IE9 Compatibility View\"\r\n                        }\r\n                    },\r\n\r\n                    forceRefresh: function(node) {\r\n                        // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\r\n                        if (ieVersion >= 9) {\r\n                            // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\r\n                            var elem = node.nodeType == 1 ? node : node.parentNode;\r\n                            if (elem.style)\r\n                                elem.style.zoom = elem.style.zoom;\r\n                        }\r\n                    },\r\n\r\n                    ensureSelectElementIsRenderedCorrectly: function(selectElement) {\r\n                        // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\r\n                        // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\r\n                        // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\r\n                        if (ieVersion) {\r\n                            var originalWidth = selectElement.style.width;\r\n                            selectElement.style.width = 0;\r\n                            selectElement.style.width = originalWidth;\r\n                        }\r\n                    },\r\n\r\n                    range: function (min, max) {\r\n                        min = ko.utils.unwrapObservable(min);\r\n                        max = ko.utils.unwrapObservable(max);\r\n                        var result = [];\r\n                        for (var i = min; i <= max; i++)\r\n                            result.push(i);\r\n                        return result;\r\n                    },\r\n\r\n                    makeArray: function(arrayLikeObject) {\r\n                        var result = [];\r\n                        for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\r\n                            result.push(arrayLikeObject[i]);\r\n                        };\r\n                        return result;\r\n                    },\r\n\r\n                    createSymbolOrString: function(identifier) {\r\n                        return canUseSymbols ? Symbol(identifier) : identifier;\r\n                    },\r\n\r\n                    isIe6 : isIe6,\r\n                    isIe7 : isIe7,\r\n                    ieVersion : ieVersion,\r\n\r\n                    getFormFields: function(form, fieldName) {\r\n                        var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\r\n                        var isMatchingField = (typeof fieldName == 'string')\r\n                            ? function(field) { return field.name === fieldName }\r\n                            : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\r\n                        var matches = [];\r\n                        for (var i = fields.length - 1; i >= 0; i--) {\r\n                            if (isMatchingField(fields[i]))\r\n                                matches.push(fields[i]);\r\n                        };\r\n                        return matches;\r\n                    },\r\n\r\n                    parseJson: function (jsonString) {\r\n                        if (typeof jsonString == \"string\") {\r\n                            jsonString = ko.utils.stringTrim(jsonString);\r\n                            if (jsonString) {\r\n                                if (JSON && JSON.parse) // Use native parsing where available\r\n                                    return JSON.parse(jsonString);\r\n                                return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\r\n                            }\r\n                        }\r\n                        return null;\r\n                    },\r\n\r\n                    stringifyJson: function (data, replacer, space) {   // replacer and space are optional\r\n                        if (!JSON || !JSON.stringify)\r\n                            throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\r\n                        return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\r\n                    },\r\n\r\n                    postJson: function (urlOrForm, data, options) {\r\n                        options = options || {};\r\n                        var params = options['params'] || {};\r\n                        var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\r\n                        var url = urlOrForm;\r\n\r\n                        // If we were given a form, use its 'action' URL and pick out any requested field values\r\n                        if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\r\n                            var originalForm = urlOrForm;\r\n                            url = originalForm.action;\r\n                            for (var i = includeFields.length - 1; i >= 0; i--) {\r\n                                var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\r\n                                for (var j = fields.length - 1; j >= 0; j--)\r\n                                    params[fields[j].name] = fields[j].value;\r\n                            }\r\n                        }\r\n\r\n                        data = ko.utils.unwrapObservable(data);\r\n                        var form = document.createElement(\"form\");\r\n                        form.style.display = \"none\";\r\n                        form.action = url;\r\n                        form.method = \"post\";\r\n                        for (var key in data) {\r\n                            // Since 'data' this is a model object, we include all properties including those inherited from its prototype\r\n                            var input = document.createElement(\"input\");\r\n                            input.type = \"hidden\";\r\n                            input.name = key;\r\n                            input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\r\n                            form.appendChild(input);\r\n                        }\r\n                        objectForEach(params, function(key, value) {\r\n                            var input = document.createElement(\"input\");\r\n                            input.type = \"hidden\";\r\n                            input.name = key;\r\n                            input.value = value;\r\n                            form.appendChild(input);\r\n                        });\r\n                        document.body.appendChild(form);\r\n                        options['submitter'] ? options['submitter'](form) : form.submit();\r\n                        setTimeout(function () { form.parentNode.removeChild(form); }, 0);\r\n                    }\r\n                }\r\n            }());\r\n\r\n            ko.exportSymbol('utils', ko.utils);\r\n            ko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\r\n            ko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\r\n            ko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\r\n            ko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\r\n            ko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\r\n            ko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\r\n            ko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\r\n            ko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\r\n            ko.exportSymbol('utils.cloneNodes', ko.utils.cloneNodes);\r\n            ko.exportSymbol('utils.createSymbolOrString', ko.utils.createSymbolOrString);\r\n            ko.exportSymbol('utils.extend', ko.utils.extend);\r\n            ko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\r\n            ko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\r\n            ko.exportSymbol('utils.objectMap', ko.utils.objectMap);\r\n            ko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\r\n            ko.exportSymbol('utils.postJson', ko.utils.postJson);\r\n            ko.exportSymbol('utils.parseJson', ko.utils.parseJson);\r\n            ko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\r\n            ko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\r\n            ko.exportSymbol('utils.range', ko.utils.range);\r\n            ko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\r\n            ko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\r\n            ko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\r\n            ko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\r\n            ko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\r\n            ko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\r\n            ko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\r\n\r\n            if (!Function.prototype['bind']) {\r\n                // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\r\n                // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\r\n                Function.prototype['bind'] = function (object) {\r\n                    var originalFunction = this;\r\n                    if (arguments.length === 1) {\r\n                        return function () {\r\n                            return originalFunction.apply(object, arguments);\r\n                        };\r\n                    } else {\r\n                        var partialArgs = Array.prototype.slice.call(arguments, 1);\r\n                        return function () {\r\n                            var args = partialArgs.slice(0);\r\n                            args.push.apply(args, arguments);\r\n                            return originalFunction.apply(object, args);\r\n                        };\r\n                    }\r\n                };\r\n            }\r\n\r\n            ko.utils.domData = new (function () {\r\n                var uniqueId = 0;\r\n                var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\r\n                var dataStore = {};\r\n\r\n                var getDataForNode, clear;\r\n                if (!ko.utils.ieVersion) {\r\n                    // We considered using WeakMap, but it has a problem in IE 11 and Edge that prevents using\r\n                    // it cross-window, so instead we just store the data directly on the node.\r\n                    // See https://github.com/knockout/knockout/issues/2141\r\n                    getDataForNode = function (node, createIfNotFound) {\r\n                        var dataForNode = node[dataStoreKeyExpandoPropertyName];\r\n                        if (!dataForNode && createIfNotFound) {\r\n                            dataForNode = node[dataStoreKeyExpandoPropertyName] = {};\r\n                        }\r\n                        return dataForNode;\r\n                    };\r\n                    clear = function (node) {\r\n                        if (node[dataStoreKeyExpandoPropertyName]) {\r\n                            delete node[dataStoreKeyExpandoPropertyName];\r\n                            return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\r\n                        }\r\n                        return false;\r\n                    };\r\n                } else {\r\n                    // Old IE versions have memory issues if you store objects on the node, so we use a\r\n                    // separate data storage and link to it from the node using a string key.\r\n                    getDataForNode = function (node, createIfNotFound) {\r\n                        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\r\n                        var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\r\n                        if (!hasExistingDataStore) {\r\n                            if (!createIfNotFound)\r\n                                return undefined;\r\n                            dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\r\n                            dataStore[dataStoreKey] = {};\r\n                        }\r\n                        return dataStore[dataStoreKey];\r\n                    };\r\n                    clear = function (node) {\r\n                        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\r\n                        if (dataStoreKey) {\r\n                            delete dataStore[dataStoreKey];\r\n                            node[dataStoreKeyExpandoPropertyName] = null;\r\n                            return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\r\n                        }\r\n                        return false;\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    get: function (node, key) {\r\n                        var dataForNode = getDataForNode(node, false);\r\n                        return dataForNode && dataForNode[key];\r\n                    },\r\n                    set: function (node, key, value) {\r\n                        // Make sure we don't actually create a new domData key if we are actually deleting a value\r\n                        var dataForNode = getDataForNode(node, value !== undefined /* createIfNotFound */);\r\n                        dataForNode && (dataForNode[key] = value);\r\n                    },\r\n                    getOrSet: function (node, key, value) {\r\n                        var dataForNode = getDataForNode(node, true /* createIfNotFound */);\r\n                        return dataForNode[key] || (dataForNode[key] = value);\r\n                    },\r\n                    clear: clear,\r\n\r\n                    nextKey: function () {\r\n                        return (uniqueId++) + dataStoreKeyExpandoPropertyName;\r\n                    }\r\n                };\r\n            })();\r\n\r\n            ko.exportSymbol('utils.domData', ko.utils.domData);\r\n            ko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\r\n\r\n            ko.utils.domNodeDisposal = new (function () {\r\n                var domDataKey = ko.utils.domData.nextKey();\r\n                var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\r\n                var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\r\n\r\n                function getDisposeCallbacksCollection(node, createIfNotFound) {\r\n                    var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\r\n                    if ((allDisposeCallbacks === undefined) && createIfNotFound) {\r\n                        allDisposeCallbacks = [];\r\n                        ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\r\n                    }\r\n                    return allDisposeCallbacks;\r\n                }\r\n                function destroyCallbacksCollection(node) {\r\n                    ko.utils.domData.set(node, domDataKey, undefined);\r\n                }\r\n\r\n                function cleanSingleNode(node) {\r\n                    // Run all the dispose callbacks\r\n                    var callbacks = getDisposeCallbacksCollection(node, false);\r\n                    if (callbacks) {\r\n                        callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\r\n                        for (var i = 0; i < callbacks.length; i++)\r\n                            callbacks[i](node);\r\n                    }\r\n\r\n                    // Erase the DOM data\r\n                    ko.utils.domData.clear(node);\r\n\r\n                    // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\r\n                    ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\r\n\r\n                    // Clear any immediate-child comment nodes, as these wouldn't have been found by\r\n                    // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\r\n                    if (cleanableNodeTypesWithDescendants[node.nodeType]) {\r\n                        cleanNodesInList(node.childNodes, true/*onlyComments*/);\r\n                    }\r\n                }\r\n\r\n                function cleanNodesInList(nodeList, onlyComments) {\r\n                    var cleanedNodes = [], lastCleanedNode;\r\n                    for (var i = 0; i < nodeList.length; i++) {\r\n                        if (!onlyComments || nodeList[i].nodeType === 8) {\r\n                            cleanSingleNode(cleanedNodes[cleanedNodes.length] = lastCleanedNode = nodeList[i]);\r\n                            if (nodeList[i] !== lastCleanedNode) {\r\n                                while (i-- && ko.utils.arrayIndexOf(cleanedNodes, nodeList[i]) == -1) {}\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    addDisposeCallback : function(node, callback) {\r\n                        if (typeof callback != \"function\")\r\n                            throw new Error(\"Callback must be a function\");\r\n                        getDisposeCallbacksCollection(node, true).push(callback);\r\n                    },\r\n\r\n                    removeDisposeCallback : function(node, callback) {\r\n                        var callbacksCollection = getDisposeCallbacksCollection(node, false);\r\n                        if (callbacksCollection) {\r\n                            ko.utils.arrayRemoveItem(callbacksCollection, callback);\r\n                            if (callbacksCollection.length == 0)\r\n                                destroyCallbacksCollection(node);\r\n                        }\r\n                    },\r\n\r\n                    cleanNode : function(node) {\r\n                        ko.dependencyDetection.ignore(function () {\r\n                            // First clean this node, where applicable\r\n                            if (cleanableNodeTypes[node.nodeType]) {\r\n                                cleanSingleNode(node);\r\n\r\n                                // ... then its descendants, where applicable\r\n                                if (cleanableNodeTypesWithDescendants[node.nodeType]) {\r\n                                    cleanNodesInList(node.getElementsByTagName(\"*\"));\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        return node;\r\n                    },\r\n\r\n                    removeNode : function(node) {\r\n                        ko.cleanNode(node);\r\n                        if (node.parentNode)\r\n                            node.parentNode.removeChild(node);\r\n                    },\r\n\r\n                    \"cleanExternalData\" : function (node) {\r\n                        // Special support for jQuery here because it's so commonly used.\r\n                        // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\r\n                        // so notify it to tear down any resources associated with the node & descendants here.\r\n                        if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\r\n                            jQueryInstance['cleanData']([node]);\r\n                    }\r\n                };\r\n            })();\r\n            ko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\r\n            ko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\r\n            ko.exportSymbol('cleanNode', ko.cleanNode);\r\n            ko.exportSymbol('removeNode', ko.removeNode);\r\n            ko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\r\n            ko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\r\n            ko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\r\n            (function () {\r\n                var none = [0, \"\", \"\"],\r\n                    table = [1, \"<table>\", \"</table>\"],\r\n                    tbody = [2, \"<table><tbody>\", \"</tbody></table>\"],\r\n                    tr = [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\r\n                    select = [1, \"<select multiple='multiple'>\", \"</select>\"],\r\n                    lookup = {\r\n                        'thead': table,\r\n                        'tbody': table,\r\n                        'tfoot': table,\r\n                        'tr': tbody,\r\n                        'td': tr,\r\n                        'th': tr,\r\n                        'option': select,\r\n                        'optgroup': select\r\n                    },\r\n\r\n                    // This is needed for old IE if you're *not* using either jQuery or innerShiv. Doesn't affect other cases.\r\n                    mayRequireCreateElementHack = ko.utils.ieVersion <= 8;\r\n\r\n                function getWrap(tags) {\r\n                    var m = tags.match(/^(?:<!--.*?-->\\s*?)*?<([a-z]+)[\\s>]/);\r\n                    return (m && lookup[m[1]]) || none;\r\n                }\r\n\r\n                function simpleHtmlParse(html, documentContext) {\r\n                    documentContext || (documentContext = document);\r\n                    var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\r\n\r\n                    // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\r\n                    // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\r\n\r\n                    // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\r\n                    // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\r\n                    // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\r\n                    // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\r\n\r\n                    // Trim whitespace, otherwise indexOf won't work as expected\r\n                    var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\"),\r\n                        wrap = getWrap(tags),\r\n                        depth = wrap[0];\r\n\r\n                    // Go to html and back, then peel off extra wrappers\r\n                    // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\r\n                    var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\r\n                    if (typeof windowContext['innerShiv'] == \"function\") {\r\n                        // Note that innerShiv is deprecated in favour of html5shiv. We should consider adding\r\n                        // support for html5shiv (except if no explicit support is needed, e.g., if html5shiv\r\n                        // somehow shims the native APIs so it just works anyway)\r\n                        div.appendChild(windowContext['innerShiv'](markup));\r\n                    } else {\r\n                        if (mayRequireCreateElementHack) {\r\n                            // The document.createElement('my-element') trick to enable custom elements in IE6-8\r\n                            // only works if we assign innerHTML on an element associated with that document.\r\n                            documentContext.body.appendChild(div);\r\n                        }\r\n\r\n                        div.innerHTML = markup;\r\n\r\n                        if (mayRequireCreateElementHack) {\r\n                            div.parentNode.removeChild(div);\r\n                        }\r\n                    }\r\n\r\n                    // Move to the right depth\r\n                    while (depth--)\r\n                        div = div.lastChild;\r\n\r\n                    return ko.utils.makeArray(div.lastChild.childNodes);\r\n                }\r\n\r\n                function jQueryHtmlParse(html, documentContext) {\r\n                    // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\r\n                    if (jQueryInstance['parseHTML']) {\r\n                        return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\r\n                    } else {\r\n                        // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\r\n                        var elems = jQueryInstance['clean']([html], documentContext);\r\n\r\n                        // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\r\n                        // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\r\n                        // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\r\n                        if (elems && elems[0]) {\r\n                            // Find the top-most parent element that's a direct child of a document fragment\r\n                            var elem = elems[0];\r\n                            while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\r\n                                elem = elem.parentNode;\r\n                            // ... then detach it\r\n                            if (elem.parentNode)\r\n                                elem.parentNode.removeChild(elem);\r\n                        }\r\n\r\n                        return elems;\r\n                    }\r\n                }\r\n\r\n                ko.utils.parseHtmlFragment = function(html, documentContext) {\r\n                    return jQueryInstance ?\r\n                        jQueryHtmlParse(html, documentContext) :   // As below, benefit from jQuery's optimisations where possible\r\n                        simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\r\n                };\r\n\r\n                ko.utils.parseHtmlForTemplateNodes = function(html, documentContext) {\r\n                    var nodes = ko.utils.parseHtmlFragment(html, documentContext);\r\n                    return (nodes.length && nodes[0].parentElement) || ko.utils.moveCleanedNodesToContainerElement(nodes);\r\n                };\r\n\r\n                ko.utils.setHtml = function(node, html) {\r\n                    ko.utils.emptyDomNode(node);\r\n\r\n                    // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\r\n                    html = ko.utils.unwrapObservable(html);\r\n\r\n                    if ((html !== null) && (html !== undefined)) {\r\n                        if (typeof html != 'string')\r\n                            html = html.toString();\r\n\r\n                        // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\r\n                        // for example <tr> elements which are not normally allowed to exist on their own.\r\n                        // If you've referenced jQuery we'll use that rather than duplicating its code.\r\n                        if (jQueryInstance) {\r\n                            jQueryInstance(node)['html'](html);\r\n                        } else {\r\n                            // ... otherwise, use KO's own parsing logic.\r\n                            var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\r\n                            for (var i = 0; i < parsedNodes.length; i++)\r\n                                node.appendChild(parsedNodes[i]);\r\n                        }\r\n                    }\r\n                };\r\n            })();\r\n\r\n            ko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\r\n            ko.exportSymbol('utils.setHtml', ko.utils.setHtml);\r\n\r\n            ko.memoization = (function () {\r\n                var memos = {};\r\n\r\n                function randomMax8HexChars() {\r\n                    return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\r\n                }\r\n                function generateRandomId() {\r\n                    return randomMax8HexChars() + randomMax8HexChars();\r\n                }\r\n                function findMemoNodes(rootNode, appendToArray) {\r\n                    if (!rootNode)\r\n                        return;\r\n                    if (rootNode.nodeType == 8) {\r\n                        var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\r\n                        if (memoId != null)\r\n                            appendToArray.push({ domNode: rootNode, memoId: memoId });\r\n                    } else if (rootNode.nodeType == 1) {\r\n                        for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\r\n                            findMemoNodes(childNodes[i], appendToArray);\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    memoize: function (callback) {\r\n                        if (typeof callback != \"function\")\r\n                            throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\r\n                        var memoId = generateRandomId();\r\n                        memos[memoId] = callback;\r\n                        return \"<!--[ko_memo:\" + memoId + \"]-->\";\r\n                    },\r\n\r\n                    unmemoize: function (memoId, callbackParams) {\r\n                        var callback = memos[memoId];\r\n                        if (callback === undefined)\r\n                            throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\r\n                        try {\r\n                            callback.apply(null, callbackParams || []);\r\n                            return true;\r\n                        }\r\n                        finally { delete memos[memoId]; }\r\n                    },\r\n\r\n                    unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\r\n                        var memos = [];\r\n                        findMemoNodes(domNode, memos);\r\n                        for (var i = 0, j = memos.length; i < j; i++) {\r\n                            var node = memos[i].domNode;\r\n                            var combinedParams = [node];\r\n                            if (extraCallbackParamsArray)\r\n                                ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\r\n                            ko.memoization.unmemoize(memos[i].memoId, combinedParams);\r\n                            node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\r\n                            if (node.parentNode)\r\n                                node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\r\n                        }\r\n                    },\r\n\r\n                    parseMemoText: function (memoText) {\r\n                        var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\r\n                        return match ? match[1] : null;\r\n                    }\r\n                };\r\n            })();\r\n\r\n            ko.exportSymbol('memoization', ko.memoization);\r\n            ko.exportSymbol('memoization.memoize', ko.memoization.memoize);\r\n            ko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\r\n            ko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\r\n            ko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\r\n            ko.tasks = (function () {\r\n                var scheduler,\r\n                    taskQueue = [],\r\n                    taskQueueLength = 0,\r\n                    nextHandle = 1,\r\n                    nextIndexToProcess = 0;\r\n\r\n                if (window['MutationObserver']) {\r\n                    // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\r\n                    // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\r\n                    scheduler = (function (callback) {\r\n                        var div = document.createElement(\"div\");\r\n                        new MutationObserver(callback).observe(div, {attributes: true});\r\n                        return function () { div.classList.toggle(\"foo\"); };\r\n                    })(scheduledProcess);\r\n                } else if (document && \"onreadystatechange\" in document.createElement(\"script\")) {\r\n                    // IE 6-10\r\n                    // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\r\n                    scheduler = function (callback) {\r\n                        var script = document.createElement(\"script\");\r\n                        script.onreadystatechange = function () {\r\n                            script.onreadystatechange = null;\r\n                            document.documentElement.removeChild(script);\r\n                            script = null;\r\n                            callback();\r\n                        };\r\n                        document.documentElement.appendChild(script);\r\n                    };\r\n                } else {\r\n                    scheduler = function (callback) {\r\n                        setTimeout(callback, 0);\r\n                    };\r\n                }\r\n\r\n                function processTasks() {\r\n                    if (taskQueueLength) {\r\n                        // Each mark represents the end of a logical group of tasks and the number of these groups is\r\n                        // limited to prevent unchecked recursion.\r\n                        var mark = taskQueueLength, countMarks = 0;\r\n\r\n                        // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\r\n                        for (var task; nextIndexToProcess < taskQueueLength; ) {\r\n                            if (task = taskQueue[nextIndexToProcess++]) {\r\n                                if (nextIndexToProcess > mark) {\r\n                                    if (++countMarks >= 5000) {\r\n                                        nextIndexToProcess = taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\r\n                                        ko.utils.deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\r\n                                        break;\r\n                                    }\r\n                                    mark = taskQueueLength;\r\n                                }\r\n                                try {\r\n                                    task();\r\n                                } catch (ex) {\r\n                                    ko.utils.deferError(ex);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function scheduledProcess() {\r\n                    processTasks();\r\n\r\n                    // Reset the queue\r\n                    nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\r\n                }\r\n\r\n                function scheduleTaskProcessing() {\r\n                    ko.tasks['scheduler'](scheduledProcess);\r\n                }\r\n\r\n                var tasks = {\r\n                    'scheduler': scheduler,     // Allow overriding the scheduler\r\n\r\n                    schedule: function (func) {\r\n                        if (!taskQueueLength) {\r\n                            scheduleTaskProcessing();\r\n                        }\r\n\r\n                        taskQueue[taskQueueLength++] = func;\r\n                        return nextHandle++;\r\n                    },\r\n\r\n                    cancel: function (handle) {\r\n                        var index = handle - (nextHandle - taskQueueLength);\r\n                        if (index >= nextIndexToProcess && index < taskQueueLength) {\r\n                            taskQueue[index] = null;\r\n                        }\r\n                    },\r\n\r\n                    // For testing only: reset the queue and return the previous queue length\r\n                    'resetForTesting': function () {\r\n                        var length = taskQueueLength - nextIndexToProcess;\r\n                        nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\r\n                        return length;\r\n                    },\r\n\r\n                    runEarly: processTasks\r\n                };\r\n\r\n                return tasks;\r\n            })();\r\n\r\n            ko.exportSymbol('tasks', ko.tasks);\r\n            ko.exportSymbol('tasks.schedule', ko.tasks.schedule);\r\n//ko.exportSymbol('tasks.cancel', ko.tasks.cancel);  \"cancel\" isn't minified\r\n            ko.exportSymbol('tasks.runEarly', ko.tasks.runEarly);\r\n            ko.extenders = {\r\n                'throttle': function(target, timeout) {\r\n                    // Throttling means two things:\r\n\r\n                    // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\r\n                    //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\r\n                    target['throttleEvaluation'] = timeout;\r\n\r\n                    // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\r\n                    //     so the target cannot change value synchronously or faster than a certain rate\r\n                    var writeTimeoutInstance = null;\r\n                    return ko.dependentObservable({\r\n                        'read': target,\r\n                        'write': function(value) {\r\n                            clearTimeout(writeTimeoutInstance);\r\n                            writeTimeoutInstance = ko.utils.setTimeout(function() {\r\n                                target(value);\r\n                            }, timeout);\r\n                        }\r\n                    });\r\n                },\r\n\r\n                'rateLimit': function(target, options) {\r\n                    var timeout, method, limitFunction;\r\n\r\n                    if (typeof options == 'number') {\r\n                        timeout = options;\r\n                    } else {\r\n                        timeout = options['timeout'];\r\n                        method = options['method'];\r\n                    }\r\n\r\n                    // rateLimit supersedes deferred updates\r\n                    target._deferUpdates = false;\r\n\r\n                    limitFunction = typeof method == 'function' ? method : method == 'notifyWhenChangesStop' ?  debounce : throttle;\r\n                    target.limit(function(callback) {\r\n                        return limitFunction(callback, timeout, options);\r\n                    });\r\n                },\r\n\r\n                'deferred': function(target, options) {\r\n                    if (options !== true) {\r\n                        throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.')\r\n                    }\r\n\r\n                    if (!target._deferUpdates) {\r\n                        target._deferUpdates = true;\r\n                        target.limit(function (callback) {\r\n                            var handle,\r\n                                ignoreUpdates = false;\r\n                            return function () {\r\n                                if (!ignoreUpdates) {\r\n                                    ko.tasks.cancel(handle);\r\n                                    handle = ko.tasks.schedule(callback);\r\n\r\n                                    try {\r\n                                        ignoreUpdates = true;\r\n                                        target['notifySubscribers'](undefined, 'dirty');\r\n                                    } finally {\r\n                                        ignoreUpdates = false;\r\n                                    }\r\n                                }\r\n                            };\r\n                        });\r\n                    }\r\n                },\r\n\r\n                'notify': function(target, notifyWhen) {\r\n                    target[\"equalityComparer\"] = notifyWhen == \"always\" ?\r\n                        null :  // null equalityComparer means to always notify\r\n                        valuesArePrimitiveAndEqual;\r\n                }\r\n            };\r\n\r\n            var primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\r\n            function valuesArePrimitiveAndEqual(a, b) {\r\n                var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\r\n                return oldValueIsPrimitive ? (a === b) : false;\r\n            }\r\n\r\n            function throttle(callback, timeout) {\r\n                var timeoutInstance;\r\n                return function () {\r\n                    if (!timeoutInstance) {\r\n                        timeoutInstance = ko.utils.setTimeout(function () {\r\n                            timeoutInstance = undefined;\r\n                            callback();\r\n                        }, timeout);\r\n                    }\r\n                };\r\n            }\r\n\r\n            function debounce(callback, timeout) {\r\n                var timeoutInstance;\r\n                return function () {\r\n                    clearTimeout(timeoutInstance);\r\n                    timeoutInstance = ko.utils.setTimeout(callback, timeout);\r\n                };\r\n            }\r\n\r\n            function applyExtenders(requestedExtenders) {\r\n                var target = this;\r\n                if (requestedExtenders) {\r\n                    ko.utils.objectForEach(requestedExtenders, function(key, value) {\r\n                        var extenderHandler = ko.extenders[key];\r\n                        if (typeof extenderHandler == 'function') {\r\n                            target = extenderHandler(target, value) || target;\r\n                        }\r\n                    });\r\n                }\r\n                return target;\r\n            }\r\n\r\n            ko.exportSymbol('extenders', ko.extenders);\r\n\r\n            ko.subscription = function (target, callback, disposeCallback) {\r\n                this._target = target;\r\n                this._callback = callback;\r\n                this._disposeCallback = disposeCallback;\r\n                this._isDisposed = false;\r\n                this._node = null;\r\n                this._domNodeDisposalCallback = null;\r\n                ko.exportProperty(this, 'dispose', this.dispose);\r\n                ko.exportProperty(this, 'disposeWhenNodeIsRemoved', this.disposeWhenNodeIsRemoved);\r\n            };\r\n            ko.subscription.prototype.dispose = function () {\r\n                var self = this;\r\n                if (!self._isDisposed) {\r\n                    if (self._domNodeDisposalCallback) {\r\n                        ko.utils.domNodeDisposal.removeDisposeCallback(self._node, self._domNodeDisposalCallback);\r\n                    }\r\n                    self._isDisposed = true;\r\n                    self._disposeCallback();\r\n\r\n                    self._target = self._callback = self._disposeCallback = self._node = self._domNodeDisposalCallback = null;\r\n                }\r\n            };\r\n            ko.subscription.prototype.disposeWhenNodeIsRemoved = function (node) {\r\n                this._node = node;\r\n                ko.utils.domNodeDisposal.addDisposeCallback(node, this._domNodeDisposalCallback = this.dispose.bind(this));\r\n            };\r\n\r\n            ko.subscribable = function () {\r\n                ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn);\r\n                ko_subscribable_fn.init(this);\r\n            }\r\n\r\n            var defaultEvent = \"change\";\r\n\r\n// Moved out of \"limit\" to avoid the extra closure\r\n            function limitNotifySubscribers(value, event) {\r\n                if (!event || event === defaultEvent) {\r\n                    this._limitChange(value);\r\n                } else if (event === 'beforeChange') {\r\n                    this._limitBeforeChange(value);\r\n                } else {\r\n                    this._origNotifySubscribers(value, event);\r\n                }\r\n            }\r\n\r\n            var ko_subscribable_fn = {\r\n                init: function(instance) {\r\n                    instance._subscriptions = { \"change\": [] };\r\n                    instance._versionNumber = 1;\r\n                },\r\n\r\n                subscribe: function (callback, callbackTarget, event) {\r\n                    var self = this;\r\n\r\n                    event = event || defaultEvent;\r\n                    var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\r\n\r\n                    var subscription = new ko.subscription(self, boundCallback, function () {\r\n                        ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\r\n                        if (self.afterSubscriptionRemove)\r\n                            self.afterSubscriptionRemove(event);\r\n                    });\r\n\r\n                    if (self.beforeSubscriptionAdd)\r\n                        self.beforeSubscriptionAdd(event);\r\n\r\n                    if (!self._subscriptions[event])\r\n                        self._subscriptions[event] = [];\r\n                    self._subscriptions[event].push(subscription);\r\n\r\n                    return subscription;\r\n                },\r\n\r\n                \"notifySubscribers\": function (valueToNotify, event) {\r\n                    event = event || defaultEvent;\r\n                    if (event === defaultEvent) {\r\n                        this.updateVersion();\r\n                    }\r\n                    if (this.hasSubscriptionsForEvent(event)) {\r\n                        var subs = event === defaultEvent && this._changeSubscriptions || this._subscriptions[event].slice(0);\r\n                        try {\r\n                            ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\r\n                            for (var i = 0, subscription; subscription = subs[i]; ++i) {\r\n                                // In case a subscription was disposed during the arrayForEach cycle, check\r\n                                // for isDisposed on each subscription before invoking its callback\r\n                                if (!subscription._isDisposed)\r\n                                    subscription._callback(valueToNotify);\r\n                            }\r\n                        } finally {\r\n                            ko.dependencyDetection.end(); // End suppressing dependency detection\r\n                        }\r\n                    }\r\n                },\r\n\r\n                getVersion: function () {\r\n                    return this._versionNumber;\r\n                },\r\n\r\n                hasChanged: function (versionToCheck) {\r\n                    return this.getVersion() !== versionToCheck;\r\n                },\r\n\r\n                updateVersion: function () {\r\n                    ++this._versionNumber;\r\n                },\r\n\r\n                limit: function(limitFunction) {\r\n                    var self = this, selfIsObservable = ko.isObservable(self),\r\n                        ignoreBeforeChange, notifyNextChange, previousValue, pendingValue, didUpdate,\r\n                        beforeChange = 'beforeChange';\r\n\r\n                    if (!self._origNotifySubscribers) {\r\n                        self._origNotifySubscribers = self[\"notifySubscribers\"];\r\n                        self[\"notifySubscribers\"] = limitNotifySubscribers;\r\n                    }\r\n\r\n                    var finish = limitFunction(function() {\r\n                        self._notificationIsPending = false;\r\n\r\n                        // If an observable provided a reference to itself, access it to get the latest value.\r\n                        // This allows computed observables to delay calculating their value until needed.\r\n                        if (selfIsObservable && pendingValue === self) {\r\n                            pendingValue = self._evalIfChanged ? self._evalIfChanged() : self();\r\n                        }\r\n                        var shouldNotify = notifyNextChange || (didUpdate && self.isDifferent(previousValue, pendingValue));\r\n\r\n                        didUpdate = notifyNextChange = ignoreBeforeChange = false;\r\n\r\n                        if (shouldNotify) {\r\n                            self._origNotifySubscribers(previousValue = pendingValue);\r\n                        }\r\n                    });\r\n\r\n                    self._limitChange = function(value, isDirty) {\r\n                        if (!isDirty || !self._notificationIsPending) {\r\n                            didUpdate = !isDirty;\r\n                        }\r\n                        self._changeSubscriptions = self._subscriptions[defaultEvent].slice(0);\r\n                        self._notificationIsPending = ignoreBeforeChange = true;\r\n                        pendingValue = value;\r\n                        finish();\r\n                    };\r\n                    self._limitBeforeChange = function(value) {\r\n                        if (!ignoreBeforeChange) {\r\n                            previousValue = value;\r\n                            self._origNotifySubscribers(value, beforeChange);\r\n                        }\r\n                    };\r\n                    self._recordUpdate = function() {\r\n                        didUpdate = true;\r\n                    };\r\n                    self._notifyNextChangeIfValueIsDifferent = function() {\r\n                        if (self.isDifferent(previousValue, self.peek(true /*evaluate*/))) {\r\n                            notifyNextChange = true;\r\n                        }\r\n                    };\r\n                },\r\n\r\n                hasSubscriptionsForEvent: function(event) {\r\n                    return this._subscriptions[event] && this._subscriptions[event].length;\r\n                },\r\n\r\n                getSubscriptionsCount: function (event) {\r\n                    if (event) {\r\n                        return this._subscriptions[event] && this._subscriptions[event].length || 0;\r\n                    } else {\r\n                        var total = 0;\r\n                        ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\r\n                            if (eventName !== 'dirty')\r\n                                total += subscriptions.length;\r\n                        });\r\n                        return total;\r\n                    }\r\n                },\r\n\r\n                isDifferent: function(oldValue, newValue) {\r\n                    return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\r\n                },\r\n\r\n                toString: function() {\r\n                    return '[object Object]'\r\n                },\r\n\r\n                extend: applyExtenders\r\n            };\r\n\r\n            ko.exportProperty(ko_subscribable_fn, 'init', ko_subscribable_fn.init);\r\n            ko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\r\n            ko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\r\n            ko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\r\n\r\n// For browsers that support proto assignment, we overwrite the prototype of each\r\n// observable instance. Since observables are functions, we need Function.prototype\r\n// to still be in the prototype chain.\r\n            if (ko.utils.canSetPrototype) {\r\n                ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\r\n            }\r\n\r\n            ko.subscribable['fn'] = ko_subscribable_fn;\r\n\r\n\r\n            ko.isSubscribable = function (instance) {\r\n                return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\r\n            };\r\n\r\n            ko.exportSymbol('subscribable', ko.subscribable);\r\n            ko.exportSymbol('isSubscribable', ko.isSubscribable);\r\n\r\n            ko.computedContext = ko.dependencyDetection = (function () {\r\n                var outerFrames = [],\r\n                    currentFrame,\r\n                    lastId = 0;\r\n\r\n                // Return a unique ID that can be assigned to an observable for dependency tracking.\r\n                // Theoretically, you could eventually overflow the number storage size, resulting\r\n                // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\r\n                // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\r\n                // take over 285 years to reach that number.\r\n                // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\r\n                function getId() {\r\n                    return ++lastId;\r\n                }\r\n\r\n                function begin(options) {\r\n                    outerFrames.push(currentFrame);\r\n                    currentFrame = options;\r\n                }\r\n\r\n                function end() {\r\n                    currentFrame = outerFrames.pop();\r\n                }\r\n\r\n                return {\r\n                    begin: begin,\r\n\r\n                    end: end,\r\n\r\n                    registerDependency: function (subscribable) {\r\n                        if (currentFrame) {\r\n                            if (!ko.isSubscribable(subscribable))\r\n                                throw new Error(\"Only subscribable things can act as dependencies\");\r\n                            currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = getId()));\r\n                        }\r\n                    },\r\n\r\n                    ignore: function (callback, callbackTarget, callbackArgs) {\r\n                        try {\r\n                            begin();\r\n                            return callback.apply(callbackTarget, callbackArgs || []);\r\n                        } finally {\r\n                            end();\r\n                        }\r\n                    },\r\n\r\n                    getDependenciesCount: function () {\r\n                        if (currentFrame)\r\n                            return currentFrame.computed.getDependenciesCount();\r\n                    },\r\n\r\n                    getDependencies: function () {\r\n                        if (currentFrame)\r\n                            return currentFrame.computed.getDependencies();\r\n                    },\r\n\r\n                    isInitial: function() {\r\n                        if (currentFrame)\r\n                            return currentFrame.isInitial;\r\n                    },\r\n\r\n                    computed: function() {\r\n                        if (currentFrame)\r\n                            return currentFrame.computed;\r\n                    }\r\n                };\r\n            })();\r\n\r\n            ko.exportSymbol('computedContext', ko.computedContext);\r\n            ko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\r\n            ko.exportSymbol('computedContext.getDependencies', ko.computedContext.getDependencies);\r\n            ko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\r\n            ko.exportSymbol('computedContext.registerDependency', ko.computedContext.registerDependency);\r\n\r\n            ko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\r\n            var observableLatestValue = ko.utils.createSymbolOrString('_latestValue');\r\n\r\n            ko.observable = function (initialValue) {\r\n                function observable() {\r\n                    if (arguments.length > 0) {\r\n                        // Write\r\n\r\n                        // Ignore writes if the value hasn't changed\r\n                        if (observable.isDifferent(observable[observableLatestValue], arguments[0])) {\r\n                            observable.valueWillMutate();\r\n                            observable[observableLatestValue] = arguments[0];\r\n                            observable.valueHasMutated();\r\n                        }\r\n                        return this; // Permits chained assignments\r\n                    }\r\n                    else {\r\n                        // Read\r\n                        ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\r\n                        return observable[observableLatestValue];\r\n                    }\r\n                }\r\n\r\n                observable[observableLatestValue] = initialValue;\r\n\r\n                // Inherit from 'subscribable'\r\n                if (!ko.utils.canSetPrototype) {\r\n                    // 'subscribable' won't be on the prototype chain unless we put it there directly\r\n                    ko.utils.extend(observable, ko.subscribable['fn']);\r\n                }\r\n                ko.subscribable['fn'].init(observable);\r\n\r\n                // Inherit from 'observable'\r\n                ko.utils.setPrototypeOfOrExtend(observable, observableFn);\r\n\r\n                if (ko.options['deferUpdates']) {\r\n                    ko.extenders['deferred'](observable, true);\r\n                }\r\n\r\n                return observable;\r\n            }\r\n\r\n// Define prototype for observables\r\n            var observableFn = {\r\n                'equalityComparer': valuesArePrimitiveAndEqual,\r\n                peek: function() { return this[observableLatestValue]; },\r\n                valueHasMutated: function () {\r\n                    this['notifySubscribers'](this[observableLatestValue], 'spectate');\r\n                    this['notifySubscribers'](this[observableLatestValue]);\r\n                },\r\n                valueWillMutate: function () { this['notifySubscribers'](this[observableLatestValue], 'beforeChange'); }\r\n            };\r\n\r\n// Note that for browsers that don't support proto assignment, the\r\n// inheritance chain is created manually in the ko.observable constructor\r\n            if (ko.utils.canSetPrototype) {\r\n                ko.utils.setPrototypeOf(observableFn, ko.subscribable['fn']);\r\n            }\r\n\r\n            var protoProperty = ko.observable.protoProperty = '__ko_proto__';\r\n            observableFn[protoProperty] = ko.observable;\r\n\r\n            ko.isObservable = function (instance) {\r\n                var proto = typeof instance == 'function' && instance[protoProperty];\r\n                if (proto && proto !== observableFn[protoProperty] && proto !== ko.computed['fn'][protoProperty]) {\r\n                    throw Error(\"Invalid object that looks like an observable; possibly from another Knockout instance\");\r\n                }\r\n                return !!proto;\r\n            };\r\n\r\n            ko.isWriteableObservable = function (instance) {\r\n                return (typeof instance == 'function' && (\r\n                    (instance[protoProperty] === observableFn[protoProperty]) ||  // Observable\r\n                    (instance[protoProperty] === ko.computed['fn'][protoProperty] && instance.hasWriteFunction)));   // Writable computed observable\r\n            };\r\n\r\n            ko.exportSymbol('observable', ko.observable);\r\n            ko.exportSymbol('isObservable', ko.isObservable);\r\n            ko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\r\n            ko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\r\n            ko.exportSymbol('observable.fn', observableFn);\r\n            ko.exportProperty(observableFn, 'peek', observableFn.peek);\r\n            ko.exportProperty(observableFn, 'valueHasMutated', observableFn.valueHasMutated);\r\n            ko.exportProperty(observableFn, 'valueWillMutate', observableFn.valueWillMutate);\r\n            ko.observableArray = function (initialValues) {\r\n                initialValues = initialValues || [];\r\n\r\n                if (typeof initialValues != 'object' || !('length' in initialValues))\r\n                    throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\r\n\r\n                var result = ko.observable(initialValues);\r\n                ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\r\n                return result.extend({'trackArrayChanges':true});\r\n            };\r\n\r\n            ko.observableArray['fn'] = {\r\n                'remove': function (valueOrPredicate) {\r\n                    var underlyingArray = this.peek();\r\n                    var removedValues = [];\r\n                    var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\r\n                    for (var i = 0; i < underlyingArray.length; i++) {\r\n                        var value = underlyingArray[i];\r\n                        if (predicate(value)) {\r\n                            if (removedValues.length === 0) {\r\n                                this.valueWillMutate();\r\n                            }\r\n                            if (underlyingArray[i] !== value) {\r\n                                throw Error(\"Array modified during remove; cannot remove item\");\r\n                            }\r\n                            removedValues.push(value);\r\n                            underlyingArray.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                    if (removedValues.length) {\r\n                        this.valueHasMutated();\r\n                    }\r\n                    return removedValues;\r\n                },\r\n\r\n                'removeAll': function (arrayOfValues) {\r\n                    // If you passed zero args, we remove everything\r\n                    if (arrayOfValues === undefined) {\r\n                        var underlyingArray = this.peek();\r\n                        var allValues = underlyingArray.slice(0);\r\n                        this.valueWillMutate();\r\n                        underlyingArray.splice(0, underlyingArray.length);\r\n                        this.valueHasMutated();\r\n                        return allValues;\r\n                    }\r\n                    // If you passed an arg, we interpret it as an array of entries to remove\r\n                    if (!arrayOfValues)\r\n                        return [];\r\n                    return this['remove'](function (value) {\r\n                        return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\r\n                    });\r\n                },\r\n\r\n                'destroy': function (valueOrPredicate) {\r\n                    var underlyingArray = this.peek();\r\n                    var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\r\n                    this.valueWillMutate();\r\n                    for (var i = underlyingArray.length - 1; i >= 0; i--) {\r\n                        var value = underlyingArray[i];\r\n                        if (predicate(value))\r\n                            value[\"_destroy\"] = true;\r\n                    }\r\n                    this.valueHasMutated();\r\n                },\r\n\r\n                'destroyAll': function (arrayOfValues) {\r\n                    // If you passed zero args, we destroy everything\r\n                    if (arrayOfValues === undefined)\r\n                        return this['destroy'](function() { return true });\r\n\r\n                    // If you passed an arg, we interpret it as an array of entries to destroy\r\n                    if (!arrayOfValues)\r\n                        return [];\r\n                    return this['destroy'](function (value) {\r\n                        return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\r\n                    });\r\n                },\r\n\r\n                'indexOf': function (item) {\r\n                    var underlyingArray = this();\r\n                    return ko.utils.arrayIndexOf(underlyingArray, item);\r\n                },\r\n\r\n                'replace': function(oldItem, newItem) {\r\n                    var index = this['indexOf'](oldItem);\r\n                    if (index >= 0) {\r\n                        this.valueWillMutate();\r\n                        this.peek()[index] = newItem;\r\n                        this.valueHasMutated();\r\n                    }\r\n                },\r\n\r\n                'sorted': function (compareFunction) {\r\n                    var arrayCopy = this().slice(0);\r\n                    return compareFunction ? arrayCopy.sort(compareFunction) : arrayCopy.sort();\r\n                },\r\n\r\n                'reversed': function () {\r\n                    return this().slice(0).reverse();\r\n                }\r\n            };\r\n\r\n// Note that for browsers that don't support proto assignment, the\r\n// inheritance chain is created manually in the ko.observableArray constructor\r\n            if (ko.utils.canSetPrototype) {\r\n                ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\r\n            }\r\n\r\n// Populate ko.observableArray.fn with read/write functions from native arrays\r\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\r\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\r\n            ko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\r\n                ko.observableArray['fn'][methodName] = function () {\r\n                    // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\r\n                    // (for consistency with mutating regular observables)\r\n                    var underlyingArray = this.peek();\r\n                    this.valueWillMutate();\r\n                    this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\r\n                    var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\r\n                    this.valueHasMutated();\r\n                    // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\r\n                    return methodCallResult === underlyingArray ? this : methodCallResult;\r\n                };\r\n            });\r\n\r\n// Populate ko.observableArray.fn with read-only functions from native arrays\r\n            ko.utils.arrayForEach([\"slice\"], function (methodName) {\r\n                ko.observableArray['fn'][methodName] = function () {\r\n                    var underlyingArray = this();\r\n                    return underlyingArray[methodName].apply(underlyingArray, arguments);\r\n                };\r\n            });\r\n\r\n            ko.isObservableArray = function (instance) {\r\n                return ko.isObservable(instance)\r\n                    && typeof instance[\"remove\"] == \"function\"\r\n                    && typeof instance[\"push\"] == \"function\";\r\n            };\r\n\r\n            ko.exportSymbol('observableArray', ko.observableArray);\r\n            ko.exportSymbol('isObservableArray', ko.isObservableArray);\r\n            var arrayChangeEventName = 'arrayChange';\r\n            ko.extenders['trackArrayChanges'] = function(target, options) {\r\n                // Use the provided options--each call to trackArrayChanges overwrites the previously set options\r\n                target.compareArrayOptions = {};\r\n                if (options && typeof options == \"object\") {\r\n                    ko.utils.extend(target.compareArrayOptions, options);\r\n                }\r\n                target.compareArrayOptions['sparse'] = true;\r\n\r\n                // Only modify the target observable once\r\n                if (target.cacheDiffForKnownOperation) {\r\n                    return;\r\n                }\r\n                var trackingChanges = false,\r\n                    cachedDiff = null,\r\n                    changeSubscription,\r\n                    spectateSubscription,\r\n                    pendingChanges = 0,\r\n                    previousContents,\r\n                    underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\r\n                    underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\r\n\r\n                // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\r\n                target.beforeSubscriptionAdd = function (event) {\r\n                    if (underlyingBeforeSubscriptionAddFunction) {\r\n                        underlyingBeforeSubscriptionAddFunction.call(target, event);\r\n                    }\r\n                    if (event === arrayChangeEventName) {\r\n                        trackChanges();\r\n                    }\r\n                };\r\n                // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\r\n                target.afterSubscriptionRemove = function (event) {\r\n                    if (underlyingAfterSubscriptionRemoveFunction) {\r\n                        underlyingAfterSubscriptionRemoveFunction.call(target, event);\r\n                    }\r\n                    if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\r\n                        if (changeSubscription) {\r\n                            changeSubscription.dispose();\r\n                        }\r\n                        if (spectateSubscription) {\r\n                            spectateSubscription.dispose();\r\n                        }\r\n                        spectateSubscription = changeSubscription = null;\r\n                        trackingChanges = false;\r\n                        previousContents = undefined;\r\n                    }\r\n                };\r\n\r\n                function trackChanges() {\r\n                    if (trackingChanges) {\r\n                        // Whenever there's a new subscription and there are pending notifications, make sure all previous\r\n                        // subscriptions are notified of the change so that all subscriptions are in sync.\r\n                        notifyChanges();\r\n                        return;\r\n                    }\r\n\r\n                    trackingChanges = true;\r\n\r\n                    // Track how many times the array actually changed value\r\n                    spectateSubscription = target.subscribe(function () {\r\n                        ++pendingChanges;\r\n                    }, null, \"spectate\");\r\n\r\n                    // Each time the array changes value, capture a clone so that on the next\r\n                    // change it's possible to produce a diff\r\n                    previousContents = [].concat(target.peek() || []);\r\n                    cachedDiff = null;\r\n                    changeSubscription = target.subscribe(notifyChanges);\r\n\r\n                    function notifyChanges() {\r\n                        if (pendingChanges) {\r\n                            // Make a copy of the current contents and ensure it's an array\r\n                            var currentContents = [].concat(target.peek() || []), changes;\r\n\r\n                            // Compute the diff and issue notifications, but only if someone is listening\r\n                            if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\r\n                                changes = getChanges(previousContents, currentContents);\r\n                            }\r\n\r\n                            // Eliminate references to the old, removed items, so they can be GCed\r\n                            previousContents = currentContents;\r\n                            cachedDiff = null;\r\n                            pendingChanges = 0;\r\n\r\n                            if (changes && changes.length) {\r\n                                target['notifySubscribers'](changes, arrayChangeEventName);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function getChanges(previousContents, currentContents) {\r\n                    // We try to re-use cached diffs.\r\n                    // The scenarios where pendingChanges > 1 are when using rate limiting or deferred updates,\r\n                    // which without this check would not be compatible with arrayChange notifications. Normally,\r\n                    // notifications are issued immediately so we wouldn't be queueing up more than one.\r\n                    if (!cachedDiff || pendingChanges > 1) {\r\n                        cachedDiff = ko.utils.compareArrays(previousContents, currentContents, target.compareArrayOptions);\r\n                    }\r\n\r\n                    return cachedDiff;\r\n                }\r\n\r\n                target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\r\n                    // Only run if we're currently tracking changes for this observable array\r\n                    // and there aren't any pending deferred notifications.\r\n                    if (!trackingChanges || pendingChanges) {\r\n                        return;\r\n                    }\r\n                    var diff = [],\r\n                        arrayLength = rawArray.length,\r\n                        argsLength = args.length,\r\n                        offset = 0;\r\n\r\n                    function pushDiff(status, value, index) {\r\n                        return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\r\n                    }\r\n                    switch (operationName) {\r\n                        case 'push':\r\n                            offset = arrayLength;\r\n                        case 'unshift':\r\n                            for (var index = 0; index < argsLength; index++) {\r\n                                pushDiff('added', args[index], offset + index);\r\n                            }\r\n                            break;\r\n\r\n                        case 'pop':\r\n                            offset = arrayLength - 1;\r\n                        case 'shift':\r\n                            if (arrayLength) {\r\n                                pushDiff('deleted', rawArray[offset], offset);\r\n                            }\r\n                            break;\r\n\r\n                        case 'splice':\r\n                            // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\r\n                            // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\r\n                            var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\r\n                                endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\r\n                                endAddIndex = startIndex + argsLength - 2,\r\n                                endIndex = Math.max(endDeleteIndex, endAddIndex),\r\n                                additions = [], deletions = [];\r\n                            for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\r\n                                if (index < endDeleteIndex)\r\n                                    deletions.push(pushDiff('deleted', rawArray[index], index));\r\n                                if (index < endAddIndex)\r\n                                    additions.push(pushDiff('added', args[argsIndex], index));\r\n                            }\r\n                            ko.utils.findMovesInArrayComparison(deletions, additions);\r\n                            break;\r\n\r\n                        default:\r\n                            return;\r\n                    }\r\n                    cachedDiff = diff;\r\n                };\r\n            };\r\n            var computedState = ko.utils.createSymbolOrString('_state');\r\n\r\n            ko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\r\n                if (typeof evaluatorFunctionOrOptions === \"object\") {\r\n                    // Single-parameter syntax - everything is on this \"options\" param\r\n                    options = evaluatorFunctionOrOptions;\r\n                } else {\r\n                    // Multi-parameter syntax - construct the options according to the params passed\r\n                    options = options || {};\r\n                    if (evaluatorFunctionOrOptions) {\r\n                        options[\"read\"] = evaluatorFunctionOrOptions;\r\n                    }\r\n                }\r\n                if (typeof options[\"read\"] != \"function\")\r\n                    throw Error(\"Pass a function that returns the value of the ko.computed\");\r\n\r\n                var writeFunction = options[\"write\"];\r\n                var state = {\r\n                    latestValue: undefined,\r\n                    isStale: true,\r\n                    isDirty: true,\r\n                    isBeingEvaluated: false,\r\n                    suppressDisposalUntilDisposeWhenReturnsFalse: false,\r\n                    isDisposed: false,\r\n                    pure: false,\r\n                    isSleeping: false,\r\n                    readFunction: options[\"read\"],\r\n                    evaluatorFunctionTarget: evaluatorFunctionTarget || options[\"owner\"],\r\n                    disposeWhenNodeIsRemoved: options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\r\n                    disposeWhen: options[\"disposeWhen\"] || options.disposeWhen,\r\n                    domNodeDisposalCallback: null,\r\n                    dependencyTracking: {},\r\n                    dependenciesCount: 0,\r\n                    evaluationTimeoutInstance: null\r\n                };\r\n\r\n                function computedObservable() {\r\n                    if (arguments.length > 0) {\r\n                        if (typeof writeFunction === \"function\") {\r\n                            // Writing a value\r\n                            writeFunction.apply(state.evaluatorFunctionTarget, arguments);\r\n                        } else {\r\n                            throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\r\n                        }\r\n                        return this; // Permits chained assignments\r\n                    } else {\r\n                        // Reading the value\r\n                        if (!state.isDisposed) {\r\n                            ko.dependencyDetection.registerDependency(computedObservable);\r\n                        }\r\n                        if (state.isDirty || (state.isSleeping && computedObservable.haveDependenciesChanged())) {\r\n                            computedObservable.evaluateImmediate();\r\n                        }\r\n                        return state.latestValue;\r\n                    }\r\n                }\r\n\r\n                computedObservable[computedState] = state;\r\n                computedObservable.hasWriteFunction = typeof writeFunction === \"function\";\r\n\r\n                // Inherit from 'subscribable'\r\n                if (!ko.utils.canSetPrototype) {\r\n                    // 'subscribable' won't be on the prototype chain unless we put it there directly\r\n                    ko.utils.extend(computedObservable, ko.subscribable['fn']);\r\n                }\r\n                ko.subscribable['fn'].init(computedObservable);\r\n\r\n                // Inherit from 'computed'\r\n                ko.utils.setPrototypeOfOrExtend(computedObservable, computedFn);\r\n\r\n                if (options['pure']) {\r\n                    state.pure = true;\r\n                    state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\r\n                    ko.utils.extend(computedObservable, pureComputedOverrides);\r\n                } else if (options['deferEvaluation']) {\r\n                    ko.utils.extend(computedObservable, deferEvaluationOverrides);\r\n                }\r\n\r\n                if (ko.options['deferUpdates']) {\r\n                    ko.extenders['deferred'](computedObservable, true);\r\n                }\r\n\r\n                if (DEBUG) {\r\n                    // #1731 - Aid debugging by exposing the computed's options\r\n                    computedObservable[\"_options\"] = options;\r\n                }\r\n\r\n                if (state.disposeWhenNodeIsRemoved) {\r\n                    // Since this computed is associated with a DOM node, and we don't want to dispose the computed\r\n                    // until the DOM node is *removed* from the document (as opposed to never having been in the document),\r\n                    // we'll prevent disposal until \"disposeWhen\" first returns false.\r\n                    state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\r\n\r\n                    // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\r\n                    // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\r\n                    // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\r\n                    // be documented or used by application code, as it's likely to change in a future version of KO.\r\n                    if (!state.disposeWhenNodeIsRemoved.nodeType) {\r\n                        state.disposeWhenNodeIsRemoved = null;\r\n                    }\r\n                }\r\n\r\n                // Evaluate, unless sleeping or deferEvaluation is true\r\n                if (!state.isSleeping && !options['deferEvaluation']) {\r\n                    computedObservable.evaluateImmediate();\r\n                }\r\n\r\n                // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\r\n                // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\r\n                if (state.disposeWhenNodeIsRemoved && computedObservable.isActive()) {\r\n                    ko.utils.domNodeDisposal.addDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = function () {\r\n                        computedObservable.dispose();\r\n                    });\r\n                }\r\n\r\n                return computedObservable;\r\n            };\r\n\r\n// Utility function that disposes a given dependencyTracking entry\r\n            function computedDisposeDependencyCallback(id, entryToDispose) {\r\n                if (entryToDispose !== null && entryToDispose.dispose) {\r\n                    entryToDispose.dispose();\r\n                }\r\n            }\r\n\r\n// This function gets called each time a dependency is detected while evaluating a computed.\r\n// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\r\n            function computedBeginDependencyDetectionCallback(subscribable, id) {\r\n                var computedObservable = this.computedObservable,\r\n                    state = computedObservable[computedState];\r\n                if (!state.isDisposed) {\r\n                    if (this.disposalCount && this.disposalCandidates[id]) {\r\n                        // Don't want to dispose this subscription, as it's still being used\r\n                        computedObservable.addDependencyTracking(id, subscribable, this.disposalCandidates[id]);\r\n                        this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\r\n                        --this.disposalCount;\r\n                    } else if (!state.dependencyTracking[id]) {\r\n                        // Brand new subscription - add it\r\n                        computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? { _target: subscribable } : computedObservable.subscribeToDependency(subscribable));\r\n                    }\r\n                    // If the observable we've accessed has a pending notification, ensure we get notified of the actual final value (bypass equality checks)\r\n                    if (subscribable._notificationIsPending) {\r\n                        subscribable._notifyNextChangeIfValueIsDifferent();\r\n                    }\r\n                }\r\n            }\r\n\r\n            var computedFn = {\r\n                \"equalityComparer\": valuesArePrimitiveAndEqual,\r\n                getDependenciesCount: function () {\r\n                    return this[computedState].dependenciesCount;\r\n                },\r\n                getDependencies: function () {\r\n                    var dependencyTracking = this[computedState].dependencyTracking, dependentObservables = [];\r\n\r\n                    ko.utils.objectForEach(dependencyTracking, function (id, dependency) {\r\n                        dependentObservables[dependency._order] = dependency._target;\r\n                    });\r\n\r\n                    return dependentObservables;\r\n                },\r\n                hasAncestorDependency: function (obs) {\r\n                    if (!this[computedState].dependenciesCount) {\r\n                        return false;\r\n                    }\r\n                    var dependencies = this.getDependencies();\r\n                    if (ko.utils.arrayIndexOf(dependencies, obs) !== -1) {\r\n                        return true;\r\n                    }\r\n                    return !!ko.utils.arrayFirst(dependencies, function (dep) {\r\n                        return dep.hasAncestorDependency && dep.hasAncestorDependency(obs);\r\n                    });\r\n                },\r\n                addDependencyTracking: function (id, target, trackingObj) {\r\n                    if (this[computedState].pure && target === this) {\r\n                        throw Error(\"A 'pure' computed must not be called recursively\");\r\n                    }\r\n\r\n                    this[computedState].dependencyTracking[id] = trackingObj;\r\n                    trackingObj._order = this[computedState].dependenciesCount++;\r\n                    trackingObj._version = target.getVersion();\r\n                },\r\n                haveDependenciesChanged: function () {\r\n                    var id, dependency, dependencyTracking = this[computedState].dependencyTracking;\r\n                    for (id in dependencyTracking) {\r\n                        if (Object.prototype.hasOwnProperty.call(dependencyTracking, id)) {\r\n                            dependency = dependencyTracking[id];\r\n                            if ((this._evalDelayed && dependency._target._notificationIsPending) || dependency._target.hasChanged(dependency._version)) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                markDirty: function () {\r\n                    // Process \"dirty\" events if we can handle delayed notifications\r\n                    if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\r\n                        this._evalDelayed(false /*isChange*/);\r\n                    }\r\n                },\r\n                isActive: function () {\r\n                    var state = this[computedState];\r\n                    return state.isDirty || state.dependenciesCount > 0;\r\n                },\r\n                respondToChange: function () {\r\n                    // Ignore \"change\" events if we've already scheduled a delayed notification\r\n                    if (!this._notificationIsPending) {\r\n                        this.evaluatePossiblyAsync();\r\n                    } else if (this[computedState].isDirty) {\r\n                        this[computedState].isStale = true;\r\n                    }\r\n                },\r\n                subscribeToDependency: function (target) {\r\n                    if (target._deferUpdates) {\r\n                        var dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\r\n                            changeSub = target.subscribe(this.respondToChange, this);\r\n                        return {\r\n                            _target: target,\r\n                            dispose: function () {\r\n                                dirtySub.dispose();\r\n                                changeSub.dispose();\r\n                            }\r\n                        };\r\n                    } else {\r\n                        return target.subscribe(this.evaluatePossiblyAsync, this);\r\n                    }\r\n                },\r\n                evaluatePossiblyAsync: function () {\r\n                    var computedObservable = this,\r\n                        throttleEvaluationTimeout = computedObservable['throttleEvaluation'];\r\n                    if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\r\n                        clearTimeout(this[computedState].evaluationTimeoutInstance);\r\n                        this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {\r\n                            computedObservable.evaluateImmediate(true /*notifyChange*/);\r\n                        }, throttleEvaluationTimeout);\r\n                    } else if (computedObservable._evalDelayed) {\r\n                        computedObservable._evalDelayed(true /*isChange*/);\r\n                    } else {\r\n                        computedObservable.evaluateImmediate(true /*notifyChange*/);\r\n                    }\r\n                },\r\n                evaluateImmediate: function (notifyChange) {\r\n                    var computedObservable = this,\r\n                        state = computedObservable[computedState],\r\n                        disposeWhen = state.disposeWhen,\r\n                        changed = false;\r\n\r\n                    if (state.isBeingEvaluated) {\r\n                        // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\r\n                        // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\r\n                        // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\r\n                        // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\r\n                        return;\r\n                    }\r\n\r\n                    // Do not evaluate (and possibly capture new dependencies) if disposed\r\n                    if (state.isDisposed) {\r\n                        return;\r\n                    }\r\n\r\n                    if (state.disposeWhenNodeIsRemoved && !ko.utils.domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {\r\n                        // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\r\n                        if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\r\n                            computedObservable.dispose();\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        // It just did return false, so we can stop suppressing now\r\n                        state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\r\n                    }\r\n\r\n                    state.isBeingEvaluated = true;\r\n                    try {\r\n                        changed = this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\r\n                    } finally {\r\n                        state.isBeingEvaluated = false;\r\n                    }\r\n\r\n                    return changed;\r\n                },\r\n                evaluateImmediate_CallReadWithDependencyDetection: function (notifyChange) {\r\n                    // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\r\n                    // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\r\n                    // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\r\n\r\n                    var computedObservable = this,\r\n                        state = computedObservable[computedState],\r\n                        changed = false;\r\n\r\n                    // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\r\n                    // Then, during evaluation, we cross off any that are in fact still being used.\r\n                    var isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\r\n                        dependencyDetectionContext = {\r\n                            computedObservable: computedObservable,\r\n                            disposalCandidates: state.dependencyTracking,\r\n                            disposalCount: state.dependenciesCount\r\n                        };\r\n\r\n                    ko.dependencyDetection.begin({\r\n                        callbackTarget: dependencyDetectionContext,\r\n                        callback: computedBeginDependencyDetectionCallback,\r\n                        computed: computedObservable,\r\n                        isInitial: isInitial\r\n                    });\r\n\r\n                    state.dependencyTracking = {};\r\n                    state.dependenciesCount = 0;\r\n\r\n                    var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\r\n\r\n                    if (!state.dependenciesCount) {\r\n                        computedObservable.dispose();\r\n                        changed = true; // When evaluation causes a disposal, make sure all dependent computeds get notified so they'll see the new state\r\n                    } else {\r\n                        changed = computedObservable.isDifferent(state.latestValue, newValue);\r\n                    }\r\n\r\n                    if (changed) {\r\n                        if (!state.isSleeping) {\r\n                            computedObservable[\"notifySubscribers\"](state.latestValue, \"beforeChange\");\r\n                        } else {\r\n                            computedObservable.updateVersion();\r\n                        }\r\n\r\n                        state.latestValue = newValue;\r\n                        if (DEBUG) computedObservable._latestValue = newValue;\r\n\r\n                        computedObservable[\"notifySubscribers\"](state.latestValue, \"spectate\");\r\n\r\n                        if (!state.isSleeping && notifyChange) {\r\n                            computedObservable[\"notifySubscribers\"](state.latestValue);\r\n                        }\r\n                        if (computedObservable._recordUpdate) {\r\n                            computedObservable._recordUpdate();\r\n                        }\r\n                    }\r\n\r\n                    if (isInitial) {\r\n                        computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\r\n                    }\r\n\r\n                    return changed;\r\n                },\r\n                evaluateImmediate_CallReadThenEndDependencyDetection: function (state, dependencyDetectionContext) {\r\n                    // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\r\n                    // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\r\n                    // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\r\n                    // overhead of computed evaluation (on V8 at least).\r\n\r\n                    try {\r\n                        var readFunction = state.readFunction;\r\n                        return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\r\n                    } finally {\r\n                        ko.dependencyDetection.end();\r\n\r\n                        // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\r\n                        if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\r\n                            ko.utils.objectForEach(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\r\n                        }\r\n\r\n                        state.isStale = state.isDirty = false;\r\n                    }\r\n                },\r\n                peek: function (evaluate) {\r\n                    // By default, peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\r\n                    // Pass in true to evaluate if needed.\r\n                    var state = this[computedState];\r\n                    if ((state.isDirty && (evaluate || !state.dependenciesCount)) || (state.isSleeping && this.haveDependenciesChanged())) {\r\n                        this.evaluateImmediate();\r\n                    }\r\n                    return state.latestValue;\r\n                },\r\n                limit: function (limitFunction) {\r\n                    // Override the limit function with one that delays evaluation as well\r\n                    ko.subscribable['fn'].limit.call(this, limitFunction);\r\n                    this._evalIfChanged = function () {\r\n                        if (!this[computedState].isSleeping) {\r\n                            if (this[computedState].isStale) {\r\n                                this.evaluateImmediate();\r\n                            } else {\r\n                                this[computedState].isDirty = false;\r\n                            }\r\n                        }\r\n                        return this[computedState].latestValue;\r\n                    };\r\n                    this._evalDelayed = function (isChange) {\r\n                        this._limitBeforeChange(this[computedState].latestValue);\r\n\r\n                        // Mark as dirty\r\n                        this[computedState].isDirty = true;\r\n                        if (isChange) {\r\n                            this[computedState].isStale = true;\r\n                        }\r\n\r\n                        // Pass the observable to the \"limit\" code, which will evaluate it when\r\n                        // it's time to do the notification.\r\n                        this._limitChange(this, !isChange /* isDirty */);\r\n                    };\r\n                },\r\n                dispose: function () {\r\n                    var state = this[computedState];\r\n                    if (!state.isSleeping && state.dependencyTracking) {\r\n                        ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\r\n                            if (dependency.dispose)\r\n                                dependency.dispose();\r\n                        });\r\n                    }\r\n                    if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\r\n                        ko.utils.domNodeDisposal.removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\r\n                    }\r\n                    state.dependencyTracking = undefined;\r\n                    state.dependenciesCount = 0;\r\n                    state.isDisposed = true;\r\n                    state.isStale = false;\r\n                    state.isDirty = false;\r\n                    state.isSleeping = false;\r\n                    state.disposeWhenNodeIsRemoved = undefined;\r\n                    state.disposeWhen = undefined;\r\n                    state.readFunction = undefined;\r\n                    if (!this.hasWriteFunction) {\r\n                        state.evaluatorFunctionTarget = undefined;\r\n                    }\r\n                }\r\n            };\r\n\r\n            var pureComputedOverrides = {\r\n                beforeSubscriptionAdd: function (event) {\r\n                    // If asleep, wake up the computed by subscribing to any dependencies.\r\n                    var computedObservable = this,\r\n                        state = computedObservable[computedState];\r\n                    if (!state.isDisposed && state.isSleeping && event == 'change') {\r\n                        state.isSleeping = false;\r\n                        if (state.isStale || computedObservable.haveDependenciesChanged()) {\r\n                            state.dependencyTracking = null;\r\n                            state.dependenciesCount = 0;\r\n                            if (computedObservable.evaluateImmediate()) {\r\n                                computedObservable.updateVersion();\r\n                            }\r\n                        } else {\r\n                            // First put the dependencies in order\r\n                            var dependenciesOrder = [];\r\n                            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\r\n                                dependenciesOrder[dependency._order] = id;\r\n                            });\r\n                            // Next, subscribe to each one\r\n                            ko.utils.arrayForEach(dependenciesOrder, function (id, order) {\r\n                                var dependency = state.dependencyTracking[id],\r\n                                    subscription = computedObservable.subscribeToDependency(dependency._target);\r\n                                subscription._order = order;\r\n                                subscription._version = dependency._version;\r\n                                state.dependencyTracking[id] = subscription;\r\n                            });\r\n                            // Waking dependencies may have triggered effects\r\n                            if (computedObservable.haveDependenciesChanged()) {\r\n                                if (computedObservable.evaluateImmediate()) {\r\n                                    computedObservable.updateVersion();\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (!state.isDisposed) {     // test since evaluating could trigger disposal\r\n                            computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\r\n                        }\r\n                    }\r\n                },\r\n                afterSubscriptionRemove: function (event) {\r\n                    var state = this[computedState];\r\n                    if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\r\n                        ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\r\n                            if (dependency.dispose) {\r\n                                state.dependencyTracking[id] = {\r\n                                    _target: dependency._target,\r\n                                    _order: dependency._order,\r\n                                    _version: dependency._version\r\n                                };\r\n                                dependency.dispose();\r\n                            }\r\n                        });\r\n                        state.isSleeping = true;\r\n                        this[\"notifySubscribers\"](undefined, \"asleep\");\r\n                    }\r\n                },\r\n                getVersion: function () {\r\n                    // Because a pure computed is not automatically updated while it is sleeping, we can't\r\n                    // simply return the version number. Instead, we check if any of the dependencies have\r\n                    // changed and conditionally re-evaluate the computed observable.\r\n                    var state = this[computedState];\r\n                    if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\r\n                        this.evaluateImmediate();\r\n                    }\r\n                    return ko.subscribable['fn'].getVersion.call(this);\r\n                }\r\n            };\r\n\r\n            var deferEvaluationOverrides = {\r\n                beforeSubscriptionAdd: function (event) {\r\n                    // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\r\n                    if (event == 'change' || event == 'beforeChange') {\r\n                        this.peek();\r\n                    }\r\n                }\r\n            };\r\n\r\n// Note that for browsers that don't support proto assignment, the\r\n// inheritance chain is created manually in the ko.computed constructor\r\n            if (ko.utils.canSetPrototype) {\r\n                ko.utils.setPrototypeOf(computedFn, ko.subscribable['fn']);\r\n            }\r\n\r\n// Set the proto values for ko.computed\r\n            var protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\r\n            computedFn[protoProp] = ko.computed;\r\n\r\n            ko.isComputed = function (instance) {\r\n                return (typeof instance == 'function' && instance[protoProp] === computedFn[protoProp]);\r\n            };\r\n\r\n            ko.isPureComputed = function (instance) {\r\n                return ko.isComputed(instance) && instance[computedState] && instance[computedState].pure;\r\n            };\r\n\r\n            ko.exportSymbol('computed', ko.computed);\r\n            ko.exportSymbol('dependentObservable', ko.computed);    // export ko.dependentObservable for backwards compatibility (1.x)\r\n            ko.exportSymbol('isComputed', ko.isComputed);\r\n            ko.exportSymbol('isPureComputed', ko.isPureComputed);\r\n            ko.exportSymbol('computed.fn', computedFn);\r\n            ko.exportProperty(computedFn, 'peek', computedFn.peek);\r\n            ko.exportProperty(computedFn, 'dispose', computedFn.dispose);\r\n            ko.exportProperty(computedFn, 'isActive', computedFn.isActive);\r\n            ko.exportProperty(computedFn, 'getDependenciesCount', computedFn.getDependenciesCount);\r\n            ko.exportProperty(computedFn, 'getDependencies', computedFn.getDependencies);\r\n\r\n            ko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\r\n                if (typeof evaluatorFunctionOrOptions === 'function') {\r\n                    return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\r\n                } else {\r\n                    evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\r\n                    evaluatorFunctionOrOptions['pure'] = true;\r\n                    return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\r\n                }\r\n            }\r\n            ko.exportSymbol('pureComputed', ko.pureComputed);\r\n\r\n            (function() {\r\n                var maxNestedObservableDepth = 10; // Escape the (unlikely) pathological case where an observable's current value is itself (or similar reference cycle)\r\n\r\n                ko.toJS = function(rootObject) {\r\n                    if (arguments.length == 0)\r\n                        throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\r\n\r\n                    // We just unwrap everything at every level in the object graph\r\n                    return mapJsObjectGraph(rootObject, function(valueToMap) {\r\n                        // Loop because an observable's value might in turn be another observable wrapper\r\n                        for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\r\n                            valueToMap = valueToMap();\r\n                        return valueToMap;\r\n                    });\r\n                };\r\n\r\n                ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\r\n                    var plainJavaScriptObject = ko.toJS(rootObject);\r\n                    return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\r\n                };\r\n\r\n                function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\r\n                    visitedObjects = visitedObjects || new objectLookup();\r\n\r\n                    rootObject = mapInputCallback(rootObject);\r\n                    var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\r\n                    if (!canHaveProperties)\r\n                        return rootObject;\r\n\r\n                    var outputProperties = rootObject instanceof Array ? [] : {};\r\n                    visitedObjects.save(rootObject, outputProperties);\r\n\r\n                    visitPropertiesOrArrayEntries(rootObject, function(indexer) {\r\n                        var propertyValue = mapInputCallback(rootObject[indexer]);\r\n\r\n                        switch (typeof propertyValue) {\r\n                            case \"boolean\":\r\n                            case \"number\":\r\n                            case \"string\":\r\n                            case \"function\":\r\n                                outputProperties[indexer] = propertyValue;\r\n                                break;\r\n                            case \"object\":\r\n                            case \"undefined\":\r\n                                var previouslyMappedValue = visitedObjects.get(propertyValue);\r\n                                outputProperties[indexer] = (previouslyMappedValue !== undefined)\r\n                                    ? previouslyMappedValue\r\n                                    : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\r\n                                break;\r\n                        }\r\n                    });\r\n\r\n                    return outputProperties;\r\n                }\r\n\r\n                function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\r\n                    if (rootObject instanceof Array) {\r\n                        for (var i = 0; i < rootObject.length; i++)\r\n                            visitorCallback(i);\r\n\r\n                        // For arrays, also respect toJSON property for custom mappings (fixes #278)\r\n                        if (typeof rootObject['toJSON'] == 'function')\r\n                            visitorCallback('toJSON');\r\n                    } else {\r\n                        for (var propertyName in rootObject) {\r\n                            visitorCallback(propertyName);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                function objectLookup() {\r\n                    this.keys = [];\r\n                    this.values = [];\r\n                };\r\n\r\n                objectLookup.prototype = {\r\n                    constructor: objectLookup,\r\n                    save: function(key, value) {\r\n                        var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\r\n                        if (existingIndex >= 0)\r\n                            this.values[existingIndex] = value;\r\n                        else {\r\n                            this.keys.push(key);\r\n                            this.values.push(value);\r\n                        }\r\n                    },\r\n                    get: function(key) {\r\n                        var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\r\n                        return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\r\n                    }\r\n                };\r\n            })();\r\n\r\n            ko.exportSymbol('toJS', ko.toJS);\r\n            ko.exportSymbol('toJSON', ko.toJSON);\r\n            ko.when = function(predicate, callback, context) {\r\n                function kowhen (resolve) {\r\n                    var observable = ko.pureComputed(predicate, context).extend({notify:'always'});\r\n                    var subscription = observable.subscribe(function(value) {\r\n                        if (value) {\r\n                            subscription.dispose();\r\n                            resolve(value);\r\n                        }\r\n                    });\r\n                    // In case the initial value is true, process it right away\r\n                    observable['notifySubscribers'](observable.peek());\r\n\r\n                    return subscription;\r\n                }\r\n                if (typeof Promise === \"function\" && !callback) {\r\n                    return new Promise(kowhen);\r\n                } else {\r\n                    return kowhen(callback.bind(context));\r\n                }\r\n            };\r\n\r\n            ko.exportSymbol('when', ko.when);\r\n            (function () {\r\n                var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\r\n\r\n                // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\r\n                // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\r\n                // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\r\n                ko.selectExtensions = {\r\n                    readValue : function(element) {\r\n                        switch (ko.utils.tagNameLower(element)) {\r\n                            case 'option':\r\n                                if (element[hasDomDataExpandoProperty] === true)\r\n                                    return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\r\n                                return ko.utils.ieVersion <= 7\r\n                                    ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\r\n                                    : element.value;\r\n                            case 'select':\r\n                                return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\r\n                            default:\r\n                                return element.value;\r\n                        }\r\n                    },\r\n\r\n                    writeValue: function(element, value, allowUnset) {\r\n                        switch (ko.utils.tagNameLower(element)) {\r\n                            case 'option':\r\n                                if (typeof value === \"string\") {\r\n                                    ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\r\n                                    if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\r\n                                        delete element[hasDomDataExpandoProperty];\r\n                                    }\r\n                                    element.value = value;\r\n                                }\r\n                                else {\r\n                                    // Store arbitrary object using DomData\r\n                                    ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\r\n                                    element[hasDomDataExpandoProperty] = true;\r\n\r\n                                    // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\r\n                                    element.value = typeof value === \"number\" ? value : \"\";\r\n                                }\r\n                                break;\r\n                            case 'select':\r\n                                if (value === \"\" || value === null)       // A blank string or null value will select the caption\r\n                                    value = undefined;\r\n                                var selection = -1;\r\n                                for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\r\n                                    optionValue = ko.selectExtensions.readValue(element.options[i]);\r\n                                    // Include special check to handle selecting a caption with a blank string value\r\n                                    if (optionValue == value || (optionValue === \"\" && value === undefined)) {\r\n                                        selection = i;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\r\n                                    element.selectedIndex = selection;\r\n                                    if (ko.utils.ieVersion === 6) {\r\n                                        // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\r\n                                        // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\r\n                                        // to apply the value as well.\r\n                                        ko.utils.setTimeout(function () {\r\n                                            element.selectedIndex = selection;\r\n                                        }, 0);\r\n                                    }\r\n                                }\r\n                                break;\r\n                            default:\r\n                                if ((value === null) || (value === undefined))\r\n                                    value = \"\";\r\n                                element.value = value;\r\n                                break;\r\n                        }\r\n                    }\r\n                };\r\n            })();\r\n\r\n            ko.exportSymbol('selectExtensions', ko.selectExtensions);\r\n            ko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\r\n            ko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\r\n            ko.expressionRewriting = (function () {\r\n                var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\r\n\r\n                // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\r\n                // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\r\n                // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\r\n                var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\r\n\r\n                function getWriteableValue(expression) {\r\n                    if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\r\n                        return false;\r\n                    var match = expression.match(javaScriptAssignmentTarget);\r\n                    return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\r\n                }\r\n\r\n                // The following regular expressions will be used to split an object-literal string into tokens\r\n\r\n                var specials = ',\"\\'`{}()/:[\\\\]',    // These characters have special meaning to the parser and must not appear in the middle of a token, except as part of a string.\r\n                    // Create the actual regular expression by or-ing the following regex strings. The order is important.\r\n                    bindingToken = RegExp([\r\n                        // These match strings, either with double quotes, single quotes, or backticks\r\n                        '\"(?:\\\\\\\\.|[^\"])*\"',\r\n                        \"'(?:\\\\\\\\.|[^'])*'\",\r\n                        \"`(?:\\\\\\\\.|[^`])*`\",\r\n                        // Match C style comments\r\n                        \"/\\\\*(?:[^*]|\\\\*+[^*/])*\\\\*+/\",\r\n                        // Match C++ style comments\r\n                        \"//.*\\n\",\r\n                        // Match a regular expression (text enclosed by slashes), but will also match sets of divisions\r\n                        // as a regular expression (this is handled by the parsing loop below).\r\n                        '/(?:\\\\\\\\.|[^/])+/\\w*',\r\n                        // Match text (at least two characters) that does not contain any of the above special characters,\r\n                        // although some of the special characters are allowed to start it (all but the colon and comma).\r\n                        // The text can contain spaces, but leading or trailing spaces are skipped.\r\n                        '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\r\n                        // Match any non-space character not matched already. This will match colons and commas, since they're\r\n                        // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\r\n                        // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\r\n                        '[^\\\\s]'\r\n                    ].join('|'), 'g'),\r\n\r\n                    // Match end of previous token to determine whether a slash is a division or regex.\r\n                    divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\r\n                    keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\r\n\r\n                function parseObjectLiteral(objectLiteralString) {\r\n                    // Trim leading and trailing spaces from the string\r\n                    var str = ko.utils.stringTrim(objectLiteralString);\r\n\r\n                    // Trim braces '{' surrounding the whole object literal\r\n                    if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\r\n\r\n                    // Add a newline to correctly match a C++ style comment at the end of the string and\r\n                    // add a comma so that we don't need a separate code block to deal with the last item\r\n                    str += \"\\n,\";\r\n\r\n                    // Split into tokens\r\n                    var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\r\n\r\n                    if (toks.length > 1) {\r\n                        for (var i = 0, tok; tok = toks[i]; ++i) {\r\n                            var c = tok.charCodeAt(0);\r\n                            // A comma signals the end of a key/value pair if depth is zero\r\n                            if (c === 44) { // \",\"\r\n                                if (depth <= 0) {\r\n                                    result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\r\n                                    key = depth = 0;\r\n                                    values = [];\r\n                                    continue;\r\n                                }\r\n                                // Simply skip the colon that separates the name and value\r\n                            } else if (c === 58) { // \":\"\r\n                                if (!depth && !key && values.length === 1) {\r\n                                    key = values.pop();\r\n                                    continue;\r\n                                }\r\n                                // Comments: skip them\r\n                            } else if (c === 47 && tok.length > 1 && (tok.charCodeAt(1) === 47 || tok.charCodeAt(1) === 42)) {  // \"//\" or \"/*\"\r\n                                continue;\r\n                                // A set of slashes is initially matched as a regular expression, but could be division\r\n                            } else if (c === 47 && i && tok.length > 1) {  // \"/\"\r\n                                // Look at the end of the previous token to determine if the slash is actually division\r\n                                var match = toks[i-1].match(divisionLookBehind);\r\n                                if (match && !keywordRegexLookBehind[match[0]]) {\r\n                                    // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\r\n                                    str = str.substr(str.indexOf(tok) + 1);\r\n                                    toks = str.match(bindingToken);\r\n                                    i = -1;\r\n                                    // Continue with just the slash\r\n                                    tok = '/';\r\n                                }\r\n                                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\r\n                            } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\r\n                                ++depth;\r\n                            } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\r\n                                --depth;\r\n                                // The key will be the first token; if it's a string, trim the quotes\r\n                            } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\r\n                                tok = tok.slice(1, -1);\r\n                            }\r\n                            values.push(tok);\r\n                        }\r\n                        if (depth > 0) {\r\n                            throw Error(\"Unbalanced parentheses, braces, or brackets\");\r\n                        }\r\n                    }\r\n                    return result;\r\n                }\r\n\r\n                // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\r\n                var twoWayBindings = {};\r\n\r\n                function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\r\n                    bindingOptions = bindingOptions || {};\r\n\r\n                    function processKeyValue(key, val) {\r\n                        var writableVal;\r\n                        function callPreprocessHook(obj) {\r\n                            return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\r\n                        }\r\n                        if (!bindingParams) {\r\n                            if (!callPreprocessHook(ko['getBindingHandler'](key)))\r\n                                return;\r\n\r\n                            if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\r\n                                // For two-way bindings, provide a write method in case the value\r\n                                // isn't a writable observable.\r\n                                var writeKey = typeof twoWayBindings[key] == 'string' ? twoWayBindings[key] : key;\r\n                                propertyAccessorResultStrings.push(\"'\" + writeKey + \"':function(_z){\" + writableVal + \"=_z}\");\r\n                            }\r\n                        }\r\n                        // Values are wrapped in a function so that each value can be accessed independently\r\n                        if (makeValueAccessors) {\r\n                            val = 'function(){return ' + val + ' }';\r\n                        }\r\n                        resultStrings.push(\"'\" + key + \"':\" + val);\r\n                    }\r\n\r\n                    var resultStrings = [],\r\n                        propertyAccessorResultStrings = [],\r\n                        makeValueAccessors = bindingOptions['valueAccessors'],\r\n                        bindingParams = bindingOptions['bindingParams'],\r\n                        keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\r\n                            parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\r\n\r\n                    ko.utils.arrayForEach(keyValueArray, function(keyValue) {\r\n                        processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\r\n                    });\r\n\r\n                    if (propertyAccessorResultStrings.length)\r\n                        processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\r\n\r\n                    return resultStrings.join(\",\");\r\n                }\r\n\r\n                return {\r\n                    bindingRewriteValidators: [],\r\n\r\n                    twoWayBindings: twoWayBindings,\r\n\r\n                    parseObjectLiteral: parseObjectLiteral,\r\n\r\n                    preProcessBindings: preProcessBindings,\r\n\r\n                    keyValueArrayContainsKey: function(keyValueArray, key) {\r\n                        for (var i = 0; i < keyValueArray.length; i++)\r\n                            if (keyValueArray[i]['key'] == key)\r\n                                return true;\r\n                        return false;\r\n                    },\r\n\r\n                    // Internal, private KO utility for updating model properties from within bindings\r\n                    // property:            If the property being updated is (or might be) an observable, pass it here\r\n                    //                      If it turns out to be a writable observable, it will be written to directly\r\n                    // allBindings:         An object with a get method to retrieve bindings in the current execution context.\r\n                    //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\r\n                    // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\r\n                    // value:               The value to be written\r\n                    // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\r\n                    //                      it is !== existing value on that writable observable\r\n                    writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\r\n                        if (!property || !ko.isObservable(property)) {\r\n                            var propWriters = allBindings.get('_ko_property_writers');\r\n                            if (propWriters && propWriters[key])\r\n                                propWriters[key](value);\r\n                        } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\r\n                            property(value);\r\n                        }\r\n                    }\r\n                };\r\n            })();\r\n\r\n            ko.exportSymbol('expressionRewriting', ko.expressionRewriting);\r\n            ko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\r\n            ko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\r\n            ko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\r\n\r\n// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\r\n// all bindings could use an official 'property writer' API without needing to declare that they might). However,\r\n// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\r\n// as an internal implementation detail in the short term.\r\n// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\r\n// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\r\n// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\r\n            ko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\r\n\r\n// For backward compatibility, define the following aliases. (Previously, these function names were misleading because\r\n// they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\r\n            ko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\r\n            ko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\r\n            (function() {\r\n                // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\r\n                // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\r\n                // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\r\n                // of that virtual hierarchy\r\n                //\r\n                // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\r\n                // without having to scatter special cases all over the binding and templating code.\r\n\r\n                // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\r\n                // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\r\n                // So, use node.text where available, and node.nodeValue elsewhere\r\n                var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\r\n\r\n                var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\r\n                var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\r\n                var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\r\n\r\n                function isStartComment(node) {\r\n                    return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\r\n                }\r\n\r\n                function isEndComment(node) {\r\n                    return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\r\n                }\r\n\r\n                function isUnmatchedEndComment(node) {\r\n                    return isEndComment(node) && !(ko.utils.domData.get(node, matchedEndCommentDataKey));\r\n                }\r\n\r\n                var matchedEndCommentDataKey = \"__ko_matchedEndComment__\"\r\n\r\n                function getVirtualChildren(startComment, allowUnbalanced) {\r\n                    var currentNode = startComment;\r\n                    var depth = 1;\r\n                    var children = [];\r\n                    while (currentNode = currentNode.nextSibling) {\r\n                        if (isEndComment(currentNode)) {\r\n                            ko.utils.domData.set(currentNode, matchedEndCommentDataKey, true);\r\n                            depth--;\r\n                            if (depth === 0)\r\n                                return children;\r\n                        }\r\n\r\n                        children.push(currentNode);\r\n\r\n                        if (isStartComment(currentNode))\r\n                            depth++;\r\n                    }\r\n                    if (!allowUnbalanced)\r\n                        throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\r\n                    return null;\r\n                }\r\n\r\n                function getMatchingEndComment(startComment, allowUnbalanced) {\r\n                    var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\r\n                    if (allVirtualChildren) {\r\n                        if (allVirtualChildren.length > 0)\r\n                            return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\r\n                        return startComment.nextSibling;\r\n                    } else\r\n                        return null; // Must have no matching end comment, and allowUnbalanced is true\r\n                }\r\n\r\n                function getUnbalancedChildTags(node) {\r\n                    // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\r\n                    //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\r\n                    var childNode = node.firstChild, captureRemaining = null;\r\n                    if (childNode) {\r\n                        do {\r\n                            if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\r\n                                captureRemaining.push(childNode);\r\n                            else if (isStartComment(childNode)) {\r\n                                var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\r\n                                if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\r\n                                    childNode = matchingEndComment;\r\n                                else\r\n                                    captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\r\n                            } else if (isEndComment(childNode)) {\r\n                                captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\r\n                            }\r\n                        } while (childNode = childNode.nextSibling);\r\n                    }\r\n                    return captureRemaining;\r\n                }\r\n\r\n                ko.virtualElements = {\r\n                    allowedBindings: {},\r\n\r\n                    childNodes: function(node) {\r\n                        return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\r\n                    },\r\n\r\n                    emptyNode: function(node) {\r\n                        if (!isStartComment(node))\r\n                            ko.utils.emptyDomNode(node);\r\n                        else {\r\n                            var virtualChildren = ko.virtualElements.childNodes(node);\r\n                            for (var i = 0, j = virtualChildren.length; i < j; i++)\r\n                                ko.removeNode(virtualChildren[i]);\r\n                        }\r\n                    },\r\n\r\n                    setDomNodeChildren: function(node, childNodes) {\r\n                        if (!isStartComment(node))\r\n                            ko.utils.setDomNodeChildren(node, childNodes);\r\n                        else {\r\n                            ko.virtualElements.emptyNode(node);\r\n                            var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\r\n                            for (var i = 0, j = childNodes.length; i < j; i++)\r\n                                endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\r\n                        }\r\n                    },\r\n\r\n                    prepend: function(containerNode, nodeToPrepend) {\r\n                        var insertBeforeNode;\r\n\r\n                        if (isStartComment(containerNode)) {\r\n                            // Start comments must always have a parent and at least one following sibling (the end comment)\r\n                            insertBeforeNode = containerNode.nextSibling;\r\n                            containerNode = containerNode.parentNode;\r\n                        } else {\r\n                            insertBeforeNode = containerNode.firstChild;\r\n                        }\r\n\r\n                        if (!insertBeforeNode) {\r\n                            containerNode.appendChild(nodeToPrepend);\r\n                        } else if (nodeToPrepend !== insertBeforeNode) {       // IE will sometimes crash if you try to insert a node before itself\r\n                            containerNode.insertBefore(nodeToPrepend, insertBeforeNode);\r\n                        }\r\n                    },\r\n\r\n                    insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\r\n                        if (!insertAfterNode) {\r\n                            ko.virtualElements.prepend(containerNode, nodeToInsert);\r\n                        } else {\r\n                            // Children of start comments must always have a parent and at least one following sibling (the end comment)\r\n                            var insertBeforeNode = insertAfterNode.nextSibling;\r\n\r\n                            if (isStartComment(containerNode)) {\r\n                                containerNode = containerNode.parentNode;\r\n                            }\r\n\r\n                            if (!insertBeforeNode) {\r\n                                containerNode.appendChild(nodeToInsert);\r\n                            } else if (nodeToInsert !== insertBeforeNode) {       // IE will sometimes crash if you try to insert a node before itself\r\n                                containerNode.insertBefore(nodeToInsert, insertBeforeNode);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    firstChild: function(node) {\r\n                        if (!isStartComment(node)) {\r\n                            if (node.firstChild && isEndComment(node.firstChild)) {\r\n                                throw new Error(\"Found invalid end comment, as the first child of \" + node);\r\n                            }\r\n                            return node.firstChild;\r\n                        } else if (!node.nextSibling || isEndComment(node.nextSibling)) {\r\n                            return null;\r\n                        } else {\r\n                            return node.nextSibling;\r\n                        }\r\n                    },\r\n\r\n                    nextSibling: function(node) {\r\n                        if (isStartComment(node)) {\r\n                            node = getMatchingEndComment(node);\r\n                        }\r\n\r\n                        if (node.nextSibling && isEndComment(node.nextSibling)) {\r\n                            if (isUnmatchedEndComment(node.nextSibling)) {\r\n                                throw Error(\"Found end comment without a matching opening comment, as child of \" + node);\r\n                            } else {\r\n                                return null;\r\n                            }\r\n                        } else {\r\n                            return node.nextSibling;\r\n                        }\r\n                    },\r\n\r\n                    hasBindingValue: isStartComment,\r\n\r\n                    virtualNodeBindingValue: function(node) {\r\n                        var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\r\n                        return regexMatch ? regexMatch[1] : null;\r\n                    },\r\n\r\n                    normaliseVirtualElementDomStructure: function(elementVerified) {\r\n                        // Workaround for https://github.com/SteveSanderson/knockout/issues/155\r\n                        // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\r\n                        // that are direct descendants of <ul> into the preceding <li>)\r\n                        if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\r\n                            return;\r\n\r\n                        // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\r\n                        // must be intended to appear *after* that child, so move them there.\r\n                        var childNode = elementVerified.firstChild;\r\n                        if (childNode) {\r\n                            do {\r\n                                if (childNode.nodeType === 1) {\r\n                                    var unbalancedTags = getUnbalancedChildTags(childNode);\r\n                                    if (unbalancedTags) {\r\n                                        // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\r\n                                        var nodeToInsertBefore = childNode.nextSibling;\r\n                                        for (var i = 0; i < unbalancedTags.length; i++) {\r\n                                            if (nodeToInsertBefore)\r\n                                                elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\r\n                                            else\r\n                                                elementVerified.appendChild(unbalancedTags[i]);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } while (childNode = childNode.nextSibling);\r\n                        }\r\n                    }\r\n                };\r\n            })();\r\n            ko.exportSymbol('virtualElements', ko.virtualElements);\r\n            ko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\r\n            ko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\r\n//ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\r\n            ko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\r\n//ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\r\n            ko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\r\n            ko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\r\n            (function() {\r\n                var defaultBindingAttributeName = \"data-bind\";\r\n\r\n                ko.bindingProvider = function() {\r\n                    this.bindingCache = {};\r\n                };\r\n\r\n                ko.utils.extend(ko.bindingProvider.prototype, {\r\n                    'nodeHasBindings': function(node) {\r\n                        switch (node.nodeType) {\r\n                            case 1: // Element\r\n                                return node.getAttribute(defaultBindingAttributeName) != null\r\n                                    || ko.components['getComponentNameForNode'](node);\r\n                            case 8: // Comment node\r\n                                return ko.virtualElements.hasBindingValue(node);\r\n                            default: return false;\r\n                        }\r\n                    },\r\n\r\n                    'getBindings': function(node, bindingContext) {\r\n                        var bindingsString = this['getBindingsString'](node, bindingContext),\r\n                            parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\r\n                        return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\r\n                    },\r\n\r\n                    'getBindingAccessors': function(node, bindingContext) {\r\n                        var bindingsString = this['getBindingsString'](node, bindingContext),\r\n                            parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\r\n                        return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\r\n                    },\r\n\r\n                    // The following function is only used internally by this default provider.\r\n                    // It's not part of the interface definition for a general binding provider.\r\n                    'getBindingsString': function(node, bindingContext) {\r\n                        switch (node.nodeType) {\r\n                            case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\r\n                            case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\r\n                            default: return null;\r\n                        }\r\n                    },\r\n\r\n                    // The following function is only used internally by this default provider.\r\n                    // It's not part of the interface definition for a general binding provider.\r\n                    'parseBindingsString': function(bindingsString, bindingContext, node, options) {\r\n                        try {\r\n                            var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\r\n                            return bindingFunction(bindingContext, node);\r\n                        } catch (ex) {\r\n                            ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\r\n                            throw ex;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                ko.bindingProvider['instance'] = new ko.bindingProvider();\r\n\r\n                function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\r\n                    var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\r\n                    return cache[cacheKey]\r\n                        || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\r\n                }\r\n\r\n                function createBindingsStringEvaluator(bindingsString, options) {\r\n                    // Build the source for a function that evaluates \"expression\"\r\n                    // For each scope variable, add an extra level of \"with\" nesting\r\n                    // Example result: with(sc1) { with(sc0) { return (expression) } }\r\n                    var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\r\n                        functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\r\n                    return new Function(\"$context\", \"$element\", functionBody);\r\n                }\r\n            })();\r\n\r\n            ko.exportSymbol('bindingProvider', ko.bindingProvider);\r\n            (function () {\r\n                // Hide or don't minify context properties, see https://github.com/knockout/knockout/issues/2294\r\n                var contextSubscribable = ko.utils.createSymbolOrString('_subscribable');\r\n                var contextAncestorBindingInfo = ko.utils.createSymbolOrString('_ancestorBindingInfo');\r\n                var contextDataDependency = ko.utils.createSymbolOrString('_dataDependency');\r\n\r\n                ko.bindingHandlers = {};\r\n\r\n                // The following element types will not be recursed into during binding.\r\n                var bindingDoesNotRecurseIntoElementTypes = {\r\n                    // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\r\n                    // because it's unexpected and a potential XSS issue.\r\n                    // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\r\n                    // and because such elements' contents are always intended to be bound in a different context\r\n                    // from where they appear in the document.\r\n                    'script': true,\r\n                    'textarea': true,\r\n                    'template': true\r\n                };\r\n\r\n                // Use an overridable method for retrieving binding handlers so that plugins may support dynamically created handlers\r\n                ko['getBindingHandler'] = function(bindingKey) {\r\n                    return ko.bindingHandlers[bindingKey];\r\n                };\r\n\r\n                var inheritParentVm = {};\r\n\r\n                // The ko.bindingContext constructor is only called directly to create the root context. For child\r\n                // contexts, use bindingContext.createChildContext or bindingContext.extend.\r\n                ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback, options) {\r\n\r\n                    // The binding context object includes static properties for the current, parent, and root view models.\r\n                    // If a view model is actually stored in an observable, the corresponding binding context object, and\r\n                    // any child contexts, must be updated when the view model is changed.\r\n                    function updateContext() {\r\n                        // Most of the time, the context will directly get a view model object, but if a function is given,\r\n                        // we call the function to retrieve the view model. If the function accesses any observables or returns\r\n                        // an observable, the dependency is tracked, and those observables can later cause the binding\r\n                        // context to be updated.\r\n                        var dataItemOrObservable = isFunc ? realDataItemOrAccessor() : realDataItemOrAccessor,\r\n                            dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\r\n\r\n                        if (parentContext) {\r\n                            // Copy $root and any custom properties from the parent context\r\n                            ko.utils.extend(self, parentContext);\r\n\r\n                            // Copy Symbol properties\r\n                            if (contextAncestorBindingInfo in parentContext) {\r\n                                self[contextAncestorBindingInfo] = parentContext[contextAncestorBindingInfo];\r\n                            }\r\n                        } else {\r\n                            self['$parents'] = [];\r\n                            self['$root'] = dataItem;\r\n\r\n                            // Export 'ko' in the binding context so it will be available in bindings and templates\r\n                            // even if 'ko' isn't exported as a global, such as when using an AMD loader.\r\n                            // See https://github.com/SteveSanderson/knockout/issues/490\r\n                            self['ko'] = ko;\r\n                        }\r\n\r\n                        self[contextSubscribable] = subscribable;\r\n\r\n                        if (shouldInheritData) {\r\n                            dataItem = self['$data'];\r\n                        } else {\r\n                            self['$rawData'] = dataItemOrObservable;\r\n                            self['$data'] = dataItem;\r\n                        }\r\n\r\n                        if (dataItemAlias)\r\n                            self[dataItemAlias] = dataItem;\r\n\r\n                        // The extendCallback function is provided when creating a child context or extending a context.\r\n                        // It handles the specific actions needed to finish setting up the binding context. Actions in this\r\n                        // function could also add dependencies to this binding context.\r\n                        if (extendCallback)\r\n                            extendCallback(self, parentContext, dataItem);\r\n\r\n                        // When a \"parent\" context is given and we don't already have a dependency on its context, register a dependency on it.\r\n                        // Thus whenever the parent context is updated, this context will also be updated.\r\n                        if (parentContext && parentContext[contextSubscribable] && !ko.computedContext.computed().hasAncestorDependency(parentContext[contextSubscribable])) {\r\n                            parentContext[contextSubscribable]();\r\n                        }\r\n\r\n                        if (dataDependency) {\r\n                            self[contextDataDependency] = dataDependency;\r\n                        }\r\n\r\n                        return self['$data'];\r\n                    }\r\n\r\n                    var self = this,\r\n                        shouldInheritData = dataItemOrAccessor === inheritParentVm,\r\n                        realDataItemOrAccessor = shouldInheritData ? undefined : dataItemOrAccessor,\r\n                        isFunc = typeof(realDataItemOrAccessor) == \"function\" && !ko.isObservable(realDataItemOrAccessor),\r\n                        nodes,\r\n                        subscribable,\r\n                        dataDependency = options && options['dataDependency'];\r\n\r\n                    if (options && options['exportDependencies']) {\r\n                        // The \"exportDependencies\" option means that the calling code will track any dependencies and re-create\r\n                        // the binding context when they change.\r\n                        updateContext();\r\n                    } else {\r\n                        subscribable = ko.pureComputed(updateContext);\r\n                        subscribable.peek();\r\n\r\n                        // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\r\n                        // subscribed to any observables that were accessed in the process. If there is nothing to track, the\r\n                        // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\r\n                        // the context object.\r\n                        if (subscribable.isActive()) {\r\n                            // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\r\n                            subscribable['equalityComparer'] = null;\r\n                        } else {\r\n                            self[contextSubscribable] = undefined;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Extend the binding context hierarchy with a new view model object. If the parent context is watching\r\n                // any observables, the new child context will automatically get a dependency on the parent context.\r\n                // But this does not mean that the $data value of the child context will also get updated. If the child\r\n                // view model also depends on the parent view model, you must provide a function that returns the correct\r\n                // view model on each update.\r\n                ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback, options) {\r\n                    if (!options && dataItemAlias && typeof dataItemAlias == \"object\") {\r\n                        options = dataItemAlias;\r\n                        dataItemAlias = options['as'];\r\n                        extendCallback = options['extend'];\r\n                    }\r\n\r\n                    if (dataItemAlias && options && options['noChildContext']) {\r\n                        var isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor);\r\n                        return new ko.bindingContext(inheritParentVm, this, null, function (self) {\r\n                            if (extendCallback)\r\n                                extendCallback(self);\r\n                            self[dataItemAlias] = isFunc ? dataItemOrAccessor() : dataItemOrAccessor;\r\n                        }, options);\r\n                    }\r\n\r\n                    return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function (self, parentContext) {\r\n                        // Extend the context hierarchy by setting the appropriate pointers\r\n                        self['$parentContext'] = parentContext;\r\n                        self['$parent'] = parentContext['$data'];\r\n                        self['$parents'] = (parentContext['$parents'] || []).slice(0);\r\n                        self['$parents'].unshift(self['$parent']);\r\n                        if (extendCallback)\r\n                            extendCallback(self);\r\n                    }, options);\r\n                };\r\n\r\n                // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\r\n                // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\r\n                // when an observable view model is updated.\r\n                ko.bindingContext.prototype['extend'] = function(properties, options) {\r\n                    return new ko.bindingContext(inheritParentVm, this, null, function(self, parentContext) {\r\n                        ko.utils.extend(self, typeof(properties) == \"function\" ? properties(self) : properties);\r\n                    }, options);\r\n                };\r\n\r\n                var boundElementDomDataKey = ko.utils.domData.nextKey();\r\n\r\n                function asyncContextDispose(node) {\r\n                    var bindingInfo = ko.utils.domData.get(node, boundElementDomDataKey),\r\n                        asyncContext = bindingInfo && bindingInfo.asyncContext;\r\n                    if (asyncContext) {\r\n                        bindingInfo.asyncContext = null;\r\n                        asyncContext.notifyAncestor();\r\n                    }\r\n                }\r\n                function AsyncCompleteContext(node, bindingInfo, ancestorBindingInfo) {\r\n                    this.node = node;\r\n                    this.bindingInfo = bindingInfo;\r\n                    this.asyncDescendants = [];\r\n                    this.childrenComplete = false;\r\n\r\n                    if (!bindingInfo.asyncContext) {\r\n                        ko.utils.domNodeDisposal.addDisposeCallback(node, asyncContextDispose);\r\n                    }\r\n\r\n                    if (ancestorBindingInfo && ancestorBindingInfo.asyncContext) {\r\n                        ancestorBindingInfo.asyncContext.asyncDescendants.push(node);\r\n                        this.ancestorBindingInfo = ancestorBindingInfo;\r\n                    }\r\n                }\r\n                AsyncCompleteContext.prototype.notifyAncestor = function () {\r\n                    if (this.ancestorBindingInfo && this.ancestorBindingInfo.asyncContext) {\r\n                        this.ancestorBindingInfo.asyncContext.descendantComplete(this.node);\r\n                    }\r\n                };\r\n                AsyncCompleteContext.prototype.descendantComplete = function (node) {\r\n                    ko.utils.arrayRemoveItem(this.asyncDescendants, node);\r\n                    if (!this.asyncDescendants.length && this.childrenComplete) {\r\n                        this.completeChildren();\r\n                    }\r\n                };\r\n                AsyncCompleteContext.prototype.completeChildren = function () {\r\n                    this.childrenComplete = true;\r\n                    if (this.bindingInfo.asyncContext && !this.asyncDescendants.length) {\r\n                        this.bindingInfo.asyncContext = null;\r\n                        ko.utils.domNodeDisposal.removeDisposeCallback(this.node, asyncContextDispose);\r\n                        ko.bindingEvent.notify(this.node, ko.bindingEvent.descendantsComplete);\r\n                        this.notifyAncestor();\r\n                    }\r\n                };\r\n\r\n                ko.bindingEvent = {\r\n                    childrenComplete: \"childrenComplete\",\r\n                    descendantsComplete : \"descendantsComplete\",\r\n\r\n                    subscribe: function (node, event, callback, context, options) {\r\n                        var bindingInfo = ko.utils.domData.getOrSet(node, boundElementDomDataKey, {});\r\n                        if (!bindingInfo.eventSubscribable) {\r\n                            bindingInfo.eventSubscribable = new ko.subscribable;\r\n                        }\r\n                        if (options && options['notifyImmediately'] && bindingInfo.notifiedEvents[event]) {\r\n                            ko.dependencyDetection.ignore(callback, context, [node]);\r\n                        }\r\n                        return bindingInfo.eventSubscribable.subscribe(callback, context, event);\r\n                    },\r\n\r\n                    notify: function (node, event) {\r\n                        var bindingInfo = ko.utils.domData.get(node, boundElementDomDataKey);\r\n                        if (bindingInfo) {\r\n                            bindingInfo.notifiedEvents[event] = true;\r\n                            if (bindingInfo.eventSubscribable) {\r\n                                bindingInfo.eventSubscribable['notifySubscribers'](node, event);\r\n                            }\r\n                            if (event == ko.bindingEvent.childrenComplete) {\r\n                                if (bindingInfo.asyncContext) {\r\n                                    bindingInfo.asyncContext.completeChildren();\r\n                                } else if (bindingInfo.asyncContext === undefined && bindingInfo.eventSubscribable && bindingInfo.eventSubscribable.hasSubscriptionsForEvent(ko.bindingEvent.descendantsComplete)) {\r\n                                    // It's currently an error to register a descendantsComplete handler for a node that was never registered as completing asynchronously.\r\n                                    // That's because without the asyncContext, we don't have a way to know that all descendants have completed.\r\n                                    throw new Error(\"descendantsComplete event not supported for bindings on this node\");\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    startPossiblyAsyncContentBinding: function (node, bindingContext) {\r\n                        var bindingInfo = ko.utils.domData.getOrSet(node, boundElementDomDataKey, {});\r\n\r\n                        if (!bindingInfo.asyncContext) {\r\n                            bindingInfo.asyncContext = new AsyncCompleteContext(node, bindingInfo, bindingContext[contextAncestorBindingInfo]);\r\n                        }\r\n\r\n                        // If the provided context was already extended with this node's binding info, just return the extended context\r\n                        if (bindingContext[contextAncestorBindingInfo] == bindingInfo) {\r\n                            return bindingContext;\r\n                        }\r\n\r\n                        return bindingContext['extend'](function (ctx) {\r\n                            ctx[contextAncestorBindingInfo] = bindingInfo;\r\n                        });\r\n                    }\r\n                };\r\n\r\n                // Returns the valueAccessor function for a binding value\r\n                function makeValueAccessor(value) {\r\n                    return function() {\r\n                        return value;\r\n                    };\r\n                }\r\n\r\n                // Returns the value of a valueAccessor function\r\n                function evaluateValueAccessor(valueAccessor) {\r\n                    return valueAccessor();\r\n                }\r\n\r\n                // Given a function that returns bindings, create and return a new object that contains\r\n                // binding value-accessors functions. Each accessor function calls the original function\r\n                // so that it always gets the latest value and all dependencies are captured. This is used\r\n                // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\r\n                function makeAccessorsFromFunction(callback) {\r\n                    return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\r\n                        return function() {\r\n                            return callback()[key];\r\n                        };\r\n                    });\r\n                }\r\n\r\n                // Given a bindings function or object, create and return a new object that contains\r\n                // binding value-accessors functions. This is used by ko.applyBindingsToNode.\r\n                function makeBindingAccessors(bindings, context, node) {\r\n                    if (typeof bindings === 'function') {\r\n                        return makeAccessorsFromFunction(bindings.bind(null, context, node));\r\n                    } else {\r\n                        return ko.utils.objectMap(bindings, makeValueAccessor);\r\n                    }\r\n                }\r\n\r\n                // This function is used if the binding provider doesn't include a getBindingAccessors function.\r\n                // It must be called with 'this' set to the provider instance.\r\n                function getBindingsAndMakeAccessors(node, context) {\r\n                    return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\r\n                }\r\n\r\n                function validateThatBindingIsAllowedForVirtualElements(bindingName) {\r\n                    var validator = ko.virtualElements.allowedBindings[bindingName];\r\n                    if (!validator)\r\n                        throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\r\n                }\r\n\r\n                function applyBindingsToDescendantsInternal(bindingContext, elementOrVirtualElement) {\r\n                    var nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\r\n\r\n                    if (nextInQueue) {\r\n                        var currentChild,\r\n                            provider = ko.bindingProvider['instance'],\r\n                            preprocessNode = provider['preprocessNode'];\r\n\r\n                        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\r\n                        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\r\n                        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\r\n                        // trigger insertion of <template> contents at that point in the document.\r\n                        if (preprocessNode) {\r\n                            while (currentChild = nextInQueue) {\r\n                                nextInQueue = ko.virtualElements.nextSibling(currentChild);\r\n                                preprocessNode.call(provider, currentChild);\r\n                            }\r\n                            // Reset nextInQueue for the next loop\r\n                            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\r\n                        }\r\n\r\n                        while (currentChild = nextInQueue) {\r\n                            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\r\n                            nextInQueue = ko.virtualElements.nextSibling(currentChild);\r\n                            applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild);\r\n                        }\r\n                    }\r\n                    ko.bindingEvent.notify(elementOrVirtualElement, ko.bindingEvent.childrenComplete);\r\n                }\r\n\r\n                function applyBindingsToNodeAndDescendantsInternal(bindingContext, nodeVerified) {\r\n                    var bindingContextForDescendants = bindingContext;\r\n\r\n                    var isElement = (nodeVerified.nodeType === 1);\r\n                    if (isElement) // Workaround IE <= 8 HTML parsing weirdness\r\n                        ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\r\n\r\n                    // Perf optimisation: Apply bindings only if...\r\n                    // (1) We need to store the binding info for the node (all element nodes)\r\n                    // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\r\n                    var shouldApplyBindings = isElement || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);\r\n                    if (shouldApplyBindings)\r\n                        bindingContextForDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext)['bindingContextForDescendants'];\r\n\r\n                    if (bindingContextForDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\r\n                        applyBindingsToDescendantsInternal(bindingContextForDescendants, nodeVerified);\r\n                    }\r\n                }\r\n\r\n                function topologicalSortBindings(bindings) {\r\n                    // Depth-first sort\r\n                    var result = [],                // The list of key/handler pairs that we will return\r\n                        bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\r\n                        cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\r\n                    ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\r\n                        if (!bindingsConsidered[bindingKey]) {\r\n                            var binding = ko['getBindingHandler'](bindingKey);\r\n                            if (binding) {\r\n                                // First add dependencies (if any) of the current binding\r\n                                if (binding['after']) {\r\n                                    cyclicDependencyStack.push(bindingKey);\r\n                                    ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\r\n                                        if (bindings[bindingDependencyKey]) {\r\n                                            if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\r\n                                                throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\r\n                                            } else {\r\n                                                pushBinding(bindingDependencyKey);\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                    cyclicDependencyStack.length--;\r\n                                }\r\n                                // Next add the current binding\r\n                                result.push({ key: bindingKey, handler: binding });\r\n                            }\r\n                            bindingsConsidered[bindingKey] = true;\r\n                        }\r\n                    });\r\n\r\n                    return result;\r\n                }\r\n\r\n                function applyBindingsToNodeInternal(node, sourceBindings, bindingContext) {\r\n                    var bindingInfo = ko.utils.domData.getOrSet(node, boundElementDomDataKey, {});\r\n\r\n                    // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\r\n                    var alreadyBound = bindingInfo.alreadyBound;\r\n                    if (!sourceBindings) {\r\n                        if (alreadyBound) {\r\n                            throw Error(\"You cannot apply bindings multiple times to the same element.\");\r\n                        }\r\n                        bindingInfo.alreadyBound = true;\r\n                    }\r\n                    if (!alreadyBound) {\r\n                        bindingInfo.context = bindingContext;\r\n                    }\r\n                    if (!bindingInfo.notifiedEvents) {\r\n                        bindingInfo.notifiedEvents = {};\r\n                    }\r\n\r\n                    // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\r\n                    var bindings;\r\n                    if (sourceBindings && typeof sourceBindings !== 'function') {\r\n                        bindings = sourceBindings;\r\n                    } else {\r\n                        var provider = ko.bindingProvider['instance'],\r\n                            getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\r\n\r\n                        // Get the binding from the provider within a computed observable so that we can update the bindings whenever\r\n                        // the binding context is updated or if the binding provider accesses observables.\r\n                        var bindingsUpdater = ko.dependentObservable(\r\n                            function() {\r\n                                bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\r\n                                // Register a dependency on the binding context to support observable view models.\r\n                                if (bindings) {\r\n                                    if (bindingContext[contextSubscribable]) {\r\n                                        bindingContext[contextSubscribable]();\r\n                                    }\r\n                                    if (bindingContext[contextDataDependency]) {\r\n                                        bindingContext[contextDataDependency]();\r\n                                    }\r\n                                }\r\n                                return bindings;\r\n                            },\r\n                            null, { disposeWhenNodeIsRemoved: node }\r\n                        );\r\n\r\n                        if (!bindings || !bindingsUpdater.isActive())\r\n                            bindingsUpdater = null;\r\n                    }\r\n\r\n                    var contextToExtend = bindingContext;\r\n                    var bindingHandlerThatControlsDescendantBindings;\r\n                    if (bindings) {\r\n                        // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\r\n                        // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\r\n                        // the latest binding value and registers a dependency on the binding updater.\r\n                        var getValueAccessor = bindingsUpdater\r\n                            ? function(bindingKey) {\r\n                                return function() {\r\n                                    return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\r\n                                };\r\n                            } : function(bindingKey) {\r\n                                return bindings[bindingKey];\r\n                            };\r\n\r\n                        // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\r\n                        function allBindings() {\r\n                            return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\r\n                        }\r\n                        // The following is the 3.x allBindings API\r\n                        allBindings['get'] = function(key) {\r\n                            return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\r\n                        };\r\n                        allBindings['has'] = function(key) {\r\n                            return key in bindings;\r\n                        };\r\n\r\n                        if (ko.bindingEvent.childrenComplete in bindings) {\r\n                            ko.bindingEvent.subscribe(node, ko.bindingEvent.childrenComplete, function () {\r\n                                var callback = evaluateValueAccessor(bindings[ko.bindingEvent.childrenComplete]);\r\n                                if (callback) {\r\n                                    var nodes = ko.virtualElements.childNodes(node);\r\n                                    if (nodes.length) {\r\n                                        callback(nodes, ko.dataFor(nodes[0]));\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (ko.bindingEvent.descendantsComplete in bindings) {\r\n                            contextToExtend = ko.bindingEvent.startPossiblyAsyncContentBinding(node, bindingContext);\r\n                            ko.bindingEvent.subscribe(node, ko.bindingEvent.descendantsComplete, function () {\r\n                                var callback = evaluateValueAccessor(bindings[ko.bindingEvent.descendantsComplete]);\r\n                                if (callback && ko.virtualElements.firstChild(node)) {\r\n                                    callback(node);\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        // First put the bindings into the right order\r\n                        var orderedBindings = topologicalSortBindings(bindings);\r\n\r\n                        // Go through the sorted bindings, calling init and update for each\r\n                        ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\r\n                            // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\r\n                            // so bindingKeyAndHandler.handler will always be nonnull.\r\n                            var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\r\n                                handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\r\n                                bindingKey = bindingKeyAndHandler.key;\r\n\r\n                            if (node.nodeType === 8) {\r\n                                validateThatBindingIsAllowedForVirtualElements(bindingKey);\r\n                            }\r\n\r\n                            try {\r\n                                // Run init, ignoring any dependencies\r\n                                if (typeof handlerInitFn == \"function\") {\r\n                                    ko.dependencyDetection.ignore(function() {\r\n                                        var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, contextToExtend['$data'], contextToExtend);\r\n\r\n                                        // If this binding handler claims to control descendant bindings, make a note of this\r\n                                        if (initResult && initResult['controlsDescendantBindings']) {\r\n                                            if (bindingHandlerThatControlsDescendantBindings !== undefined)\r\n                                                throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\r\n                                            bindingHandlerThatControlsDescendantBindings = bindingKey;\r\n                                        }\r\n                                    });\r\n                                }\r\n\r\n                                // Run update in its own computed wrapper\r\n                                if (typeof handlerUpdateFn == \"function\") {\r\n                                    ko.dependentObservable(\r\n                                        function() {\r\n                                            handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, contextToExtend['$data'], contextToExtend);\r\n                                        },\r\n                                        null,\r\n                                        { disposeWhenNodeIsRemoved: node }\r\n                                    );\r\n                                }\r\n                            } catch (ex) {\r\n                                ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\r\n                                throw ex;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    var shouldBindDescendants = bindingHandlerThatControlsDescendantBindings === undefined;\r\n                    return {\r\n                        'shouldBindDescendants': shouldBindDescendants,\r\n                        'bindingContextForDescendants': shouldBindDescendants && contextToExtend\r\n                    };\r\n                };\r\n\r\n                ko.storedBindingContextForNode = function (node) {\r\n                    var bindingInfo = ko.utils.domData.get(node, boundElementDomDataKey);\r\n                    return bindingInfo && bindingInfo.context;\r\n                }\r\n\r\n                function getBindingContext(viewModelOrBindingContext, extendContextCallback) {\r\n                    return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\r\n                        ? viewModelOrBindingContext\r\n                        : new ko.bindingContext(viewModelOrBindingContext, undefined, undefined, extendContextCallback);\r\n                }\r\n\r\n                ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\r\n                    if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\r\n                        ko.virtualElements.normaliseVirtualElementDomStructure(node);\r\n                    return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext));\r\n                };\r\n\r\n                ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\r\n                    var context = getBindingContext(viewModelOrBindingContext);\r\n                    return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\r\n                };\r\n\r\n                ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\r\n                    if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\r\n                        applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode);\r\n                };\r\n\r\n                ko.applyBindings = function (viewModelOrBindingContext, rootNode, extendContextCallback) {\r\n                    // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\r\n                    if (!jQueryInstance && window['jQuery']) {\r\n                        jQueryInstance = window['jQuery'];\r\n                    }\r\n\r\n                    if (arguments.length < 2) {\r\n                        rootNode = document.body;\r\n                        if (!rootNode) {\r\n                            throw Error(\"ko.applyBindings: could not find document.body; has the document been loaded?\");\r\n                        }\r\n                    } else if (!rootNode || (rootNode.nodeType !== 1 && rootNode.nodeType !== 8)) {\r\n                        throw Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\r\n                    }\r\n\r\n                    applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext, extendContextCallback), rootNode);\r\n                };\r\n\r\n                // Retrieving binding context from arbitrary nodes\r\n                ko.contextFor = function(node) {\r\n                    // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\r\n                    if (node && (node.nodeType === 1 || node.nodeType === 8)) {\r\n                        return ko.storedBindingContextForNode(node);\r\n                    }\r\n                    return undefined;\r\n                };\r\n                ko.dataFor = function(node) {\r\n                    var context = ko.contextFor(node);\r\n                    return context ? context['$data'] : undefined;\r\n                };\r\n\r\n                ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\r\n                ko.exportSymbol('bindingEvent', ko.bindingEvent);\r\n                ko.exportSymbol('bindingEvent.subscribe', ko.bindingEvent.subscribe);\r\n                ko.exportSymbol('bindingEvent.startPossiblyAsyncContentBinding', ko.bindingEvent.startPossiblyAsyncContentBinding);\r\n                ko.exportSymbol('applyBindings', ko.applyBindings);\r\n                ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\r\n                ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\r\n                ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\r\n                ko.exportSymbol('contextFor', ko.contextFor);\r\n                ko.exportSymbol('dataFor', ko.dataFor);\r\n            })();\r\n            (function(undefined) {\r\n                var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\r\n                    loadedDefinitionsCache = {};    // Tracks component loads that have already completed\r\n\r\n                ko.components = {\r\n                    get: function(componentName, callback) {\r\n                        var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\r\n                        if (cachedDefinition) {\r\n                            // It's already loaded and cached. Reuse the same definition object.\r\n                            // Note that for API consistency, even cache hits complete asynchronously by default.\r\n                            // You can bypass this by putting synchronous:true on your component config.\r\n                            if (cachedDefinition.isSynchronousComponent) {\r\n                                ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\r\n                                    callback(cachedDefinition.definition);\r\n                                });\r\n                            } else {\r\n                                ko.tasks.schedule(function() { callback(cachedDefinition.definition); });\r\n                            }\r\n                        } else {\r\n                            // Join the loading process that is already underway, or start a new one.\r\n                            loadComponentAndNotify(componentName, callback);\r\n                        }\r\n                    },\r\n\r\n                    clearCachedDefinition: function(componentName) {\r\n                        delete loadedDefinitionsCache[componentName];\r\n                    },\r\n\r\n                    _getFirstResultFromLoaders: getFirstResultFromLoaders\r\n                };\r\n\r\n                function getObjectOwnProperty(obj, propName) {\r\n                    return Object.prototype.hasOwnProperty.call(obj, propName) ? obj[propName] : undefined;\r\n                }\r\n\r\n                function loadComponentAndNotify(componentName, callback) {\r\n                    var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\r\n                        completedAsync;\r\n                    if (!subscribable) {\r\n                        // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\r\n                        subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\r\n                        subscribable.subscribe(callback);\r\n\r\n                        beginLoadingComponent(componentName, function(definition, config) {\r\n                            var isSynchronousComponent = !!(config && config['synchronous']);\r\n                            loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\r\n                            delete loadingSubscribablesCache[componentName];\r\n\r\n                            // For API consistency, all loads complete asynchronously. However we want to avoid\r\n                            // adding an extra task schedule if it's unnecessary (i.e., the completion is already\r\n                            // async).\r\n                            //\r\n                            // You can bypass the 'always asynchronous' feature by putting the synchronous:true\r\n                            // flag on your component configuration when you register it.\r\n                            if (completedAsync || isSynchronousComponent) {\r\n                                // Note that notifySubscribers ignores any dependencies read within the callback.\r\n                                // See comment in loaderRegistryBehaviors.js for reasoning\r\n                                subscribable['notifySubscribers'](definition);\r\n                            } else {\r\n                                ko.tasks.schedule(function() {\r\n                                    subscribable['notifySubscribers'](definition);\r\n                                });\r\n                            }\r\n                        });\r\n                        completedAsync = true;\r\n                    } else {\r\n                        subscribable.subscribe(callback);\r\n                    }\r\n                }\r\n\r\n                function beginLoadingComponent(componentName, callback) {\r\n                    getFirstResultFromLoaders('getConfig', [componentName], function(config) {\r\n                        if (config) {\r\n                            // We have a config, so now load its definition\r\n                            getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\r\n                                callback(definition, config);\r\n                            });\r\n                        } else {\r\n                            // The component has no config - it's unknown to all the loaders.\r\n                            // Note that this is not an error (e.g., a module loading error) - that would abort the\r\n                            // process and this callback would not run. For this callback to run, all loaders must\r\n                            // have confirmed they don't know about this component.\r\n                            callback(null, null);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\r\n                    // On the first call in the stack, start with the full set of loaders\r\n                    if (!candidateLoaders) {\r\n                        candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\r\n                    }\r\n\r\n                    // Try the next candidate\r\n                    var currentCandidateLoader = candidateLoaders.shift();\r\n                    if (currentCandidateLoader) {\r\n                        var methodInstance = currentCandidateLoader[methodName];\r\n                        if (methodInstance) {\r\n                            var wasAborted = false,\r\n                                synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\r\n                                    if (wasAborted) {\r\n                                        callback(null);\r\n                                    } else if (result !== null) {\r\n                                        // This candidate returned a value. Use it.\r\n                                        callback(result);\r\n                                    } else {\r\n                                        // Try the next candidate\r\n                                        getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\r\n                                    }\r\n                                }));\r\n\r\n                            // Currently, loaders may not return anything synchronously. This leaves open the possibility\r\n                            // that we'll extend the API to support synchronous return values in the future. It won't be\r\n                            // a breaking change, because currently no loader is allowed to return anything except undefined.\r\n                            if (synchronousReturnValue !== undefined) {\r\n                                wasAborted = true;\r\n\r\n                                // Method to suppress exceptions will remain undocumented. This is only to keep\r\n                                // KO's specs running tidily, since we can observe the loading got aborted without\r\n                                // having exceptions cluttering up the console too.\r\n                                if (!currentCandidateLoader['suppressLoaderExceptions']) {\r\n                                    throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\r\n                                }\r\n                            }\r\n                        } else {\r\n                            // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\r\n                            getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\r\n                        }\r\n                    } else {\r\n                        // No candidates returned a value\r\n                        callback(null);\r\n                    }\r\n                }\r\n\r\n                // Reference the loaders via string name so it's possible for developers\r\n                // to replace the whole array by assigning to ko.components.loaders\r\n                ko.components['loaders'] = [];\r\n\r\n                ko.exportSymbol('components', ko.components);\r\n                ko.exportSymbol('components.get', ko.components.get);\r\n                ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\r\n            })();\r\n            (function(undefined) {\r\n\r\n                // The default loader is responsible for two things:\r\n                // 1. Maintaining the default in-memory registry of component configuration objects\r\n                //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\r\n                // 2. Answering requests for components by fetching configuration objects\r\n                //    from that default in-memory registry and resolving them into standard\r\n                //    component definition objects (of the form { createViewModel: ..., template: ... })\r\n                // Custom loaders may override either of these facilities, i.e.,\r\n                // 1. To supply configuration objects from some other source (e.g., conventions)\r\n                // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\r\n\r\n                var defaultConfigRegistry = {};\r\n\r\n                ko.components.register = function(componentName, config) {\r\n                    if (!config) {\r\n                        throw new Error('Invalid configuration for ' + componentName);\r\n                    }\r\n\r\n                    if (ko.components.isRegistered(componentName)) {\r\n                        throw new Error('Component ' + componentName + ' is already registered');\r\n                    }\r\n\r\n                    defaultConfigRegistry[componentName] = config;\r\n                };\r\n\r\n                ko.components.isRegistered = function(componentName) {\r\n                    return Object.prototype.hasOwnProperty.call(defaultConfigRegistry, componentName);\r\n                };\r\n\r\n                ko.components.unregister = function(componentName) {\r\n                    delete defaultConfigRegistry[componentName];\r\n                    ko.components.clearCachedDefinition(componentName);\r\n                };\r\n\r\n                ko.components.defaultLoader = {\r\n                    'getConfig': function(componentName, callback) {\r\n                        var result = ko.components.isRegistered(componentName)\r\n                            ? defaultConfigRegistry[componentName]\r\n                            : null;\r\n                        callback(result);\r\n                    },\r\n\r\n                    'loadComponent': function(componentName, config, callback) {\r\n                        var errorCallback = makeErrorCallback(componentName);\r\n                        possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\r\n                            resolveConfig(componentName, errorCallback, loadedConfig, callback);\r\n                        });\r\n                    },\r\n\r\n                    'loadTemplate': function(componentName, templateConfig, callback) {\r\n                        resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\r\n                    },\r\n\r\n                    'loadViewModel': function(componentName, viewModelConfig, callback) {\r\n                        resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\r\n                    }\r\n                };\r\n\r\n                var createViewModelKey = 'createViewModel';\r\n\r\n                // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\r\n                // into the standard component definition format:\r\n                //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\r\n                // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\r\n                // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\r\n                // so this is implemented manually below.\r\n                function resolveConfig(componentName, errorCallback, config, callback) {\r\n                    var result = {},\r\n                        makeCallBackWhenZero = 2,\r\n                        tryIssueCallback = function() {\r\n                            if (--makeCallBackWhenZero === 0) {\r\n                                callback(result);\r\n                            }\r\n                        },\r\n                        templateConfig = config['template'],\r\n                        viewModelConfig = config['viewModel'];\r\n\r\n                    if (templateConfig) {\r\n                        possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\r\n                            ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\r\n                                result['template'] = resolvedTemplate;\r\n                                tryIssueCallback();\r\n                            });\r\n                        });\r\n                    } else {\r\n                        tryIssueCallback();\r\n                    }\r\n\r\n                    if (viewModelConfig) {\r\n                        possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\r\n                            ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\r\n                                result[createViewModelKey] = resolvedViewModel;\r\n                                tryIssueCallback();\r\n                            });\r\n                        });\r\n                    } else {\r\n                        tryIssueCallback();\r\n                    }\r\n                }\r\n\r\n                function resolveTemplate(errorCallback, templateConfig, callback) {\r\n                    if (typeof templateConfig === 'string') {\r\n                        // Markup - parse it\r\n                        callback(ko.utils.parseHtmlFragment(templateConfig));\r\n                    } else if (templateConfig instanceof Array) {\r\n                        // Assume already an array of DOM nodes - pass through unchanged\r\n                        callback(templateConfig);\r\n                    } else if (isDocumentFragment(templateConfig)) {\r\n                        // Document fragment - use its child nodes\r\n                        callback(ko.utils.makeArray(templateConfig.childNodes));\r\n                    } else if (templateConfig['element']) {\r\n                        var element = templateConfig['element'];\r\n                        if (isDomElement(element)) {\r\n                            // Element instance - copy its child nodes\r\n                            callback(cloneNodesFromTemplateSourceElement(element));\r\n                        } else if (typeof element === 'string') {\r\n                            // Element ID - find it, then copy its child nodes\r\n                            var elemInstance = document.getElementById(element);\r\n                            if (elemInstance) {\r\n                                callback(cloneNodesFromTemplateSourceElement(elemInstance));\r\n                            } else {\r\n                                errorCallback('Cannot find element with ID ' + element);\r\n                            }\r\n                        } else {\r\n                            errorCallback('Unknown element type: ' + element);\r\n                        }\r\n                    } else {\r\n                        errorCallback('Unknown template value: ' + templateConfig);\r\n                    }\r\n                }\r\n\r\n                function resolveViewModel(errorCallback, viewModelConfig, callback) {\r\n                    if (typeof viewModelConfig === 'function') {\r\n                        // Constructor - convert to standard factory function format\r\n                        // By design, this does *not* supply componentInfo to the constructor, as the intent is that\r\n                        // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\r\n                        // be used in factory functions, not viewmodel constructors.\r\n                        callback(function (params /*, componentInfo */) {\r\n                            return new viewModelConfig(params);\r\n                        });\r\n                    } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\r\n                        // Already a factory function - use it as-is\r\n                        callback(viewModelConfig[createViewModelKey]);\r\n                    } else if ('instance' in viewModelConfig) {\r\n                        // Fixed object instance - promote to createViewModel format for API consistency\r\n                        var fixedInstance = viewModelConfig['instance'];\r\n                        callback(function (params, componentInfo) {\r\n                            return fixedInstance;\r\n                        });\r\n                    } else if ('viewModel' in viewModelConfig) {\r\n                        // Resolved AMD module whose value is of the form { viewModel: ... }\r\n                        resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\r\n                    } else {\r\n                        errorCallback('Unknown viewModel value: ' + viewModelConfig);\r\n                    }\r\n                }\r\n\r\n                function cloneNodesFromTemplateSourceElement(elemInstance) {\r\n                    switch (ko.utils.tagNameLower(elemInstance)) {\r\n                        case 'script':\r\n                            return ko.utils.parseHtmlFragment(elemInstance.text);\r\n                        case 'textarea':\r\n                            return ko.utils.parseHtmlFragment(elemInstance.value);\r\n                        case 'template':\r\n                            // For browsers with proper <template> element support (i.e., where the .content property\r\n                            // gives a document fragment), use that document fragment.\r\n                            if (isDocumentFragment(elemInstance.content)) {\r\n                                return ko.utils.cloneNodes(elemInstance.content.childNodes);\r\n                            }\r\n                    }\r\n\r\n                    // Regular elements such as <div>, and <template> elements on old browsers that don't really\r\n                    // understand <template> and just treat it as a regular container\r\n                    return ko.utils.cloneNodes(elemInstance.childNodes);\r\n                }\r\n\r\n                function isDomElement(obj) {\r\n                    if (window['HTMLElement']) {\r\n                        return obj instanceof HTMLElement;\r\n                    } else {\r\n                        return obj && obj.tagName && obj.nodeType === 1;\r\n                    }\r\n                }\r\n\r\n                function isDocumentFragment(obj) {\r\n                    if (window['DocumentFragment']) {\r\n                        return obj instanceof DocumentFragment;\r\n                    } else {\r\n                        return obj && obj.nodeType === 11;\r\n                    }\r\n                }\r\n\r\n                function possiblyGetConfigFromAmd(errorCallback, config, callback) {\r\n                    if (typeof config['require'] === 'string') {\r\n                        // The config is the value of an AMD module\r\n                        if (amdRequire || window['require']) {\r\n                            (amdRequire || window['require'])([config['require']], function (module) {\r\n                                if (module && typeof module === 'object' && module.__esModule && module.default) {\r\n                                    module = module.default;\r\n                                }\r\n                                callback(module);\r\n                            });\r\n                        } else {\r\n                            errorCallback('Uses require, but no AMD loader is present');\r\n                        }\r\n                    } else {\r\n                        callback(config);\r\n                    }\r\n                }\r\n\r\n                function makeErrorCallback(componentName) {\r\n                    return function (message) {\r\n                        throw new Error('Component \\'' + componentName + '\\': ' + message);\r\n                    };\r\n                }\r\n\r\n                ko.exportSymbol('components.register', ko.components.register);\r\n                ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\r\n                ko.exportSymbol('components.unregister', ko.components.unregister);\r\n\r\n                // Expose the default loader so that developers can directly ask it for configuration\r\n                // or to resolve configuration\r\n                ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\r\n\r\n                // By default, the default loader is the only registered component loader\r\n                ko.components['loaders'].push(ko.components.defaultLoader);\r\n\r\n                // Privately expose the underlying config registry for use in old-IE shim\r\n                ko.components._allRegisteredComponents = defaultConfigRegistry;\r\n            })();\r\n            (function (undefined) {\r\n                // Overridable API for determining which component name applies to a given node. By overriding this,\r\n                // you can for example map specific tagNames to components that are not preregistered.\r\n                ko.components['getComponentNameForNode'] = function(node) {\r\n                    var tagNameLower = ko.utils.tagNameLower(node);\r\n                    if (ko.components.isRegistered(tagNameLower)) {\r\n                        // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\r\n                        if (tagNameLower.indexOf('-') != -1 || ('' + node) == \"[object HTMLUnknownElement]\" || (ko.utils.ieVersion <= 8 && node.tagName === tagNameLower)) {\r\n                            return tagNameLower;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\r\n                    // Determine if it's really a custom element matching a component\r\n                    if (node.nodeType === 1) {\r\n                        var componentName = ko.components['getComponentNameForNode'](node);\r\n                        if (componentName) {\r\n                            // It does represent a component, so add a component binding for it\r\n                            allBindings = allBindings || {};\r\n\r\n                            if (allBindings['component']) {\r\n                                // Avoid silently overwriting some other 'component' binding that may already be on the element\r\n                                throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\r\n                            }\r\n\r\n                            var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\r\n\r\n                            allBindings['component'] = valueAccessors\r\n                                ? function() { return componentBindingValue; }\r\n                                : componentBindingValue;\r\n                        }\r\n                    }\r\n\r\n                    return allBindings;\r\n                }\r\n\r\n                var nativeBindingProviderInstance = new ko.bindingProvider();\r\n\r\n                function getComponentParamsFromCustomElement(elem, bindingContext) {\r\n                    var paramsAttribute = elem.getAttribute('params');\r\n\r\n                    if (paramsAttribute) {\r\n                        var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\r\n                            rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\r\n                                return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\r\n                            }),\r\n                            result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\r\n                                var paramValue = paramValueComputed.peek();\r\n                                // Does the evaluation of the parameter value unwrap any observables?\r\n                                if (!paramValueComputed.isActive()) {\r\n                                    // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\r\n                                    // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\r\n                                    return paramValue;\r\n                                } else {\r\n                                    // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\r\n                                    // level of observability, and any inner (resulting model value) level of observability.\r\n                                    // This means the component doesn't have to worry about multiple unwrapping. If the value is a\r\n                                    // writable observable, the computed will also be writable and pass the value on to the observable.\r\n                                    return ko.computed({\r\n                                        'read': function() {\r\n                                            return ko.utils.unwrapObservable(paramValueComputed());\r\n                                        },\r\n                                        'write': ko.isWriteableObservable(paramValue) && function(value) {\r\n                                            paramValueComputed()(value);\r\n                                        },\r\n                                        disposeWhenNodeIsRemoved: elem\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                        // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\r\n                        // This is in case the developer wants to react to outer (binding) observability separately from inner\r\n                        // (model value) observability, or in case the model value observable has subobservables.\r\n                        if (!Object.prototype.hasOwnProperty.call(result, '$raw')) {\r\n                            result['$raw'] = rawParamComputedValues;\r\n                        }\r\n\r\n                        return result;\r\n                    } else {\r\n                        // For consistency, absence of a \"params\" attribute is treated the same as the presence of\r\n                        // any empty one. Otherwise component viewmodels need special code to check whether or not\r\n                        // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\r\n                        return { '$raw': {} };\r\n                    }\r\n                }\r\n\r\n                // --------------------------------------------------------------------------------\r\n                // Compatibility code for older (pre-HTML5) IE browsers\r\n\r\n                if (ko.utils.ieVersion < 9) {\r\n                    // Whenever you preregister a component, enable it as a custom element in the current document\r\n                    ko.components['register'] = (function(originalFunction) {\r\n                        return function(componentName) {\r\n                            document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\r\n                            return originalFunction.apply(this, arguments);\r\n                        }\r\n                    })(ko.components['register']);\r\n\r\n                    // Whenever you create a document fragment, enable all preregistered component names as custom elements\r\n                    // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\r\n                    document.createDocumentFragment = (function(originalFunction) {\r\n                        return function() {\r\n                            var newDocFrag = originalFunction(),\r\n                                allComponents = ko.components._allRegisteredComponents;\r\n                            for (var componentName in allComponents) {\r\n                                if (Object.prototype.hasOwnProperty.call(allComponents, componentName)) {\r\n                                    newDocFrag.createElement(componentName);\r\n                                }\r\n                            }\r\n                            return newDocFrag;\r\n                        };\r\n                    })(document.createDocumentFragment);\r\n                }\r\n            })();(function(undefined) {\r\n                var componentLoadingOperationUniqueId = 0;\r\n\r\n                ko.bindingHandlers['component'] = {\r\n                    'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\r\n                        var currentViewModel,\r\n                            currentLoadingOperationId,\r\n                            afterRenderSub,\r\n                            disposeAssociatedComponentViewModel = function () {\r\n                                var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\r\n                                if (typeof currentViewModelDispose === 'function') {\r\n                                    currentViewModelDispose.call(currentViewModel);\r\n                                }\r\n                                if (afterRenderSub) {\r\n                                    afterRenderSub.dispose();\r\n                                }\r\n                                afterRenderSub = null;\r\n                                currentViewModel = null;\r\n                                // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\r\n                                currentLoadingOperationId = null;\r\n                            },\r\n                            originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\r\n\r\n                        ko.virtualElements.emptyNode(element);\r\n                        ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\r\n\r\n                        ko.computed(function () {\r\n                            var value = ko.utils.unwrapObservable(valueAccessor()),\r\n                                componentName, componentParams;\r\n\r\n                            if (typeof value === 'string') {\r\n                                componentName = value;\r\n                            } else {\r\n                                componentName = ko.utils.unwrapObservable(value['name']);\r\n                                componentParams = ko.utils.unwrapObservable(value['params']);\r\n                            }\r\n\r\n                            if (!componentName) {\r\n                                throw new Error('No component name specified');\r\n                            }\r\n\r\n                            var asyncContext = ko.bindingEvent.startPossiblyAsyncContentBinding(element, bindingContext);\r\n\r\n                            var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\r\n                            ko.components.get(componentName, function(componentDefinition) {\r\n                                // If this is not the current load operation for this element, ignore it.\r\n                                if (currentLoadingOperationId !== loadingOperationId) {\r\n                                    return;\r\n                                }\r\n\r\n                                // Clean up previous state\r\n                                disposeAssociatedComponentViewModel();\r\n\r\n                                // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\r\n                                if (!componentDefinition) {\r\n                                    throw new Error('Unknown component \\'' + componentName + '\\'');\r\n                                }\r\n                                cloneTemplateIntoElement(componentName, componentDefinition, element);\r\n\r\n                                var componentInfo = {\r\n                                    'element': element,\r\n                                    'templateNodes': originalChildNodes\r\n                                };\r\n\r\n                                var componentViewModel = createViewModel(componentDefinition, componentParams, componentInfo),\r\n                                    childBindingContext = asyncContext['createChildContext'](componentViewModel, {\r\n                                        'extend': function(ctx) {\r\n                                            ctx['$component'] = componentViewModel;\r\n                                            ctx['$componentTemplateNodes'] = originalChildNodes;\r\n                                        }\r\n                                    });\r\n\r\n                                if (componentViewModel && componentViewModel['koDescendantsComplete']) {\r\n                                    afterRenderSub = ko.bindingEvent.subscribe(element, ko.bindingEvent.descendantsComplete, componentViewModel['koDescendantsComplete'], componentViewModel);\r\n                                }\r\n\r\n                                currentViewModel = componentViewModel;\r\n                                ko.applyBindingsToDescendants(childBindingContext, element);\r\n                            });\r\n                        }, null, { disposeWhenNodeIsRemoved: element });\r\n\r\n                        return { 'controlsDescendantBindings': true };\r\n                    }\r\n                };\r\n\r\n                ko.virtualElements.allowedBindings['component'] = true;\r\n\r\n                function cloneTemplateIntoElement(componentName, componentDefinition, element) {\r\n                    var template = componentDefinition['template'];\r\n                    if (!template) {\r\n                        throw new Error('Component \\'' + componentName + '\\' has no template');\r\n                    }\r\n\r\n                    var clonedNodesArray = ko.utils.cloneNodes(template);\r\n                    ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\r\n                }\r\n\r\n                function createViewModel(componentDefinition, componentParams, componentInfo) {\r\n                    var componentViewModelFactory = componentDefinition['createViewModel'];\r\n                    return componentViewModelFactory\r\n                        ? componentViewModelFactory.call(componentDefinition, componentParams, componentInfo)\r\n                        : componentParams; // Template-only component\r\n                }\r\n\r\n            })();\r\n            var attrHtmlToJavaScriptMap = { 'class': 'className', 'for': 'htmlFor' };\r\n            ko.bindingHandlers['attr'] = {\r\n                'update': function(element, valueAccessor, allBindings) {\r\n                    var value = ko.utils.unwrapObservable(valueAccessor()) || {};\r\n                    ko.utils.objectForEach(value, function(attrName, attrValue) {\r\n                        attrValue = ko.utils.unwrapObservable(attrValue);\r\n\r\n                        // Find the namespace of this attribute, if any.\r\n                        var prefixLen = attrName.indexOf(':');\r\n                        var namespace = \"lookupNamespaceURI\" in element && prefixLen > 0 && element.lookupNamespaceURI(attrName.substr(0, prefixLen));\r\n\r\n                        // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\r\n                        // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\r\n                        // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\r\n                        var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\r\n                        if (toRemove) {\r\n                            namespace ? element.removeAttributeNS(namespace, attrName) : element.removeAttribute(attrName);\r\n                        } else {\r\n                            attrValue = attrValue.toString();\r\n                        }\r\n\r\n                        // In IE <= 7 and IE8 Quirks Mode, you have to use the JavaScript property name instead of the\r\n                        // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\r\n                        // but instead of figuring out the mode, we'll just set the attribute through the JavaScript\r\n                        // property for IE <= 8.\r\n                        if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavaScriptMap) {\r\n                            attrName = attrHtmlToJavaScriptMap[attrName];\r\n                            if (toRemove)\r\n                                element.removeAttribute(attrName);\r\n                            else\r\n                                element[attrName] = attrValue;\r\n                        } else if (!toRemove) {\r\n                            namespace ? element.setAttributeNS(namespace, attrName, attrValue) : element.setAttribute(attrName, attrValue);\r\n                        }\r\n\r\n                        // Treat \"name\" specially - although you can think of it as an attribute, it also needs\r\n                        // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\r\n                        // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\r\n                        // entirely, and there's no strong reason to allow for such casing in HTML.\r\n                        if (attrName === \"name\") {\r\n                            ko.utils.setElementName(element, toRemove ? \"\" : attrValue);\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n            (function() {\r\n\r\n                ko.bindingHandlers['checked'] = {\r\n                    'after': ['value', 'attr'],\r\n                    'init': function (element, valueAccessor, allBindings) {\r\n                        var checkedValue = ko.pureComputed(function() {\r\n                            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\r\n                            if (allBindings['has']('checkedValue')) {\r\n                                return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\r\n                            } else if (useElementValue) {\r\n                                if (allBindings['has']('value')) {\r\n                                    return ko.utils.unwrapObservable(allBindings.get('value'));\r\n                                } else {\r\n                                    return element.value;\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        function updateModel() {\r\n                            // This updates the model value from the view value.\r\n                            // It runs in response to DOM events (click) and changes in checkedValue.\r\n                            var isChecked = element.checked,\r\n                                elemValue = checkedValue();\r\n\r\n                            // When we're first setting up this computed, don't change any model state.\r\n                            if (ko.computedContext.isInitial()) {\r\n                                return;\r\n                            }\r\n\r\n                            // We can ignore unchecked radio buttons, because some other radio\r\n                            // button will be checked, and that one can take care of updating state.\r\n                            // Also ignore value changes to an already unchecked checkbox.\r\n                            if (!isChecked && (isRadio || ko.computedContext.getDependenciesCount())) {\r\n                                return;\r\n                            }\r\n\r\n                            var modelValue = ko.dependencyDetection.ignore(valueAccessor);\r\n                            if (valueIsArray) {\r\n                                var writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue,\r\n                                    saveOldValue = oldElemValue;\r\n                                oldElemValue = elemValue;\r\n\r\n                                if (saveOldValue !== elemValue) {\r\n                                    // When we're responding to the checkedValue changing, and the element is\r\n                                    // currently checked, replace the old elem value with the new elem value\r\n                                    // in the model array.\r\n                                    if (isChecked) {\r\n                                        ko.utils.addOrRemoveItem(writableValue, elemValue, true);\r\n                                        ko.utils.addOrRemoveItem(writableValue, saveOldValue, false);\r\n                                    }\r\n                                } else {\r\n                                    // When we're responding to the user having checked/unchecked a checkbox,\r\n                                    // add/remove the element value to the model array.\r\n                                    ko.utils.addOrRemoveItem(writableValue, elemValue, isChecked);\r\n                                }\r\n\r\n                                if (rawValueIsNonArrayObservable && ko.isWriteableObservable(modelValue)) {\r\n                                    modelValue(writableValue);\r\n                                }\r\n                            } else {\r\n                                if (isCheckbox) {\r\n                                    if (elemValue === undefined) {\r\n                                        elemValue = isChecked;\r\n                                    } else if (!isChecked) {\r\n                                        elemValue = undefined;\r\n                                    }\r\n                                }\r\n                                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\r\n                            }\r\n                        };\r\n\r\n                        function updateView() {\r\n                            // This updates the view value from the model value.\r\n                            // It runs in response to changes in the bound (checked) value.\r\n                            var modelValue = ko.utils.unwrapObservable(valueAccessor()),\r\n                                elemValue = checkedValue();\r\n\r\n                            if (valueIsArray) {\r\n                                // When a checkbox is bound to an array, being checked represents its value being present in that array\r\n                                element.checked = ko.utils.arrayIndexOf(modelValue, elemValue) >= 0;\r\n                                oldElemValue = elemValue;\r\n                            } else if (isCheckbox && elemValue === undefined) {\r\n                                // When a checkbox is bound to any other value (not an array) and \"checkedValue\" is not defined,\r\n                                // being checked represents the value being trueish\r\n                                element.checked = !!modelValue;\r\n                            } else {\r\n                                // Otherwise, being checked means that the checkbox or radio button's value corresponds to the model value\r\n                                element.checked = (checkedValue() === modelValue);\r\n                            }\r\n                        };\r\n\r\n                        var isCheckbox = element.type == \"checkbox\",\r\n                            isRadio = element.type == \"radio\";\r\n\r\n                        // Only bind to check boxes and radio buttons\r\n                        if (!isCheckbox && !isRadio) {\r\n                            return;\r\n                        }\r\n\r\n                        var rawValue = valueAccessor(),\r\n                            valueIsArray = isCheckbox && (ko.utils.unwrapObservable(rawValue) instanceof Array),\r\n                            rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\r\n                            useElementValue = isRadio || valueIsArray,\r\n                            oldElemValue = valueIsArray ? checkedValue() : undefined;\r\n\r\n                        // IE 6 won't allow radio buttons to be selected unless they have a name\r\n                        if (isRadio && !element.name)\r\n                            ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\r\n\r\n                        // Set up two computeds to update the binding:\r\n\r\n                        // The first responds to changes in the checkedValue value and to element clicks\r\n                        ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\r\n                        ko.utils.registerEventHandler(element, \"click\", updateModel);\r\n\r\n                        // The second responds to changes in the model value (the one associated with the checked binding)\r\n                        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\r\n\r\n                        rawValue = undefined;\r\n                    }\r\n                };\r\n                ko.expressionRewriting.twoWayBindings['checked'] = true;\r\n\r\n                ko.bindingHandlers['checkedValue'] = {\r\n                    'update': function (element, valueAccessor) {\r\n                        element.value = ko.utils.unwrapObservable(valueAccessor());\r\n                    }\r\n                };\r\n\r\n            })();var classesWrittenByBindingKey = '__ko__cssValue';\r\n            ko.bindingHandlers['class'] = {\r\n                'update': function (element, valueAccessor) {\r\n                    var value = ko.utils.stringTrim(ko.utils.unwrapObservable(valueAccessor()));\r\n                    ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\r\n                    element[classesWrittenByBindingKey] = value;\r\n                    ko.utils.toggleDomNodeCssClass(element, value, true);\r\n                }\r\n            };\r\n\r\n            ko.bindingHandlers['css'] = {\r\n                'update': function (element, valueAccessor) {\r\n                    var value = ko.utils.unwrapObservable(valueAccessor());\r\n                    if (value !== null && typeof value == \"object\") {\r\n                        ko.utils.objectForEach(value, function(className, shouldHaveClass) {\r\n                            shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\r\n                            ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\r\n                        });\r\n                    } else {\r\n                        ko.bindingHandlers['class']['update'](element, valueAccessor);\r\n                    }\r\n                }\r\n            };\r\n            ko.bindingHandlers['enable'] = {\r\n                'update': function (element, valueAccessor) {\r\n                    var value = ko.utils.unwrapObservable(valueAccessor());\r\n                    if (value && element.disabled)\r\n                        element.removeAttribute(\"disabled\");\r\n                    else if ((!value) && (!element.disabled))\r\n                        element.disabled = true;\r\n                }\r\n            };\r\n\r\n            ko.bindingHandlers['disable'] = {\r\n                'update': function (element, valueAccessor) {\r\n                    ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\r\n                }\r\n            };\r\n// For certain common events (currently just 'click'), allow a simplified data-binding syntax\r\n// e.g. click:handler instead of the usual full-length event:{click:handler}\r\n            function makeEventHandlerShortcut(eventName) {\r\n                ko.bindingHandlers[eventName] = {\r\n                    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n                        var newValueAccessor = function () {\r\n                            var result = {};\r\n                            result[eventName] = valueAccessor();\r\n                            return result;\r\n                        };\r\n                        return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\r\n                    }\r\n                }\r\n            }\r\n\r\n            ko.bindingHandlers['event'] = {\r\n                'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n                    var eventsToHandle = valueAccessor() || {};\r\n                    ko.utils.objectForEach(eventsToHandle, function(eventName) {\r\n                        if (typeof eventName == \"string\") {\r\n                            ko.utils.registerEventHandler(element, eventName, function (event) {\r\n                                var handlerReturnValue;\r\n                                var handlerFunction = valueAccessor()[eventName];\r\n                                if (!handlerFunction)\r\n                                    return;\r\n\r\n                                try {\r\n                                    // Take all the event args, and prefix with the viewmodel\r\n                                    var argsForHandler = ko.utils.makeArray(arguments);\r\n                                    viewModel = bindingContext['$data'];\r\n                                    argsForHandler.unshift(viewModel);\r\n                                    handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\r\n                                } finally {\r\n                                    if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\r\n                                        if (event.preventDefault)\r\n                                            event.preventDefault();\r\n                                        else\r\n                                            event.returnValue = false;\r\n                                    }\r\n                                }\r\n\r\n                                var bubble = allBindings.get(eventName + 'Bubble') !== false;\r\n                                if (!bubble) {\r\n                                    event.cancelBubble = true;\r\n                                    if (event.stopPropagation)\r\n                                        event.stopPropagation();\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\r\n// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\r\n            ko.bindingHandlers['foreach'] = {\r\n                makeTemplateValueAccessor: function(valueAccessor) {\r\n                    return function() {\r\n                        var modelValue = valueAccessor(),\r\n                            unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\r\n\r\n                        // If unwrappedValue is the array, pass in the wrapped value on its own\r\n                        // The value will be unwrapped and tracked within the template binding\r\n                        // (See https://github.com/SteveSanderson/knockout/issues/523)\r\n                        if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\r\n                            return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\r\n\r\n                        // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\r\n                        ko.utils.unwrapObservable(modelValue);\r\n                        return {\r\n                            'foreach': unwrappedValue['data'],\r\n                            'as': unwrappedValue['as'],\r\n                            'noChildContext': unwrappedValue['noChildContext'],\r\n                            'includeDestroyed': unwrappedValue['includeDestroyed'],\r\n                            'afterAdd': unwrappedValue['afterAdd'],\r\n                            'beforeRemove': unwrappedValue['beforeRemove'],\r\n                            'afterRender': unwrappedValue['afterRender'],\r\n                            'beforeMove': unwrappedValue['beforeMove'],\r\n                            'afterMove': unwrappedValue['afterMove'],\r\n                            'templateEngine': ko.nativeTemplateEngine.instance\r\n                        };\r\n                    };\r\n                },\r\n                'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n                    return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\r\n                },\r\n                'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n                    return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\r\n                }\r\n            };\r\n            ko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\r\n            ko.virtualElements.allowedBindings['foreach'] = true;\r\n            var hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\r\n            var hasfocusLastValue = '__ko_hasfocusLastValue';\r\n            ko.bindingHandlers['hasfocus'] = {\r\n                'init': function(element, valueAccessor, allBindings) {\r\n                    var handleElementFocusChange = function(isFocused) {\r\n                        // Where possible, ignore which event was raised and determine focus state using activeElement,\r\n                        // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\r\n                        // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\r\n                        // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\r\n                        // from calling 'blur()' on the element when it loses focus.\r\n                        // Discussion at https://github.com/SteveSanderson/knockout/pull/352\r\n                        element[hasfocusUpdatingProperty] = true;\r\n                        var ownerDoc = element.ownerDocument;\r\n                        if (\"activeElement\" in ownerDoc) {\r\n                            var active;\r\n                            try {\r\n                                active = ownerDoc.activeElement;\r\n                            } catch(e) {\r\n                                // IE9 throws if you access activeElement during page load (see issue #703)\r\n                                active = ownerDoc.body;\r\n                            }\r\n                            isFocused = (active === element);\r\n                        }\r\n                        var modelValue = valueAccessor();\r\n                        ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\r\n\r\n                        //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\r\n                        element[hasfocusLastValue] = isFocused;\r\n                        element[hasfocusUpdatingProperty] = false;\r\n                    };\r\n                    var handleElementFocusIn = handleElementFocusChange.bind(null, true);\r\n                    var handleElementFocusOut = handleElementFocusChange.bind(null, false);\r\n\r\n                    ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\r\n                    ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\r\n                    ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\r\n                    ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\r\n\r\n                    // Assume element is not focused (prevents \"blur\" being called initially)\r\n                    element[hasfocusLastValue] = false;\r\n                },\r\n                'update': function(element, valueAccessor) {\r\n                    var value = !!ko.utils.unwrapObservable(valueAccessor());\r\n\r\n                    if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\r\n                        value ? element.focus() : element.blur();\r\n\r\n                        // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\r\n                        // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\r\n                        // element was focused already.\r\n                        if (!value && element[hasfocusLastValue]) {\r\n                            element.ownerDocument.body.focus();\r\n                        }\r\n\r\n                        // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\r\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\r\n                    }\r\n                }\r\n            };\r\n            ko.expressionRewriting.twoWayBindings['hasfocus'] = true;\r\n\r\n            ko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\r\n            ko.expressionRewriting.twoWayBindings['hasFocus'] = 'hasfocus';\r\n            ko.bindingHandlers['html'] = {\r\n                'init': function() {\r\n                    // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\r\n                    return { 'controlsDescendantBindings': true };\r\n                },\r\n                'update': function (element, valueAccessor) {\r\n                    // setHtml will unwrap the value if needed\r\n                    ko.utils.setHtml(element, valueAccessor());\r\n                }\r\n            };\r\n            (function () {\r\n\r\n// Makes a binding like with or if\r\n                function makeWithIfBinding(bindingKey, isWith, isNot) {\r\n                    ko.bindingHandlers[bindingKey] = {\r\n                        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n                            var didDisplayOnLastUpdate, savedNodes, contextOptions = {}, completeOnRender, needAsyncContext, renderOnEveryChange;\r\n\r\n                            if (isWith) {\r\n                                var as = allBindings.get('as'), noChildContext = allBindings.get('noChildContext');\r\n                                renderOnEveryChange = !(as && noChildContext);\r\n                                contextOptions = { 'as': as, 'noChildContext': noChildContext, 'exportDependencies': renderOnEveryChange };\r\n                            }\r\n\r\n                            completeOnRender = allBindings.get(\"completeOn\") == \"render\";\r\n                            needAsyncContext = completeOnRender || allBindings['has'](ko.bindingEvent.descendantsComplete);\r\n\r\n                            ko.computed(function() {\r\n                                var value = ko.utils.unwrapObservable(valueAccessor()),\r\n                                    shouldDisplay = !isNot !== !value, // equivalent to isNot ? !value : !!value,\r\n                                    isInitial = !savedNodes,\r\n                                    childContext;\r\n\r\n                                if (!renderOnEveryChange && shouldDisplay === didDisplayOnLastUpdate) {\r\n                                    return;\r\n                                }\r\n\r\n                                if (needAsyncContext) {\r\n                                    bindingContext = ko.bindingEvent.startPossiblyAsyncContentBinding(element, bindingContext);\r\n                                }\r\n\r\n                                if (shouldDisplay) {\r\n                                    if (!isWith || renderOnEveryChange) {\r\n                                        contextOptions['dataDependency'] = ko.computedContext.computed();\r\n                                    }\r\n\r\n                                    if (isWith) {\r\n                                        childContext = bindingContext['createChildContext'](typeof value == \"function\" ? value : valueAccessor, contextOptions);\r\n                                    } else if (ko.computedContext.getDependenciesCount()) {\r\n                                        childContext = bindingContext['extend'](null, contextOptions);\r\n                                    } else {\r\n                                        childContext = bindingContext;\r\n                                    }\r\n                                }\r\n\r\n                                // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\r\n                                if (isInitial && ko.computedContext.getDependenciesCount()) {\r\n                                    savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\r\n                                }\r\n\r\n                                if (shouldDisplay) {\r\n                                    if (!isInitial) {\r\n                                        ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\r\n                                    }\r\n\r\n                                    ko.applyBindingsToDescendants(childContext, element);\r\n                                } else {\r\n                                    ko.virtualElements.emptyNode(element);\r\n\r\n                                    if (!completeOnRender) {\r\n                                        ko.bindingEvent.notify(element, ko.bindingEvent.childrenComplete);\r\n                                    }\r\n                                }\r\n\r\n                                didDisplayOnLastUpdate = shouldDisplay;\r\n\r\n                            }, null, { disposeWhenNodeIsRemoved: element });\r\n\r\n                            return { 'controlsDescendantBindings': true };\r\n                        }\r\n                    };\r\n                    ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\r\n                    ko.virtualElements.allowedBindings[bindingKey] = true;\r\n                }\r\n\r\n// Construct the actual binding handlers\r\n                makeWithIfBinding('if');\r\n                makeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\r\n                makeWithIfBinding('with', true /* isWith */);\r\n\r\n            })();ko.bindingHandlers['let'] = {\r\n                'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n                    // Make a modified binding context, with extra properties, and apply it to descendant elements\r\n                    var innerContext = bindingContext['extend'](valueAccessor);\r\n                    ko.applyBindingsToDescendants(innerContext, element);\r\n\r\n                    return { 'controlsDescendantBindings': true };\r\n                }\r\n            };\r\n            ko.virtualElements.allowedBindings['let'] = true;\r\n            var captionPlaceholder = {};\r\n            ko.bindingHandlers['options'] = {\r\n                'init': function(element) {\r\n                    if (ko.utils.tagNameLower(element) !== \"select\")\r\n                        throw new Error(\"options binding applies only to SELECT elements\");\r\n\r\n                    // Remove all existing <option>s.\r\n                    while (element.length > 0) {\r\n                        element.remove(0);\r\n                    }\r\n\r\n                    // Ensures that the binding processor doesn't try to bind the options\r\n                    return { 'controlsDescendantBindings': true };\r\n                },\r\n                'update': function (element, valueAccessor, allBindings) {\r\n                    function selectedOptions() {\r\n                        return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\r\n                    }\r\n\r\n                    var selectWasPreviouslyEmpty = element.length == 0,\r\n                        multiple = element.multiple,\r\n                        previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\r\n                        unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\r\n                        valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\r\n                        includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\r\n                        arrayToDomNodeChildrenOptions = {},\r\n                        captionValue,\r\n                        filteredArray,\r\n                        previousSelectedValues = [];\r\n\r\n                    if (!valueAllowUnset) {\r\n                        if (multiple) {\r\n                            previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\r\n                        } else if (element.selectedIndex >= 0) {\r\n                            previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\r\n                        }\r\n                    }\r\n\r\n                    if (unwrappedArray) {\r\n                        if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\r\n                            unwrappedArray = [unwrappedArray];\r\n\r\n                        // Filter out any entries marked as destroyed\r\n                        filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\r\n                            return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\r\n                        });\r\n\r\n                        // If caption is included, add it to the array\r\n                        if (allBindings['has']('optionsCaption')) {\r\n                            captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\r\n                            // If caption value is null or undefined, don't show a caption\r\n                            if (captionValue !== null && captionValue !== undefined) {\r\n                                filteredArray.unshift(captionPlaceholder);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // If a falsy value is provided (e.g. null), we'll simply empty the select element\r\n                    }\r\n\r\n                    function applyToObject(object, predicate, defaultValue) {\r\n                        var predicateType = typeof predicate;\r\n                        if (predicateType == \"function\")    // Given a function; run it against the data value\r\n                            return predicate(object);\r\n                        else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\r\n                            return object[predicate];\r\n                        else                                // Given no optionsText arg; use the data value itself\r\n                            return defaultValue;\r\n                    }\r\n\r\n                    // The following functions can run at two different times:\r\n                    // The first is when the whole array is being updated directly from this binding handler.\r\n                    // The second is when an observable value for a specific array entry is updated.\r\n                    // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\r\n                    var itemUpdate = false;\r\n                    function optionForArrayItem(arrayEntry, index, oldOptions) {\r\n                        if (oldOptions.length) {\r\n                            previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\r\n                            itemUpdate = true;\r\n                        }\r\n                        var option = element.ownerDocument.createElement(\"option\");\r\n                        if (arrayEntry === captionPlaceholder) {\r\n                            ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\r\n                            ko.selectExtensions.writeValue(option, undefined);\r\n                        } else {\r\n                            // Apply a value to the option element\r\n                            var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\r\n                            ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\r\n\r\n                            // Apply some text to the option element\r\n                            var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\r\n                            ko.utils.setTextContent(option, optionText);\r\n                        }\r\n                        return [option];\r\n                    }\r\n\r\n                    // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\r\n                    // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\r\n                    arrayToDomNodeChildrenOptions['beforeRemove'] =\r\n                        function (option) {\r\n                            element.removeChild(option);\r\n                        };\r\n\r\n                    function setSelectionCallback(arrayEntry, newOptions) {\r\n                        if (itemUpdate && valueAllowUnset) {\r\n                            // The model value is authoritative, so make sure its value is the one selected\r\n                            ko.bindingEvent.notify(element, ko.bindingEvent.childrenComplete);\r\n                        } else if (previousSelectedValues.length) {\r\n                            // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\r\n                            // That's why we first added them without selection. Now it's time to set the selection.\r\n                            var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\r\n                            ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\r\n\r\n                            // If this option was changed from being selected during a single-item update, notify the change\r\n                            if (itemUpdate && !isSelected) {\r\n                                ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    var callback = setSelectionCallback;\r\n                    if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\r\n                        callback = function(arrayEntry, newOptions) {\r\n                            setSelectionCallback(arrayEntry, newOptions);\r\n                            ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\r\n                        }\r\n                    }\r\n\r\n                    ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\r\n\r\n                    if (!valueAllowUnset) {\r\n                        // Determine if the selection has changed as a result of updating the options list\r\n                        var selectionChanged;\r\n                        if (multiple) {\r\n                            // For a multiple-select box, compare the new selection count to the previous one\r\n                            // But if nothing was selected before, the selection can't have changed\r\n                            selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\r\n                        } else {\r\n                            // For a single-select box, compare the current value to the previous value\r\n                            // But if nothing was selected before or nothing is selected now, just look for a change in selection\r\n                            selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\r\n                                ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\r\n                                : (previousSelectedValues.length || element.selectedIndex >= 0);\r\n                        }\r\n\r\n                        // Ensure consistency between model value and selected option.\r\n                        // If the dropdown was changed so that selection is no longer the same,\r\n                        // notify the value or selectedOptions binding.\r\n                        if (selectionChanged) {\r\n                            ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\r\n                        }\r\n                    }\r\n\r\n                    if (valueAllowUnset || ko.computedContext.isInitial()) {\r\n                        ko.bindingEvent.notify(element, ko.bindingEvent.childrenComplete);\r\n                    }\r\n\r\n                    // Workaround for IE bug\r\n                    ko.utils.ensureSelectElementIsRenderedCorrectly(element);\r\n\r\n                    if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\r\n                        element.scrollTop = previousScrollTop;\r\n                }\r\n            };\r\n            ko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\r\n            ko.bindingHandlers['selectedOptions'] = {\r\n                'init': function (element, valueAccessor, allBindings) {\r\n                    function updateFromView() {\r\n                        var value = valueAccessor(), valueToWrite = [];\r\n                        ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\r\n                            if (node.selected)\r\n                                valueToWrite.push(ko.selectExtensions.readValue(node));\r\n                        });\r\n                        ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\r\n                    }\r\n\r\n                    function updateFromModel() {\r\n                        var newValue = ko.utils.unwrapObservable(valueAccessor()),\r\n                            previousScrollTop = element.scrollTop;\r\n\r\n                        if (newValue && typeof newValue.length == \"number\") {\r\n                            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\r\n                                var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\r\n                                if (node.selected != isSelected) {      // This check prevents flashing of the select element in IE\r\n                                    ko.utils.setOptionNodeSelectionState(node, isSelected);\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        element.scrollTop = previousScrollTop;\r\n                    }\r\n\r\n                    if (ko.utils.tagNameLower(element) != \"select\") {\r\n                        throw new Error(\"selectedOptions binding applies only to SELECT elements\");\r\n                    }\r\n\r\n                    var updateFromModelComputed;\r\n                    ko.bindingEvent.subscribe(element, ko.bindingEvent.childrenComplete, function () {\r\n                        if (!updateFromModelComputed) {\r\n                            ko.utils.registerEventHandler(element, \"change\", updateFromView);\r\n                            updateFromModelComputed = ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\r\n                        } else {\r\n                            updateFromView();\r\n                        }\r\n                    }, null, { 'notifyImmediately': true });\r\n                },\r\n                'update': function() {} // Keep for backwards compatibility with code that may have wrapped binding\r\n            };\r\n            ko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\r\n            ko.bindingHandlers['style'] = {\r\n                'update': function (element, valueAccessor) {\r\n                    var value = ko.utils.unwrapObservable(valueAccessor() || {});\r\n                    ko.utils.objectForEach(value, function(styleName, styleValue) {\r\n                        styleValue = ko.utils.unwrapObservable(styleValue);\r\n\r\n                        if (styleValue === null || styleValue === undefined || styleValue === false) {\r\n                            // Empty string removes the value, whereas null/undefined have no effect\r\n                            styleValue = \"\";\r\n                        }\r\n\r\n                        if (jQueryInstance) {\r\n                            jQueryInstance(element)['css'](styleName, styleValue);\r\n                        } else if (/^--/.test(styleName)) {\r\n                            // Is styleName a custom CSS property?\r\n                            element.style.setProperty(styleName, styleValue);\r\n                        } else {\r\n                            styleName = styleName.replace(/-(\\w)/g, function (all, letter) {\r\n                                return letter.toUpperCase();\r\n                            });\r\n\r\n                            var previousStyle = element.style[styleName];\r\n                            element.style[styleName] = styleValue;\r\n\r\n                            if (styleValue !== previousStyle && element.style[styleName] == previousStyle && !isNaN(styleValue)) {\r\n                                element.style[styleName] = styleValue + \"px\";\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n            ko.bindingHandlers['submit'] = {\r\n                'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n                    if (typeof valueAccessor() != \"function\")\r\n                        throw new Error(\"The value for a submit binding must be a function\");\r\n                    ko.utils.registerEventHandler(element, \"submit\", function (event) {\r\n                        var handlerReturnValue;\r\n                        var value = valueAccessor();\r\n                        try { handlerReturnValue = value.call(bindingContext['$data'], element); }\r\n                        finally {\r\n                            if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\r\n                                if (event.preventDefault)\r\n                                    event.preventDefault();\r\n                                else\r\n                                    event.returnValue = false;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n            ko.bindingHandlers['text'] = {\r\n                'init': function() {\r\n                    // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\r\n                    // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\r\n                    return { 'controlsDescendantBindings': true };\r\n                },\r\n                'update': function (element, valueAccessor) {\r\n                    ko.utils.setTextContent(element, valueAccessor());\r\n                }\r\n            };\r\n            ko.virtualElements.allowedBindings['text'] = true;\r\n            (function () {\r\n\r\n                if (window && window.navigator) {\r\n                    var parseVersion = function (matches) {\r\n                        if (matches) {\r\n                            return parseFloat(matches[1]);\r\n                        }\r\n                    };\r\n\r\n                    // Detect various browser versions because some old versions don't fully support the 'input' event\r\n                    var userAgent = window.navigator.userAgent,\r\n                        operaVersion, chromeVersion, safariVersion, firefoxVersion, ieVersion, edgeVersion;\r\n\r\n                    (operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()))\r\n                    || (edgeVersion = parseVersion(userAgent.match(/Edge\\/([^ ]+)$/)))\r\n                    || (chromeVersion = parseVersion(userAgent.match(/Chrome\\/([^ ]+)/)))\r\n                    || (safariVersion = parseVersion(userAgent.match(/Version\\/([^ ]+) Safari/)))\r\n                    || (firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]+)/)))\r\n                    || (ieVersion = ko.utils.ieVersion || parseVersion(userAgent.match(/MSIE ([^ ]+)/)))      // Detects up to IE 10\r\n                    || (ieVersion = parseVersion(userAgent.match(/rv:([^ )]+)/)));      // Detects IE 11\r\n                }\r\n\r\n// IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\r\n// But it does fire the 'selectionchange' event on many of those, presumably because the\r\n// cursor is moving and that counts as the selection changing. The 'selectionchange' event is\r\n// fired at the document level only and doesn't directly indicate which element changed. We\r\n// set up just one event handler for the document and use 'activeElement' to determine which\r\n// element was changed.\r\n                if (ieVersion >= 8 && ieVersion < 10) {\r\n                    var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\r\n                        selectionChangeHandlerName = ko.utils.domData.nextKey();\r\n                    var selectionChangeHandler = function(event) {\r\n                        var target = this.activeElement,\r\n                            handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\r\n                        if (handler) {\r\n                            handler(event);\r\n                        }\r\n                    };\r\n                    var registerForSelectionChangeEvent = function (element, handler) {\r\n                        var ownerDoc = element.ownerDocument;\r\n                        if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\r\n                            ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\r\n                            ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\r\n                        }\r\n                        ko.utils.domData.set(element, selectionChangeHandlerName, handler);\r\n                    };\r\n                }\r\n\r\n                ko.bindingHandlers['textInput'] = {\r\n                    'init': function (element, valueAccessor, allBindings) {\r\n\r\n                        var previousElementValue = element.value,\r\n                            timeoutHandle,\r\n                            elementValueBeforeEvent;\r\n\r\n                        var updateModel = function (event) {\r\n                            clearTimeout(timeoutHandle);\r\n                            elementValueBeforeEvent = timeoutHandle = undefined;\r\n\r\n                            var elementValue = element.value;\r\n                            if (previousElementValue !== elementValue) {\r\n                                // Provide a way for tests to know exactly which event was processed\r\n                                if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\r\n                                previousElementValue = elementValue;\r\n                                ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\r\n                            }\r\n                        };\r\n\r\n                        var deferUpdateModel = function (event) {\r\n                            if (!timeoutHandle) {\r\n                                // The elementValueBeforeEvent variable is set *only* during the brief gap between an\r\n                                // event firing and the updateModel function running. This allows us to ignore model\r\n                                // updates that are from the previous state of the element, usually due to techniques\r\n                                // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\r\n                                elementValueBeforeEvent = element.value;\r\n                                var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\r\n                                timeoutHandle = ko.utils.setTimeout(handler, 4);\r\n                            }\r\n                        };\r\n\r\n                        // IE9 will mess up the DOM if you handle events synchronously which results in DOM changes (such as other bindings);\r\n                        // so we'll make sure all updates are asynchronous\r\n                        var ieUpdateModel = ko.utils.ieVersion == 9 ? deferUpdateModel : updateModel,\r\n                            ourUpdate = false;\r\n\r\n                        var updateView = function () {\r\n                            var modelValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n                            if (modelValue === null || modelValue === undefined) {\r\n                                modelValue = '';\r\n                            }\r\n\r\n                            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\r\n                                ko.utils.setTimeout(updateView, 4);\r\n                                return;\r\n                            }\r\n\r\n                            // Update the element only if the element and model are different. On some browsers, updating the value\r\n                            // will move the cursor to the end of the input, which would be bad while the user is typing.\r\n                            if (element.value !== modelValue) {\r\n                                ourUpdate = true;  // Make sure we ignore events (propertychange) that result from updating the value\r\n                                element.value = modelValue;\r\n                                ourUpdate = false;\r\n                                previousElementValue = element.value; // In case the browser changes the value (see #2281)\r\n                            }\r\n                        };\r\n\r\n                        var onEvent = function (event, handler) {\r\n                            ko.utils.registerEventHandler(element, event, handler);\r\n                        };\r\n\r\n                        if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\r\n                            // Provide a way for tests to specify exactly which events are bound\r\n                            ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\r\n                                if (eventName.slice(0,5) == 'after') {\r\n                                    onEvent(eventName.slice(5), deferUpdateModel);\r\n                                } else {\r\n                                    onEvent(eventName, updateModel);\r\n                                }\r\n                            });\r\n                        } else {\r\n                            if (ieVersion) {\r\n                                // All versions (including 11) of Internet Explorer have a bug that they don't generate an input or propertychange event when ESC is pressed\r\n                                onEvent('keypress', updateModel);\r\n                            }\r\n                            if (ieVersion < 11) {\r\n                                // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\r\n                                // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\r\n                                // but that's an acceptable compromise for this binding. IE 9 and 10 support 'input', but since they don't always\r\n                                // fire it when using autocomplete, we'll use 'propertychange' for them also.\r\n                                onEvent('propertychange', function(event) {\r\n                                    if (!ourUpdate && event.propertyName === 'value') {\r\n                                        ieUpdateModel(event);\r\n                                    }\r\n                                });\r\n                            }\r\n                            if (ieVersion == 8) {\r\n                                // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\r\n                                // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\r\n                                // events too.\r\n                                onEvent('keyup', updateModel);      // A single keystoke\r\n                                onEvent('keydown', updateModel);    // The first character when a key is held down\r\n                            }\r\n                            if (registerForSelectionChangeEvent) {\r\n                                // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\r\n                                // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\r\n                                // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\r\n                                // can detect all of those except dragging text out of the field, for which we use 'dragend'.\r\n                                // These are also needed in IE8 because of the bug described above.\r\n                                registerForSelectionChangeEvent(element, ieUpdateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\r\n                                onEvent('dragend', deferUpdateModel);\r\n                            }\r\n\r\n                            if (!ieVersion || ieVersion >= 9) {\r\n                                // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\r\n                                // through the user interface.\r\n                                onEvent('input', ieUpdateModel);\r\n                            }\r\n\r\n                            if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\r\n                                // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\r\n                                // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\r\n                                onEvent('keydown', deferUpdateModel);\r\n                                onEvent('paste', deferUpdateModel);\r\n                                onEvent('cut', deferUpdateModel);\r\n                            } else if (operaVersion < 11) {\r\n                                // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\r\n                                // We can try to catch some of those using 'keydown'.\r\n                                onEvent('keydown', deferUpdateModel);\r\n                            } else if (firefoxVersion < 4.0) {\r\n                                // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\r\n                                onEvent('DOMAutoComplete', updateModel);\r\n\r\n                                // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\r\n                                onEvent('dragdrop', updateModel);       // <3.5\r\n                                onEvent('drop', updateModel);           // 3.5\r\n                            } else if (edgeVersion && element.type === \"number\") {\r\n                                // Microsoft Edge doesn't fire 'input' or 'change' events for number inputs when\r\n                                // the value is changed via the up / down arrow keys\r\n                                onEvent('keydown', deferUpdateModel);\r\n                            }\r\n                        }\r\n\r\n                        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\r\n                        onEvent('change', updateModel);\r\n\r\n                        // To deal with browsers that don't notify any kind of event for some changes (IE, Safari, etc.)\r\n                        onEvent('blur', updateModel);\r\n\r\n                        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\r\n                    }\r\n                };\r\n                ko.expressionRewriting.twoWayBindings['textInput'] = true;\r\n\r\n// textinput is an alias for textInput\r\n                ko.bindingHandlers['textinput'] = {\r\n                    // preprocess is the only way to set up a full alias\r\n                    'preprocess': function (value, name, addBinding) {\r\n                        addBinding('textInput', value);\r\n                    }\r\n                };\r\n\r\n            })();ko.bindingHandlers['uniqueName'] = {\r\n                'init': function (element, valueAccessor) {\r\n                    if (valueAccessor()) {\r\n                        var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\r\n                        ko.utils.setElementName(element, name);\r\n                    }\r\n                }\r\n            };\r\n            ko.bindingHandlers['uniqueName'].currentIndex = 0;\r\n            ko.bindingHandlers['using'] = {\r\n                'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n                    var options;\r\n\r\n                    if (allBindings['has']('as')) {\r\n                        options = { 'as': allBindings.get('as'), 'noChildContext': allBindings.get('noChildContext') };\r\n                    }\r\n\r\n                    var innerContext = bindingContext['createChildContext'](valueAccessor, options);\r\n                    ko.applyBindingsToDescendants(innerContext, element);\r\n\r\n                    return { 'controlsDescendantBindings': true };\r\n                }\r\n            };\r\n            ko.virtualElements.allowedBindings['using'] = true;\r\n            ko.bindingHandlers['value'] = {\r\n                'init': function (element, valueAccessor, allBindings) {\r\n                    var tagName = ko.utils.tagNameLower(element),\r\n                        isInputElement = tagName == \"input\";\r\n\r\n                    // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\r\n                    if (isInputElement && (element.type == \"checkbox\" || element.type == \"radio\")) {\r\n                        ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\r\n                        return;\r\n                    }\r\n\r\n                    var eventsToCatch = [];\r\n                    var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\r\n                    var propertyChangedFired = false;\r\n                    var elementValueBeforeEvent = null;\r\n\r\n                    if (requestedEventsToCatch) {\r\n                        // Allow both individual event names, and arrays of event names\r\n                        if (typeof requestedEventsToCatch == \"string\") {\r\n                            eventsToCatch = [requestedEventsToCatch];\r\n                        } else {\r\n                            eventsToCatch = ko.utils.arrayGetDistinctValues(requestedEventsToCatch);\r\n                        }\r\n                        ko.utils.arrayRemoveItem(eventsToCatch, \"change\");  // We'll subscribe to \"change\" events later\r\n                    }\r\n\r\n                    var valueUpdateHandler = function() {\r\n                        elementValueBeforeEvent = null;\r\n                        propertyChangedFired = false;\r\n                        var modelValue = valueAccessor();\r\n                        var elementValue = ko.selectExtensions.readValue(element);\r\n                        ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\r\n                    }\r\n\r\n                    // Workaround for https://github.com/SteveSanderson/knockout/issues/122\r\n                    // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\r\n                    var ieAutoCompleteHackNeeded = ko.utils.ieVersion && isInputElement && element.type == \"text\"\r\n                        && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\r\n                    if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\r\n                        ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\r\n                        ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\r\n                        ko.utils.registerEventHandler(element, \"blur\", function() {\r\n                            if (propertyChangedFired) {\r\n                                valueUpdateHandler();\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    ko.utils.arrayForEach(eventsToCatch, function(eventName) {\r\n                        // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\r\n                        // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\r\n                        // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\r\n                        var handler = valueUpdateHandler;\r\n                        if (ko.utils.stringStartsWith(eventName, \"after\")) {\r\n                            handler = function() {\r\n                                // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\r\n                                // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\r\n                                // at the earliest asynchronous opportunity. We store this temporary information so that\r\n                                // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\r\n                                // we can overwrite that model value change with the value the user just typed. Otherwise,\r\n                                // techniques like rateLimit can trigger model changes at critical moments that will\r\n                                // override the user's inputs, causing keystrokes to be lost.\r\n                                elementValueBeforeEvent = ko.selectExtensions.readValue(element);\r\n                                ko.utils.setTimeout(valueUpdateHandler, 0);\r\n                            };\r\n                            eventName = eventName.substring(\"after\".length);\r\n                        }\r\n                        ko.utils.registerEventHandler(element, eventName, handler);\r\n                    });\r\n\r\n                    var updateFromModel;\r\n\r\n                    if (isInputElement && element.type == \"file\") {\r\n                        // For file input elements, can only write the empty string\r\n                        updateFromModel = function () {\r\n                            var newValue = ko.utils.unwrapObservable(valueAccessor());\r\n                            if (newValue === null || newValue === undefined || newValue === \"\") {\r\n                                element.value = \"\";\r\n                            } else {\r\n                                ko.dependencyDetection.ignore(valueUpdateHandler);  // reset the model to match the element\r\n                            }\r\n                        }\r\n                    } else {\r\n                        updateFromModel = function () {\r\n                            var newValue = ko.utils.unwrapObservable(valueAccessor());\r\n                            var elementValue = ko.selectExtensions.readValue(element);\r\n\r\n                            if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\r\n                                ko.utils.setTimeout(updateFromModel, 0);\r\n                                return;\r\n                            }\r\n\r\n                            var valueHasChanged = newValue !== elementValue;\r\n\r\n                            if (valueHasChanged || elementValue === undefined) {\r\n                                if (tagName === \"select\") {\r\n                                    var allowUnset = allBindings.get('valueAllowUnset');\r\n                                    ko.selectExtensions.writeValue(element, newValue, allowUnset);\r\n                                    if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\r\n                                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\r\n                                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\r\n                                        ko.dependencyDetection.ignore(valueUpdateHandler);\r\n                                    }\r\n                                } else {\r\n                                    ko.selectExtensions.writeValue(element, newValue);\r\n                                }\r\n                            }\r\n                        };\r\n                    }\r\n\r\n                    if (tagName === \"select\") {\r\n                        var updateFromModelComputed;\r\n                        ko.bindingEvent.subscribe(element, ko.bindingEvent.childrenComplete, function () {\r\n                            if (!updateFromModelComputed) {\r\n                                ko.utils.registerEventHandler(element, \"change\", valueUpdateHandler);\r\n                                updateFromModelComputed = ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\r\n                            } else if (allBindings.get('valueAllowUnset')) {\r\n                                updateFromModel();\r\n                            } else {\r\n                                valueUpdateHandler();\r\n                            }\r\n                        }, null, { 'notifyImmediately': true });\r\n                    } else {\r\n                        ko.utils.registerEventHandler(element, \"change\", valueUpdateHandler);\r\n                        ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\r\n                    }\r\n                },\r\n                'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\r\n            };\r\n            ko.expressionRewriting.twoWayBindings['value'] = true;\r\n            ko.bindingHandlers['visible'] = {\r\n                'update': function (element, valueAccessor) {\r\n                    var value = ko.utils.unwrapObservable(valueAccessor());\r\n                    var isCurrentlyVisible = !(element.style.display == \"none\");\r\n                    if (value && !isCurrentlyVisible)\r\n                        element.style.display = \"\";\r\n                    else if ((!value) && isCurrentlyVisible)\r\n                        element.style.display = \"none\";\r\n                }\r\n            };\r\n\r\n            ko.bindingHandlers['hidden'] = {\r\n                'update': function (element, valueAccessor) {\r\n                    ko.bindingHandlers['visible']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\r\n                }\r\n            };\r\n// 'click' is just a shorthand for the usual full-length event:{click:handler}\r\n            makeEventHandlerShortcut('click');\r\n// If you want to make a custom template engine,\r\n//\r\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\r\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\r\n//\r\n//        function (templateSource, bindingContext, options) {\r\n//            // - templateSource.text() is the text of the template you should render\r\n//            // - bindingContext.$data is the data you should pass into the template\r\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\r\n//            //     and bindingContext.$root available in the template too\r\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\r\n//            // - templateDocument is the document object of the template\r\n//            //\r\n//            // Return value: an array of DOM nodes\r\n//        }\r\n//\r\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\r\n//\r\n//        function (script) {\r\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\r\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\r\n//        }\r\n//\r\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\r\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\r\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\r\n\r\n            ko.templateEngine = function () { };\r\n\r\n            ko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\r\n                throw new Error(\"Override renderTemplateSource\");\r\n            };\r\n\r\n            ko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\r\n                throw new Error(\"Override createJavaScriptEvaluatorBlock\");\r\n            };\r\n\r\n            ko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\r\n                // Named template\r\n                if (typeof template == \"string\") {\r\n                    templateDocument = templateDocument || document;\r\n                    var elem = templateDocument.getElementById(template);\r\n                    if (!elem)\r\n                        throw new Error(\"Cannot find template with ID \" + template);\r\n                    return new ko.templateSources.domElement(elem);\r\n                } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\r\n                    // Anonymous template\r\n                    return new ko.templateSources.anonymousTemplate(template);\r\n                } else\r\n                    throw new Error(\"Unknown template type: \" + template);\r\n            };\r\n\r\n            ko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\r\n                var templateSource = this['makeTemplateSource'](template, templateDocument);\r\n                return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\r\n            };\r\n\r\n            ko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\r\n                // Skip rewriting if requested\r\n                if (this['allowTemplateRewriting'] === false)\r\n                    return true;\r\n                return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\r\n            };\r\n\r\n            ko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\r\n                var templateSource = this['makeTemplateSource'](template, templateDocument);\r\n                var rewritten = rewriterCallback(templateSource['text']());\r\n                templateSource['text'](rewritten);\r\n                templateSource['data'](\"isRewritten\", true);\r\n            };\r\n\r\n            ko.exportSymbol('templateEngine', ko.templateEngine);\r\n\r\n            ko.templateRewriting = (function () {\r\n                var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\r\n                var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\r\n\r\n                function validateDataBindValuesForRewriting(keyValueArray) {\r\n                    var allValidators = ko.expressionRewriting.bindingRewriteValidators;\r\n                    for (var i = 0; i < keyValueArray.length; i++) {\r\n                        var key = keyValueArray[i]['key'];\r\n                        if (Object.prototype.hasOwnProperty.call(allValidators, key)) {\r\n                            var validator = allValidators[key];\r\n\r\n                            if (typeof validator === \"function\") {\r\n                                var possibleErrorMessage = validator(keyValueArray[i]['value']);\r\n                                if (possibleErrorMessage)\r\n                                    throw new Error(possibleErrorMessage);\r\n                            } else if (!validator) {\r\n                                throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\r\n                    var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\r\n                    validateDataBindValuesForRewriting(dataBindKeyValueArray);\r\n                    var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\r\n\r\n                    // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\r\n                    // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\r\n                    // extra indirection.\r\n                    var applyBindingsToNextSiblingScript =\r\n                        \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\r\n                    return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\r\n                }\r\n\r\n                return {\r\n                    ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\r\n                        if (!templateEngine['isTemplateRewritten'](template, templateDocument))\r\n                            templateEngine['rewriteTemplate'](template, function (htmlString) {\r\n                                return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\r\n                            }, templateDocument);\r\n                    },\r\n\r\n                    memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\r\n                        return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\r\n                            return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\r\n                        }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\r\n                            return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\r\n                        });\r\n                    },\r\n\r\n                    applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\r\n                        return ko.memoization.memoize(function (domNode, bindingContext) {\r\n                            var nodeToBind = domNode.nextSibling;\r\n                            if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\r\n                                ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            })();\r\n\r\n\r\n// Exported only because it has to be referenced by string lookup from within rewritten template\r\n            ko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\r\n            (function() {\r\n                // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\r\n                // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\r\n                //\r\n                // Two are provided by default:\r\n                //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\r\n                //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\r\n                //                                           without reading/writing the actual element text content, since it will be overwritten\r\n                //                                           with the rendered template output.\r\n                // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\r\n                // Template sources need to have the following functions:\r\n                //   text() \t\t\t- returns the template text from your storage location\r\n                //   text(value)\t\t- writes the supplied template text to your storage location\r\n                //   data(key)\t\t\t- reads values stored using data(key, value) - see below\r\n                //   data(key, value)\t- associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\r\n                //\r\n                // Optionally, template sources can also have the following functions:\r\n                //   nodes()            - returns a DOM element containing the nodes of this template, where available\r\n                //   nodes(value)       - writes the given DOM element to your storage location\r\n                // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\r\n                // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\r\n                //\r\n                // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\r\n                // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\r\n\r\n                ko.templateSources = {};\r\n\r\n                // ---- ko.templateSources.domElement -----\r\n\r\n                // template types\r\n                var templateScript = 1,\r\n                    templateTextArea = 2,\r\n                    templateTemplate = 3,\r\n                    templateElement = 4;\r\n\r\n                ko.templateSources.domElement = function(element) {\r\n                    this.domElement = element;\r\n\r\n                    if (element) {\r\n                        var tagNameLower = ko.utils.tagNameLower(element);\r\n                        this.templateType =\r\n                            tagNameLower === \"script\" ? templateScript :\r\n                                tagNameLower === \"textarea\" ? templateTextArea :\r\n                                    // For browsers with proper <template> element support, where the .content property gives a document fragment\r\n                                    tagNameLower == \"template\" && element.content && element.content.nodeType === 11 ? templateTemplate :\r\n                                        templateElement;\r\n                    }\r\n                }\r\n\r\n                ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\r\n                    var elemContentsProperty = this.templateType === templateScript ? \"text\"\r\n                        : this.templateType === templateTextArea ? \"value\"\r\n                            : \"innerHTML\";\r\n\r\n                    if (arguments.length == 0) {\r\n                        return this.domElement[elemContentsProperty];\r\n                    } else {\r\n                        var valueToWrite = arguments[0];\r\n                        if (elemContentsProperty === \"innerHTML\")\r\n                            ko.utils.setHtml(this.domElement, valueToWrite);\r\n                        else\r\n                            this.domElement[elemContentsProperty] = valueToWrite;\r\n                    }\r\n                };\r\n\r\n                var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\r\n                ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\r\n                    if (arguments.length === 1) {\r\n                        return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\r\n                    } else {\r\n                        ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\r\n                    }\r\n                };\r\n\r\n                var templatesDomDataKey = ko.utils.domData.nextKey();\r\n                function getTemplateDomData(element) {\r\n                    return ko.utils.domData.get(element, templatesDomDataKey) || {};\r\n                }\r\n                function setTemplateDomData(element, data) {\r\n                    ko.utils.domData.set(element, templatesDomDataKey, data);\r\n                }\r\n\r\n                ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\r\n                    var element = this.domElement;\r\n                    if (arguments.length == 0) {\r\n                        var templateData = getTemplateDomData(element),\r\n                            nodes = templateData.containerData || (\r\n                                this.templateType === templateTemplate ? element.content :\r\n                                    this.templateType === templateElement ? element :\r\n                                        undefined);\r\n                        if (!nodes || templateData.alwaysCheckText) {\r\n                            // If the template is associated with an element that stores the template as text,\r\n                            // parse and cache the nodes whenever there's new text content available. This allows\r\n                            // the user to update the template content by updating the text of template node.\r\n                            var text = this['text']();\r\n                            if (text && text !== templateData.textData) {\r\n                                nodes = ko.utils.parseHtmlForTemplateNodes(text, element.ownerDocument);\r\n                                setTemplateDomData(element, {containerData: nodes, textData: text, alwaysCheckText: true});\r\n                            }\r\n                        }\r\n                        return nodes;\r\n                    } else {\r\n                        var valueToWrite = arguments[0];\r\n                        if (this.templateType !== undefined) {\r\n                            this['text'](\"\");   // clear the text from the node\r\n                        }\r\n                        setTemplateDomData(element, {containerData: valueToWrite});\r\n                    }\r\n                };\r\n\r\n                // ---- ko.templateSources.anonymousTemplate -----\r\n                // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\r\n                // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\r\n                // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\r\n\r\n                ko.templateSources.anonymousTemplate = function(element) {\r\n                    this.domElement = element;\r\n                }\r\n                ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\r\n                ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\r\n                ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\r\n                    if (arguments.length == 0) {\r\n                        var templateData = getTemplateDomData(this.domElement);\r\n                        if (templateData.textData === undefined && templateData.containerData)\r\n                            templateData.textData = templateData.containerData.innerHTML;\r\n                        return templateData.textData;\r\n                    } else {\r\n                        var valueToWrite = arguments[0];\r\n                        setTemplateDomData(this.domElement, {textData: valueToWrite});\r\n                    }\r\n                };\r\n\r\n                ko.exportSymbol('templateSources', ko.templateSources);\r\n                ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\r\n                ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\r\n            })();\r\n            (function () {\r\n                var _templateEngine;\r\n                ko.setTemplateEngine = function (templateEngine) {\r\n                    if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\r\n                        throw new Error(\"templateEngine must inherit from ko.templateEngine\");\r\n                    _templateEngine = templateEngine;\r\n                }\r\n\r\n                function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\r\n                    var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\r\n                    while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\r\n                        nextInQueue = ko.virtualElements.nextSibling(node);\r\n                        action(node, nextInQueue);\r\n                    }\r\n                }\r\n\r\n                function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\r\n                    // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\r\n                    // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\r\n                    // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\r\n                    // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\r\n                    // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\r\n\r\n                    if (continuousNodeArray.length) {\r\n                        var firstNode = continuousNodeArray[0],\r\n                            lastNode = continuousNodeArray[continuousNodeArray.length - 1],\r\n                            parentNode = firstNode.parentNode,\r\n                            provider = ko.bindingProvider['instance'],\r\n                            preprocessNode = provider['preprocessNode'];\r\n\r\n                        if (preprocessNode) {\r\n                            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\r\n                                var nodePreviousSibling = node.previousSibling;\r\n                                var newNodes = preprocessNode.call(provider, node);\r\n                                if (newNodes) {\r\n                                    if (node === firstNode)\r\n                                        firstNode = newNodes[0] || nextNodeInRange;\r\n                                    if (node === lastNode)\r\n                                        lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\r\n                                }\r\n                            });\r\n\r\n                            // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\r\n                            // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\r\n                            // first node needs to be in the array).\r\n                            continuousNodeArray.length = 0;\r\n                            if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\r\n                                return;\r\n                            }\r\n                            if (firstNode === lastNode) {\r\n                                continuousNodeArray.push(firstNode);\r\n                            } else {\r\n                                continuousNodeArray.push(firstNode, lastNode);\r\n                                ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\r\n                            }\r\n                        }\r\n\r\n                        // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\r\n                        // whereas a regular applyBindings won't introduce new memoized nodes\r\n                        invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\r\n                            if (node.nodeType === 1 || node.nodeType === 8)\r\n                                ko.applyBindings(bindingContext, node);\r\n                        });\r\n                        invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\r\n                            if (node.nodeType === 1 || node.nodeType === 8)\r\n                                ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\r\n                        });\r\n\r\n                        // Make sure any changes done by applyBindings or unmemoize are reflected in the array\r\n                        ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\r\n                    }\r\n                }\r\n\r\n                function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\r\n                    return nodeOrNodeArray.nodeType ? nodeOrNodeArray\r\n                        : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\r\n                            : null;\r\n                }\r\n\r\n                function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\r\n                    options = options || {};\r\n                    var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\r\n                    var templateDocument = (firstTargetNode || template || {}).ownerDocument;\r\n                    var templateEngineToUse = (options['templateEngine'] || _templateEngine);\r\n                    ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\r\n                    var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\r\n\r\n                    // Loosely check result is an array of DOM nodes\r\n                    if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\r\n                        throw new Error(\"Template engine must return an array of DOM nodes\");\r\n\r\n                    var haveAddedNodesToParent = false;\r\n                    switch (renderMode) {\r\n                        case \"replaceChildren\":\r\n                            ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\r\n                            haveAddedNodesToParent = true;\r\n                            break;\r\n                        case \"replaceNode\":\r\n                            ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\r\n                            haveAddedNodesToParent = true;\r\n                            break;\r\n                        case \"ignoreTargetNode\": break;\r\n                        default:\r\n                            throw new Error(\"Unknown renderMode: \" + renderMode);\r\n                    }\r\n\r\n                    if (haveAddedNodesToParent) {\r\n                        activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\r\n                        if (options['afterRender']) {\r\n                            ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext[options['as'] || '$data']]);\r\n                        }\r\n                        if (renderMode == \"replaceChildren\") {\r\n                            ko.bindingEvent.notify(targetNodeOrNodeArray, ko.bindingEvent.childrenComplete);\r\n                        }\r\n                    }\r\n\r\n                    return renderedNodesArray;\r\n                }\r\n\r\n                function resolveTemplateName(template, data, context) {\r\n                    // The template can be specified as:\r\n                    if (ko.isObservable(template)) {\r\n                        // 1. An observable, with string value\r\n                        return template();\r\n                    } else if (typeof template === 'function') {\r\n                        // 2. A function of (data, context) returning a string\r\n                        return template(data, context);\r\n                    } else {\r\n                        // 3. A string\r\n                        return template;\r\n                    }\r\n                }\r\n\r\n                ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\r\n                    options = options || {};\r\n                    if ((options['templateEngine'] || _templateEngine) == undefined)\r\n                        throw new Error(\"Set a template engine before calling renderTemplate\");\r\n                    renderMode = renderMode || \"replaceChildren\";\r\n\r\n                    if (targetNodeOrNodeArray) {\r\n                        var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\r\n\r\n                        var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\r\n                        var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\r\n\r\n                        return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\r\n                            function () {\r\n                                // Ensure we've got a proper binding context to work with\r\n                                var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\r\n                                    ? dataOrBindingContext\r\n                                    : new ko.bindingContext(dataOrBindingContext, null, null, null, { \"exportDependencies\": true });\r\n\r\n                                var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\r\n                                    renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\r\n\r\n                                if (renderMode == \"replaceNode\") {\r\n                                    targetNodeOrNodeArray = renderedNodesArray;\r\n                                    firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\r\n                                }\r\n                            },\r\n                            null,\r\n                            { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\r\n                        );\r\n                    } else {\r\n                        // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\r\n                        return ko.memoization.memoize(function (domNode) {\r\n                            ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\r\n                        });\r\n                    }\r\n                };\r\n\r\n                ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\r\n                    // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\r\n                    // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\r\n                    var arrayItemContext, asName = options['as'];\r\n\r\n                    // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\r\n                    var executeTemplateForArrayItem = function (arrayValue, index) {\r\n                        // Support selecting template as a function of the data being rendered\r\n                        arrayItemContext = parentBindingContext['createChildContext'](arrayValue, {\r\n                            'as': asName,\r\n                            'noChildContext': options['noChildContext'],\r\n                            'extend': function(context) {\r\n                                context['$index'] = index;\r\n                                if (asName) {\r\n                                    context[asName + \"Index\"] = index;\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\r\n                        return executeTemplate(targetNode, \"ignoreTargetNode\", templateName, arrayItemContext, options);\r\n                    };\r\n\r\n                    // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\r\n                    var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\r\n                        activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\r\n                        if (options['afterRender'])\r\n                            options['afterRender'](addedNodesArray, arrayValue);\r\n\r\n                        // release the \"cache\" variable, so that it can be collected by\r\n                        // the GC when its value isn't used from within the bindings anymore.\r\n                        arrayItemContext = null;\r\n                    };\r\n\r\n                    var setDomNodeChildrenFromArrayMapping = function (newArray, changeList) {\r\n                        // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\r\n                        // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\r\n                        ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, newArray, executeTemplateForArrayItem, options, activateBindingsCallback, changeList]);\r\n                        ko.bindingEvent.notify(targetNode, ko.bindingEvent.childrenComplete);\r\n                    };\r\n\r\n                    var shouldHideDestroyed = (options['includeDestroyed'] === false) || (ko.options['foreachHidesDestroyed'] && !options['includeDestroyed']);\r\n\r\n                    if (!shouldHideDestroyed && !options['beforeRemove'] && ko.isObservableArray(arrayOrObservableArray)) {\r\n                        setDomNodeChildrenFromArrayMapping(arrayOrObservableArray.peek());\r\n\r\n                        var subscription = arrayOrObservableArray.subscribe(function (changeList) {\r\n                            setDomNodeChildrenFromArrayMapping(arrayOrObservableArray(), changeList);\r\n                        }, null, \"arrayChange\");\r\n                        subscription.disposeWhenNodeIsRemoved(targetNode);\r\n\r\n                        return subscription;\r\n                    } else {\r\n                        return ko.dependentObservable(function () {\r\n                            var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\r\n                            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\r\n                                unwrappedArray = [unwrappedArray];\r\n\r\n                            if (shouldHideDestroyed) {\r\n                                // Filter out any entries marked as destroyed\r\n                                unwrappedArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\r\n                                    return item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\r\n                                });\r\n                            }\r\n                            setDomNodeChildrenFromArrayMapping(unwrappedArray);\r\n\r\n                        }, null, { disposeWhenNodeIsRemoved: targetNode });\r\n                    }\r\n                };\r\n\r\n                var templateComputedDomDataKey = ko.utils.domData.nextKey();\r\n                function disposeOldComputedAndStoreNewOne(element, newComputed) {\r\n                    var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\r\n                    if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\r\n                        oldComputed.dispose();\r\n                    ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && (!newComputed.isActive || newComputed.isActive())) ? newComputed : undefined);\r\n                }\r\n\r\n                var cleanContainerDomDataKey = ko.utils.domData.nextKey();\r\n                ko.bindingHandlers['template'] = {\r\n                    'init': function(element, valueAccessor) {\r\n                        // Support anonymous templates\r\n                        var bindingValue = ko.utils.unwrapObservable(valueAccessor());\r\n                        if (typeof bindingValue == \"string\" || 'name' in bindingValue) {\r\n                            // It's a named template - clear the element\r\n                            ko.virtualElements.emptyNode(element);\r\n                        } else if ('nodes' in bindingValue) {\r\n                            // We've been given an array of DOM nodes. Save them as the template source.\r\n                            // There is no known use case for the node array being an observable array (if the output\r\n                            // varies, put that behavior *into* your template - that's what templates are for), and\r\n                            // the implementation would be a mess, so assert that it's not observable.\r\n                            var nodes = bindingValue['nodes'] || [];\r\n                            if (ko.isObservable(nodes)) {\r\n                                throw new Error('The \"nodes\" option must be a plain, non-observable array.');\r\n                            }\r\n\r\n                            // If the nodes are already attached to a KO-generated container, we reuse that container without moving the\r\n                            // elements to a new one (we check only the first node, as the nodes are always moved together)\r\n                            var container = nodes[0] && nodes[0].parentNode;\r\n                            if (!container || !ko.utils.domData.get(container, cleanContainerDomDataKey)) {\r\n                                container = ko.utils.moveCleanedNodesToContainerElement(nodes);\r\n                                ko.utils.domData.set(container, cleanContainerDomDataKey, true);\r\n                            }\r\n\r\n                            new ko.templateSources.anonymousTemplate(element)['nodes'](container);\r\n                        } else {\r\n                            // It's an anonymous template - store the element contents, then clear the element\r\n                            var templateNodes = ko.virtualElements.childNodes(element);\r\n                            if (templateNodes.length > 0) {\r\n                                var container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\r\n                                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\r\n                            } else {\r\n                                throw new Error(\"Anonymous template defined, but no template content was provided\");\r\n                            }\r\n                        }\r\n                        return { 'controlsDescendantBindings': true };\r\n                    },\r\n                    'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n                        var value = valueAccessor(),\r\n                            options = ko.utils.unwrapObservable(value),\r\n                            shouldDisplay = true,\r\n                            templateComputed = null,\r\n                            template;\r\n\r\n                        if (typeof options == \"string\") {\r\n                            template = value;\r\n                            options = {};\r\n                        } else {\r\n                            template = 'name' in options ? options['name'] : element;\r\n\r\n                            // Support \"if\"/\"ifnot\" conditions\r\n                            if ('if' in options)\r\n                                shouldDisplay = ko.utils.unwrapObservable(options['if']);\r\n                            if (shouldDisplay && 'ifnot' in options)\r\n                                shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\r\n\r\n                            // Don't show anything if an empty name is given (see #2446)\r\n                            if (shouldDisplay && !template) {\r\n                                shouldDisplay = false;\r\n                            }\r\n                        }\r\n\r\n                        if ('foreach' in options) {\r\n                            // Render once for each data point (treating data set as empty if shouldDisplay==false)\r\n                            var dataArray = (shouldDisplay && options['foreach']) || [];\r\n                            templateComputed = ko.renderTemplateForEach(template, dataArray, options, element, bindingContext);\r\n                        } else if (!shouldDisplay) {\r\n                            ko.virtualElements.emptyNode(element);\r\n                        } else {\r\n                            // Render once for this single data point (or use the viewModel if no data was provided)\r\n                            var innerBindingContext = bindingContext;\r\n                            if ('data' in options) {\r\n                                innerBindingContext = bindingContext['createChildContext'](options['data'], {\r\n                                    'as': options['as'],\r\n                                    'noChildContext': options['noChildContext'],\r\n                                    'exportDependencies': true\r\n                                });\r\n                            }\r\n                            templateComputed = ko.renderTemplate(template, innerBindingContext, options, element);\r\n                        }\r\n\r\n                        // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\r\n                        disposeOldComputedAndStoreNewOne(element, templateComputed);\r\n                    }\r\n                };\r\n\r\n                // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\r\n                ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\r\n                    var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\r\n\r\n                    if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\r\n                        return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\r\n\r\n                    if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\r\n                        return null; // Named templates can be rewritten, so return \"no error\"\r\n                    return \"This template engine does not support anonymous templates nested within its templates\";\r\n                };\r\n\r\n                ko.virtualElements.allowedBindings['template'] = true;\r\n            })();\r\n\r\n            ko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\r\n            ko.exportSymbol('renderTemplate', ko.renderTemplate);\r\n// Go through the items that have been added and deleted and try to find matches between them.\r\n            ko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\r\n                if (left.length && right.length) {\r\n                    var failedCompares, l, r, leftItem, rightItem;\r\n                    for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\r\n                        for (r = 0; rightItem = right[r]; ++r) {\r\n                            if (leftItem['value'] === rightItem['value']) {\r\n                                leftItem['moved'] = rightItem['index'];\r\n                                rightItem['moved'] = leftItem['index'];\r\n                                right.splice(r, 1);         // This item is marked as moved; so remove it from right list\r\n                                failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\r\n                                break;\r\n                            }\r\n                        }\r\n                        failedCompares += r;\r\n                    }\r\n                }\r\n            };\r\n\r\n            ko.utils.compareArrays = (function () {\r\n                var statusNotInOld = 'added', statusNotInNew = 'deleted';\r\n\r\n                // Simple calculation based on Levenshtein distance.\r\n                function compareArrays(oldArray, newArray, options) {\r\n                    // For backward compatibility, if the third arg is actually a bool, interpret\r\n                    // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\r\n                    options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\r\n                    oldArray = oldArray || [];\r\n                    newArray = newArray || [];\r\n\r\n                    if (oldArray.length < newArray.length)\r\n                        return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\r\n                    else\r\n                        return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\r\n                }\r\n\r\n                function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\r\n                    var myMin = Math.min,\r\n                        myMax = Math.max,\r\n                        editDistanceMatrix = [],\r\n                        smlIndex, smlIndexMax = smlArray.length,\r\n                        bigIndex, bigIndexMax = bigArray.length,\r\n                        compareRange = (bigIndexMax - smlIndexMax) || 1,\r\n                        maxDistance = smlIndexMax + bigIndexMax + 1,\r\n                        thisRow, lastRow,\r\n                        bigIndexMaxForRow, bigIndexMinForRow;\r\n\r\n                    for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\r\n                        lastRow = thisRow;\r\n                        editDistanceMatrix.push(thisRow = []);\r\n                        bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\r\n                        bigIndexMinForRow = myMax(0, smlIndex - 1);\r\n                        for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\r\n                            if (!bigIndex)\r\n                                thisRow[bigIndex] = smlIndex + 1;\r\n                            else if (!smlIndex)  // Top row - transform empty array into new array via additions\r\n                                thisRow[bigIndex] = bigIndex + 1;\r\n                            else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\r\n                                thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\r\n                            else {\r\n                                var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\r\n                                var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\r\n                                thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    var editScript = [], meMinusOne, notInSml = [], notInBig = [];\r\n                    for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\r\n                        meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\r\n                        if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\r\n                            notInSml.push(editScript[editScript.length] = {     // added\r\n                                'status': statusNotInSml,\r\n                                'value': bigArray[--bigIndex],\r\n                                'index': bigIndex });\r\n                        } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\r\n                            notInBig.push(editScript[editScript.length] = {     // deleted\r\n                                'status': statusNotInBig,\r\n                                'value': smlArray[--smlIndex],\r\n                                'index': smlIndex });\r\n                        } else {\r\n                            --bigIndex;\r\n                            --smlIndex;\r\n                            if (!options['sparse']) {\r\n                                editScript.push({\r\n                                    'status': \"retained\",\r\n                                    'value': bigArray[bigIndex] });\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\r\n                    // smlIndexMax keeps the time complexity of this algorithm linear.\r\n                    ko.utils.findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\r\n\r\n                    return editScript.reverse();\r\n                }\r\n\r\n                return compareArrays;\r\n            })();\r\n\r\n            ko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\r\n            (function () {\r\n                // Objective:\r\n                // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\r\n                //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\r\n                // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\r\n                //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\r\n                //   previously mapped - retain those nodes, and just insert/delete other ones\r\n\r\n                // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\r\n                // You can use this, for example, to activate bindings on those nodes.\r\n\r\n                function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\r\n                    // Map this array value inside a dependentObservable so we re-map when any dependency changes\r\n                    var mappedNodes = [];\r\n                    var dependentObservable = ko.dependentObservable(function() {\r\n                        var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\r\n\r\n                        // On subsequent evaluations, just replace the previously-inserted DOM nodes\r\n                        if (mappedNodes.length > 0) {\r\n                            ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\r\n                            if (callbackAfterAddingNodes)\r\n                                ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\r\n                        }\r\n\r\n                        // Replace the contents of the mappedNodes array, thereby updating the record\r\n                        // of which nodes would be deleted if valueToMap was itself later removed\r\n                        mappedNodes.length = 0;\r\n                        ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\r\n                    }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\r\n                    return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\r\n                }\r\n\r\n                var lastMappingResultDomDataKey = ko.utils.domData.nextKey(),\r\n                    deletedItemDummyValue = ko.utils.domData.nextKey();\r\n\r\n                ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes, editScript) {\r\n                    array = array || [];\r\n                    if (typeof array.length == \"undefined\") // Coerce single value into array\r\n                        array = [array];\r\n\r\n                    options = options || {};\r\n                    var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey);\r\n                    var isFirstExecution = !lastMappingResult;\r\n\r\n                    // Build the new mapping result\r\n                    var newMappingResult = [];\r\n                    var lastMappingResultIndex = 0;\r\n                    var currentArrayIndex = 0;\r\n\r\n                    var nodesToDelete = [];\r\n                    var itemsToMoveFirstIndexes = [];\r\n                    var itemsForBeforeRemoveCallbacks = [];\r\n                    var itemsForMoveCallbacks = [];\r\n                    var itemsForAfterAddCallbacks = [];\r\n                    var mapData;\r\n                    var countWaitingForRemove = 0;\r\n\r\n                    function itemAdded(value) {\r\n                        mapData = { arrayEntry: value, indexObservable: ko.observable(currentArrayIndex++) };\r\n                        newMappingResult.push(mapData);\r\n                        if (!isFirstExecution) {\r\n                            itemsForAfterAddCallbacks.push(mapData);\r\n                        }\r\n                    }\r\n\r\n                    function itemMovedOrRetained(oldPosition) {\r\n                        mapData = lastMappingResult[oldPosition];\r\n                        if (currentArrayIndex !== mapData.indexObservable.peek())\r\n                            itemsForMoveCallbacks.push(mapData);\r\n                        // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\r\n                        mapData.indexObservable(currentArrayIndex++);\r\n                        ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\r\n                        newMappingResult.push(mapData);\r\n                    }\r\n\r\n                    function callCallback(callback, items) {\r\n                        if (callback) {\r\n                            for (var i = 0, n = items.length; i < n; i++) {\r\n                                ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\r\n                                    callback(node, i, items[i].arrayEntry);\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (isFirstExecution) {\r\n                        ko.utils.arrayForEach(array, itemAdded);\r\n                    } else {\r\n                        if (!editScript || (lastMappingResult && lastMappingResult['_countWaitingForRemove'])) {\r\n                            // Compare the provided array against the previous one\r\n                            var lastArray = ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; }),\r\n                                compareOptions = {\r\n                                    'dontLimitMoves': options['dontLimitMoves'],\r\n                                    'sparse': true\r\n                                };\r\n                            editScript = ko.utils.compareArrays(lastArray, array, compareOptions);\r\n                        }\r\n\r\n                        for (var i = 0, editScriptItem, movedIndex, itemIndex; editScriptItem = editScript[i]; i++) {\r\n                            movedIndex = editScriptItem['moved'];\r\n                            itemIndex = editScriptItem['index'];\r\n                            switch (editScriptItem['status']) {\r\n                                case \"deleted\":\r\n                                    while (lastMappingResultIndex < itemIndex) {\r\n                                        itemMovedOrRetained(lastMappingResultIndex++);\r\n                                    }\r\n                                    if (movedIndex === undefined) {\r\n                                        mapData = lastMappingResult[lastMappingResultIndex];\r\n\r\n                                        // Stop tracking changes to the mapping for these nodes\r\n                                        if (mapData.dependentObservable) {\r\n                                            mapData.dependentObservable.dispose();\r\n                                            mapData.dependentObservable = undefined;\r\n                                        }\r\n\r\n                                        // Queue these nodes for later removal\r\n                                        if (ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\r\n                                            if (options['beforeRemove']) {\r\n                                                newMappingResult.push(mapData);\r\n                                                countWaitingForRemove++;\r\n                                                if (mapData.arrayEntry === deletedItemDummyValue) {\r\n                                                    mapData = null;\r\n                                                } else {\r\n                                                    itemsForBeforeRemoveCallbacks.push(mapData);\r\n                                                }\r\n                                            }\r\n                                            if (mapData) {\r\n                                                nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    lastMappingResultIndex++;\r\n                                    break;\r\n\r\n                                case \"added\":\r\n                                    while (currentArrayIndex < itemIndex) {\r\n                                        itemMovedOrRetained(lastMappingResultIndex++);\r\n                                    }\r\n                                    if (movedIndex !== undefined) {\r\n                                        itemsToMoveFirstIndexes.push(newMappingResult.length);\r\n                                        itemMovedOrRetained(movedIndex);\r\n                                    } else {\r\n                                        itemAdded(editScriptItem['value']);\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n\r\n                        while (currentArrayIndex < array.length) {\r\n                            itemMovedOrRetained(lastMappingResultIndex++);\r\n                        }\r\n\r\n                        // Record that the current view may still contain deleted items\r\n                        // because it means we won't be able to use a provided editScript.\r\n                        newMappingResult['_countWaitingForRemove'] = countWaitingForRemove;\r\n                    }\r\n\r\n                    // Store a copy of the array items we just considered so we can difference it next time\r\n                    ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\r\n\r\n                    // Call beforeMove first before any changes have been made to the DOM\r\n                    callCallback(options['beforeMove'], itemsForMoveCallbacks);\r\n\r\n                    // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\r\n                    ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\r\n\r\n                    var i, j, lastNode, nodeToInsert, mappedNodes, activeElement;\r\n\r\n                    // Since most browsers remove the focus from an element when it's moved to another location,\r\n                    // save the focused element and try to restore it later.\r\n                    try {\r\n                        activeElement = domNode.ownerDocument.activeElement;\r\n                    } catch(e) {\r\n                        // IE9 throws if you access activeElement during page load (see issue #703)\r\n                    }\r\n\r\n                    // Try to reduce overall moved nodes by first moving the ones that were marked as moved by the edit script\r\n                    if (itemsToMoveFirstIndexes.length) {\r\n                        while ((i = itemsToMoveFirstIndexes.shift()) != undefined) {\r\n                            mapData = newMappingResult[i];\r\n                            for (lastNode = undefined; i; ) {\r\n                                if ((mappedNodes = newMappingResult[--i].mappedNodes) && mappedNodes.length) {\r\n                                    lastNode = mappedNodes[mappedNodes.length-1];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            for (j = 0; nodeToInsert = mapData.mappedNodes[j]; lastNode = nodeToInsert, j++) {\r\n                                ko.virtualElements.insertAfter(domNode, nodeToInsert, lastNode);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\r\n                    for (i = 0; mapData = newMappingResult[i]; i++) {\r\n                        // Get nodes for newly added items\r\n                        if (!mapData.mappedNodes)\r\n                            ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\r\n\r\n                        // Put nodes in the right place if they aren't there already\r\n                        for (j = 0; nodeToInsert = mapData.mappedNodes[j]; lastNode = nodeToInsert, j++) {\r\n                            ko.virtualElements.insertAfter(domNode, nodeToInsert, lastNode);\r\n                        }\r\n\r\n                        // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\r\n                        if (!mapData.initialized && callbackAfterAddingNodes) {\r\n                            callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\r\n                            mapData.initialized = true;\r\n                            lastNode = mapData.mappedNodes[mapData.mappedNodes.length - 1];     // get the last node again since it may have been changed by a preprocessor\r\n                        }\r\n                    }\r\n\r\n                    // Restore the focused element if it had lost focus\r\n                    if (activeElement && domNode.ownerDocument.activeElement != activeElement) {\r\n                        activeElement.focus();\r\n                    }\r\n\r\n                    // If there's a beforeRemove callback, call it after reordering.\r\n                    // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\r\n                    // some sort of animation, which is why we first reorder the nodes that will be removed. If the\r\n                    // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\r\n                    // Perhaps we'll make that change in the future if this scenario becomes more common.\r\n                    callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\r\n\r\n                    // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\r\n                    // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\r\n                    // with an actual item in the array and appear as \"retained\" or \"moved\".\r\n                    for (i = 0; i < itemsForBeforeRemoveCallbacks.length; ++i) {\r\n                        itemsForBeforeRemoveCallbacks[i].arrayEntry = deletedItemDummyValue;\r\n                    }\r\n\r\n                    // Finally call afterMove and afterAdd callbacks\r\n                    callCallback(options['afterMove'], itemsForMoveCallbacks);\r\n                    callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\r\n                }\r\n            })();\r\n\r\n            ko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\r\n            ko.nativeTemplateEngine = function () {\r\n                this['allowTemplateRewriting'] = false;\r\n            }\r\n\r\n            ko.nativeTemplateEngine.prototype = new ko.templateEngine();\r\n            ko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\r\n            ko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\r\n                var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\r\n                    templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\r\n                    templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\r\n\r\n                if (templateNodes) {\r\n                    return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\r\n                } else {\r\n                    var templateText = templateSource['text']();\r\n                    return ko.utils.parseHtmlFragment(templateText, templateDocument);\r\n                }\r\n            };\r\n\r\n            ko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\r\n            ko.setTemplateEngine(ko.nativeTemplateEngine.instance);\r\n\r\n            ko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\r\n            (function() {\r\n                ko.jqueryTmplTemplateEngine = function () {\r\n                    // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\r\n                    // doesn't expose a version number, so we have to infer it.\r\n                    // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\r\n                    // which KO internally refers to as version \"2\", so older versions are no longer detected.\r\n                    var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\r\n                        if (!jQueryInstance || !(jQueryInstance['tmpl']))\r\n                            return 0;\r\n                        // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\r\n                        try {\r\n                            if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\r\n                                // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\r\n                                return 2; // Final version of jquery.tmpl\r\n                            }\r\n                        } catch(ex) { /* Apparently not the version we were looking for */ }\r\n\r\n                        return 1; // Any older version that we don't support\r\n                    })();\r\n\r\n                    function ensureHasReferencedJQueryTemplates() {\r\n                        if (jQueryTmplVersion < 2)\r\n                            throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\r\n                    }\r\n\r\n                    function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\r\n                        return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\r\n                    }\r\n\r\n                    this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\r\n                        templateDocument = templateDocument || document;\r\n                        options = options || {};\r\n                        ensureHasReferencedJQueryTemplates();\r\n\r\n                        // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\r\n                        var precompiled = templateSource['data']('precompiled');\r\n                        if (!precompiled) {\r\n                            var templateText = templateSource['text']() || \"\";\r\n                            // Wrap in \"with($whatever.koBindingContext) { ... }\"\r\n                            templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\r\n\r\n                            precompiled = jQueryInstance['template'](null, templateText);\r\n                            templateSource['data']('precompiled', precompiled);\r\n                        }\r\n\r\n                        var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\r\n                        var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\r\n\r\n                        var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\r\n                        resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\r\n\r\n                        jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\r\n                        return resultNodes;\r\n                    };\r\n\r\n                    this['createJavaScriptEvaluatorBlock'] = function(script) {\r\n                        return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\r\n                    };\r\n\r\n                    this['addTemplate'] = function(templateName, templateMarkup) {\r\n                        document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\r\n                    };\r\n\r\n                    if (jQueryTmplVersion > 0) {\r\n                        jQueryInstance['tmpl']['tag']['ko_code'] = {\r\n                            open: \"__.push($1 || '');\"\r\n                        };\r\n                        jQueryInstance['tmpl']['tag']['ko_with'] = {\r\n                            open: \"with($1) {\",\r\n                            close: \"} \"\r\n                        };\r\n                    }\r\n                };\r\n\r\n                ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\r\n                ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\r\n\r\n                // Use this one by default *only if jquery.tmpl is referenced*\r\n                var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\r\n                if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\r\n                    ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\r\n\r\n                ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\r\n            })();\r\n        }));\r\n    }());\r\n})();\r\n","mage/accordion.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/tabs'\r\n], function ($, tabs) {\r\n    'use strict';\r\n\r\n    $.widget('mage.accordion', tabs, {\r\n        options: {\r\n            active: [0],\r\n            multipleCollapsible: false,\r\n            openOnFocus: false\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _callCollapsible: function () {\r\n            var self = this,\r\n                disabled = false,\r\n                active = false;\r\n\r\n            if (typeof this.options.active === 'string') {\r\n                this.options.active = this.options.active.split(' ').map(function (item) {\r\n                    return parseInt(item, 10);\r\n                });\r\n            }\r\n\r\n            $.each(this.collapsibles, function (i) {\r\n                disabled = active = false;\r\n\r\n                if ($.inArray(i, self.options.disabled) !== -1) {\r\n                    disabled = true;\r\n                }\r\n\r\n                if ($.inArray(i, self.options.active) !== -1) {\r\n                    active = true;\r\n                }\r\n                self._instantiateCollapsible(this, i, active, disabled);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Overwrites default functionality to provide the option to activate/deactivate multiple sections simultaneous\r\n         * @param {*} action\r\n         * @param {*} index\r\n         * @private\r\n         */\r\n        _toggleActivate: function (action, index) {\r\n            var self = this;\r\n\r\n            if ($.isArray(index && this.options.multipleCollapsible)) {\r\n                $.each(index, function () {\r\n                    self.collapsibles.eq(this).collapsible(action);\r\n                });\r\n            } else if (index === undefined && this.options.multipleCollapsible) {\r\n                this.collapsibles.collapsible(action);\r\n            } else {\r\n                this._super(action, index);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * If the Accordion allows multiple section to be active at the same time, if deep linking is used\r\n         * sections that don't contain the id from anchor shouldn't be closed, otherwise the accordion uses the\r\n         * tabs behavior\r\n         * @private\r\n         */\r\n        _handleDeepLinking: function () {\r\n            if (!this.options.multipleCollapsible) {\r\n                this._super();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Prevent default behavior that closes the other sections when one gets activated if the Accordion allows\r\n         * multiple sections simultaneous\r\n         * @private\r\n         */\r\n        _closeOthers: function () {\r\n            var self = this;\r\n\r\n            if (!this.options.multipleCollapsible) {\r\n                $.each(this.collapsibles, function () {\r\n                    $(this).on('beforeOpen', function () {\r\n                        self.collapsibles.not(this).collapsible('deactivate');\r\n                    });\r\n                });\r\n            }\r\n            $.each(this.collapsibles, function () {\r\n                $(this).on('beforeOpen', function () {\r\n                    var section = $(this);\r\n\r\n                    section.addClass('allow').prevAll().addClass('allow');\r\n                    section.nextAll().removeClass('allow');\r\n                });\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.accordion;\r\n});\r\n","mage/bootstrap.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/apply/main',\r\n    'Magento_Ui/js/lib/knockout/bootstrap'\r\n], function ($, mage) {\r\n    'use strict';\r\n\r\n    $.ajaxSetup({\r\n        cache: false\r\n    });\r\n\r\n    /**\r\n     * Init all components defined via data-mage-init attribute.\r\n     * Execute in a separate task to prevent main thread blocking.\r\n     */\r\n    setTimeout(mage.apply);\r\n});\r\n","mage/calendar.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/*eslint max-depth: 0*/\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'jquery-ui-modules/datepicker',\r\n    'jquery-ui-modules/timepicker'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var calendarBasePrototype,\r\n        datepickerPrototype = $.datepicker.constructor.prototype;\r\n\r\n    $.datepicker.markerClassName = '_has-datepicker';\r\n\r\n    /**\r\n     * Extend JQuery date picker prototype with store local time methods\r\n     */\r\n    $.extend(datepickerPrototype, {\r\n        /**\r\n         * Get date/time according to store settings.\r\n         * We use serverTimezoneOffset (in seconds) instead of serverTimezoneSeconds\r\n         * in order to have ability to know actual store time even if page hadn't been reloaded\r\n         * @returns {Date}\r\n         */\r\n        _getTimezoneDate: function (options) {\r\n            // local time in ms\r\n            var ms = Date.now();\r\n\r\n            options = options || $.calendarConfig || {};\r\n\r\n            // Adjust milliseconds according to store timezone offset,\r\n            // mind the GMT zero offset\r\n            if (typeof options.serverTimezoneOffset !== 'undefined') {\r\n                // Make UTC time and add store timezone offset in seconds\r\n                ms += new Date().getTimezoneOffset() * 60 * 1000 + options.serverTimezoneOffset * 1000;\r\n            } else if (typeof options.serverTimezoneSeconds !== 'undefined') {\r\n                //Set milliseconds according to client local timezone offset\r\n                ms = (options.serverTimezoneSeconds + new Date().getTimezoneOffset() * 60) * 1000;\r\n            }\r\n\r\n            return new Date(ms);\r\n        },\r\n\r\n        /**\r\n         * Set date/time according to store settings.\r\n         * @param {String|Object} target - the target input field or division or span\r\n         */\r\n        _setTimezoneDateDatepicker: function (target) {\r\n            this._setDateDatepicker(target, this._getTimezoneDate());\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Widget calendar\r\n     */\r\n    $.widget('mage.calendar', {\r\n        options: {\r\n            autoComplete: true\r\n        },\r\n\r\n        /**\r\n         * Merge global options with options passed to widget invoke\r\n         * @protected\r\n         */\r\n        _create: function () {\r\n            this._enableAMPM();\r\n            this.options = $.extend(\r\n                {},\r\n                $.calendarConfig ? $.calendarConfig : {},\r\n                this.options.showsTime ? {\r\n                    showTime: true,\r\n                    showHour: true,\r\n                    showMinute: true\r\n                } : {},\r\n                this.options\r\n            );\r\n            this._initPicker(this.element);\r\n            this._overwriteGenerateHtml();\r\n        },\r\n\r\n        /**\r\n         * Get picker name\r\n         * @protected\r\n         */\r\n        _picker: function () {\r\n            return this.options.showsTime ? 'datetimepicker' : 'datepicker';\r\n        },\r\n\r\n        /**\r\n         * Fix for Timepicker - Set ampm option for Timepicker if timeformat contains string 'tt'\r\n         * @protected\r\n         */\r\n        _enableAMPM: function () {\r\n            if (this.options.timeFormat && this.options.timeFormat.indexOf('tt') >= 0) {\r\n                this.options.ampm = true;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Wrapper for overwrite jQuery UI datepicker function.\r\n         */\r\n        _overwriteGenerateHtml: function () {\r\n            /**\r\n             * Overwrite jQuery UI datepicker function.\r\n             * Reason: magento date could be set before calendar show\r\n             * but local date will be styled as current in original _generateHTML\r\n             *\r\n             * @param {Object} inst - instance datepicker.\r\n             * @return {String} html template\r\n             */\r\n            $.datepicker.constructor.prototype._generateHTML = function (inst) {\r\n                var today = this._getTimezoneDate(),\r\n                    isRTL = this._get(inst, 'isRTL'),\r\n                    showButtonPanel = this._get(inst, 'showButtonPanel'),\r\n                    hideIfNoPrevNext = this._get(inst, 'hideIfNoPrevNext'),\r\n                    navigationAsDateFormat = this._get(inst, 'navigationAsDateFormat'),\r\n                    numMonths = this._getNumberOfMonths(inst),\r\n                    showCurrentAtPos = this._get(inst, 'showCurrentAtPos'),\r\n                    stepMonths = this._get(inst, 'stepMonths'),\r\n                    isMultiMonth = parseInt(numMonths[0], 10) !== 1 || parseInt(numMonths[1], 10) !== 1,\r\n                    currentDate = this._daylightSavingAdjust(!inst.currentDay ? new Date(9999, 9, 9) :\r\n                        new Date(inst.currentYear, inst.currentMonth, inst.currentDay)),\r\n                    minDate = this._getMinMaxDate(inst, 'min'),\r\n                    maxDate = this._getMinMaxDate(inst, 'max'),\r\n                    drawMonth = inst.drawMonth - showCurrentAtPos,\r\n                    drawYear = inst.drawYear,\r\n                    maxDraw,\r\n                    prevText = this._get(inst, 'prevText'),\r\n                    prev,\r\n                    nextText = this._get(inst, 'nextText'),\r\n                    next,\r\n                    currentText = this._get(inst, 'currentText'),\r\n                    gotoDate,\r\n                    controls,\r\n                    buttonPanel,\r\n                    firstDay,\r\n                    showWeek = this._get(inst, 'showWeek'),\r\n                    dayNames = this._get(inst, 'dayNames'),\r\n                    dayNamesMin = this._get(inst, 'dayNamesMin'),\r\n                    monthNames = this._get(inst, 'monthNames'),\r\n                    monthNamesShort =  this._get(inst, 'monthNamesShort'),\r\n                    beforeShowDay = this._get(inst, 'beforeShowDay'),\r\n                    showOtherMonths = this._get(inst, 'showOtherMonths'),\r\n                    selectOtherMonths = this._get(inst, 'selectOtherMonths'),\r\n                    defaultDate = this._getDefaultDate(inst),\r\n                    html = '',\r\n                    row = 0,\r\n                    col = 0,\r\n                    selectedDate,\r\n                    cornerClass = ' ui-corner-all',\r\n                    group = '',\r\n                    calender = '',\r\n                    dow = 0,\r\n                    thead,\r\n                    day,\r\n                    daysInMonth,\r\n                    leadDays,\r\n                    curRows,\r\n                    numRows,\r\n                    printDate,\r\n                    dRow = 0,\r\n                    tbody,\r\n                    daySettings,\r\n                    otherMonth,\r\n                    unselectable;\r\n\r\n                if (drawMonth < 0) {\r\n                    drawMonth += 12;\r\n                    drawYear--;\r\n                }\r\n\r\n                if (maxDate) {\r\n                    maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(),\r\n                        maxDate.getMonth() - numMonths[0] * numMonths[1] + 1, maxDate.getDate()));\r\n                    maxDraw = minDate && maxDraw < minDate ? minDate : maxDraw;\r\n\r\n                    while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) {\r\n                        drawMonth--;\r\n\r\n                        if (drawMonth < 0) {\r\n                            drawMonth = 11;\r\n                            drawYear--;\r\n\r\n                        }\r\n                    }\r\n                }\r\n                inst.drawMonth = drawMonth;\r\n                inst.drawYear = drawYear;\r\n                prevText = !navigationAsDateFormat ? prevText : this.formatDate(prevText,\r\n                    this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)),\r\n                    this._getFormatConfig(inst));\r\n                prev = this._canAdjustMonth(inst, -1, drawYear, drawMonth) ?\r\n                    '<a class=\"ui-datepicker-prev ui-corner-all\" data-handler=\"prev\" data-event=\"click\"' +\r\n                    ' title=\"' + prevText + '\">' +\r\n                    '<span class=\"ui-icon ui-icon-circle-triangle-' + (isRTL ? 'e' : 'w') + '\">' +\r\n                    '' + prevText + '</span></a>'\r\n                    : hideIfNoPrevNext ? ''\r\n                        :   '<a class=\"ui-datepicker-prev ui-corner-all ui-state-disabled\" title=\"' +\r\n                            '' + prevText + '\"><span class=\"ui-icon ui-icon-circle-triangle-' +\r\n                            '' + (isRTL ? 'e' : 'w') + '\">' + prevText + '</span></a>';\r\n                nextText = !navigationAsDateFormat ?\r\n                    nextText\r\n                    :   this.formatDate(nextText,\r\n                        this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)),\r\n                        this._getFormatConfig(inst));\r\n                next = this._canAdjustMonth(inst, +1, drawYear, drawMonth) ?\r\n                    '<a class=\"ui-datepicker-next ui-corner-all\" data-handler=\"next\" data-event=\"click\"' +\r\n                    'title=\"' + nextText + '\"><span class=\"ui-icon ui-icon-circle-triangle-' +\r\n                    '' + (isRTL ? 'w' : 'e') + '\">' + nextText + '</span></a>'\r\n                    : hideIfNoPrevNext ? ''\r\n                        :   '<a class=\"ui-datepicker-next ui-corner-all ui-state-disabled\" title=\"' + nextText + '\">' +\r\n                            '<span class=\"ui-icon ui-icon-circle-triangle-' + (isRTL ? 'w' : 'e') + '\">' + nextText +\r\n                            '</span></a>';\r\n                gotoDate = this._get(inst, 'gotoCurrent') && inst.currentDay ? currentDate : today;\r\n                currentText = !navigationAsDateFormat ? currentText :\r\n                    this.formatDate(currentText, gotoDate, this._getFormatConfig(inst));\r\n                controls = !inst.inline ?\r\n                    '<button type=\"button\" class=\"ui-datepicker-close ui-state-default ui-priority-primary ' +\r\n                    'ui-corner-all\" data-handler=\"hide\" data-event=\"click\">' +\r\n                    this._get(inst, 'closeText') + '</button>'\r\n                    : '';\r\n                buttonPanel = showButtonPanel ?\r\n                    '<div class=\"ui-datepicker-buttonpane ui-widget-content\">' + (isRTL ? controls : '') +\r\n                    (this._isInRange(inst, gotoDate) ? '<button type=\"button\" class=\"ui-datepicker-current ' +\r\n                    'ui-state-default ui-priority-secondary ui-corner-all\" data-handler=\"today\" data-event=\"click\"' +\r\n                    '>' + currentText + '</button>' : '') + (isRTL ? '' : controls) + '</div>' : '';\r\n                firstDay = parseInt(this._get(inst, 'firstDay'), 10);\r\n                firstDay = isNaN(firstDay) ? 0 : firstDay;\r\n\r\n                for (row = 0; row < numMonths[0]; row++) {\r\n                    this.maxRows = 4;\r\n\r\n                    for (col = 0; col < numMonths[1]; col++) {\r\n                        selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));\r\n\r\n                        calender = '';\r\n\r\n                        if (isMultiMonth) {\r\n                            calender += '<div class=\"ui-datepicker-group';\r\n\r\n                            if (numMonths[1] > 1) {\r\n                                switch (col) {\r\n                                    case 0: calender += ' ui-datepicker-group-first';\r\n                                        cornerClass = ' ui-corner-' + (isRTL ? 'right' : 'left');\r\n                                        break;\r\n\r\n                                    case numMonths[1] - 1: calender += ' ui-datepicker-group-last';\r\n                                        cornerClass = ' ui-corner-' + (isRTL ? 'left' : 'right');\r\n                                        break;\r\n\r\n                                    default: calender += ' ui-datepicker-group-middle'; cornerClass = '';\r\n                                }\r\n                            }\r\n                            calender += '\">';\r\n                        }\r\n                        calender += '<div class=\"ui-datepicker-header ' +\r\n                            'ui-widget-header ui-helper-clearfix' + cornerClass + '\">' +\r\n                            (/all|left/.test(cornerClass) && parseInt(row, 10) === 0 ? isRTL ? next : prev : '') +\r\n                            (/all|right/.test(cornerClass) && parseInt(row, 10) === 0 ? isRTL ? prev : next : '') +\r\n                            this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate,\r\n                            row > 0 || col > 0, monthNames, monthNamesShort) + // draw month headers\r\n                            '</div><table class=\"ui-datepicker-calendar\"><thead>' +\r\n                            '<tr>';\r\n                        thead = showWeek ?\r\n                            '<th class=\"ui-datepicker-week-col\">' + this._get(inst, 'weekHeader') + '</th>' : '';\r\n\r\n                        for (dow = 0; dow < 7; dow++) { // days of the week\r\n                            day = (dow + firstDay) % 7;\r\n                            thead += '<th' + ((dow + firstDay + 6) % 7 >= 5 ?\r\n                                ' class=\"ui-datepicker-week-end\"' : '') + '>' +\r\n                                '<span title=\"' + dayNames[day] + '\">' + dayNamesMin[day] + '</span></th>';\r\n                        }\r\n                        calender += thead + '</tr></thead><tbody>';\r\n                        daysInMonth = this._getDaysInMonth(drawYear, drawMonth);\r\n\r\n                        if (drawYear === inst.selectedYear && drawMonth === inst.selectedMonth) {\r\n                            inst.selectedDay = Math.min(inst.selectedDay, daysInMonth);\r\n                        }\r\n                        leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;\r\n                        curRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate\r\n                        numRows = isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows;\r\n                        this.maxRows = numRows;\r\n                        printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));\r\n\r\n                        for (dRow = 0; dRow < numRows; dRow++) { // create date picker rows\r\n                            calender += '<tr>';\r\n                            tbody = !showWeek ? '' : '<td class=\"ui-datepicker-week-col\">' +\r\n                            this._get(inst, 'calculateWeek')(printDate) + '</td>';\r\n\r\n                            for (dow = 0; dow < 7; dow++) { // create date picker days\r\n                                daySettings = beforeShowDay ?\r\n                                    beforeShowDay.apply(inst.input ? inst.input[0] : null, [printDate]) : [true, ''];\r\n                                otherMonth = printDate.getMonth() !== drawMonth;\r\n                                unselectable = otherMonth && !selectOtherMonths || !daySettings[0] ||\r\n                                minDate && printDate < minDate || maxDate && printDate > maxDate;\r\n                                tbody += '<td class=\"' +\r\n                                ((dow + firstDay + 6) % 7 >= 5 ? ' ui-datepicker-week-end' : '') + // highlight weekends\r\n                                (otherMonth ? ' ui-datepicker-other-month' : '') + // highlight days from other months\r\n                                (printDate.getTime() === selectedDate.getTime() &&\r\n                                drawMonth === inst.selectedMonth && inst._keyEvent || // user pressed key\r\n                                defaultDate.getTime() === printDate.getTime() &&\r\n                                defaultDate.getTime() === selectedDate.getTime() ?\r\n                                    // or defaultDate is current printedDate and defaultDate is selectedDate\r\n                                ' ' + this._dayOverClass : '') + // highlight selected day\r\n                                (unselectable ? ' ' + this._unselectableClass + ' ui-state-disabled' : '') +\r\n                                (otherMonth && !showOtherMonths ? '' : ' ' + daySettings[1] + // highlight custom dates\r\n                                (printDate.getTime() === currentDate.getTime() ? ' ' + this._currentClass : '') +\r\n                                (printDate.getDate() === today.getDate() && printDate.getMonth() === today.getMonth() &&\r\n                                printDate.getYear() === today.getYear() ? ' ui-datepicker-today' : '')) + '\"' +\r\n                                ((!otherMonth || showOtherMonths) && daySettings[2] ?\r\n                                ' title=\"' + daySettings[2] + '\"' : '') + // cell title\r\n                                (unselectable ? '' : ' data-handler=\"selectDay\" data-event=\"click\" data-month=\"' +\r\n                                '' + printDate.getMonth() + '\" data-year=\"' + printDate.getFullYear() + '\"') + '>' +\r\n                                (otherMonth && !showOtherMonths ? '&#xa0;' : // display for other months\r\n                                    unselectable ? '<span class=\"ui-state-default\">' + printDate.getDate() + '</span>'\r\n                                        : '<a class=\"ui-state-default' +\r\n                                    (printDate.getTime() === today.getTime() ? ' ' : '') +\r\n                                    (printDate.getTime() === currentDate.getTime() ? ' ui-state-active' : '') +\r\n                                    (otherMonth ? ' ui-priority-secondary' : '') +\r\n                                    '\" href=\"#\">' + printDate.getDate() + '</a>') + '</td>';\r\n                                printDate.setDate(printDate.getDate() + 1);\r\n                                printDate = this._daylightSavingAdjust(printDate);\r\n                            }\r\n                            calender += tbody + '</tr>';\r\n                        }\r\n                        drawMonth++;\r\n\r\n                        if (drawMonth > 11) {\r\n                            drawMonth = 0;\r\n                            drawYear++;\r\n                        }\r\n                        calender += '</tbody></table>' + (isMultiMonth ? '</div>' +\r\n                        (numMonths[0] > 0 && col === numMonths[1] - 1 ? '<div class=\"ui-datepicker-row-break\"></div>'\r\n                            : '') : '');\r\n                        group += calender;\r\n                    }\r\n                    html += group;\r\n                }\r\n                html += buttonPanel + ($.ui.ie6 && !inst.inline ?\r\n                    '<iframe src=\"javascript:false;\" class=\"ui-datepicker-cover\" frameborder=\"0\"></iframe>' : '');\r\n                inst._keyEvent = false;\r\n\r\n                return html;\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Set current date if the date is not set\r\n         * @protected\r\n         * @param {Object} element\r\n         */\r\n        _setCurrentDate: function (element) {\r\n            if (!element.val()) {\r\n                element[this._picker()]('setTimezoneDate').val('');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Init Datetimepicker\r\n         * @protected\r\n         * @param {Object} element\r\n         */\r\n        _initPicker: function (element) {\r\n            var picker = element[this._picker()](this.options),\r\n                pickerButtonText = picker.next('.ui-datepicker-trigger')\r\n                    .find('img')\r\n                    .attr('title');\r\n\r\n            picker.next('.ui-datepicker-trigger')\r\n                .addClass('v-middle')\r\n                .text('') // Remove jQuery UI datepicker generated image\r\n                .append('<span>' + pickerButtonText + '</span>');\r\n\r\n            $(element).attr('autocomplete', this.options.autoComplete ? 'on' : 'off');\r\n\r\n            this._setCurrentDate(element);\r\n        },\r\n\r\n        /**\r\n         * destroy instance of datetimepicker\r\n         */\r\n        _destroy: function () {\r\n            this.element[this._picker()]('destroy');\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         * Method is kept for backward compatibility and unit-tests acceptance\r\n         * see \\mage\\calendar\\calendar-test.js\r\n         * @return {Object} date\r\n         */\r\n        getTimezoneDate: function () {\r\n            return datepickerPrototype._getTimezoneDate.call(this, this.options);\r\n        }\r\n    });\r\n\r\n    calendarBasePrototype = $.mage.calendar.prototype;\r\n\r\n    /**\r\n     * Extension for Calendar - date and time format convert functionality\r\n     * @var {Object}\r\n     */\r\n    $.widget('mage.calendar', $.extend({}, calendarBasePrototype,\r\n            /** @lends {$.mage.calendar.prototype} */ {\r\n                /**\r\n                 * key - backend format, value - jquery format\r\n                 * @type {Object}\r\n                 * @private\r\n                 */\r\n                dateTimeFormat: {\r\n                    date: {\r\n                        'EEEE': 'DD',\r\n                        'EEE': 'D',\r\n                        'EE': 'D',\r\n                        'E': 'D',\r\n                        'D': 'o',\r\n                        'MMMM': 'MM',\r\n                        'MMM': 'M',\r\n                        'MM': 'mm',\r\n                        'M': 'mm',\r\n                        'yyyy': 'yy',\r\n                        'y': 'yy',\r\n                        'Y': 'yy',\r\n                        'yy': 'yy' // Always long year format on frontend\r\n                    },\r\n                    time: {\r\n                        'a': 'TT'\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Add Date and Time converting to _create method\r\n                 * @protected\r\n                 */\r\n                _create: function () {\r\n                    if (this.options.dateFormat) {\r\n                        this.options.dateFormat = this._convertFormat(this.options.dateFormat, 'date');\r\n                    }\r\n\r\n                    if (this.options.timeFormat) {\r\n                        this.options.timeFormat = this._convertFormat(this.options.timeFormat, 'time');\r\n                    }\r\n                    calendarBasePrototype._create.apply(this, arguments);\r\n                },\r\n\r\n                /**\r\n                 * Converting date or time format\r\n                 * @protected\r\n                 * @param {String} format\r\n                 * @param {String} type\r\n                 * @return {String}\r\n                 */\r\n                _convertFormat: function (format, type) {\r\n                    var symbols = format.match(/([a-z]+)/ig),\r\n                        separators = format.match(/([^a-z]+)/ig),\r\n                        self = this,\r\n                        convertedFormat = '';\r\n\r\n                    if (symbols) {\r\n                        $.each(symbols, function (key, val) {\r\n                            convertedFormat +=\r\n                                (self.dateTimeFormat[type][val] || val) +\r\n                                (separators[key] || '');\r\n                        });\r\n                    }\r\n\r\n                    return convertedFormat;\r\n                }\r\n            })\r\n    );\r\n\r\n    /**\r\n     * Widget dateRange\r\n     * @extends $.mage.calendar\r\n     */\r\n    $.widget('mage.dateRange', $.mage.calendar, {\r\n\r\n        /**\r\n         * creates two instances of datetimepicker for date range selection\r\n         * @protected\r\n         */\r\n        _initPicker: function () {\r\n            var from,\r\n                to;\r\n\r\n            if (this.options.from && this.options.to) {\r\n                from = this.element.find('#' + this.options.from.id);\r\n                to = this.element.find('#' + this.options.to.id);\r\n                this.options.onSelect = $.proxy(function (selectedDate) {\r\n                    to[this._picker()]('option', 'minDate', selectedDate);\r\n                }, this);\r\n                $.mage.calendar.prototype._initPicker.call(this, from);\r\n                from.on('change', $.proxy(function () {\r\n                    to[this._picker()]('option', 'minDate', from[this._picker()]('getDate'));\r\n                }, this));\r\n                this.options.onSelect = $.proxy(function (selectedDate) {\r\n                    from[this._picker()]('option', 'maxDate', selectedDate);\r\n                }, this);\r\n                $.mage.calendar.prototype._initPicker.call(this, to);\r\n                to.on('change', $.proxy(function () {\r\n                    from[this._picker()]('option', 'maxDate', to[this._picker()]('getDate'));\r\n                }, this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * destroy two instances of datetimepicker\r\n         */\r\n        _destroy: function () {\r\n            if (this.options.from) {\r\n                this.element.find('#' + this.options.from.id)[this._picker()]('destroy');\r\n            }\r\n\r\n            if (this.options.to) {\r\n                this.element.find('#' + this.options.to.id)[this._picker()]('destroy');\r\n            }\r\n            this._super();\r\n        }\r\n    });\r\n\r\n    // Overrides the \"today\" button functionality to select today's date when clicked.\r\n    $.datepicker._gotoTodayOriginal = $.datepicker._gotoToday;\r\n\r\n    /**\r\n     * overwrite jQuery UI _showDatepicker function for proper HTML generation conditions.\r\n     *\r\n     */\r\n    $.datepicker._showDatepickerOriginal = $.datepicker._showDatepicker;\r\n\r\n    /**\r\n     * Triggers original method showDataPicker for rendering calendar\r\n     * @param {HTMLObject} input\r\n     * @private\r\n     */\r\n    $.datepicker._showDatepicker = function (input) {\r\n        if (!input.disabled) {\r\n            $.datepicker._showDatepickerOriginal.call(this, input);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * _gotoToday\r\n     * @param {Object} el\r\n     */\r\n    $.datepicker._gotoToday = function (el) {\r\n        //Set date/time according to timezone offset\r\n        $(el).datepicker('setTimezoneDate')\r\n            // To ensure that user can re-select date field without clicking outside it first.\r\n            .trigger('blur').trigger('change');\r\n    };\r\n\r\n    return {\r\n        dateRange:  $.mage.dateRange,\r\n        calendar:   $.mage.calendar\r\n    };\r\n});\r\n","mage/collapsible.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'jquery-ui-modules/core',\r\n    'jquery/jquery-storageapi',\r\n    'mage/mage'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var hideProps = {},\r\n        showProps = {};\r\n\r\n    hideProps.height = 'hide';\r\n    showProps.height = 'show';\r\n\r\n    $.widget('mage.collapsible', {\r\n        options: {\r\n            active: false,\r\n            disabled: false,\r\n            collapsible: true,\r\n            header: '[data-role=title]',\r\n            content: '[data-role=content]',\r\n            trigger: '[data-role=trigger]',\r\n            closedState: null,\r\n            openedState: null,\r\n            disabledState: null,\r\n            ajaxUrlElement: '[data-ajax=true]',\r\n            ajaxContent: false,\r\n            loadingClass: null,\r\n            saveState: false,\r\n            animate: false,\r\n            icons: {\r\n                activeHeader: null,\r\n                header: null\r\n            },\r\n            collateral: {\r\n                element: null,\r\n                openedState: null\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.storage = $.localStorage;\r\n            this.icons = false;\r\n\r\n            if (typeof this.options.icons === 'string') {\r\n                this.options.icons = $.parseJSON(this.options.icons);\r\n            }\r\n\r\n            this._processPanels();\r\n            this._processState();\r\n            this._refresh();\r\n\r\n            if (this.options.icons.header && this.options.icons.activeHeader) {\r\n                this._createIcons();\r\n                this.icons = true;\r\n            }\r\n\r\n            this.element.on('dimensionsChanged', function (e) {\r\n                if (e.target && e.target.classList.contains('active')) {\r\n                    this._scrollToTopIfNotVisible();\r\n                }\r\n            }.bind(this));\r\n\r\n            this._bind('click');\r\n            this._trigger('created');\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _refresh: function () {\r\n            this.trigger.attr('tabIndex', 0);\r\n\r\n            if (this.options.active && !this.options.disabled) {\r\n                if (this.options.openedState) {\r\n                    this.element.addClass(this.options.openedState);\r\n                }\r\n\r\n                if (this.options.collateral.element && this.options.collateral.openedState) {\r\n                    $(this.options.collateral.element).addClass(this.options.collateral.openedState);\r\n                }\r\n\r\n                if (this.options.ajaxContent) {\r\n                    this._loadContent();\r\n                }\r\n                // ARIA (updates aria attributes)\r\n                this.header.attr({\r\n                    'aria-selected': false\r\n                });\r\n            } else if (this.options.disabled) {\r\n                this.disable();\r\n            } else {\r\n                this.content.hide();\r\n\r\n                if (this.options.closedState) {\r\n                    this.element.addClass(this.options.closedState);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Processing the state:\r\n         *     If deep linking is used and the anchor is the id of the content or the content contains this id,\r\n         *     and the collapsible element is a nested one having collapsible parents, in order to see the content,\r\n         *     all the parents must be expanded.\r\n         * @private\r\n         */\r\n        _processState: function () {\r\n            var anchor = window.location.hash,\r\n                isValid = $.mage.isValidSelector(anchor),\r\n                urlPath = window.location.pathname.replace(/\\./g, ''),\r\n                state;\r\n\r\n            this.stateKey = encodeURIComponent(urlPath + this.element.attr('id'));\r\n\r\n            if (isValid &&\r\n                ($(this.content.find(anchor)).length > 0 || this.content.attr('id') === anchor.replace('#', ''))\r\n            ) {\r\n                this.element.parents('[data-collapsible=true]').collapsible('forceActivate');\r\n\r\n                if (!this.options.disabled) {\r\n                    this.options.active = true;\r\n\r\n                    if (this.options.saveState) { //eslint-disable-line max-depth\r\n                        this.storage.set(this.stateKey, true);\r\n                    }\r\n                }\r\n            } else if (this.options.saveState && !this.options.disabled) {\r\n                state = this.storage.get(this.stateKey);\r\n\r\n                if (typeof state === 'undefined' || state === null) {\r\n                    this.storage.set(this.stateKey, this.options.active);\r\n                } else if (state === true) {\r\n                    this.options.active = true;\r\n                } else if (state === false) {\r\n                    this.options.active = false;\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _createIcons: function () {\r\n            var icons = this.options.icons;\r\n\r\n            if (icons) {\r\n                $('<span>')\r\n                    .addClass(icons.header)\r\n                    .attr('data-role', 'icons')\r\n                    .prependTo(this.header);\r\n\r\n                if (this.options.active && !this.options.disabled) {\r\n                    this.header.children('[data-role=icons]')\r\n                        .removeClass(icons.header)\r\n                        .addClass(icons.activeHeader);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _destroyIcons: function () {\r\n            this.header\r\n                .children('[data-role=icons]')\r\n                .remove();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _destroy: function () {\r\n            var options = this.options;\r\n\r\n            this.element.removeAttr('data-collapsible');\r\n\r\n            this.trigger.removeAttr('tabIndex');\r\n\r\n            if (options.openedState) {\r\n                this.element.removeClass(options.openedState);\r\n            }\r\n\r\n            if (this.options.collateral.element && this.options.collateral.openedState) {\r\n                $(this.options.collateral.element).removeClass(this.options.collateral.openedState);\r\n            }\r\n\r\n            if (options.closedState) {\r\n                this.element.removeClass(options.closedState);\r\n            }\r\n\r\n            if (options.disabledState) {\r\n                this.element.removeClass(options.disabledState);\r\n            }\r\n\r\n            if (this.icons) {\r\n                this._destroyIcons();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _processPanels: function () {\r\n            var headers, triggers;\r\n\r\n            this.element.attr('data-collapsible', 'true');\r\n\r\n            if (typeof this.options.header === 'object') {\r\n                this.header = this.options.header;\r\n            } else {\r\n                headers = this.element.find(this.options.header);\r\n\r\n                if (headers.length > 0) {\r\n                    this.header = headers.eq(0);\r\n                } else {\r\n                    this.header = this.element;\r\n                }\r\n            }\r\n\r\n            if (typeof this.options.content === 'object') {\r\n                this.content = this.options.content;\r\n            } else {\r\n                this.content = this.header.next(this.options.content).eq(0);\r\n            }\r\n\r\n            // ARIA (init aria attributes)\r\n            if (this.header.attr('id')) {\r\n                this.content.attr('aria-labelledby', this.header.attr('id'));\r\n            }\r\n\r\n            if (this.content.attr('id')) {\r\n                this.header.attr('aria-controls', this.content.attr('id'));\r\n            }\r\n\r\n            this.header\r\n                .attr({\r\n                    'role': 'tab',\r\n                    'aria-selected': this.options.active,\r\n                    'aria-expanded': this.options.active\r\n                });\r\n\r\n            // For collapsible widget only (not tabs or accordion)\r\n            if (this.header.parent().attr('role') !== 'presentation') {\r\n                this.header\r\n                    .parent()\r\n                    .attr('role', 'tablist');\r\n            }\r\n\r\n            this.content.attr({\r\n                'role': 'tabpanel',\r\n                'aria-hidden': !this.options.active\r\n            });\r\n\r\n            if (typeof this.options.trigger === 'object') {\r\n                this.trigger = this.options.trigger;\r\n            } else {\r\n                triggers = this.header.find(this.options.trigger);\r\n\r\n                if (triggers.length > 0) {\r\n                    this.trigger = triggers.eq(0);\r\n                } else {\r\n                    this.trigger = this.header;\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _keydown: function (event) {\r\n            var keyCode;\r\n\r\n            if (event.altKey || event.ctrlKey) {\r\n                return;\r\n            }\r\n\r\n            keyCode = $.ui.keyCode;\r\n\r\n            switch (event.keyCode) {\r\n                case keyCode.SPACE:\r\n                case keyCode.ENTER:\r\n                    this._eventHandler(event);\r\n                    break;\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _bind: function (event) {\r\n            var self = this;\r\n\r\n            this.events = {\r\n                keydown: '_keydown'\r\n            };\r\n\r\n            if (event) {\r\n                $.each(event.split(' '), function (index, eventName) {\r\n                    self.events[eventName] = '_eventHandler';\r\n                });\r\n            }\r\n            this._off(this.trigger);\r\n\r\n            if (!this.options.disabled) {\r\n                this._on(this.trigger, this.events);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Disable.\r\n         */\r\n        disable: function () {\r\n            this.options.disabled = true;\r\n            this._off(this.trigger);\r\n            this.forceDeactivate();\r\n\r\n            if (this.options.disabledState) {\r\n                this.element.addClass(this.options.disabledState);\r\n            }\r\n            this.trigger.attr('tabIndex', -1);\r\n        },\r\n\r\n        /**\r\n         * Enable.\r\n         */\r\n        enable: function () {\r\n            this.options.disabled = false;\r\n            this._on(this.trigger, this.events);\r\n            this.forceActivate();\r\n\r\n            if (this.options.disabledState) {\r\n                this.element.removeClass(this.options.disabledState);\r\n            }\r\n            this.trigger.attr('tabIndex', 0);\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _eventHandler: function (event) {\r\n\r\n            if (this.options.active && this.options.collapsible) {\r\n                this.deactivate();\r\n            } else {\r\n                this.activate();\r\n\r\n            }\r\n            event.preventDefault();\r\n\r\n        },\r\n\r\n        /**\r\n         * @param {*} prop\r\n         * @private\r\n         */\r\n        _animate: function (prop) {\r\n            var duration,\r\n                easing,\r\n                animate = this.options.animate;\r\n\r\n            if (typeof animate === 'number') {\r\n                duration = animate;\r\n            }\r\n\r\n            if (typeof animate === 'string') {\r\n                animate = $.parseJSON(animate);\r\n            }\r\n            duration = duration || animate.duration;\r\n            easing = animate.easing;\r\n            this.content.animate(prop, duration, easing);\r\n        },\r\n\r\n        /**\r\n         * Deactivate.\r\n         */\r\n        deactivate: function () {\r\n            if (this.options.animate) {\r\n                this._animate(hideProps);\r\n            } else {\r\n                this.content.hide();\r\n            }\r\n            this._close();\r\n        },\r\n\r\n        /**\r\n         * Force deactivate.\r\n         */\r\n        forceDeactivate: function () {\r\n            this.content.hide();\r\n            this._close();\r\n\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _close: function () {\r\n            this.options.active = false;\r\n\r\n            if (this.options.saveState) {\r\n                this.storage.set(this.stateKey, false);\r\n            }\r\n\r\n            if (this.options.openedState) {\r\n                this.element.removeClass(this.options.openedState);\r\n            }\r\n\r\n            if (this.options.collateral.element && this.options.collateral.openedState) {\r\n                $(this.options.collateral.element).removeClass(this.options.collateral.openedState);\r\n            }\r\n\r\n            if (this.options.closedState) {\r\n                this.element.addClass(this.options.closedState);\r\n            }\r\n\r\n            if (this.icons) {\r\n                this.header.children('[data-role=icons]')\r\n                    .removeClass(this.options.icons.activeHeader)\r\n                    .addClass(this.options.icons.header);\r\n            }\r\n\r\n            // ARIA (updates aria attributes)\r\n            this.header.attr({\r\n                'aria-selected': 'false',\r\n                'aria-expanded': 'false'\r\n            });\r\n            this.content.attr({\r\n                'aria-hidden': 'true'\r\n            });\r\n\r\n            this.element.trigger('dimensionsChanged', {\r\n                opened: false\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Activate.\r\n         *\r\n         * @return void;\r\n         */\r\n        activate: function () {\r\n            if (this.options.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.options.animate) {\r\n                this._animate(showProps);\r\n            } else {\r\n                this.content.show();\r\n            }\r\n            this._open();\r\n        },\r\n\r\n        /**\r\n         * Force activate.\r\n         */\r\n        forceActivate: function () {\r\n            if (!this.options.disabled) {\r\n                this.content.show();\r\n                this._open();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _open: function () {\r\n            this.element.trigger('beforeOpen');\r\n            this.options.active = true;\r\n\r\n            if (this.options.ajaxContent) {\r\n                this._loadContent();\r\n            }\r\n\r\n            if (this.options.saveState) {\r\n                this.storage.set(this.stateKey, true);\r\n            }\r\n\r\n            if (this.options.openedState) {\r\n                this.element.addClass(this.options.openedState);\r\n            }\r\n\r\n            if (this.options.collateral.element && this.options.collateral.openedState) {\r\n                $(this.options.collateral.element).addClass(this.options.collateral.openedState);\r\n            }\r\n\r\n            if (this.options.closedState) {\r\n                this.element.removeClass(this.options.closedState);\r\n            }\r\n\r\n            if (this.icons) {\r\n                this.header.children('[data-role=icons]')\r\n                    .removeClass(this.options.icons.header)\r\n                    .addClass(this.options.icons.activeHeader);\r\n            }\r\n\r\n            // ARIA (updates aria attributes)\r\n            this.header.attr({\r\n                'aria-selected': 'true',\r\n                'aria-expanded': 'true'\r\n            });\r\n            this.content.attr({\r\n                'aria-hidden': 'false'\r\n            });\r\n\r\n            this.element.trigger('dimensionsChanged', {\r\n                opened: true\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _loadContent: function () {\r\n            var url = this.element.find(this.options.ajaxUrlElement).attr('href'),\r\n                that = this;\r\n\r\n            if (url) {\r\n                that.xhr = $.get({\r\n                    url: url,\r\n                    dataType: 'html'\r\n                }, function () {\r\n                });\r\n            }\r\n\r\n            if (that.xhr && that.xhr.statusText !== 'canceled') {\r\n                if (that.options.loadingClass) {\r\n                    that.element.addClass(that.options.loadingClass);\r\n                }\r\n                that.content.attr('aria-busy', 'true');\r\n                that.xhr.done(function (response) {\r\n                    setTimeout(function () {\r\n                        that.content.html(response);\r\n                    }, 1);\r\n                });\r\n                that.xhr.always(function (jqXHR, status) {\r\n                    setTimeout(function () {\r\n                        if (status === 'abort') {\r\n                            that.content.stop(false, true);\r\n                        }\r\n\r\n                        if (that.options.loadingClass) {\r\n                            that.element.removeClass(that.options.loadingClass);\r\n                        }\r\n                        that.content.removeAttr('aria-busy');\r\n\r\n                        if (jqXHR === that.xhr) {\r\n                            delete that.xhr;\r\n                        }\r\n                    }, 1);\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _scrollToTopIfNotVisible: function () {\r\n            if (this._isElementOutOfViewport()) {\r\n                this.header[0].scrollIntoView();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         * @return {Boolean}\r\n         */\r\n        _isElementOutOfViewport: function () {\r\n            var headerRect = this.header[0].getBoundingClientRect(),\r\n                contentRect = this.content.get().length ? this.content[0].getBoundingClientRect() : false,\r\n                headerOut,\r\n                contentOut;\r\n\r\n            headerOut = headerRect.bottom - headerRect.height < 0 ||\r\n                headerRect.right - headerRect.width < 0 ||\r\n                headerRect.left + headerRect.width > window.innerWidth ||\r\n                headerRect.top + headerRect.height > window.innerHeight;\r\n\r\n            contentOut = contentRect ? contentRect.bottom - contentRect.height < 0 ||\r\n                contentRect.right - contentRect.width < 0 ||\r\n                contentRect.left + contentRect.width > window.innerWidth ||\r\n                contentRect.top + contentRect.height > window.innerHeight : false;\r\n\r\n            return headerOut ? headerOut : contentOut;\r\n        }\r\n    });\r\n\r\n    return $.mage.collapsible;\r\n});\r\n","mage/common.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'domReady!'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /* Form with auto submit feature */\r\n    $('form[data-auto-submit=\"true\"]').trigger('submit');\r\n\r\n    //Add form keys.\r\n    $(document).on(\r\n        'submit',\r\n        'form',\r\n        function (e) {\r\n            var formKeyElement,\r\n                existingFormKeyElement,\r\n                isKeyPresentInForm,\r\n                isActionExternal,\r\n                baseUrl = window.BASE_URL,\r\n                form = $(e.target),\r\n                formKey = $('input[name=\"form_key\"]').val(),\r\n                formMethod = form.prop('method'),\r\n                formAction = form.prop('action');\r\n\r\n            isActionExternal = formAction.indexOf(baseUrl) !== 0;\r\n\r\n            existingFormKeyElement = form.find('input[name=\"form_key\"]');\r\n            isKeyPresentInForm = existingFormKeyElement.length;\r\n\r\n            /* Verifies that existing auto-added form key is a direct form child element,\r\n               protection from a case when one form contains another form. */\r\n            if (isKeyPresentInForm && existingFormKeyElement.attr('auto-added-form-key') === '1') {\r\n                isKeyPresentInForm = form.find('> input[name=\"form_key\"]').length;\r\n            }\r\n\r\n            if (formKey && !isKeyPresentInForm && !isActionExternal && formMethod !== 'get') {\r\n                formKeyElement = document.createElement('input');\r\n                formKeyElement.setAttribute('type', 'hidden');\r\n                formKeyElement.setAttribute('name', 'form_key');\r\n                formKeyElement.setAttribute('value', formKey);\r\n                formKeyElement.setAttribute('auto-added-form-key', '1');\r\n                form.get(0).appendChild(formKeyElement);\r\n            }\r\n        }\r\n    );\r\n});\r\n","mage/cookies.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/mage',\r\n    'jquery/jquery.cookie'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Helper for cookies manipulation\r\n     * @returns {CookieHelper}\r\n     * @constructor\r\n     */\r\n    var CookieHelper = function () {\r\n\r\n        /**\r\n         * Cookie default values.\r\n         * @type {Object}\r\n         */\r\n        this.defaults = {\r\n            expires: null,\r\n            path: '/',\r\n            domain: null,\r\n            secure: false,\r\n            lifetime: null,\r\n            samesite: 'lax'\r\n        };\r\n\r\n        /**\r\n         * Calculate cookie expiration date based on its lifetime.\r\n         * @param {Object} options - Cookie option values\r\n         * @return {Date|null} Calculated cookie expiration date or null if no lifetime provided.\r\n         * @private\r\n         */\r\n        function lifetimeToExpires(options, defaults) {\r\n            var expires,\r\n                lifetime;\r\n\r\n            lifetime = options.lifetime || defaults.lifetime;\r\n\r\n            if (lifetime && lifetime > 0) {\r\n                expires = options.expires || new Date();\r\n\r\n                return new Date(expires.getTime() + lifetime * 1000);\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        /**\r\n         * Set a cookie's value by cookie name based on optional cookie options.\r\n         * @param {String} name - The name of the cookie.\r\n         * @param {String} value - The cookie's value.\r\n         * @param {Object} options - Optional options (e.g. lifetime, expires, path, etc.)\r\n         */\r\n        this.set = function (name, value, options) {\r\n            var expires,\r\n                path,\r\n                domain,\r\n                secure,\r\n                samesite;\r\n\r\n            options = $.extend({}, this.defaults, options || {});\r\n            expires = lifetimeToExpires(options, this.defaults) || options.expires;\r\n            path = options.path;\r\n            domain = options.domain;\r\n            secure = options.secure;\r\n            samesite = options.samesite;\r\n\r\n            document.cookie = name + '=' + encodeURIComponent(value) +\r\n                (expires ? '; expires=' + expires.toUTCString() :  '') +\r\n                (path ? '; path=' + path : '') +\r\n                (domain ? '; domain=' + domain : '') +\r\n                (secure ? '; secure' : '') +\r\n                '; samesite=' + (samesite ? samesite : 'lax');\r\n        };\r\n\r\n        /**\r\n         * Get a cookie's value by cookie name.\r\n         * @param {String} name  - The name of the cookie.\r\n         * @return {(null|String)}\r\n         */\r\n        this.get = function (name) {\r\n            var arg = name + '=',\r\n                aLength = arg.length,\r\n                cookie = document.cookie,\r\n                cLength = cookie.length,\r\n                i = 0,\r\n                j = 0;\r\n\r\n            while (i < cLength) {\r\n                j = i + aLength;\r\n\r\n                if (cookie.substring(i, j) === arg) {\r\n                    return this.getCookieVal(j);\r\n                }\r\n                i = cookie.indexOf(' ', i) + 1;\r\n\r\n                if (i === 0) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Clear a cookie's value by name.\r\n         * @param {String} name - The name of the cookie being cleared.\r\n         */\r\n        this.clear = function (name) {\r\n            if (this.get(name)) {\r\n                this.set(name, '', {\r\n                    expires: new Date('Jan 01 1970 00:00:01 GMT')\r\n                });\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Return URI decoded cookie component value (e.g. expires, path, etc.) based on a\r\n         * numeric offset in the document's cookie value.\r\n         * @param {Number} offset - Offset into the document's cookie value.\r\n         * @return {String}\r\n         */\r\n        this.getCookieVal = function (offset) {\r\n            var cookie = document.cookie,\r\n                endstr = cookie.indexOf(';', offset);\r\n\r\n            if (endstr === -1) {\r\n                endstr = cookie.length;\r\n            }\r\n\r\n            return decodeURIComponent(cookie.substring(offset, endstr));\r\n        };\r\n\r\n        return this;\r\n    };\r\n\r\n    $.extend(true, $, {\r\n        mage: {\r\n            cookies: new CookieHelper()\r\n        }\r\n    });\r\n\r\n    return function (pageOptions) {\r\n        $.extend($.mage.cookies.defaults, pageOptions);\r\n        $.extend($.cookie.defaults, $.mage.cookies.defaults);\r\n    };\r\n});\r\n","mage/dataPost.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'jquery-ui-modules/widget'\r\n], function ($, mageTemplate, uiConfirm) {\r\n    'use strict';\r\n\r\n    $.widget('mage.dataPost', {\r\n        options: {\r\n            formTemplate: '<form action=\"<%- data.action %>\" method=\"post\">' +\r\n            '<% _.each(data.data, function(value, index) { %>' +\r\n            '<input name=\"<%- index %>\" value=\"<%- value %>\">' +\r\n            '<% }) %></form>',\r\n            postTrigger: ['a[data-post]', 'button[data-post]', 'span[data-post]'],\r\n            formKeyInputSelector: 'input[name=\"form_key\"]'\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _bind: function () {\r\n            var events = {};\r\n\r\n            $.each(this.options.postTrigger, function (index, value) {\r\n                events['click ' + value] = '_postDataAction';\r\n            });\r\n\r\n            this._on(events);\r\n        },\r\n\r\n        /**\r\n         * Handler for click.\r\n         *\r\n         * @param {Object} e\r\n         * @private\r\n         */\r\n        _postDataAction: function (e) {\r\n            var params = $(e.currentTarget).data('post');\r\n\r\n            e.preventDefault();\r\n            this.postData(params);\r\n        },\r\n\r\n        /**\r\n         * Data post action.\r\n         *\r\n         * @param {Object} params\r\n         */\r\n        postData: function (params) {\r\n            var formKey = $(this.options.formKeyInputSelector).val(),\r\n                $form, input;\r\n\r\n            if (formKey) {\r\n                params.data['form_key'] = formKey;\r\n            }\r\n\r\n            $form = $(mageTemplate(this.options.formTemplate, {\r\n                data: params\r\n            }));\r\n\r\n            if (params.files) {\r\n                $form[0].enctype = 'multipart/form-data';\r\n                $.each(params.files, function (key, files) {\r\n                    if (files instanceof FileList) {\r\n                        input = document.createElement('input');\r\n                        input.type = 'file';\r\n                        input.name = key;\r\n                        input.files = files;\r\n                        $form[0].appendChild(input);\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (params.data.confirmation) {\r\n                uiConfirm({\r\n                    content: params.data.confirmationMessage,\r\n                    actions: {\r\n                        /** @inheritdoc */\r\n                        confirm: function () {\r\n                            $form.appendTo('body').hide().trigger('submit');\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                $form.appendTo('body').hide().trigger('submit');\r\n            }\r\n        }\r\n    });\r\n\r\n    $(document).dataPost();\r\n\r\n    return $.mage.dataPost;\r\n});\r\n","mage/decorate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* eslint-disable strict */\r\ndefine([\r\n    'jquery',\r\n    'mage/translate'\r\n], function ($) {\r\n    var methods = {\r\n        /**\r\n         * Decorate a list (e.g. a <ul> containing <li>) recursively if specified.\r\n         * @param {Boolean} isRecursive\r\n         */\r\n        list: function (isRecursive) {\r\n            return this.each(function () {\r\n                var list = $(this),\r\n                    items;\r\n\r\n                if (list.length > 0) {\r\n                    items = typeof isRecursive === 'undefined' || isRecursive ?\r\n                        list.find('li') :\r\n                        list.children();\r\n                    items.decorate('generic', ['odd', 'even', 'last']);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Annotate a set of DOM elements with decorator classes.\r\n         * @param {Array} decoratorParams\r\n         */\r\n        generic: function (decoratorParams) {\r\n            var elements = $(this),\r\n                allSupportedParams;\r\n\r\n            if (elements) {\r\n                allSupportedParams = {\r\n                    even: 'odd', // Flip jQuery odd/even so that index 0 is odd.\r\n                    odd: 'even',\r\n                    last: 'last',\r\n                    first: 'first'\r\n                };\r\n\r\n                decoratorParams = decoratorParams || allSupportedParams;\r\n\r\n                $.each(decoratorParams, function (index, param) {\r\n                    if (param === 'even' || param === 'odd') {\r\n                        elements.filter(':' + param).removeClass('odd even').addClass(allSupportedParams[param]);\r\n                    } else {\r\n                        elements.filter(':' + param).addClass(allSupportedParams[param]);\r\n                    }\r\n                });\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Decorate DOM elements in an HTML table with specified classes.\r\n         * @param {Object} instanceOptions\r\n         */\r\n        table: function (instanceOptions) {\r\n            return this.each(function () {\r\n                var table = $(this),\r\n                    options;\r\n\r\n                if (table.length > 0) {\r\n                    options = {\r\n                        'tbody': false,\r\n                        'tbody tr': ['odd', 'even', 'first', 'last'],\r\n                        'thead tr': ['first', 'last'],\r\n                        'tfoot tr': ['first', 'last'],\r\n                        'tr td': ['last']\r\n                    };\r\n\r\n                    $.extend(options, instanceOptions || {});\r\n\r\n                    $.each(options, function (key, value) {\r\n                        if (options[key]) {\r\n                            if (key === 'tr td') {\r\n                                $.each(table.find('tr'), function () {\r\n                                    $(this).find('td').decorate('generic', options['tr td']);\r\n                                });\r\n                            } else {\r\n                                table.find(key).decorate('generic', value);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Annotate data list elements with CSS classes.\r\n         */\r\n        dataList: function () {\r\n            return this.each(function () {\r\n                var list = $(this);\r\n\r\n                if (list) {\r\n                    list.find('dt').decorate('generic', ['odd', 'even', 'last']);\r\n                    list.find('dd').decorate('generic', ['odd', 'even', 'last']);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {String} method\r\n     * @return {*}\r\n     */\r\n    $.fn.decorate = function (method) {\r\n        var message;\r\n\r\n        if (methods[method]) {\r\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\r\n        } else if (typeof method === 'object' || !method) {\r\n            return methods.init.apply(this, arguments);\r\n        }\r\n\r\n        message = $.mage.__('Method %s does not exist on jQuery.decorate');\r\n        // eslint-disable-next-line jquery-no-event-shorthand\r\n        $.error(message.replace('%s', method));\r\n    };\r\n});\r\n","mage/deletable-item.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * This widget is used to tag a DOM element as deletable. By default, it will use the click event on the item with a\r\n     * data role of delete to trigger the deletion.\r\n     */\r\n    $.widget('mage.deletableItem', {\r\n        options: {\r\n            deleteEvent: 'click',\r\n            deleteSelector: '[data-role=\"delete\"]',\r\n            hiddenClass: 'no-display'\r\n        },\r\n\r\n        /**\r\n         * This method binds elements found in this widget.\r\n         */\r\n        _bind: function () {\r\n            var handlers = {};\r\n\r\n            // since the first handler is dynamic, generate the object using array notation\r\n            handlers[this.options.deleteEvent + ' ' + this.options.deleteSelector] = '_onDeleteClicked';\r\n            handlers.hideDelete = '_onHideDelete';\r\n            handlers.showDelete = '_onShowDelete';\r\n\r\n            this._on(handlers);\r\n        },\r\n\r\n        /**\r\n         * This method constructs a new widget.\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * This method is to initialize the control\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            this._onHideDelete(); // by default, hide the control\r\n        },\r\n\r\n        /**\r\n         * This method removes the entity from the DOM.\r\n         * @private\r\n         */\r\n        _onDeleteClicked: function (e) {\r\n            e.stopPropagation();\r\n            this.element.trigger('deleteItem');\r\n        },\r\n\r\n        /**\r\n         * This method hides the delete capability of this item (i.e. making it not deletable)\r\n         * @private\r\n         */\r\n        _onHideDelete: function () {\r\n            this.element.find(this.options.deleteSelector).addClass(this.options.hiddenClass);\r\n        },\r\n\r\n        /**\r\n         * This method shows the delete capability of this item (i.e. making it deletable)\r\n         * @private\r\n         */\r\n        _onShowDelete: function () {\r\n            this.element.find(this.options.deleteSelector).removeClass(this.options.hiddenClass);\r\n        }\r\n    });\r\n\r\n    return $.mage.deletableItem;\r\n});\r\n","mage/dropdown.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/dialog',\r\n    'mage/translate'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var timer = null;\r\n\r\n    /**\r\n     * Dropdown Widget - this widget is a wrapper for the jQuery UI Dialog\r\n     */\r\n    $.widget('mage.dropdownDialog', $.ui.dialog, {\r\n        options: {\r\n            triggerEvent: 'click',\r\n            triggerClass: null,\r\n            parentClass: null,\r\n            triggerTarget: null,\r\n            defaultDialogClass: 'mage-dropdown-dialog',\r\n            dialogContentClass: null,\r\n            shadowHinter: null,\r\n            closeOnMouseLeave: true,\r\n            closeOnClickOutside: true,\r\n            minHeight: null,\r\n            minWidth: null,\r\n            width: null,\r\n            modal: false,\r\n            timeout: null,\r\n            autoOpen: false,\r\n            createTitleBar: false,\r\n            autoPosition: false,\r\n            autoSize: false,\r\n            draggable: false,\r\n            resizable: false,\r\n            bodyClass: '',\r\n            buttons: [\r\n                {\r\n                    'class': 'action close',\r\n                    'text': $.mage.__('Close'),\r\n\r\n                    /**\r\n                     * Click action.\r\n                     */\r\n                    'click': function () {\r\n                        $(this).dropdownDialog('close');\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n\r\n        /**\r\n         * extend default functionality to bind the opener for dropdown\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var _self = this;\r\n\r\n            this._super();\r\n            this.uiDialog.addClass(this.options.defaultDialogClass);\r\n\r\n            if (_self.options.triggerTarget) {\r\n                $(_self.options.triggerTarget).on(_self.options.triggerEvent, function (event) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n\r\n                    if (!_self._isOpen) {\r\n                        $('.' + _self.options.defaultDialogClass + ' > .ui-dialog-content').dropdownDialog('close');\r\n                        _self.open();\r\n                    } else {\r\n                        _self.close(event);\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (_self.options.shadowHinter) {\r\n                _self.hinter = $('<div class=\"' + _self.options.shadowHinter + '\"></div>');\r\n                _self.element.append(_self.hinter);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Extend default functionality to close the dropdown\r\n         * with custom delay on mouse out and also to close when clicking outside\r\n         */\r\n        open: function () {\r\n            var _self = this;\r\n\r\n            this._super();\r\n\r\n            if (_self.options.dialogContentClass) {\r\n                _self.element.addClass(_self.options.dialogContentClass);\r\n            }\r\n\r\n            if (_self.options.closeOnMouseLeave) {\r\n\r\n                this._mouseEnter(_self.uiDialog);\r\n                this._mouseLeave(_self.uiDialog);\r\n\r\n                if (_self.options.triggerTarget) {\r\n                    this._mouseLeave($(_self.options.triggerTarget));\r\n                }\r\n            }\r\n\r\n            if (_self.options.closeOnClickOutside) {\r\n                $('body').on('click.outsideDropdown', function (event) {\r\n                    if (_self._isOpen && !$(event.target).closest('.ui-dialog').length) {\r\n                        if (timer) {\r\n                            clearTimeout(timer);\r\n                        }\r\n                        _self.close(event);\r\n                    }\r\n                });\r\n            }\r\n            // adding the class on the opener and parent element for dropdown\r\n            if (_self.options.triggerClass) {\r\n                $(_self.options.triggerTarget).addClass(_self.options.triggerClass);\r\n            }\r\n\r\n            if (_self.options.parentClass) {\r\n                $(_self.options.appendTo).addClass(_self.options.parentClass);\r\n            }\r\n\r\n            if (_self.options.bodyClass) {\r\n                $('body').addClass(_self.options.bodyClass);\r\n            }\r\n\r\n            if (_self.options.shadowHinter) {\r\n                _self._setShadowHinterPosition();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * extend default functionality to reset the timer and remove the active class for opener\r\n         */\r\n        close: function () {\r\n            this._super();\r\n\r\n            if (this.options.dialogContentClass) {\r\n                this.element.removeClass(this.options.dialogContentClass);\r\n            }\r\n\r\n            if (this.options.triggerClass) {\r\n                $(this.options.triggerTarget).removeClass(this.options.triggerClass);\r\n            }\r\n\r\n            if (this.options.parentClass) {\r\n                $(this.options.appendTo).removeClass(this.options.parentClass);\r\n            }\r\n\r\n            if (this.options.bodyClass) {\r\n                $('body').removeClass(this.options.bodyClass);\r\n            }\r\n\r\n            if (timer) {\r\n                clearTimeout(timer);\r\n            }\r\n\r\n            if (this.options.triggerTarget) {\r\n                $(this.options.triggerTarget).off('mouseleave');\r\n            }\r\n            this.uiDialog.off('mouseenter');\r\n            this.uiDialog.off('mouseleave');\r\n            $('body').off('click.outsideDropdown');\r\n        },\r\n\r\n        /**\r\n         * _setShadowHinterPosition\r\n         * @private\r\n         */\r\n        _setShadowHinterPosition: function () {\r\n            var _self = this,\r\n                offset;\r\n\r\n            offset = _self.options.position.of.offset().left -\r\n                _self.element.offset().left +\r\n                _self.options.position.of.outerWidth() / 2;\r\n            offset = isNaN(offset) ? 0 : Math.floor(offset);\r\n            _self.hinter.css('left', offset);\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _position: function () {\r\n            if (this.options.autoPosition) {\r\n                this._super();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _createTitlebar: function () {\r\n            if (this.options.createTitleBar) {\r\n                this._super();\r\n            } else {\r\n                // the title bar close button is referenced\r\n                // in _focusTabbable function, so to prevent errors it must be declared\r\n                this.uiDialogTitlebarClose = $('<div></div>');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _size: function () {\r\n            if (this.options.autoSize) {\r\n                this._super();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {Object} handler\r\n         * @private\r\n         */\r\n        _mouseLeave: function (handler) {\r\n            var _self = this;\r\n\r\n            handler.on('mouseleave', function (event) {\r\n                event.stopPropagation();\r\n\r\n                if (_self._isOpen) {\r\n                    if (timer) {\r\n                        clearTimeout(timer);\r\n                    }\r\n                    timer = setTimeout(function (e) {\r\n                        _self.close(e);\r\n                    }, _self.options.timeout);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {Object} handler\r\n         * @private\r\n         */\r\n        _mouseEnter: function (handler) {\r\n            handler.on('mouseenter', function (event) {\r\n                event.stopPropagation();\r\n\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {String} key\r\n         * @param {*} value\r\n         * @private\r\n         */\r\n        _setOption: function (key, value) {\r\n            this._super(key, value);\r\n\r\n            if (key === 'triggerTarget') {\r\n                this.options.triggerTarget = value;\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.dropdownDialog;\r\n});\r\n","mage/dropdowns.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {Object} options\r\n     */\r\n    $.fn.dropdown = function (options) {\r\n        var defaults = {\r\n                parent: null,\r\n                autoclose: true,\r\n                btnArrow: '.arrow',\r\n                menu: '[data-target=\"dropdown\"]',\r\n                activeClass: 'active'\r\n            },\r\n            actionElem = $(this),\r\n            self = this;\r\n\r\n        options = $.extend(defaults, options);\r\n        actionElem = $(this);\r\n        self = this;\r\n\r\n        /**\r\n         * @param {HTMLElement} elem\r\n         */\r\n        this.openDropdown = function (elem) {\r\n            elem\r\n                .addClass(options.activeClass)\r\n                .attr('aria-expanded', true)\r\n                .parent()\r\n                    .addClass(options.activeClass);\r\n\r\n            elem.parent()\r\n                .find(options.menu)\r\n                .attr('aria-hidden', false);\r\n\r\n            $(options.btnArrow, elem).text('-');\r\n        };\r\n\r\n        /**\r\n         * @param {HTMLElement} elem\r\n         */\r\n        this.closeDropdown = function (elem) {\r\n            elem.removeClass(options.activeClass)\r\n                .attr('aria-expanded', false)\r\n                .parent()\r\n                    .removeClass(options.activeClass);\r\n\r\n            elem.parent()\r\n                .find(options.menu)\r\n                .attr('aria-hidden', true);\r\n\r\n            $(options.btnArrow, elem).text('+');\r\n        };\r\n\r\n        /**\r\n         * Reset all dropdowns.\r\n         *\r\n         * @param {Object} param\r\n         */\r\n        this.reset = function (param) {\r\n            var params = param || {},\r\n                dropdowns = params.elems || actionElem;\r\n\r\n            dropdowns.each(function (index, elem) {\r\n                self.closeDropdown($(elem));\r\n            });\r\n        };\r\n\r\n        /* document Event bindings */\r\n        if (options.autoclose === true) {\r\n            $(document).on('click.hideDropdown', this.reset);\r\n            $(document).on('keyup.hideDropdown', function (e) {\r\n                var ESC_CODE = '27';\r\n\r\n                if (e.keyCode == ESC_CODE) { //eslint-disable-line eqeqeq\r\n                    self.reset();\r\n                }\r\n            });\r\n        }\r\n\r\n        if (options.events) {\r\n            $.each(options.events, function (index, event) {\r\n                $(document).on(event.name, event.selector, event.action);\r\n            });\r\n        }\r\n\r\n        return this.each(function () {\r\n            var elem = $(this),\r\n                parent = $(options.parent).length > 0 ? $(options.parent) : elem.parent(),\r\n                menu = $(options.menu, parent) || $('.dropdown-menu', parent);\r\n\r\n            // ARIA (adding aria attributes)\r\n            if (menu.length) {\r\n                elem.attr('aria-haspopup', true);\r\n            }\r\n\r\n            if (!elem.hasClass(options.activeClass)) {\r\n                elem.attr('aria-expanded', false);\r\n                menu.attr('aria-hidden', true);\r\n            } else {\r\n                elem.attr('aria-expanded', true);\r\n                menu.attr('aria-hidden', false);\r\n            }\r\n\r\n            if (!elem.is('a, button')) {\r\n                elem.attr('role', 'button');\r\n                elem.attr('tabindex', 0);\r\n            }\r\n\r\n            if (elem.attr('data-trigger-keypress-button')) {\r\n                elem.on('keypress', function (e) {\r\n                    var keyCode = e.keyCode || e.which,\r\n                        ENTER_CODE = 13;\r\n\r\n                    if (keyCode === ENTER_CODE) {\r\n                        e.preventDefault();\r\n                        elem.trigger('click.toggleDropdown');\r\n                    }\r\n                });\r\n            }\r\n\r\n            elem.on('click.toggleDropdown', function () {\r\n                var el = actionElem;\r\n\r\n                if (options.autoclose === true) {\r\n                    actionElem = $();\r\n                    $(document).trigger('click.hideDropdown');\r\n                    actionElem = el;\r\n                }\r\n\r\n                self[el.hasClass(options.activeClass) ? 'closeDropdown' : 'openDropdown'](elem);\r\n\r\n                return false;\r\n            });\r\n        });\r\n    };\r\n\r\n    return function (data, el) {\r\n        $(el).dropdown(data);\r\n    };\r\n});\r\n","mage/edit-trigger.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery-ui-modules/widget'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    var editTriggerPrototype;\r\n\r\n    $.widget('mage.editTrigger', {\r\n        options: {\r\n            img: '',\r\n            alt: '[TR]',\r\n            template: '#translate-inline-icon',\r\n            zIndex: 2000,\r\n            editSelector: '[data-translate]',\r\n            delay: 2000,\r\n            offsetTop: -3,\r\n            singleElement: true\r\n        },\r\n\r\n        /**\r\n         * editTriger creation\r\n         * @protected\r\n         */\r\n        _create: function () {\r\n            this.tmpl = mageTemplate(this.options.template);\r\n            this._initTrigger();\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         * @private\r\n         */\r\n        _getCss: function () {\r\n            return {\r\n                position: 'absolute',\r\n                cursor: 'pointer',\r\n                display: 'none',\r\n                'z-index': this.options.zIndex\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @param {*} appendTo\r\n         * @return {*|jQuery}\r\n         * @private\r\n         */\r\n        _createTrigger: function (appendTo) {\r\n            var tmpl = this.tmpl({\r\n                data: this.options\r\n            });\r\n\r\n            return $(tmpl)\r\n                .css(this._getCss())\r\n                .data('role', 'edit-trigger-element')\r\n                .appendTo(appendTo);\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _initTrigger: function () {\r\n            this.trigger = this._createTrigger($('body'));\r\n        },\r\n\r\n        /**\r\n         * Bind on mousemove event\r\n         * @protected\r\n         */\r\n        _bind: function () {\r\n            this.trigger.on('click.' + this.widgetName, $.proxy(this._onClick, this));\r\n            this.element.on('mousemove.' + this.widgetName, $.proxy(this._onMouseMove, this));\r\n        },\r\n\r\n        /**\r\n         * Show editTriger\r\n         */\r\n        show: function () {\r\n            if (this.trigger.is(':hidden')) {\r\n                this.trigger.show();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide editTriger\r\n         */\r\n        hide: function () {\r\n            this.currentTarget = null;\r\n\r\n            if (this.trigger && this.trigger.is(':visible')) {\r\n                this.trigger.hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set editTriger position\r\n         * @protected\r\n         */\r\n        _setPosition: function (el) {\r\n            var offset = el.offset();\r\n\r\n            this.trigger.css({\r\n                top: offset.top + el.outerHeight() + this.options.offsetTop,\r\n                left: offset.left\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Show/hide trigger on mouse move.\r\n         *\r\n         * @param {jQuery.Event} e\r\n         * @protected\r\n         */\r\n        _onMouseMove: function (e) {\r\n            var target = $(e.target),\r\n                inner = target.find(this.options.editSelector);\r\n\r\n            if ($(e.target).is('button') && inner.length) {\r\n                target = inner;\r\n            } else if (!target.is(this.trigger) && !target.is(this.options.editSelector)) {\r\n                target = target.parents(this.options.editSelector).first();\r\n            }\r\n\r\n            if (target.length) {\r\n                if (!target.is(this.trigger)) {\r\n                    this._setPosition(target);\r\n                    this.currentTarget = target;\r\n                }\r\n                this.show();\r\n            } else {\r\n                this.hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Trigger event \"edit\" on element for translate.\r\n         *\r\n         * @param {jQuery.Event} e\r\n         * @protected\r\n         */\r\n        _onClick: function (e) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n            $(this.currentTarget).trigger('edit.' + this.widgetName);\r\n            this.hide(true);\r\n        },\r\n\r\n        /**\r\n         * Destroy editTriger\r\n         */\r\n        destroy: function () {\r\n            this.trigger.remove();\r\n            this.element.off('.' + this.widgetName);\r\n\r\n            return $.Widget.prototype.destroy.call(this);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Extention for widget editTrigger - hide trigger with delay\r\n     */\r\n    editTriggerPrototype = $.mage.editTrigger.prototype;\r\n\r\n    $.widget('mage.editTrigger', $.extend({}, editTriggerPrototype, {\r\n        /**\r\n         * Added clear timeout on trigger show\r\n         */\r\n        show: function () {\r\n            editTriggerPrototype.show.apply(this, arguments);\r\n\r\n            if (this.options.delay) {\r\n                this._clearTimer();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Added setTimeout on trigger hide\r\n         */\r\n        hide: function (immediate) {\r\n            if (!immediate && this.options.delay) {\r\n                if (!this.timer) {\r\n                    this.timer = setTimeout($.proxy(function () {\r\n                        editTriggerPrototype.hide.apply(this, arguments);\r\n                        this._clearTimer();\r\n                    }, this), this.options.delay);\r\n                }\r\n            } else {\r\n                editTriggerPrototype.hide.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clear timer\r\n         * @protected\r\n         */\r\n        _clearTimer: function () {\r\n            if (this.timer) {\r\n                clearTimeout(this.timer);\r\n                this.timer = null;\r\n            }\r\n        }\r\n    }));\r\n\r\n    return $.mage.editTrigger;\r\n});\r\n","mage/fieldset-controls.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * This widget will allow a control with the fieldsetResetControl widget attached to reset a set of input fields.\r\n     * The input fields to reset are defined by the inputSelector selector. The widget will store a clone of the fields\r\n     * on create, and on trigger of fieldsetReset event it resets the defined fields. The event is triggered by the\r\n     * reset control widget.\r\n     *\r\n     * For inputs of type file, the whole dom element is replaced as changing the value is a security violation\r\n     * For inputs of type checkbox or radio, the checked attribute is added or removed as appropriate\r\n     * For all others the jquery .val method is used to update to value to the original.\r\n     */\r\n    $.widget('mage.fieldsetControls', {\r\n        original: undefined,\r\n        options: {\r\n            inputSelector: '[data-reset=\"true\"]'\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.original = this.element.find(this.options.inputSelector).clone(true);\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            this._on({\r\n                'fieldsetReset': '_onReset'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} e\r\n         * @private\r\n         */\r\n        _onReset: function (e) {\r\n            var items;\r\n\r\n            e.stopPropagation();\r\n            // find all the ones we have to remove\r\n            items = this.element.find(this.options.inputSelector);\r\n            // loop over replacing each one.\r\n            items.each($.proxy(function (index, item) {\r\n                if ($(item).attr('type') == 'file') { //eslint-disable-line eqeqeq\r\n                    // Replace the current one we found with a clone of the original saved earlier\r\n                    $(item).replaceWith($(this.original[index]).clone(true));\r\n                } else if ($(item).attr('type') == 'checkbox' || $(item).attr('type') == 'radio') { //eslint-disable-line\r\n                    // Return to original state.\r\n                    if ($(this.original[index]).attr('checked') === undefined) {\r\n                        $(item).removeAttr('checked');\r\n                    } else {\r\n                        $(item).attr('checked', $(this.original[index]).attr('checked'));\r\n                    }\r\n                } else {\r\n                    // Replace the value with the original\r\n                    $(item).val($(this.original[index]).val());\r\n                }\r\n            }, this));\r\n        }\r\n    });\r\n\r\n    $.widget('mage.fieldsetResetControl', {\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            this._on({\r\n                click: '_onClick'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} e\r\n         * @private\r\n         */\r\n        _onClick: function (e) {\r\n            e.stopPropagation();\r\n            $(this.element).trigger('fieldsetReset');\r\n        }\r\n    });\r\n\r\n    return {\r\n        fieldsetControls: $.mage.fieldsetControls,\r\n        fieldsetResetControl: $.mage.fieldsetResetControl\r\n    };\r\n});\r\n","mage/ie-class-fixer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    if (navigator.userAgent.match(/Trident.*rv[ :]*11\\./)) {\r\n        document.documentElement.classList.add('ie11');\r\n    }\r\n});\r\n","mage/item-table.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery-ui-modules/widget'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    $.widget('mage.itemTable', {\r\n        options: {\r\n            addBlock: '[data-template=\"add-block\"]',\r\n            addBlockData: {},\r\n            addEvent: 'click',\r\n            addSelector: '[data-role=\"add\"]',\r\n            itemsSelector: '[data-container=\"items\"]',\r\n            keepLastRow: true\r\n        },\r\n\r\n        /**\r\n         * This method adds a new instance of the block to the items.\r\n         * @private\r\n         */\r\n        _add: function () {\r\n            var hideShowDelete,\r\n                deletableItems,\r\n                addedBlock;\r\n\r\n            // adding a new row, so increment the count to give each row a unique index\r\n            this.rowIndex++;\r\n\r\n            // make sure the block data has the rowIndex\r\n            this.options.addBlockData.rowIndex = this.rowIndex;\r\n\r\n            // render the form\r\n            addedBlock = $(this.addBlockTmpl({\r\n                data: this.options.addBlockData\r\n            }));\r\n\r\n            // add the row to the item block\r\n            this.element.find(this.options.itemsSelector).append(addedBlock);\r\n\r\n            // initialize all mage content\r\n            addedBlock.trigger('contentUpdated');\r\n\r\n            // determine all existing items in the collection\r\n            deletableItems = this._getDeletableItems();\r\n\r\n            // for the most part, show the delete mechanism, except in the case where there is only one it should not\r\n            // be deleted\r\n            hideShowDelete = 'showDelete';\r\n\r\n            if (this.options.keepLastRow && deletableItems.length === 1) {\r\n                hideShowDelete = 'hideDelete';\r\n            }\r\n\r\n            // loop through each control and perform that action on the deletable item\r\n            $.each(deletableItems, function (index) {\r\n                $(deletableItems[index]).trigger(hideShowDelete);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * This method binds elements found in this widget.\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            var handlers = {};\r\n\r\n            // since the first handler is dynamic, generate the object using array notation\r\n            handlers[this.options.addEvent + ' ' + this.options.addSelector] = '_add';\r\n            handlers.deleteItem = '_onDeleteItem';\r\n\r\n            this._on(handlers);\r\n        },\r\n\r\n        /**\r\n         * This method constructs a new widget.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n\r\n            this.addBlockTmpl = mageTemplate(this.options.addBlock);\r\n\r\n            // nothing in the table, so indicate that\r\n            this.rowIndex = -1;\r\n\r\n            // make sure the block data is an object\r\n            if (this.options.addBlockData == null || typeof this.options.addBlockData !== 'object') {\r\n                // reset the block data to an empty object\r\n                this.options.addBlockData = {};\r\n            }\r\n\r\n            // add the first row to the table\r\n            this._add();\r\n        },\r\n\r\n        /**\r\n         * This method returns the list of widgets associated with deletable items from the container (direct children\r\n         * only).\r\n         * @private\r\n         */\r\n        _getDeletableItems: function () {\r\n            return this.element.find(this.options.itemsSelector + '> .deletableItem');\r\n        },\r\n\r\n        /**\r\n         * This method removes the item associated with the message.\r\n         * @private\r\n         */\r\n        _onDeleteItem: function (e) {\r\n            var deletableItems;\r\n\r\n            // parent elements don't need to see this event\r\n            e.stopPropagation();\r\n\r\n            // remove the deletable item\r\n            $(e.target).remove();\r\n\r\n            if (this.options.keepLastRow) {\r\n                // determine if there is only one element remaining, in which case, disable the delete mechanism on it\r\n                deletableItems = this._getDeletableItems();\r\n\r\n                if (deletableItems.length === 1) {\r\n                    $(deletableItems[0]).trigger('hideDelete');\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.itemTable;\r\n});\r\n","mage/loader.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery-ui-modules/widget',\r\n    'mage/translate'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    $.widget('mage.loader', {\r\n        loaderStarted: 0,\r\n        options: {\r\n            icon: '',\r\n            texts: {\r\n                loaderText: $.mage.__('Please wait...'),\r\n                imgAlt: $.mage.__('Loading...')\r\n            },\r\n            template:\r\n                '<div class=\"loading-mask\" data-role=\"loader\">' +\r\n                    '<div class=\"loader\">' +\r\n                        '<img alt=\"<%- data.texts.imgAlt %>\" src=\"<%- data.icon %>\">' +\r\n                        '<p><%- data.texts.loaderText %></p>' +\r\n                    '</div>' +\r\n                '</div>'\r\n\r\n        },\r\n\r\n        /**\r\n         * Loader creation\r\n         * @protected\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * Bind on ajax events\r\n         * @protected\r\n         */\r\n        _bind: function () {\r\n            this._on({\r\n                'processStop': 'hide',\r\n                'processStart': 'show',\r\n                'show.loader': 'show',\r\n                'hide.loader': 'hide',\r\n                'contentUpdated.loader': '_contentUpdated'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Verify loader present after content updated\r\n         *\r\n         * This will be cleaned up by the task MAGETWO-11070\r\n         *\r\n         * @param {EventObject} e\r\n         * @private\r\n         */\r\n        _contentUpdated: function (e) {\r\n            this.show(e);\r\n        },\r\n\r\n        /**\r\n         * Show loader\r\n         */\r\n        show: function (e, ctx) {\r\n            this._render();\r\n            this.loaderStarted++;\r\n            this.spinner.show();\r\n\r\n            if (ctx) {\r\n                this.spinner\r\n                    .css({\r\n                        width: ctx.outerWidth(),\r\n                        height: ctx.outerHeight(),\r\n                        position: 'absolute'\r\n                    })\r\n                    .position({\r\n                        my: 'top left',\r\n                        at: 'top left',\r\n                        of: ctx\r\n                    });\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Hide loader\r\n         */\r\n        hide: function () {\r\n            if (this.loaderStarted > 0) {\r\n                this.loaderStarted--;\r\n\r\n                if (this.loaderStarted === 0) {\r\n                    this.spinner.hide();\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Render loader\r\n         * @protected\r\n         */\r\n        _render: function () {\r\n            var html;\r\n\r\n            if (!this.spinnerTemplate) {\r\n                this.spinnerTemplate = mageTemplate(this.options.template);\r\n\r\n                html = $(this.spinnerTemplate({\r\n                    data: this.options\r\n                }));\r\n\r\n                html.prependTo(this.element);\r\n\r\n                this.spinner = html;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Destroy loader\r\n         */\r\n        _destroy: function () {\r\n            this.spinner.remove();\r\n        }\r\n    });\r\n\r\n    /**\r\n     * This widget takes care of registering the needed loader listeners on the body\r\n     */\r\n    $.widget('mage.loaderAjax', {\r\n        options: {\r\n            defaultContainer: '[data-container=body]',\r\n            loadingClass: 'ajax-loading'\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n            // There should only be one instance of this widget, and it should be attached\r\n            // to the body only. Having it on the page twice will trigger multiple processStarts.\r\n            if (window.console && !this.element.is(this.options.defaultContainer) && $.mage.isDevMode(undefined)) {\r\n                console.warn('This widget is intended to be attached to the body, not below.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            $(document).on({\r\n                'ajaxSend': this._onAjaxSend.bind(this),\r\n                'ajaxComplete': this._onAjaxComplete.bind(this)\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {Object} loaderContext\r\n         * @return {*}\r\n         * @private\r\n         */\r\n        _getJqueryObj: function (loaderContext) {\r\n            var ctx;\r\n\r\n            // Check to see if context is jQuery object or not.\r\n            if (loaderContext) {\r\n                if (loaderContext.jquery) {\r\n                    ctx = loaderContext;\r\n                } else {\r\n                    ctx = $(loaderContext);\r\n                }\r\n            } else {\r\n                ctx = $('[data-container=\"body\"]');\r\n            }\r\n\r\n            return ctx;\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} e\r\n         * @param {Object} jqxhr\r\n         * @param {Object} settings\r\n         * @private\r\n         */\r\n        _onAjaxSend: function (e, jqxhr, settings) {\r\n            var ctx;\r\n\r\n            $(this.options.defaultContainer)\r\n                .addClass(this.options.loadingClass)\r\n                .attr({\r\n                    'aria-busy': true\r\n                });\r\n\r\n            if (settings && settings.showLoader) {\r\n                ctx = this._getJqueryObj(settings.loaderContext);\r\n                ctx.trigger('processStart');\r\n\r\n                // Check to make sure the loader is there on the page if not report it on the console.\r\n                // NOTE that this check should be removed before going live. It is just an aid to help\r\n                // in finding the uses of the loader that maybe broken.\r\n                if (window.console && !ctx.parents('[data-role=\"loader\"]').length) {\r\n                    console.warn('Expected to start loader but did not find one in the dom');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} e\r\n         * @param {Object} jqxhr\r\n         * @param {Object} settings\r\n         * @private\r\n         */\r\n        _onAjaxComplete: function (e, jqxhr, settings) {\r\n            $(this.options.defaultContainer)\r\n                .removeClass(this.options.loadingClass)\r\n                .attr('aria-busy', false);\r\n\r\n            if (settings && settings.showLoader) {\r\n                this._getJqueryObj(settings.loaderContext).trigger('processStop');\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return {\r\n        loader: $.mage.loader,\r\n        loaderAjax: $.mage.loaderAjax\r\n    };\r\n});\r\n","mage/mage.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/apply/main'\r\n], function ($, mage) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Main namespace for Magento extensions\r\n     * @type {Object}\r\n     */\r\n    $.mage = $.mage || {};\r\n\r\n    /**\r\n     * Plugin mage, initialize components on elements\r\n     * @param {String} name - Components' path.\r\n     * @param {Object} config - Components' config.\r\n     * @returns {JQuery} Chainable.\r\n     */\r\n    $.fn.mage = function (name, config) {\r\n        config = config || {};\r\n\r\n        this.each(function (index, el) {\r\n            mage.applyFor(el, config, name);\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    $.extend($.mage, {\r\n        /**\r\n         * Handle all components declared via data attribute\r\n         * @return {Object} $.mage\r\n         */\r\n        init: function () {\r\n            mage.apply();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Method handling redirects and page refresh\r\n         * @param {String} url - redirect URL\r\n         * @param {(undefined|String)} type - 'assign', 'reload', 'replace'\r\n         * @param {(undefined|Number)} timeout - timeout in milliseconds before processing the redirect or reload\r\n         * @param {(undefined|Boolean)} forced - true|false used for 'reload' only\r\n         */\r\n        redirect: function (url, type, timeout, forced) {\r\n            var _redirect;\r\n\r\n            forced  = !!forced;\r\n            timeout = timeout || 0;\r\n            type    = type || 'assign';\r\n\r\n            /**\r\n             * @private\r\n             */\r\n            _redirect = function () {\r\n                window.location[type](type === 'reload' ? forced : url);\r\n            };\r\n\r\n            timeout ? setTimeout(_redirect, timeout) : _redirect();\r\n        },\r\n\r\n        /**\r\n         * Checks if provided string is a valid selector.\r\n         * @param {String} selector - Selector to check.\r\n         * @returns {Boolean}\r\n         */\r\n        isValidSelector: function (selector) {\r\n            try {\r\n                document.querySelector(selector);\r\n\r\n                return true;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Init components inside of dynamically updated elements\r\n     */\r\n    $('body').on('contentUpdated', function () {\r\n        if (mage) {\r\n            mage.apply();\r\n        }\r\n    });\r\n\r\n    return $.mage;\r\n});\r\n","mage/menu.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'matchMedia',\r\n    'jquery-ui-modules/menu',\r\n    'mage/translate'\r\n], function ($, mediaCheck) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Menu Widget - this widget is a wrapper for the jQuery UI Menu\r\n     */\r\n    $.widget('mage.menu', $.ui.menu, {\r\n        options: {\r\n            responsive: false,\r\n            expanded: false,\r\n            showDelay: 42,\r\n            hideDelay: 300,\r\n            delay: 0,\r\n            mediaBreakpoint: '(max-width: 768px)'\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var self = this;\r\n\r\n            this.delay = this.options.delay;\r\n\r\n            this._super();\r\n            $(window).on('resize', function () {\r\n                self.element.find('.submenu-reverse').removeClass('submenu-reverse');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            this._super();\r\n\r\n            if (this.options.expanded === true) {\r\n                this.isExpanded();\r\n            }\r\n\r\n            if (this.options.responsive === true) {\r\n                mediaCheck({\r\n                    media: this.options.mediaBreakpoint,\r\n                    entry: $.proxy(function () {\r\n                        this._toggleMobileMode();\r\n                    }, this),\r\n                    exit: $.proxy(function () {\r\n                        this._toggleDesktopMode();\r\n                    }, this)\r\n                });\r\n            }\r\n\r\n            this._assignControls()._listen();\r\n            this._setActiveMenu();\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         * @private\r\n         */\r\n        _assignControls: function () {\r\n            this.controls = {\r\n                toggleBtn: $('[data-action=\"toggle-nav\"]')\r\n            };\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _listen: function () {\r\n            var controls = this.controls,\r\n                toggle = this.toggle;\r\n\r\n            controls.toggleBtn.off('click');\r\n            controls.toggleBtn.on('click', toggle.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Toggle.\r\n         */\r\n        toggle: function () {\r\n            var html = $('html');\r\n\r\n            if (html.hasClass('nav-open')) {\r\n                html.removeClass('nav-open');\r\n                setTimeout(function () {\r\n                    html.removeClass('nav-before-open');\r\n                }, this.options.hideDelay);\r\n            } else {\r\n                html.addClass('nav-before-open');\r\n                setTimeout(function () {\r\n                    html.addClass('nav-open');\r\n                }, this.options.showDelay);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Tries to figure out the active category for current page and add appropriate classes:\r\n         *  - 'active' class for active category\r\n         *  - 'has-active' class for all parents of active category\r\n         *\r\n         *  First, checks whether current URL is URL of category page,\r\n         *  otherwise tries to retrieve category URL in case of current URL is product view page URL\r\n         *  which has category tree path in it.\r\n         *\r\n         * @return void\r\n         * @private\r\n         */\r\n        _setActiveMenu: function () {\r\n            var currentUrl = window.location.href.split('?')[0];\r\n\r\n            if (!this._setActiveMenuForCategory(currentUrl)) {\r\n                this._setActiveMenuForProduct(currentUrl);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Looks for category with provided URL and adds 'active' CSS class to it if it was not set before.\r\n         * If menu item has parent categories, sets 'has-active' class to all af them.\r\n         *\r\n         * @param {String} url - possible category URL\r\n         * @returns {Boolean} - true if active category was founded by provided URL, otherwise return false\r\n         * @private\r\n         */\r\n        _setActiveMenuForCategory: function (url) {\r\n            var activeCategoryLink = this.element.find('a[href=\"' + url + '\"]'),\r\n                classes,\r\n                classNav;\r\n\r\n            if (!activeCategoryLink || !activeCategoryLink.hasClass('ui-menu-item-wrapper')) {\r\n\r\n                //category was not found by provided URL\r\n                return false;\r\n            } else if (!activeCategoryLink.parent().hasClass('active')) {\r\n                activeCategoryLink.parent().addClass('active');\r\n                classes = activeCategoryLink.parent().attr('class');\r\n                classNav = classes.match(/(nav\\-)[0-9]+(\\-[0-9]+)+/gi);\r\n\r\n                if (classNav) {\r\n                    this._setActiveParent(classNav[0]);\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Sets 'has-active' CSS class to all parent categories which have part of provided class in childClassName\r\n         *\r\n         * @example\r\n         *  childClassName - 'nav-1-2-3'\r\n         *  CSS class 'has-active' will be added to categories have 'nav-1-2' and 'nav-1' classes\r\n         *\r\n         * @param {String} childClassName - Class name of active category <li> element\r\n         * @return void\r\n         * @private\r\n         */\r\n        _setActiveParent: function (childClassName) {\r\n            var parentElement,\r\n                parentClass = childClassName.substr(0, childClassName.lastIndexOf('-'));\r\n\r\n            if (parentClass.lastIndexOf('-') !== -1) {\r\n                parentElement = this.element.find('.' + parentClass);\r\n\r\n                if (parentElement) {\r\n                    parentElement.addClass('has-active');\r\n                }\r\n                this._setActiveParent(parentClass);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Tries to retrieve category URL from current URL and mark this category as active\r\n         * @see _setActiveMenuForCategory(url)\r\n         *\r\n         * @example\r\n         *  currentUrl - http://magento.com/category1/category12/product.html,\r\n         *  category URLs has extensions .phtml - http://magento.com/category1.phtml\r\n         *  method sets active category which has URL http://magento.com/category1/category12.phtml\r\n         *\r\n         * @param {String} currentUrl - current page URL without parameters\r\n         * @return void\r\n         * @private\r\n         */\r\n        _setActiveMenuForProduct: function (currentUrl) {\r\n            var categoryUrlExtension,\r\n                lastUrlSection,\r\n                possibleCategoryUrl,\r\n                //retrieve first category URL to know what extension is used for category URLs\r\n                firstCategoryUrl = this.element.find('> li a').attr('href');\r\n\r\n            if (firstCategoryUrl) {\r\n                lastUrlSection = firstCategoryUrl.substr(firstCategoryUrl.lastIndexOf('/'));\r\n                categoryUrlExtension = lastUrlSection.lastIndexOf('.') !== -1 ?\r\n                    lastUrlSection.substr(lastUrlSection.lastIndexOf('.')) : '';\r\n\r\n                possibleCategoryUrl = currentUrl.substr(0, currentUrl.lastIndexOf('/')) + categoryUrlExtension;\r\n                this._setActiveMenuForCategory(possibleCategoryUrl);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add class for expanded option.\r\n         */\r\n        isExpanded: function () {\r\n            var subMenus = this.element.find(this.options.menus),\r\n                expandedMenus = subMenus.find(this.options.menus);\r\n\r\n            expandedMenus.addClass('expanded');\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _activate: function (event) {\r\n            window.location.href = this.active.find('> a').attr('href');\r\n            this.collapseAll(event);\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _keydown: function (event) {\r\n            var match, prev, character, skip, regex,\r\n                preventDefault = true;\r\n\r\n            /* eslint-disable max-depth */\r\n            /**\r\n             * @param {String} value\r\n             */\r\n            function escape(value) {\r\n                return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\r\n            }\r\n\r\n            if (this.active.closest(this.options.menus).attr('aria-expanded') != 'true') { //eslint-disable-line eqeqeq\r\n\r\n                switch (event.keyCode) {\r\n                    case $.ui.keyCode.PAGE_UP:\r\n                        this.previousPage(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.PAGE_DOWN:\r\n                        this.nextPage(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.HOME:\r\n                        this._move('first', 'first', event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.END:\r\n                        this._move('last', 'last', event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.UP:\r\n                        this.previous(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.DOWN:\r\n                        if (this.active && !this.active.is('.ui-state-disabled')) {\r\n                            this.expand(event);\r\n                        }\r\n                        break;\r\n\r\n                    case $.ui.keyCode.LEFT:\r\n                        this.previous(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.RIGHT:\r\n                        this.next(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.ENTER:\r\n                    case $.ui.keyCode.SPACE:\r\n                        this._activate(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.ESCAPE:\r\n                        this.collapse(event);\r\n                        break;\r\n                    default:\r\n                        preventDefault = false;\r\n                        prev = this.previousFilter || '';\r\n                        character = String.fromCharCode(event.keyCode);\r\n                        skip = false;\r\n\r\n                        clearTimeout(this.filterTimer);\r\n\r\n                        if (character === prev) {\r\n                            skip = true;\r\n                        } else {\r\n                            character = prev + character;\r\n                        }\r\n\r\n                        regex = new RegExp('^' + escape(character), 'i');\r\n                        match = this.activeMenu.children('.ui-menu-item').filter(function () {\r\n                            return regex.test($(this).children('a').text());\r\n                        });\r\n                        match = skip && match.index(this.active.next()) !== -1 ?\r\n                            this.active.nextAll('.ui-menu-item') :\r\n                            match;\r\n\r\n                        // If no matches on the current filter, reset to the last character pressed\r\n                        // to move down the menu to the first item that starts with that character\r\n                        if (!match.length) {\r\n                            character = String.fromCharCode(event.keyCode);\r\n                            regex = new RegExp('^' + escape(character), 'i');\r\n                            match = this.activeMenu.children('.ui-menu-item').filter(function () {\r\n                                return regex.test($(this).children('a').text());\r\n                            });\r\n                        }\r\n\r\n                        if (match.length) {\r\n                            this.focus(event, match);\r\n\r\n                            if (match.length > 1) {\r\n                                this.previousFilter = character;\r\n                                this.filterTimer = this._delay(function () {\r\n                                    delete this.previousFilter;\r\n                                }, 1000);\r\n                            } else {\r\n                                delete this.previousFilter;\r\n                            }\r\n                        } else {\r\n                            delete this.previousFilter;\r\n                        }\r\n                }\r\n            } else {\r\n                switch (event.keyCode) {\r\n                    case $.ui.keyCode.DOWN:\r\n                        this.next(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.UP:\r\n                        this.previous(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.RIGHT:\r\n                        if (this.active && !this.active.is('.ui-state-disabled')) {\r\n                            this.expand(event);\r\n                        }\r\n                        break;\r\n\r\n                    case $.ui.keyCode.ENTER:\r\n                    case $.ui.keyCode.SPACE:\r\n                        this._activate(event);\r\n                        break;\r\n\r\n                    case $.ui.keyCode.LEFT:\r\n                    case $.ui.keyCode.ESCAPE:\r\n                        this.collapse(event);\r\n                        break;\r\n                    default:\r\n                        preventDefault = false;\r\n                        prev = this.previousFilter || '';\r\n                        character = String.fromCharCode(event.keyCode);\r\n                        skip = false;\r\n\r\n                        clearTimeout(this.filterTimer);\r\n\r\n                        if (character === prev) {\r\n                            skip = true;\r\n                        } else {\r\n                            character = prev + character;\r\n                        }\r\n\r\n                        regex = new RegExp('^' + escape(character), 'i');\r\n                        match = this.activeMenu.children('.ui-menu-item').filter(function () {\r\n                            return regex.test($(this).children('a').text());\r\n                        });\r\n                        match = skip && match.index(this.active.next()) !== -1 ?\r\n                            this.active.nextAll('.ui-menu-item') :\r\n                            match;\r\n\r\n                        // If no matches on the current filter, reset to the last character pressed\r\n                        // to move down the menu to the first item that starts with that character\r\n                        if (!match.length) {\r\n                            character = String.fromCharCode(event.keyCode);\r\n                            regex = new RegExp('^' + escape(character), 'i');\r\n                            match = this.activeMenu.children('.ui-menu-item').filter(function () {\r\n                                return regex.test($(this).children('a').text());\r\n                            });\r\n                        }\r\n\r\n                        if (match.length) {\r\n                            this.focus(event, match);\r\n\r\n                            if (match.length > 1) {\r\n                                this.previousFilter = character;\r\n                                this.filterTimer = this._delay(function () {\r\n                                    delete this.previousFilter;\r\n                                }, 1000);\r\n                            } else {\r\n                                delete this.previousFilter;\r\n                            }\r\n                        } else {\r\n                            delete this.previousFilter;\r\n                        }\r\n                }\r\n            }\r\n\r\n            /* eslint-enable max-depth */\r\n            if (preventDefault) {\r\n                event.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _toggleMobileMode: function () {\r\n            var subMenus;\r\n\r\n            $(this.element).off('mouseenter mouseleave');\r\n            this._on({\r\n\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                'click .ui-menu-item:has(a)': function (event) {\r\n                    var target;\r\n\r\n                    event.preventDefault();\r\n                    target = $(event.target).closest('.ui-menu-item');\r\n                    target.get(0).scrollIntoView();\r\n\r\n                    if (!target.hasClass('level-top') || !target.has('.ui-menu').length) {\r\n                        window.location.href = target.find('> a').attr('href');\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                'click .ui-menu-item:has(.ui-state-active)': function (event) {\r\n                    this.collapseAll(event, true);\r\n                }\r\n            });\r\n\r\n            subMenus = this.element.find('.level-top');\r\n            $.each(subMenus, $.proxy(function (index, item) {\r\n                var category = $(item).find('> a span').not('.ui-menu-icon').text(),\r\n                    categoryUrl = $(item).find('> a').attr('href'),\r\n                    menu = $(item).find('> .ui-menu');\r\n\r\n                this.categoryLink = $('<a>')\r\n                    .attr('href', categoryUrl)\r\n                    .text($.mage.__('All %1').replace('%1', category));\r\n\r\n                this.categoryParent = $('<li>')\r\n                    .addClass('ui-menu-item all-category')\r\n                    .html(this.categoryLink);\r\n\r\n                if (menu.find('.all-category').length === 0) {\r\n                    menu.prepend(this.categoryParent);\r\n                }\r\n\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _toggleDesktopMode: function () {\r\n            var categoryParent, html;\r\n\r\n            $(this.element).off('click mousedown mouseenter mouseleave');\r\n            this._on({\r\n\r\n                /**\r\n                 * Prevent focus from sticking to links inside menu after clicking\r\n                 * them (focus should always stay on UL during navigation).\r\n                 */\r\n                'mousedown .ui-menu-item > a': function (event) {\r\n                    event.preventDefault();\r\n                },\r\n\r\n                /**\r\n                 * Prevent focus from sticking to links inside menu after clicking\r\n                 * them (focus should always stay on UL during navigation).\r\n                 */\r\n                'click .ui-state-disabled > a': function (event) {\r\n                    event.preventDefault();\r\n                },\r\n\r\n                /**\r\n                 * @param {jQuer.Event} event\r\n                 */\r\n                'click .ui-menu-item:has(a)': function (event) {\r\n                    var target = $(event.target).closest('.ui-menu-item');\r\n\r\n                    if (!this.mouseHandled && target.not('.ui-state-disabled').length) {\r\n                        this.select(event);\r\n\r\n                        // Only set the mouseHandled flag if the event will bubble, see #9469.\r\n                        if (!event.isPropagationStopped()) {\r\n                            this.mouseHandled = true;\r\n                        }\r\n\r\n                        // Open submenu on click\r\n                        if (target.has('.ui-menu').length) {\r\n                            this.expand(event);\r\n                        } else if (!this.element.is(':focus') &&\r\n                            $(this.document[0].activeElement).closest('.ui-menu').length\r\n                        ) {\r\n                            // Redirect focus to the menu\r\n                            this.element.trigger('focus', [true]);\r\n\r\n                            // If the active item is on the top level, let it stay active.\r\n                            // Otherwise, blur the active item since it is no longer visible.\r\n                            if (this.active && this.active.parents('.ui-menu').length === 1) { //eslint-disable-line\r\n                                clearTimeout(this.timer);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                'mouseenter .ui-menu-item': function (event) {\r\n                    var target = $(event.currentTarget),\r\n                        submenu = this.options.menus,\r\n                        ulElement,\r\n                        ulElementWidth,\r\n                        width,\r\n                        targetPageX,\r\n                        rightBound;\r\n\r\n                    if (target.has(submenu)) {\r\n                        ulElement = target.find(submenu);\r\n                        ulElementWidth = ulElement.outerWidth(true);\r\n                        width = target.outerWidth() * 2;\r\n                        targetPageX = target.offset().left;\r\n                        rightBound = $(window).width();\r\n\r\n                        if (ulElementWidth + width + targetPageX > rightBound) {\r\n                            ulElement.addClass('submenu-reverse');\r\n                        }\r\n\r\n                        if (targetPageX - ulElementWidth < 0) {\r\n                            ulElement.removeClass('submenu-reverse');\r\n                        }\r\n                    }\r\n\r\n                    // Remove ui-state-active class from siblings of the newly focused menu item\r\n                    // to avoid a jump caused by adjacent elements both having a class with a border\r\n                    target.siblings().children('.ui-state-active').removeClass('ui-state-active');\r\n                    this.focus(event, target);\r\n                },\r\n\r\n                /**\r\n                 * @param {jQuery.Event} event\r\n                 */\r\n                'mouseleave': function (event) {\r\n                    this.collapseAll(event, true);\r\n                },\r\n\r\n                /**\r\n                 * Mouse leave.\r\n                 */\r\n                'mouseleave .ui-menu': 'collapseAll'\r\n            });\r\n\r\n            categoryParent = this.element.find('.all-category');\r\n            html = $('html');\r\n\r\n            categoryParent.remove();\r\n\r\n            if (html.hasClass('nav-open')) {\r\n                html.removeClass('nav-open');\r\n                setTimeout(function () {\r\n                    html.removeClass('nav-before-open');\r\n                }, this.options.hideDelay);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {*} handler\r\n         * @param {Number} delay\r\n         * @return {Number}\r\n         * @private\r\n         */\r\n        _delay: function (handler, delay) {\r\n            var instance = this,\r\n\r\n                /**\r\n                 * @return {*}\r\n                 */\r\n                handlerProxy = function () {\r\n                    return (typeof handler === 'string' ? instance[handler] : handler).apply(instance, arguments);\r\n                };\r\n\r\n            return setTimeout(handlerProxy, delay || 0);\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         */\r\n        expand: function (event) {\r\n            var newItem = this.active &&\r\n                this.active\r\n                    .children('.ui-menu')\r\n                    .children('.ui-menu-item')\r\n                    .first();\r\n\r\n            if (newItem && newItem.length) {\r\n                if (newItem.closest('.ui-menu').is(':visible') &&\r\n                    newItem.closest('.ui-menu').has('.all-categories')\r\n                ) {\r\n                    return;\r\n                }\r\n\r\n                // remove the active state class from the siblings\r\n                this.active.siblings().children('.ui-state-active').removeClass('ui-state-active');\r\n\r\n                this._open(newItem.parent());\r\n\r\n                // Delay so Firefox will not hide activedescendant change in expanding submenu from AT\r\n                this._delay(function () {\r\n                    this.focus(event, newItem);\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         */\r\n        select: function (event) {\r\n            var ui;\r\n\r\n            this.active = this.active || $(event.target).closest('.ui-menu-item');\r\n\r\n            if (this.active.is('.all-category')) {\r\n                this.active = $(event.target).closest('.ui-menu-item');\r\n            }\r\n            ui = {\r\n                item: this.active\r\n            };\r\n\r\n            if (!this.active.has('.ui-menu').length) {\r\n                this.collapseAll(event, true);\r\n            }\r\n            this._trigger('select', event, ui);\r\n        }\r\n    });\r\n\r\n    $.widget('mage.navigation', $.mage.menu, {\r\n        options: {\r\n            responsiveAction: 'wrap', //option for responsive handling\r\n            maxItems: null, //option to set max number of menu items\r\n            container: '#menu', //container to check against navigation length\r\n            moreText: $.mage.__('more'),\r\n            breakpoint: 768\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            var that, responsive;\r\n\r\n            this._super();\r\n\r\n            that = this;\r\n            responsive = this.options.responsiveAction;\r\n\r\n            this.element\r\n                .addClass('ui-menu-responsive')\r\n                .attr('responsive', 'main');\r\n\r\n            this.setupMoreMenu();\r\n            this.setMaxItems();\r\n\r\n            //check responsive option\r\n            if (responsive == 'onResize') { //eslint-disable-line eqeqeq\r\n                $(window).on('resize', function () {\r\n                    if ($(window).width() > that.options.breakpoint) {\r\n                        that._responsive();\r\n                        $('[responsive=more]').show();\r\n                    } else {\r\n                        that.element.children().show();\r\n                        $('[responsive=more]').hide();\r\n                    }\r\n                });\r\n            } else if (responsive == 'onReload') { //eslint-disable-line eqeqeq\r\n                this._responsive();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Setup more menu.\r\n         */\r\n        setupMoreMenu: function () {\r\n            var moreListItems = this.element.children().clone(),\r\n                moreLink = $('<a>' + this.options.moreText + '</a>');\r\n\r\n            moreListItems.hide();\r\n\r\n            moreLink.attr('href', '#');\r\n\r\n            this.moreItemsList = $('<ul>')\r\n                .append(moreListItems);\r\n\r\n            this.moreListContainer = $('<li>')\r\n                .append(moreLink)\r\n                .append(this.moreItemsList);\r\n\r\n            this.responsiveMenu = $('<ul>')\r\n                .addClass('ui-menu-more')\r\n                .attr('responsive', 'more')\r\n                .append(this.moreListContainer)\r\n                .menu({\r\n                    position: {\r\n                        my: 'right top',\r\n                        at: 'right bottom'\r\n                    }\r\n                })\r\n                .insertAfter(this.element);\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _responsive: function () {\r\n            var container = $(this.options.container),\r\n                containerSize = container.width(),\r\n                width = 0,\r\n                items = this.element.children('li'),\r\n                more = $('.ui-menu-more > li > ul > li a');\r\n\r\n            items = items.map(function () {\r\n                var item = {};\r\n\r\n                item.item = $(this);\r\n                item.itemSize = $(this).outerWidth();\r\n\r\n                return item;\r\n            });\r\n\r\n            $.each(items, function (index) {\r\n                var itemText = items[index].item\r\n                    .find('a:first')\r\n                    .text();\r\n\r\n                width += parseInt(items[index].itemSize, null); //eslint-disable-line radix\r\n\r\n                if (width < containerSize) {\r\n                    items[index].item.show();\r\n\r\n                    more.each(function () {\r\n                        var text = $(this).text();\r\n\r\n                        if (text === itemText) {\r\n                            $(this).parent().hide();\r\n                        }\r\n                    });\r\n                } else if (width > containerSize) {\r\n                    items[index].item.hide();\r\n\r\n                    more.each(function () {\r\n                        var text = $(this).text();\r\n\r\n                        if (text === itemText) {\r\n                            $(this).parent().show();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set max items.\r\n         */\r\n        setMaxItems: function () {\r\n            var items = this.element.children('li'),\r\n                itemsCount = items.length,\r\n                maxItems = this.options.maxItems,\r\n                overflow = itemsCount - maxItems,\r\n                overflowItems = items.slice(overflow);\r\n\r\n            overflowItems.hide();\r\n\r\n            overflowItems.each(function () {\r\n                var itemText = $(this).find('a:first').text();\r\n\r\n                $(this).hide();\r\n\r\n                $('.ui-menu-more > li > ul > li a').each(function () {\r\n                    var text = $(this).text();\r\n\r\n                    if (text === itemText) {\r\n                        $(this).parent().show();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n\r\n    return {\r\n        menu: $.mage.menu,\r\n        navigation: $.mage.navigation\r\n    };\r\n});\r\n"}
}});
