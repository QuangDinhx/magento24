require.config({"config": {
        "jsbuild":{"mage/multiselect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    'text!mage/multiselect.html',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery-ui-modules/widget',\r\n    'jquery/editableMultiselect/js/jquery.multiselect'\r\n], function (_, $, searchTemplate, alert) {\r\n    'use strict';\r\n\r\n    $.widget('mage.multiselect2', {\r\n        options: {\r\n            mselectContainer: 'section.mselect-list',\r\n            mselectItemsWrapperClass: 'mselect-items-wrapper',\r\n            mselectCheckedClass: 'mselect-checked',\r\n            containerClass: 'paginated',\r\n            searchInputClass: 'admin__action-multiselect-search',\r\n            selectedItemsCountClass: 'admin__action-multiselect-items-selected',\r\n            currentPage: 1,\r\n            lastAppendValue: 0,\r\n            updateDelay: 1000,\r\n            optionsLoaded: false\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            $.fn.multiselect.call(this.element, this.options);\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _init: function () {\r\n            this.domElement = this.element.get(0);\r\n\r\n            this.$container = $(this.options.mselectContainer);\r\n            this.$wrapper = this.$container.find('.' + this.options.mselectItemsWrapperClass);\r\n            this.$item = this.$wrapper.find('div').first();\r\n            this.selectedValues = [];\r\n            this.values = {};\r\n\r\n            this.$container.addClass(this.options.containerClass).prepend(searchTemplate);\r\n            this.$input = this.$container.find('.' + this.options.searchInputClass);\r\n            this.$selectedCounter = this.$container.find('.' + this.options.selectedItemsCountClass);\r\n            this.filter = '';\r\n\r\n            if (this.domElement.options.length) {\r\n                this._setLastAppendOption(this.domElement.options[this.domElement.options.length - 1].value);\r\n            }\r\n\r\n            this._initElement();\r\n            this._events();\r\n        },\r\n\r\n        /**\r\n         * Leave only saved/selected options in select element.\r\n         *\r\n         * @private\r\n         */\r\n        _initElement: function () {\r\n            this.element.empty();\r\n            _.each(this.options.selectedValues, function (value) {\r\n                this._createSelectedOption({\r\n                    value: value,\r\n                    label: value\r\n                });\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Attach required events.\r\n         *\r\n         * @private\r\n         */\r\n        _events: function () {\r\n            var onKeyUp = _.debounce(this.onKeyUp, this.options.updateDelay);\r\n\r\n            _.bindAll(this, 'onScroll', 'onCheck', 'onOptionsChange');\r\n\r\n            this.$wrapper.on('scroll', this.onScroll);\r\n            this.$wrapper.on('change.mselectCheck', '[type=checkbox]', this.onCheck);\r\n            this.$input.on('keyup', _.bind(onKeyUp, this));\r\n            this.element.on('change.hiddenSelect', this.onOptionsChange);\r\n        },\r\n\r\n        /**\r\n         * Behaves multiselect scroll.\r\n         */\r\n        onScroll: function () {\r\n            var height = this.$wrapper.height(),\r\n                scrollHeight = this.$wrapper.prop('scrollHeight'),\r\n                scrollTop = Math.ceil(this.$wrapper.prop('scrollTop'));\r\n\r\n            if (!this.options.optionsLoaded && scrollHeight - height <= scrollTop) {\r\n                this.loadOptions();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Behaves keyup event on input search\r\n         */\r\n        onKeyUp: function () {\r\n            if (this.getSearchCriteria() === this.filter) {\r\n                return false;\r\n            }\r\n\r\n            this.setFilter();\r\n            this.clearMultiselectOptions();\r\n            this.setCurrentPage(0);\r\n            this.loadOptions();\r\n        },\r\n\r\n        /**\r\n         * Callback for select change event\r\n         */\r\n        onOptionsChange: function () {\r\n            this.selectedValues = _.map(this.domElement.options, function (option) {\r\n                this.values[option.value] = true;\r\n\r\n                return option.value;\r\n            }, this);\r\n\r\n            this._updateSelectedCounter();\r\n        },\r\n\r\n        /**\r\n         * Overrides native check behaviour.\r\n         *\r\n         * @param {Event} event\r\n         */\r\n        onCheck: function (event) {\r\n            var checkbox = event.target,\r\n                option = {\r\n                    value: checkbox.value,\r\n                    label: $(checkbox).parent('label').text()\r\n                };\r\n\r\n            checkbox.checked ? this._createSelectedOption(option) : this._removeSelectedOption(option);\r\n            event.stopPropagation();\r\n        },\r\n\r\n        /**\r\n         * Show error message.\r\n         *\r\n         * @param {String} message\r\n         */\r\n        onError: function (message) {\r\n            alert({\r\n                content: message\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Updates current filter state.\r\n         */\r\n        setFilter: function () {\r\n            this.filter = this.getSearchCriteria() || '';\r\n        },\r\n\r\n        /**\r\n         * Reads search input value.\r\n         *\r\n         * @return {String}\r\n         */\r\n        getSearchCriteria: function () {\r\n            return this.$input.val().trim();\r\n        },\r\n\r\n        /**\r\n         * Load options data.\r\n         */\r\n        loadOptions: function () {\r\n            var nextPage = this.getCurrentPage() + 1;\r\n\r\n            this.$wrapper.trigger('processStart');\r\n            this.$input.prop('disabled', true);\r\n\r\n            $.get(this.options.nextPageUrl, {\r\n                p: nextPage,\r\n                s: this.filter\r\n            })\r\n            .done(function (response) {\r\n                if (response.success) {\r\n                    this.appendOptions(response.result);\r\n                    this.setCurrentPage(nextPage);\r\n                } else {\r\n                    this.onError(response.errorMessage);\r\n                }\r\n            }.bind(this))\r\n            .always(function () {\r\n                this.$wrapper.trigger('processStop');\r\n                this.$input.prop('disabled', false);\r\n\r\n                if (this.filter) {\r\n                    this.$input.focus();\r\n                }\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Append loaded options\r\n         *\r\n         * @param {Array} options\r\n         */\r\n        appendOptions: function (options) {\r\n            var divOptions = [];\r\n\r\n            if (!options.length) {\r\n                return false;\r\n            }\r\n\r\n            if (this.isOptionsLoaded(options)) {\r\n                return;\r\n            }\r\n\r\n            options.forEach(function (option) {\r\n                if (!this.values[option.value]) {\r\n                    this.values[option.value] = true;\r\n                    option.selected = this._isOptionSelected(option);\r\n                    divOptions.push(this._createMultiSelectOption(option));\r\n                    this._setLastAppendOption(option.value);\r\n                }\r\n            }, this);\r\n\r\n            this.$wrapper.append(divOptions);\r\n        },\r\n\r\n        /**\r\n         * Clear multiselect options\r\n         */\r\n        clearMultiselectOptions: function () {\r\n            this._setLastAppendOption(0);\r\n            this.values = {};\r\n            this.$wrapper.empty();\r\n        },\r\n\r\n        /**\r\n         * Checks if all options are already loaded\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        isOptionsLoaded: function (options) {\r\n            this.options.optionsLoaded = this.options.lastAppendValue === options[options.length - 1].value;\r\n\r\n            return this.options.optionsLoaded;\r\n        },\r\n\r\n        /**\r\n         * Setter for current page.\r\n         *\r\n         * @param {Number} page\r\n         */\r\n        setCurrentPage: function (page) {\r\n            this.options.currentPage = page;\r\n        },\r\n\r\n        /**\r\n         * Getter for current page.\r\n         *\r\n         * @return {Number}\r\n         */\r\n        getCurrentPage: function () {\r\n            return this.options.currentPage;\r\n        },\r\n\r\n        /**\r\n         * Creates new selected option for select element\r\n         *\r\n         * @param {Object} option - option object\r\n         * @param {String} option.value - option value\r\n         * @param {String} option.label - option label\r\n         * @private\r\n         */\r\n        _createSelectedOption: function (option) {\r\n            var selectOption = new Option(option.label, option.value, false, true);\r\n\r\n            this.element.append(selectOption);\r\n            this.selectedValues.push(option.value);\r\n            this._updateSelectedCounter();\r\n\r\n            return selectOption;\r\n        },\r\n\r\n        /**\r\n         * Remove passed option from select element\r\n         *\r\n         * @param {Object} option - option object\r\n         * @param {String} option.value - option value\r\n         * @param {String} option.label - option label\r\n         * @return {Object} option\r\n         * @private\r\n         */\r\n        _removeSelectedOption: function (option) {\r\n            var unselectedOption = _.findWhere(this.domElement.options, {\r\n                value: option.value\r\n            });\r\n\r\n            if (!_.isUndefined(unselectedOption)) {\r\n                this.domElement.remove(unselectedOption.index);\r\n                this.selectedValues.splice(_.indexOf(this.selectedValues, option.value), 1);\r\n                this._updateSelectedCounter();\r\n            }\r\n\r\n            return unselectedOption;\r\n        },\r\n\r\n        /**\r\n         * Creates new DIV option for multiselect widget\r\n         *\r\n         * @param {Object} option - option object\r\n         * @param {String} option.value - option value\r\n         * @param {String} option.label - option label\r\n         * @param {Boolean} option.selected - is option selected\r\n         * @private\r\n         */\r\n        _createMultiSelectOption: function (option) {\r\n            var item = this.$item.clone(),\r\n                checkbox = item.find('input'),\r\n                isSelected = !!option.selected;\r\n\r\n            checkbox.val(option.value)\r\n                .prop('checked', isSelected)\r\n                .toggleClass(this.options.mselectCheckedClass, isSelected);\r\n\r\n            item.find('label > span').text(option.label);\r\n\r\n            return item;\r\n        },\r\n\r\n        /**\r\n         * Checks if passed option should be selected\r\n         *\r\n         * @param {Object} option - option object\r\n         * @param {String} option.value - option value\r\n         * @param {String} option.label - option label\r\n         * @param {Boolean} option.selected - is option selected\r\n         * @return {Boolean}\r\n         * @private\r\n         */\r\n        _isOptionSelected: function (option) {\r\n            return !!~this.selectedValues.indexOf(option.value);\r\n        },\r\n\r\n        /**\r\n         * Saves last added option value.\r\n         *\r\n         * @param {Number} value\r\n         * @private\r\n         */\r\n        _setLastAppendOption: function (value) {\r\n            this.options.lastAppendValue = value;\r\n        },\r\n\r\n        /**\r\n         * Updates counter of selected items.\r\n         *\r\n         * @private\r\n         */\r\n        _updateSelectedCounter: function () {\r\n            this.$selectedCounter.text(this.selectedValues.length);\r\n        }\r\n    });\r\n\r\n    return $.mage.multiselect2;\r\n});\r\n","mage/polyfill.js":"(function (root, doc) {\r\n    'use strict';\r\n\r\n    var Storage;\r\n\r\n    try {\r\n        if (!root.localStorage || !root.sessionStorage) {\r\n            throw new Error();\r\n        }\r\n\r\n        localStorage.setItem('storage_test', 1);\r\n        localStorage.removeItem('storage_test');\r\n    } catch (e) {\r\n        /**\r\n         * Returns a storage object to shim local or sessionStorage\r\n         * @param {String} type - either 'local' or 'session'\r\n         */\r\n        Storage = function (type) {\r\n            var data;\r\n\r\n            /**\r\n             * Creates a cookie\r\n             * @param {String} name\r\n             * @param {String} value\r\n             * @param {Integer} days\r\n             */\r\n            function createCookie(name, value, days) {\r\n                var date, expires;\r\n\r\n                if (days) {\r\n                    date = new Date();\r\n                    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\r\n                    expires = '; expires=' + date.toGMTString();\r\n                } else {\r\n                    expires = '';\r\n                }\r\n                doc.cookie = name + '=' + value + expires + '; path=/';\r\n            }\r\n\r\n            /**\r\n             * Reads value of a cookie\r\n             * @param {String} name\r\n             */\r\n            function readCookie(name) {\r\n                var nameEQ = name + '=',\r\n                    ca = doc.cookie.split(';'),\r\n                    i = 0,\r\n                    c;\r\n\r\n                for (i = 0; i < ca.length; i++) {\r\n                    c = ca[i];\r\n\r\n                    while (c.charAt(0) === ' ') {\r\n                        c = c.substring(1, c.length);\r\n                    }\r\n\r\n                    if (c.indexOf(nameEQ) === 0) {\r\n                        return c.substring(nameEQ.length, c.length);\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n\r\n            /**\r\n             * Returns cookie name based upon the storage type.\r\n             * If this is session storage, the function returns a unique cookie per tab\r\n             */\r\n            function getCookieName() {\r\n\r\n                if (type !== 'session') {\r\n                    return 'localstorage';\r\n                }\r\n\r\n                if (!root.name) {\r\n                    root.name = new Date().getTime();\r\n                }\r\n\r\n                return 'sessionStorage' + root.name;\r\n            }\r\n\r\n            /**\r\n             * Sets storage cookie to a data object\r\n             * @param {Object} dataObject\r\n             */\r\n            function setData(dataObject) {\r\n                data = encodeURIComponent(JSON.stringify(dataObject));\r\n                createCookie(getCookieName(), data, 365);\r\n            }\r\n\r\n            /**\r\n             * Clears value of cookie data\r\n             */\r\n            function clearData() {\r\n                createCookie(getCookieName(), '', 365);\r\n            }\r\n\r\n            /**\r\n             * @returns value of cookie data\r\n             */\r\n            function getData() {\r\n                var dataResponse = readCookie(getCookieName());\r\n\r\n                return dataResponse ? JSON.parse(decodeURIComponent(dataResponse)) : {};\r\n            }\r\n\r\n            data = getData();\r\n\r\n            return {\r\n                length: 0,\r\n\r\n                /**\r\n                 * Clears data from storage\r\n                 */\r\n                clear: function () {\r\n                    data = {};\r\n                    this.length = 0;\r\n                    clearData();\r\n                },\r\n\r\n                /**\r\n                 * Gets an item from storage\r\n                 * @param {String} key\r\n                 */\r\n                getItem: function (key) {\r\n                    return data[key] === undefined ? null : data[key];\r\n                },\r\n\r\n                /**\r\n                 * Gets an item by index from storage\r\n                 * @param {Integer} i\r\n                 */\r\n                key: function (i) {\r\n                    var ctr = 0,\r\n                        k;\r\n\r\n                    for (k in data) {\r\n\r\n                        if (data.hasOwnProperty(k)) {\r\n\r\n                            // eslint-disable-next-line max-depth\r\n                            if (ctr.toString() === i.toString()) {\r\n                                return k;\r\n                            }\r\n                            ctr++;\r\n                        }\r\n                    }\r\n\r\n                    return null;\r\n                },\r\n\r\n                /**\r\n                 * Removes an item from storage\r\n                 * @param {String} key\r\n                 */\r\n                removeItem: function (key) {\r\n                    delete data[key];\r\n                    this.length--;\r\n                    setData(data);\r\n                },\r\n\r\n                /**\r\n                 * Sets an item from storage\r\n                 * @param {String} key\r\n                 * @param {String} value\r\n                 */\r\n                setItem: function (key, value) {\r\n                    data[key] = value.toString();\r\n                    this.length++;\r\n                    setData(data);\r\n                }\r\n            };\r\n        };\r\n\r\n        root.localStorage.prototype = root.localStorage = new Storage('local');\r\n        root.sessionStorage.prototype = root.sessionStorage = new Storage('session');\r\n    }\r\n})(window, document);\r\n","mage/popup-window.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.popupWindow', {\r\n        options: {\r\n            centerBrowser: 0, // center window over browser window? {1 (YES) or 0 (NO)}. overrides top and left\r\n            centerScreen: 0, // center window over entire screen? {1 (YES) or 0 (NO)}. overrides top and left\r\n            height: 500, // sets the height in pixels of the window.\r\n            left: 0, // left position when the window appears.\r\n            location: 0, // determines whether the address bar is displayed {1 (YES) or 0 (NO)}.\r\n            menubar: 0, // determines whether the menu bar is displayed {1 (YES) or 0 (NO)}.\r\n            resizable: 0, // whether the window can be resized {1 (YES) or 0 (NO)}.\r\n            scrollbars: 0, // determines whether scrollbars appear on the window {1 (YES) or 0 (NO)}.\r\n            status: 0, // whether a status line appears at the bottom of the window {1 (YES) or 0 (NO)}.\r\n            width: 500, // sets the width in pixels of the window.\r\n            windowName: null, // name of window set from the name attribute of the element that invokes the click\r\n            windowURL: null, // url used for the popup\r\n            top: 0, // top position when the window appears.\r\n            toolbar: 0 // determines whether a toolbar is displayed {1 (YES) or 0 (NO)}.\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('click', $.proxy(this._openPopupWindow, this));\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _openPopupWindow: function (event) {\r\n            var element = $(event.target),\r\n                settings = this.options,\r\n                windowFeatures =\r\n                    'height=' + settings.height +\r\n                        ',width=' + settings.width +\r\n                        ',toolbar=' + settings.toolbar +\r\n                        ',scrollbars=' + settings.scrollbars +\r\n                        ',status=' + settings.status +\r\n                        ',resizable=' + settings.resizable +\r\n                        ',location=' + settings.location +\r\n                        ',menuBar=' + settings.menubar,\r\n                centeredX,\r\n                centeredY;\r\n\r\n            settings.windowName = settings.windowName || element.attr('name');\r\n            settings.windowURL = settings.windowURL || element.attr('href');\r\n\r\n            if (settings.centerBrowser) {\r\n                centeredY = window.screenY + (window.outerHeight / 2 - settings.height / 2);\r\n                centeredX = window.screenX + (window.outerWidth / 2 - settings.width / 2);\r\n                windowFeatures += ',left=' + centeredX + ',top=' + centeredY;\r\n            } else if (settings.centerScreen) {\r\n                centeredY = (screen.height - settings.height) / 2;\r\n                centeredX = (screen.width - settings.width) / 2;\r\n                windowFeatures += ',left=' + centeredX + ',top=' + centeredY;\r\n            } else {\r\n                windowFeatures += ',left=' + settings.left + ',top=' + settings.top;\r\n            }\r\n\r\n            window.open(settings.windowURL, settings.windowName, windowFeatures).focus();\r\n            event.preventDefault();\r\n        }\r\n    });\r\n\r\n    return $.mage.popupWindow;\r\n});\r\n","mage/redirect-url.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.redirectUrl', {\r\n        options: {\r\n            event: 'click',\r\n            url: undefined\r\n        },\r\n\r\n        /**\r\n         * This method binds elements found in this widget.\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            var handlers = {};\r\n\r\n            handlers[this.options.event] = '_onEvent';\r\n            this._on(handlers);\r\n        },\r\n\r\n        /**\r\n         * This method constructs a new widget.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * This method set the url for the redirect.\r\n         * @private\r\n         */\r\n        _onEvent: function () {\r\n            if (this.options.url) {\r\n                location.href = this.options.url;\r\n            } else {\r\n                location.href = this.element.val();\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.redirectUrl;\r\n});\r\n","mage/smart-keyboard-handler.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @return {Object}\r\n     * @constructor\r\n     */\r\n    function KeyboardHandler() {\r\n        var body = $('body'),\r\n            focusState = false,\r\n            tabFocusClass = '_keyfocus',\r\n            productsGrid = '[data-container=\"product-grid\"]',\r\n            catalogProductsGrid = $(productsGrid),\r\n            CODE_TAB = 9;\r\n\r\n        /**\r\n         * Handle logic, when onTabKeyPress fired at first.\r\n         * Then it changes state.\r\n         */\r\n        function onFocusInHandler() {\r\n            focusState = true;\r\n            body.addClass(tabFocusClass)\r\n                .off('focusin.keyboardHandler', onFocusInHandler);\r\n        }\r\n\r\n        /**\r\n         * Handle logic to remove state after onTabKeyPress to normal.\r\n         */\r\n        function onClickHandler() {\r\n            focusState = false;\r\n            body.removeClass(tabFocusClass)\r\n                .off('click', onClickHandler);\r\n        }\r\n\r\n        /**\r\n         * Tab key onKeypress handler. Apply main logic:\r\n         *  - call differ actions onTabKeyPress and onClick\r\n         */\r\n        function smartKeyboardFocus() {\r\n            $(document).on('keydown keypress', function (event) {\r\n                if (event.which === CODE_TAB && !focusState) {\r\n                    body\r\n                        .on('focusin.keyboardHandler', onFocusInHandler)\r\n                        .on('click', onClickHandler);\r\n                }\r\n            });\r\n\r\n            // ARIA support for catalog grid products\r\n            if (catalogProductsGrid.length) {\r\n                body.on('focusin.gridProducts', productsGrid, function () {\r\n                    if (body.hasClass(tabFocusClass)) {\r\n                        $(this).addClass('active');\r\n                    }\r\n                });\r\n                body.on('focusout.gridProducts', productsGrid, function () {\r\n                    $(this).removeClass('active');\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Attach smart focus on specific element.\r\n         * @param {jQuery} element\r\n         */\r\n        function handleFocus(element) {\r\n            element.on('focusin.emulateTabFocus', function () {\r\n                focusState = true;\r\n                body.addClass(tabFocusClass);\r\n                element.off();\r\n            });\r\n\r\n            element.on('focusout.emulateTabFocus', function () {\r\n                focusState = false;\r\n                body.removeClass(tabFocusClass);\r\n                element.off();\r\n            });\r\n        }\r\n\r\n        return {\r\n            apply: smartKeyboardFocus,\r\n            focus: handleFocus\r\n        };\r\n    }\r\n\r\n    return new KeyboardHandler;\r\n});\r\n","mage/sticky.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.sticky', {\r\n        options: {\r\n            /**\r\n             * Element selector, who's height will be used to restrict the\r\n             * maximum offsetTop position of the stuck element.\r\n             * Default uses document body.\r\n             * @type {String}\r\n             */\r\n            container: '',\r\n\r\n            /**\r\n             * Spacing in pixels above the stuck element\r\n             * @type {Number|Function} Number or Function that will return a Number\r\n             */\r\n            spacingTop: 0,\r\n\r\n            /**\r\n             * Allows postponing sticking, until element will go out of the\r\n             * screen for the number of pixels.\r\n             * @type {Number|Function} Number or Function that will return a Number\r\n             */\r\n            stickAfter: 0,\r\n\r\n            /**\r\n             * CSS class for active sticky state\r\n             * @type {String}\r\n             */\r\n            stickyClass: '_sticky'\r\n        },\r\n\r\n        /**\r\n         * Retrieve option value\r\n         * @param  {String} option\r\n         * @return {*}\r\n         * @private\r\n         */\r\n        _getOptionValue: function (option) {\r\n            var value = this.options[option] || 0;\r\n\r\n            if (typeof value === 'function') {\r\n                value = this.options[option]();\r\n            }\r\n\r\n            return value;\r\n        },\r\n\r\n        /**\r\n         * Bind handlers to scroll event\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            $(window).on({\r\n                'scroll': $.proxy(this._stick, this),\r\n                'resize': $.proxy(this.reset, this)\r\n            });\r\n\r\n            this.element.on('dimensionsChanged', $.proxy(this.reset, this));\r\n\r\n            this.reset();\r\n\r\n            // Application of the workaround for IE11 and Edge\r\n            this.normalizeIE11AndEdgeScroll();\r\n        },\r\n\r\n        /**\r\n         * float Block on windowScroll\r\n         * @private\r\n         */\r\n        _stick: function () {\r\n            var offset,\r\n                isStatic,\r\n                stuck,\r\n                stickAfter;\r\n\r\n            isStatic = this.element.css('position') === 'static';\r\n\r\n            if (!isStatic && this.element.is(':visible')) {\r\n                offset = $(document).scrollTop() -\r\n                    this.parentOffset +\r\n                    this._getOptionValue('spacingTop');\r\n\r\n                offset = Math.max(0, Math.min(offset, this.maxOffset));\r\n\r\n                stuck = this.element.hasClass(this.options.stickyClass);\r\n                stickAfter = this._getOptionValue('stickAfter');\r\n\r\n                if (offset && !stuck && offset < stickAfter) {\r\n                    offset = 0;\r\n                }\r\n\r\n                this.element\r\n                    .toggleClass(this.options.stickyClass, offset > 0)\r\n                    .css('top', offset);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Defines maximum offset value of the element.\r\n         * @private\r\n         */\r\n        _calculateDimens: function () {\r\n            var $parent         = this.element.parent(),\r\n                topMargin       = parseInt(this.element.css('margin-top'), 10),\r\n                parentHeight    = $parent.height() - topMargin,\r\n                height          = this.element.innerHeight(),\r\n                maxScroll       = document.body.offsetHeight - window.innerHeight;\r\n\r\n            if (this.options.container.length > 0) {\r\n                maxScroll = $(this.options.container).height();\r\n            }\r\n\r\n            this.parentOffset   = $parent.offset().top + topMargin;\r\n            this.maxOffset      = maxScroll - this.parentOffset;\r\n\r\n            if (this.maxOffset + height >= parentHeight) {\r\n                this.maxOffset = parentHeight - height;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Facade method that places sticky element where it should be.\r\n         */\r\n        reset: function () {\r\n            this._calculateDimens()\r\n                ._stick();\r\n        },\r\n\r\n        /**\r\n         * Workaround for IE11 and Edge that solves the IE known rendering issue\r\n         * that prevents sticky element from jumpy movement on scrolling the page.\r\n         *\r\n         * Alternatively, undesired jumpy movement can be eliminated by changing the setting in IE:\r\n         * Settings > Internet options > Advanced tab > inside 'Browsing' item > set 'Use smooth scrolling' to False\r\n         */\r\n        normalizeIE11AndEdgeScroll: function () {\r\n            if (navigator.userAgent.match(/Trident.*rv[ :]*11\\.|Edge\\//)) {\r\n                document.body.addEventListener('mousewheel', function () {\r\n                    event.preventDefault();\r\n                    window.scrollTo(0, window.pageYOffset - event.wheelDelta);\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.sticky;\r\n});\r\n","mage/storage.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['jquery', 'mage/url'], function ($, urlBuilder) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * Perform asynchronous GET request to server.\r\n         * @param {String} url\r\n         * @param {Boolean} global\r\n         * @param {String} contentType\r\n         * @param {Object} headers\r\n         * @returns {Deferred}\r\n         */\r\n        get: function (url, global, contentType, headers) {\r\n            headers = headers || {};\r\n            global = global === undefined ? true : global;\r\n            contentType = contentType || 'application/json';\r\n\r\n            return $.ajax({\r\n                url: urlBuilder.build(url),\r\n                type: 'GET',\r\n                global: global,\r\n                contentType: contentType,\r\n                headers: headers\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Perform asynchronous POST request to server.\r\n         * @param {String} url\r\n         * @param {String} data\r\n         * @param {Boolean} global\r\n         * @param {String} contentType\r\n         * @param {Object} headers\r\n         * @returns {Deferred}\r\n         */\r\n        post: function (url, data, global, contentType, headers) {\r\n            headers = headers || {};\r\n            global = global === undefined ? true : global;\r\n            contentType = contentType || 'application/json';\r\n\r\n            return $.ajax({\r\n                url: urlBuilder.build(url),\r\n                type: 'POST',\r\n                data: data,\r\n                global: global,\r\n                contentType: contentType,\r\n                headers: headers\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Perform asynchronous PUT request to server.\r\n         * @param {String} url\r\n         * @param {String} data\r\n         * @param {Boolean} global\r\n         * @param {String} contentType\r\n         * @param {Object} headers\r\n         * @returns {Deferred}\r\n         */\r\n        put: function (url, data, global, contentType, headers) {\r\n            var ajaxSettings = {};\r\n\r\n            headers = headers || {};\r\n            global = global === undefined ? true : global;\r\n            contentType = contentType || 'application/json';\r\n            ajaxSettings.url = urlBuilder.build(url);\r\n            ajaxSettings.type = 'PUT';\r\n            ajaxSettings.data = data;\r\n            ajaxSettings.global = global;\r\n            ajaxSettings.contentType = contentType;\r\n            ajaxSettings.headers = headers;\r\n\r\n            return $.ajax(ajaxSettings);\r\n        },\r\n\r\n        /**\r\n         * Perform asynchronous DELETE request to server.\r\n         * @param {String} url\r\n         * @param {Boolean} global\r\n         * @param {String} contentType\r\n         * @param {Object} headers\r\n         * @returns {Deferred}\r\n         */\r\n        delete: function (url, global, contentType, headers) {\r\n            headers = headers || {};\r\n            global = global === undefined ? true : global;\r\n            contentType = contentType || 'application/json';\r\n\r\n            return $.ajax({\r\n                url: urlBuilder.build(url),\r\n                type: 'DELETE',\r\n                global: global,\r\n                contentType: contentType,\r\n                headers: headers\r\n            });\r\n        }\r\n    };\r\n});\r\n","mage/tabs.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'jquery-ui-modules/core',\r\n    'mage/mage',\r\n    'mage/collapsible'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.tabs', {\r\n        options: {\r\n            active: 0,\r\n            disabled: [],\r\n            openOnFocus: true,\r\n            collapsible: false,\r\n            collapsibleElement: '[data-role=collapsible]',\r\n            header: '[data-role=title]',\r\n            content: '[data-role=content]',\r\n            trigger: '[data-role=trigger]',\r\n            closedState: null,\r\n            openedState: null,\r\n            disabledState: null,\r\n            ajaxUrlElement: '[data-ajax=true]',\r\n            ajaxContent: false,\r\n            loadingClass: null,\r\n            saveState: false,\r\n            animate: false,\r\n            icons: {\r\n                activeHeader: null,\r\n                header: null\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            if (typeof this.options.disabled === 'string') {\r\n                this.options.disabled = this.options.disabled.split(' ').map(function (item) {\r\n                    return parseInt(item, 10);\r\n                });\r\n            }\r\n            this._processPanels();\r\n            this._handleDeepLinking();\r\n            this._processTabIndex();\r\n            this._closeOthers();\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _destroy: function () {\r\n            $.each(this.collapsibles, function () {\r\n                $(this).collapsible('destroy');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * If deep linking is used, all sections must be closed but the one that contains the anchor.\r\n         * @private\r\n         */\r\n        _handleDeepLinking: function () {\r\n            var self = this,\r\n                anchor = window.location.hash,\r\n                isValid = $.mage.isValidSelector(anchor),\r\n                anchorId = anchor.replace('#', '');\r\n\r\n            if (anchor && isValid) {\r\n                $.each(self.contents, function (i) {\r\n                    if ($(this).attr('id') === anchorId || $(this).find('#' + anchorId).length) {\r\n                        self.collapsibles.not(self.collapsibles.eq(i)).collapsible('forceDeactivate');\r\n\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * When the widget gets instantiated, the first tab that is not disabled receive focusable property\r\n         * All tabs receive tabIndex 0\r\n         * @private\r\n         */\r\n        _processTabIndex: function () {\r\n            var self = this;\r\n\r\n            self.triggers.attr('tabIndex', 0);\r\n            $.each(this.collapsibles, function (i) {\r\n                self.triggers.attr('tabIndex', 0);\r\n                self.triggers.eq(i).attr('tabIndex', 0);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Prepare the elements for instantiating the collapsible widget\r\n         * @private\r\n         */\r\n        _processPanels: function () {\r\n            var isNotNested = this._isNotNested.bind(this);\r\n\r\n            this.contents = this.element\r\n                .find(this.options.content)\r\n                .filter(isNotNested);\r\n\r\n            this.collapsibles =  this.element\r\n                .find(this.options.collapsibleElement)\r\n                .filter(isNotNested);\r\n\r\n            this.collapsibles\r\n                .attr('role', 'presentation')\r\n                .parent()\r\n                .attr('role', 'tablist');\r\n\r\n            this.headers = this.element\r\n                .find(this.options.header)\r\n                .filter(isNotNested);\r\n\r\n            if (this.headers.length === 0) {\r\n                this.headers = this.collapsibles;\r\n            }\r\n            this.triggers = this.element\r\n                .find(this.options.trigger)\r\n                .filter(isNotNested);\r\n\r\n            if (this.triggers.length === 0) {\r\n                this.triggers = this.headers;\r\n            }\r\n            this._callCollapsible();\r\n        },\r\n\r\n        /**\r\n         * Checks if element is not in nested container to keep the correct scope of collapsible\r\n         * @param {Number} index\r\n         * @param {HTMLElement} element\r\n         * @private\r\n         * @return {Boolean}\r\n         */\r\n        _isNotNested: function (index, element) {\r\n            var parentContent = $(element).parents(this.options.content);\r\n\r\n            return !parentContent.length || !this.element.find(parentContent).length;\r\n        },\r\n\r\n        /**\r\n         * Setting the disabled and active tabs and calling instantiation of collapsible\r\n         * @private\r\n         */\r\n        _callCollapsible: function () {\r\n            var self = this,\r\n                disabled = false,\r\n                active = false;\r\n\r\n            $.each(this.collapsibles, function (i) {\r\n                disabled = active = false;\r\n\r\n                if ($.inArray(i, self.options.disabled) !== -1) {\r\n                    disabled = true;\r\n                }\r\n\r\n                if (i === self.options.active) {\r\n                    active = true;\r\n                }\r\n                self._instantiateCollapsible(this, i, active, disabled);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Instantiate collapsible.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Number} index\r\n         * @param {*} active\r\n         * @param {*} disabled\r\n         * @private\r\n         */\r\n        _instantiateCollapsible: function (element, index, active, disabled) {\r\n            $(element).collapsible(\r\n                $.extend({}, this.options, {\r\n                    active: active,\r\n                    disabled: disabled,\r\n                    header: this.headers.eq(index),\r\n                    content: this.contents.eq(index),\r\n                    trigger: this.triggers.eq(index)\r\n                })\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Adding callback to close others tabs when one gets opened\r\n         * @private\r\n         */\r\n        _closeOthers: function () {\r\n            var self = this;\r\n\r\n            $.each(this.collapsibles, function () {\r\n                $(this).on('beforeOpen', function () {\r\n                    self.collapsibles.not(this).collapsible('forceDeactivate');\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {*} index\r\n         */\r\n        activate: function (index) {\r\n            this._toggleActivate('activate', index);\r\n        },\r\n\r\n        /**\r\n         * @param {*} index\r\n         */\r\n        deactivate: function (index) {\r\n            this._toggleActivate('deactivate', index);\r\n        },\r\n\r\n        /**\r\n         * @param {*} action\r\n         * @param {*} index\r\n         * @private\r\n         */\r\n        _toggleActivate: function (action, index) {\r\n            this.collapsibles.eq(index).collapsible(action);\r\n        },\r\n\r\n        /**\r\n         * @param {*} index\r\n         */\r\n        disable: function (index) {\r\n            this._toggleEnable('disable', index);\r\n        },\r\n\r\n        /**\r\n         * @param {*} index\r\n         */\r\n        enable: function (index) {\r\n            this._toggleEnable('enable', index);\r\n        },\r\n\r\n        /**\r\n         * @param {*} action\r\n         * @param {*} index\r\n         * @private\r\n         */\r\n        _toggleEnable: function (action, index) {\r\n            var self = this;\r\n\r\n            if ($.isArray(index)) {\r\n                $.each(index, function () {\r\n                    self.collapsibles.eq(this).collapsible(action);\r\n                });\r\n            } else if (index === undefined) {\r\n                this.collapsibles.collapsible(action);\r\n            } else {\r\n                this.collapsibles.eq(index).collapsible(action);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _keydown: function (event) {\r\n            var self = this,\r\n                keyCode, toFocus, toFocusIndex, enabledTriggers, length, currentIndex, nextToFocus;\r\n\r\n            if (event.altKey || event.ctrlKey) {\r\n                return;\r\n            }\r\n            keyCode = $.ui.keyCode;\r\n            toFocus = false;\r\n            enabledTriggers = [];\r\n\r\n            $.each(this.triggers, function () {\r\n                if (!self.collapsibles.eq(self.triggers.index($(this))).collapsible('option', 'disabled')) {\r\n                    enabledTriggers.push(this);\r\n                }\r\n            });\r\n            length = $(enabledTriggers).length;\r\n            currentIndex = $(enabledTriggers).index(event.target);\r\n\r\n            /**\r\n             * @param {String} direction\r\n             * @return {*}\r\n             */\r\n            nextToFocus = function (direction) {\r\n                if (length > 0) {\r\n                    if (direction === 'right') {\r\n                        toFocusIndex = (currentIndex + 1) % length;\r\n                    } else {\r\n                        toFocusIndex = (currentIndex + length - 1) % length;\r\n                    }\r\n\r\n                    return enabledTriggers[toFocusIndex];\r\n                }\r\n\r\n                return event.target;\r\n            };\r\n\r\n            switch (event.keyCode) {\r\n                case keyCode.RIGHT:\r\n                case keyCode.DOWN:\r\n                    toFocus = nextToFocus('right');\r\n                    break;\r\n\r\n                case keyCode.LEFT:\r\n                case keyCode.UP:\r\n                    toFocus = nextToFocus('left');\r\n                    break;\r\n\r\n                case keyCode.HOME:\r\n                    toFocus = enabledTriggers[0];\r\n                    break;\r\n\r\n                case keyCode.END:\r\n                    toFocus = enabledTriggers[length - 1];\r\n                    break;\r\n            }\r\n\r\n            if (toFocus) {\r\n                toFocusIndex = this.triggers.index(toFocus);\r\n                $(event.target).attr('tabIndex', -1);\r\n                $(toFocus).attr('tabIndex', 0);\r\n                toFocus.focus();\r\n\r\n                if (this.options.openOnFocus) {\r\n                    this.activate(toFocusIndex);\r\n                }\r\n                event.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            var events = {\r\n                keydown: '_keydown'\r\n            };\r\n\r\n            this._off(this.triggers);\r\n            this._on(this.triggers, events);\r\n        }\r\n    });\r\n\r\n    return $.mage.tabs;\r\n});\r\n","mage/template.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Checks if provided string is a valid DOM selector.\r\n     *\r\n     * @param {String} selector - Selector to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isSelector(selector) {\r\n        try {\r\n            document.querySelector(selector);\r\n\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unescapes characters used in underscore templates.\r\n     *\r\n     * @param {String} str - String to be processed.\r\n     * @returns {String}\r\n     */\r\n    function unescape(str) {\r\n        return str.replace(/&lt;%|%3C%/g, '<%').replace(/%&gt;|%%3E/g, '%>');\r\n    }\r\n\r\n    /**\r\n     * If 'tmpl' is a valid selector, returns target node's innerHTML if found.\r\n     * Else, returns empty string and emits console warning.\r\n     * If 'tmpl' is not a selector, returns 'tmpl' as is.\r\n     *\r\n     * @param {String} tmpl\r\n     * @returns {String}\r\n     */\r\n    function getTmplString(tmpl) {\r\n        if (isSelector(tmpl)) {\r\n            tmpl = document.querySelector(tmpl);\r\n\r\n            if (tmpl) {\r\n                tmpl = tmpl.innerHTML.trim();\r\n            } else {\r\n                console.warn('No template was found by selector: ' + tmpl);\r\n\r\n                tmpl = '';\r\n            }\r\n        }\r\n\r\n        return unescape(tmpl);\r\n    }\r\n\r\n    /**\r\n     * Compiles or renders template provided either\r\n     * by selector or by the template string.\r\n     *\r\n     * @param {String} tmpl - Template string or selector.\r\n     * @param {(Object|Array|Function)} [data] - Data object with which to render template.\r\n     * @returns {String|Function}\r\n     */\r\n    return function (tmpl, data) {\r\n        var render;\r\n\r\n        tmpl   = getTmplString(tmpl);\r\n        render = _.template(tmpl);\r\n\r\n        return !_.isUndefined(data) ?\r\n            render(data) :\r\n            render;\r\n    };\r\n});\r\n","mage/terms.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} args\r\n     */\r\n    $.fn.terms = function (args) {\r\n\r\n        // default\r\n        var defaults = {\r\n                start: 0,\r\n                wrapper: '',\r\n                showAnchor: '',\r\n                effects: 'slide'\r\n            },\r\n            options = $.extend(defaults, args);\r\n\r\n        this.each(function () {\r\n            var obj = $(this),\r\n                wrapper = options.wrapper !== '' ? '> ' + options.wrapper : '',\r\n                switches = $(wrapper + '> [data-section=\"title\"] > [data-toggle=\"switch\"]', obj),\r\n                terms = $(wrapper + '> [data-section=\"content\"]', obj),\r\n                t = switches.length,\r\n                marginTop = $(switches[0]).closest('[data-section=\"title\"]').css('position') == 'absolute' ? 0 : null, //eslint-disable-line\r\n                title,\r\n                current,\r\n\r\n                /**\r\n                 * @param {*} item\r\n                 */\r\n                showItem = function (item) {\r\n                    if (item != current && !$(switches[item]).closest('[data-section=\"title\"]').hasClass('disabled')) { //eslint-disable-line\r\n                        $(switches).closest('[data-section=\"title\"]').removeClass('active');\r\n\r\n                        if (options.wrapper !== '') {\r\n                            $(switches).parent().parent().removeClass('active');\r\n                        }\r\n                        $(terms).removeClass('active');\r\n                        $(switches[item]).closest('[data-section=\"title\"]').addClass('active');\r\n\r\n                        if (options.wrapper !== '') {\r\n                            $(switches[current]).parent().parent().addClass('active');\r\n                        }\r\n                        $(terms[item]).addClass('active');\r\n                        current = item;\r\n                    } else if (\r\n                        // Check if this is accordion width as criteria for now\r\n                        (obj.attr('data-sections') == 'accordion' || $(switches[item]).closest('[data-section=\"title\"]').css('width') == obj.css('width')) && //eslint-disable-line\r\n                        item == current && !$(switches[item]).closest('[data-section=\"title\"]').hasClass('disabled') //eslint-disable-line\r\n                    ) {\r\n                        $(switches).closest('[data-section=\"title\"]').removeClass('active');\r\n\r\n                        if (options.wrapper !== '') {\r\n                            $(switches).parent().parent().removeClass('active');\r\n                        }\r\n                        $(terms).removeClass('active');\r\n                        current = -1;\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Init.\r\n                 */\r\n                init = function () {\r\n                    var linksList, i, classes, dataSection, itemHref, itemClass, fromUrl;\r\n\r\n                    if (t > 0) {\r\n                        if ($(switches[0]).closest('[data-section=\"title\"]').css('display') == 'table-cell') { //eslint-disable-line\r\n                            obj.addClass('adjusted');\r\n\r\n                            if (obj[0].tagName == 'DL') { //eslint-disable-line eqeqeq, max-depth\r\n                                linksList = $('<dd>');\r\n                            } else {\r\n                                linksList = $('<div>');\r\n                            }\r\n                            linksList.addClass('sections-nav');\r\n                            obj.prepend(linksList);\r\n\r\n                            for (i = 0; i < t; i++) { //eslint-disable-line max-depth\r\n                                title = $(switches[i]).html();\r\n                                classes = $(switches[i]).closest('[data-section=\"title\"]').attr('class');\r\n                                dataSection = $(switches[i]).closest('[data-section=\"title\"]').attr('data-section');\r\n                                itemHref = $(switches[i]).attr('href');\r\n                                itemClass = $(switches[i]).attr('class');\r\n                                $(switches[i]).parent('[data-section=\"title\"]').hide();\r\n                                switches[i] = $('<a/>', {\r\n                                    href: itemHref,\r\n                                    'class': itemClass,\r\n                                    html: title\r\n                                }).appendTo(linksList);\r\n                                $(switches[i]).wrap(\r\n                                    '<strong class=\"' + classes + '\" data-section=\"' + dataSection + '\" />'\r\n                                );\r\n                            }\r\n                        }\r\n                        $(switches).each(function (ind, el) {\r\n                            $(el).on('click', function (event) {\r\n                                event.preventDefault();\r\n                                showItem(ind);\r\n                            });\r\n\r\n                            if (marginTop !== null) {\r\n                                $(el).closest('[data-section=\"title\"]').css({\r\n                                    'top': marginTop + 'px'\r\n                                });\r\n                                marginTop += $(el).closest('[data-section=\"title\"]').outerHeight(true);\r\n                                obj.css({\r\n                                    'min-height': marginTop + 'px'\r\n                                });\r\n                            }\r\n                        });\r\n\r\n                        fromUrl = false;\r\n\r\n                        if (window.location.hash.length > 0) {\r\n                            $(terms).each(function (ind, el) {\r\n                                if ('#info-' + $(el).attr('id') == window.location.hash) { //eslint-disable-line eqeqeq\r\n                                    showItem(ind);\r\n                                    $('html, body').animate({\r\n                                        scrollTop: $(switches[ind]).offset().top\r\n                                    }, 700);\r\n                                    fromUrl = true;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (fromUrl === false) {\r\n                            if (options.start % 1 === 0) { //eslint-disable-line max-depth\r\n                                current = options.start + 1;\r\n                                showItem(options.start);\r\n                            } else {\r\n                                $(terms).each(function (ind, el) {\r\n                                    if ($(el).attr('id') == options.start) { //eslint-disable-line eqeqeq\r\n                                        current = ind + 1;\r\n                                        showItem(ind);\r\n                                        $('html, body').animate({\r\n                                            scrollTop: $(switches[ind]).offset().top\r\n                                        }, 700);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n            init();\r\n        });\r\n    };\r\n\r\n    return function (data, el) {\r\n        $(el).terms(data);\r\n    };\r\n});\r\n","mage/toggle.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.toggleAdvanced', {\r\n        options: {\r\n            baseToggleClass: 'active' // Class used to be toggled on clicked element\r\n        },\r\n\r\n        /**\r\n         * Toggle creation\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.beforeCreate();\r\n            this._bindCore();\r\n            this.afterCreate();\r\n        },\r\n\r\n        /**\r\n         *  Core bound events & setup\r\n         * @protected\r\n         */\r\n        _bindCore: function () {\r\n            var widget = this;\r\n\r\n            this.element.on('click', $.proxy(function (e) {\r\n                widget._onClick();\r\n                e.preventDefault();\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Binding Click event\r\n         *\r\n         * @protected\r\n         */\r\n        _onClick: function () {\r\n            this._prepareOptions();\r\n            this._toggleSelectors();\r\n        },\r\n\r\n        /**\r\n         * Method used to look for data attributes to override default options\r\n         *\r\n         * @protected\r\n         */\r\n        _prepareOptions: function () {\r\n            this.options.baseToggleClass = this.element.data('base-toggle-class') ?\r\n                this.element.data('base-toggle-class') : this.options.baseToggleClass;\r\n        },\r\n\r\n        /**\r\n         * Method responsible for hiding and revealing specified DOM elements\r\n         * Toggle the class on clicked element\r\n         *\r\n         * @protected\r\n         */\r\n        _toggleSelectors: function () {\r\n            this.element.toggleClass(this.options.baseToggleClass);\r\n        },\r\n\r\n        /**\r\n         * Method used to inject 3rd party functionality before create\r\n         * @public\r\n         */\r\n        beforeCreate: function () {},\r\n\r\n        /**\r\n         * Method used to inject 3rd party functionality after create\r\n         * @public\r\n         */\r\n        afterCreate: function () {}\r\n    });\r\n\r\n    // Extension for mage.toggle - Adding selectors support for other DOM elements we wish to toggle\r\n    $.widget('mage.toggleAdvanced', $.mage.toggleAdvanced, {\r\n\r\n        options: {\r\n            selectorsToggleClass: 'hidden',    // Class used to be toggled on selectors DOM elements\r\n            toggleContainers: null\r\n        },\r\n\r\n        /**\r\n         * Method responsible for hiding and revealing specified DOM elements\r\n         * If data-toggle-selectors attribute is present - toggle will be done on these selectors\r\n         * Otherwise we toggle the class on clicked element\r\n         *\r\n         * @protected\r\n         * @override\r\n         */\r\n        _toggleSelectors: function () {\r\n            this._super();\r\n\r\n            if (this.options.toggleContainers) {\r\n                $(this.options.toggleContainers).toggleClass(this.options.selectorsToggleClass);\r\n            } else {\r\n                this.element.toggleClass(this.options.baseToggleClass);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Method used to look for data attributes to override default options\r\n         *\r\n         * @protected\r\n         * @override\r\n         */\r\n        _prepareOptions: function () {\r\n            this.options.selectorsToggleClass = this.element.data('selectors-toggle-class') ?\r\n                this.element.data('selectors-toggle-class') : this.options.selectorsToggleClass;\r\n            this.options.toggleContainers = this.element.data('toggle-selectors') ?\r\n                this.element.data('toggle-selectors') : this.options.toggleContainers;\r\n            this._super();\r\n        }\r\n    });\r\n\r\n    // Extension for mage.toggle - Adding label toggle\r\n    $.widget('mage.toggleAdvanced', $.mage.toggleAdvanced, {\r\n\r\n        options: {\r\n            newLabel: null,             // Text of the new label to be used on toggle\r\n            curLabel: null,             // Text of the old label to be used on toggle\r\n            currentLabelElement: null   // Current label container\r\n        },\r\n\r\n        /**\r\n         * Binding Click event\r\n         *\r\n         * @protected\r\n         * @override\r\n         */\r\n        _onClick: function () {\r\n            this._super();\r\n            this._toggleLabel();\r\n        },\r\n\r\n        /**\r\n         * Method responsible for replacing clicked element labels\r\n         * @protected\r\n         */\r\n        _toggleLabel: function () {\r\n            var cachedLabel, currentLabelSelector;\r\n\r\n            if (this.options.newLabel) {\r\n                cachedLabel = this.options.newLabel;\r\n                currentLabelSelector = this.options.currentLabelElement ?\r\n                        $(this.options.currentLabelElement) : this.element;\r\n\r\n                this.element.data('toggle-label', this.options.curLabel);\r\n                currentLabelSelector.html(this.options.newLabel);\r\n\r\n                this.options.curLabel = this.options.newLabel;\r\n                this.options.newLabel = cachedLabel;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Method used to look for data attributes to override default options\r\n         *\r\n         * @protected\r\n         * @override\r\n         */\r\n        _prepareOptions: function () {\r\n            this.options.newLabel = this.element.data('toggle-label') ?\r\n                this.element.data('toggle-label') : this.options.newLabel;\r\n\r\n            this.options.currentLabelElement = this.element.data('current-label-el') ?\r\n                this.element.data('current-label-el') : this.options.currentLabelElement;\r\n\r\n            if (!this.options.currentLabelElement) {\r\n                this.options.currentLabelElement = this.element;\r\n            }\r\n\r\n            this.options.curLabel = $(this.options.currentLabelElement).html();\r\n\r\n            this._super();\r\n        }\r\n    });\r\n\r\n    return $.mage.toggleAdvanced;\r\n});\r\n","mage/tooltip.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @deprecated since version 2.2.0\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/tooltip'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    //Widget Wrapper\r\n    $.widget('mage.tooltip', $.ui.tooltip, {});\r\n\r\n    return $.mage.tooltip;\r\n});\r\n","mage/touch-slider.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'jquery-ui-modules/slider'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Adds support for touch events for regular jQuery UI slider.\r\n     */\r\n    $.widget('mage.touchSlider', $.ui.slider, {\r\n\r\n        /**\r\n         * Creates instance of widget.\r\n         *\r\n         * @override\r\n         */\r\n        _create: function () {\r\n            _.bindAll(\r\n                this,\r\n                '_mouseDown',\r\n                '_mouseMove',\r\n                '_onTouchEnd'\r\n            );\r\n\r\n            return this._superApply(arguments);\r\n        },\r\n\r\n        /**\r\n         * Initializes mouse events on element.\r\n         * @override\r\n         */\r\n        _mouseInit: function () {\r\n            var result = this._superApply(arguments);\r\n\r\n            this.element\r\n                .off('mousedown.' + this.widgetName)\r\n                .on('touchstart.' + this.widgetName, this._mouseDown);\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Elements' 'mousedown' event handler polyfill.\r\n         * @override\r\n         */\r\n        _mouseDown: function (event) {\r\n            var prevDelegate = this._mouseMoveDelegate,\r\n                result;\r\n\r\n            event = this._touchToMouse(event);\r\n            result = this._super(event);\r\n\r\n            if (prevDelegate === this._mouseMoveDelegate) {\r\n                return result;\r\n            }\r\n\r\n            $(document)\r\n                .off('mousemove.' + this.widgetName)\r\n                .off('mouseup.' + this.widgetName);\r\n\r\n            $(document)\r\n                .on('touchmove.' + this.widgetName, this._mouseMove)\r\n                .on('touchend.' + this.widgetName, this._onTouchEnd)\r\n                .on('tochleave.' + this.widgetName, this._onTouchEnd);\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Documents' 'mousemove' event handler polyfill.\r\n         *\r\n         * @override\r\n         * @param {Event} event - Touch event object.\r\n         */\r\n        _mouseMove: function (event) {\r\n            event = this._touchToMouse(event);\r\n\r\n            return this._super(event);\r\n        },\r\n\r\n        /**\r\n         * Documents' 'touchend' event handler.\r\n         */\r\n        _onTouchEnd: function (event) {\r\n            $(document).trigger('mouseup');\r\n\r\n            return this._mouseUp(event);\r\n        },\r\n\r\n        /**\r\n         * Removes previously assigned touch handlers.\r\n         *\r\n         * @override\r\n         */\r\n        _mouseUp: function () {\r\n            this._removeTouchHandlers();\r\n\r\n            return this._superApply(arguments);\r\n        },\r\n\r\n        /**\r\n         * Removes previously assigned touch handlers.\r\n         *\r\n         * @override\r\n         */\r\n        _mouseDestroy: function () {\r\n            this._removeTouchHandlers();\r\n\r\n            return this._superApply(arguments);\r\n        },\r\n\r\n        /**\r\n         * Removes touch events from document object.\r\n         */\r\n        _removeTouchHandlers: function () {\r\n            $(document)\r\n                .off('touchmove.' + this.widgetName)\r\n                .off('touchend.' + this.widgetName)\r\n                .off('touchleave.' + this.widgetName);\r\n        },\r\n\r\n        /**\r\n         * Adds properties to the touch event to mimic mouse event.\r\n         *\r\n         * @param {Event} event - Touch event object.\r\n         * @returns {Event}\r\n         */\r\n        _touchToMouse: function (event) {\r\n            var orig = event.originalEvent,\r\n                touch = orig.touches[0];\r\n\r\n            return _.extend(event, {\r\n                which:      1,\r\n                pageX:      touch.pageX,\r\n                pageY:      touch.pageY,\r\n                clientX:    touch.clientX,\r\n                clientY:    touch.clientY,\r\n                screenX:    touch.screenX,\r\n                screenY:    touch.screenY\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.touchSlider;\r\n});\r\n","mage/translate-inline.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'mage/utils/misc',\r\n    'mage/translate',\r\n    'jquery-ui-modules/dialog'\r\n], function ($, mageTemplate, miscUtils) {\r\n    'use strict';\r\n\r\n    $.widget('mage.translateInline', $.ui.dialog, {\r\n        options: {\r\n            translateForm: {\r\n                template: '#translate-form-template',\r\n                data: {\r\n                    id: 'translate-inline-form',\r\n                    message: 'Please refresh the page to see your changes after submitting this form.'\r\n                }\r\n            },\r\n            autoOpen: false,\r\n            translateArea: null,\r\n            modal: true,\r\n            dialogClass: 'popup-window',\r\n            width: '75%',\r\n            title: $.mage.__('Translate'),\r\n            height: 470,\r\n            position: {\r\n                my: 'left top',\r\n                at: 'center top',\r\n                of: 'body'\r\n            },\r\n            buttons: [{\r\n                text: $.mage.__('Submit'),\r\n                'class': 'action-primary',\r\n\r\n                /**\r\n                 * Click\r\n                 */\r\n                click: function () {\r\n                    $(this).translateInline('submit');\r\n                }\r\n            },\r\n            {\r\n                text: $.mage.__('Close'),\r\n                'class': 'action-close',\r\n\r\n                /**\r\n                 * Click.\r\n                 */\r\n                click: function () {\r\n                    $(this).translateInline('close');\r\n                }\r\n            }],\r\n\r\n            /**\r\n             * Open.\r\n             */\r\n            open: function () {\r\n                var $uiDialog = $(this).closest('.ui-dialog'),\r\n                    topMargin = $uiDialog.children('.ui-dialog-titlebar').outerHeight() + 45;\r\n\r\n                $uiDialog\r\n                    .addClass('ui-dialog-active')\r\n                    .css('margin-top', topMargin);\r\n            },\r\n\r\n            /**\r\n             * Close.\r\n             */\r\n            close: function () {\r\n                $(this).closest('.ui-dialog').removeClass('ui-dialog-active');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Translate Inline creation\r\n         * @protected\r\n         */\r\n        _create: function () {\r\n            var $translateArea = $(this.options.translateArea);\r\n\r\n            if (!$translateArea.length) {\r\n                $translateArea = $('body');\r\n            }\r\n            $translateArea.on('edit.editTrigger', $.proxy(this._onEdit, this));\r\n\r\n            this.tmpl = mageTemplate(this.options.translateForm.template);\r\n\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         * @param {*} templateData\r\n         * @return {*|jQuery|HTMLElement}\r\n         * @private\r\n         */\r\n        _prepareContent: function (templateData) {\r\n            var data = $.extend({\r\n                items: templateData,\r\n                escape: miscUtils.escape\r\n            }, this.options.translateForm.data);\r\n\r\n            this.data = data;\r\n\r\n            return $(this.tmpl({\r\n                data: data\r\n            }));\r\n        },\r\n\r\n        /**\r\n         * Render translation form and open dialog\r\n         * @param {Object} e - object\r\n         * @protected\r\n         */\r\n        _onEdit: function (e) {\r\n            this.target = e.target;\r\n            this.element.html(this._prepareContent($(e.target).data('translate')));\r\n            this.open(e);\r\n        },\r\n\r\n        /**\r\n         * Submit.\r\n         */\r\n        submit: function () {\r\n            if (this.formIsSubmitted) {\r\n                return;\r\n            }\r\n            this._formSubmit();\r\n        },\r\n\r\n        /**\r\n         * Send ajax request on form submit\r\n         * @protected\r\n         */\r\n        _formSubmit: function () {\r\n            var parameters = $.param({\r\n                    area: this.options.area\r\n                }) + '&' + $('#' + this.options.translateForm.data.id).serialize();\r\n\r\n            this.formIsSubmitted = true;\r\n\r\n            $.ajax({\r\n                url: this.options.ajaxUrl,\r\n                type: 'POST',\r\n                data: parameters,\r\n                loaderContext: this.element,\r\n                showLoader: true\r\n            }).always($.proxy(this._formSubmitComplete, this));\r\n        },\r\n\r\n        /**\r\n         * @param {Object} response\r\n         * @private\r\n         */\r\n        _formSubmitComplete: function (response) {\r\n            this.close();\r\n            this.formIsSubmitted = false;\r\n            this._updatePlaceholder(response.responseJSON[this.data.items[0].original]);\r\n        },\r\n\r\n        /**\r\n         * @param {*} newValue\r\n         * @private\r\n         */\r\n        _updatePlaceholder: function (newValue) {\r\n            var $target = $(this.target),\r\n                translateObject = $target.data('translate')[0];\r\n\r\n            translateObject.shown = newValue;\r\n            translateObject.translated = newValue;\r\n\r\n            $target.html(newValue);\r\n        },\r\n\r\n        /**\r\n         * Destroy translateInline\r\n         */\r\n        destroy: function () {\r\n            this.element.off('.editTrigger');\r\n            this._super();\r\n        }\r\n    });\r\n\r\n    return $.mage.translateInline;\r\n});\r\n","mage/translate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/mage',\r\n    'mageTranslationDictionary',\r\n    'underscore'\r\n], function ($, mage, dictionary, _) {\r\n    'use strict';\r\n\r\n    $.extend(true, $, {\r\n        mage: {\r\n            translate: (function () {\r\n                /**\r\n                 * Key-value translations storage\r\n                 * @type {Object}\r\n                 * @private\r\n                 */\r\n                var _data = dictionary;\r\n\r\n                return {\r\n                    /**\r\n                     * Add new translation (two string parameters) or several translations (object)\r\n                     */\r\n                    add: function () {\r\n                        if (arguments.length > 1) {\r\n                            _data[arguments[0]] = arguments[1];\r\n                        } else if (typeof arguments[0] === 'object') {\r\n                            $.extend(_data, arguments[0]);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Make a translation with parsing (to handle case when _data represents tuple)\r\n                     * @param {String} text\r\n                     * @return {String}\r\n                     */\r\n                    translate: function (text) {\r\n                        return typeof _data[text] !== 'undefined' ? _data[text] : text;\r\n                    }\r\n                };\r\n            }())\r\n        }\r\n    });\r\n    $.mage.__ = $.proxy($.mage.translate.translate, $.mage.translate);\r\n\r\n    // Provide i18n wrapper to be used in underscore templates for translation\r\n    _.extend(_, {\r\n        /**\r\n         * Make a translation using $.mage.__\r\n         *\r\n         * @param {String} text\r\n         * @return {String}\r\n         */\r\n        i18n: function (text) {\r\n            return $.mage.__(text);\r\n        }\r\n    });\r\n\r\n    return $.mage.__;\r\n});\r\n","mage/trim-input.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.trimInput', {\r\n        options: {\r\n            cache: {}\r\n        },\r\n\r\n        /**\r\n         * Widget initialization\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.options.cache.input = $(this.element);\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * Event binding, will monitor change, keyup and paste events.\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            if (this.options.cache.input.length) {\r\n                this._on(this.options.cache.input, {\r\n                    'change': this._trimInput,\r\n                    'keyup': this._trimInput,\r\n                    'paste': this._trimInput\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Trim value\r\n         * @private\r\n         */\r\n        _trimInput: function () {\r\n            // Safari caret position workaround: storing carter position\r\n            var caretStart, caretEnd, input;\r\n\r\n            caretStart = this.options.cache.input.get(0).selectionStart;\r\n            caretEnd = this.options.cache.input.get(0).selectionEnd;\r\n\r\n            input = this._getInputValue().trim();\r\n\r\n            this.options.cache.input.val(input);\r\n\r\n            // Safari caret position workaround: setting caret position to previously stored values\r\n            if (caretStart !== null && caretEnd !== null) {\r\n                this.options.cache.input.get(0).setSelectionRange(caretStart, caretEnd);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get input value\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _getInputValue: function () {\r\n            return this.options.cache.input.val();\r\n        }\r\n    });\r\n\r\n    return $.mage.trimInput;\r\n});\r\n","mage/url.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* eslint-disable strict */\r\ndefine([], function () {\r\n    var baseUrl = '';\r\n\r\n    return {\r\n        /**\r\n         * @param {String} url\r\n         */\r\n        setBaseUrl: function (url) {\r\n            baseUrl = url;\r\n        },\r\n\r\n        /**\r\n         * @param {String} path\r\n         * @return {*}\r\n         */\r\n        build: function (path) {\r\n            if (path.indexOf(baseUrl) !== -1) {\r\n                return path;\r\n            }\r\n\r\n            return baseUrl + path;\r\n        }\r\n    };\r\n});\r\n","mage/validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'moment',\r\n    'mageUtils',\r\n    'jquery-ui-modules/widget',\r\n    'jquery/validate',\r\n    'mage/translate'\r\n], function ($, moment, utils) {\r\n    'use strict';\r\n\r\n    var creditCartTypes, rules, showLabel, originValidateDelegate;\r\n\r\n    $.extend(true, $, {\r\n        // @TODO: Move methods 'isEmpty', 'isEmptyNoTrim', 'parseNumber', 'stripHtml' in file with utility functions\r\n        mage: {\r\n            /**\r\n             * Check if string is empty with trim\r\n             * @param {String} value\r\n             */\r\n            isEmpty: function (value) {\r\n                return value === '' || value === undefined ||\r\n                    value == null || value.length === 0 || /^\\s+$/.test(value);\r\n            },\r\n\r\n            /**\r\n             * Check if string is empty no trim\r\n             * @param {String} value\r\n             */\r\n            isEmptyNoTrim: function (value) {\r\n                return value === '' || value == null || value.length === 0;\r\n            },\r\n\r\n            /**\r\n             * Checks if {value} is between numbers {from} and {to}\r\n             * @param {String} value\r\n             * @param {String} from\r\n             * @param {String} to\r\n             * @returns {Boolean}\r\n             */\r\n            isBetween: function (value, from, to) {\r\n                return ($.mage.isEmpty(from) || value >= $.mage.parseNumber(from)) &&\r\n                    ($.mage.isEmpty(to) || value <= $.mage.parseNumber(to));\r\n            },\r\n\r\n            /**\r\n             * Parse price string\r\n             * @param {String} value\r\n             */\r\n            parseNumber: function (value) {\r\n                var isDot, isComa;\r\n\r\n                if (typeof value !== 'string') {\r\n                    return parseFloat(value);\r\n                }\r\n                isDot = value.indexOf('.');\r\n                isComa = value.indexOf(',');\r\n\r\n                if (isDot !== -1 && isComa !== -1) {\r\n                    if (isComa > isDot) {\r\n                        value = value.replace('.', '').replace(',', '.');\r\n                    } else {\r\n                        value = value.replace(',', '');\r\n                    }\r\n                } else if (isComa !== -1) {\r\n                    value = value.replace(',', '.');\r\n                }\r\n\r\n                return parseFloat(value);\r\n            },\r\n\r\n            /**\r\n             * Removes HTML tags and space characters, numbers and punctuation.\r\n             *\r\n             * @param {String} value - Value being stripped.\r\n             * @return {String}\r\n             */\r\n            stripHtml: function (value) {\r\n                return value.replace(/<.[^<>]*?>/g, ' ').replace(/&nbsp;|&#160;/gi, ' ')\r\n                    .replace(/[0-9.(),;:!?%#$'\"_+=\\/-]*/g, '');\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @param {String} name\r\n     * @param {*} method\r\n     * @param {*} message\r\n     * @param {*} dontSkip\r\n     */\r\n    $.validator.addMethod = function (name, method, message, dontSkip) {\r\n        $.validator.methods[name] = method;\r\n        $.validator.messages[name] = message !== undefined ? message : $.validator.messages[name];\r\n\r\n        if (method.length < 3 || dontSkip) {\r\n            $.validator.addClassRules(name, $.validator.normalizeRule(name));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Javascript object with credit card types\r\n     * 0 - regexp for card number\r\n     * 1 - regexp for cvn\r\n     * 2 - check or not credit card number trough Luhn algorithm by\r\n     */\r\n    creditCartTypes = {\r\n        'SO': [\r\n            new RegExp('^(6334[5-9]([0-9]{11}|[0-9]{13,14}))|(6767([0-9]{12}|[0-9]{14,15}))$'),\r\n            new RegExp('^([0-9]{3}|[0-9]{4})?$'),\r\n            true\r\n        ],\r\n        'SM': [\r\n            new RegExp('(^(5[0678])[0-9]{11,18}$)|(^(6[^05])[0-9]{11,18}$)|' +\r\n                '(^(601)[^1][0-9]{9,16}$)|(^(6011)[0-9]{9,11}$)|(^(6011)[0-9]{13,16}$)|' +\r\n                '(^(65)[0-9]{11,13}$)|(^(65)[0-9]{15,18}$)|(^(49030)[2-9]([0-9]{10}$|[0-9]{12,13}$))|' +\r\n                '(^(49033)[5-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49110)[1-2]([0-9]{10}$|[0-9]{12,13}$))|' +\r\n                '(^(49117)[4-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49118)[0-2]([0-9]{10}$|[0-9]{12,13}$))|' +\r\n                '(^(4936)([0-9]{12}$|[0-9]{14,15}$))'), new RegExp('^([0-9]{3}|[0-9]{4})?$'),\r\n            true\r\n        ],\r\n        'VI': [new RegExp('^4[0-9]{12}([0-9]{3})?$'), new RegExp('^[0-9]{3}$'), true],\r\n        'MC': [\r\n            new RegExp('^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$'),\r\n            new RegExp('^[0-9]{3}$'),\r\n            true\r\n        ],\r\n        'AE': [new RegExp('^3[47][0-9]{13}$'), new RegExp('^[0-9]{4}$'), true],\r\n        'DI': [new RegExp('^(6011(0|[2-4]|74|7[7-9]|8[6-9]|9)|6(4[4-9]|5))\\\\d*$'), new RegExp('^[0-9]{3}$'), true],\r\n        'JCB': [new RegExp('^35(2[8-9]|[3-8])\\\\d*$'), new RegExp('^[0-9]{3}$'), true],\r\n        'DN': [new RegExp('^(3(0[0-5]|095|6|[8-9]))\\\\d*$'), new RegExp('^[0-9]{3}$'), true],\r\n        'UN': [\r\n            new RegExp('^(622(1(2[6-9]|[3-9])|[3-8]|9([[0-1]|2[0-5]))|62[4-6]|628([2-8]))\\\\d*?$'),\r\n            new RegExp('^[0-9]{3}$'),\r\n            true\r\n        ],\r\n        'MI': [new RegExp('^(5(0|[6-9])|63|67(?!59|6770|6774))\\\\d*$'), new RegExp('^[0-9]{3}$'), true],\r\n        'MD': [new RegExp('^6759(?!24|38|40|6[3-9]|70|76)|676770|676774\\\\d*$'), new RegExp('^[0-9]{3}$'), true]\r\n    };\r\n\r\n    /**\r\n     * validate credit card number using mod10\r\n     * @param {String} s\r\n     * @return {Boolean}\r\n     */\r\n    function validateCreditCard(s) {\r\n        // remove non-numerics\r\n        var v = '0123456789',\r\n            w = '',\r\n            i, j, k, m, c, a, x;\r\n\r\n        for (i = 0; i < s.length; i++) {\r\n            x = s.charAt(i);\r\n\r\n            if (v.indexOf(x, 0) !== -1) {\r\n                w += x;\r\n            }\r\n        }\r\n        // validate number\r\n        j = w.length / 2;\r\n        k = Math.floor(j);\r\n        m = Math.ceil(j) - k;\r\n        c = 0;\r\n\r\n        for (i = 0; i < k; i++) {\r\n            a = w.charAt(i * 2 + m) * 2;\r\n            c += a > 9 ? Math.floor(a / 10 + a % 10) : a;\r\n        }\r\n\r\n        for (i = 0; i < k + m; i++) {\r\n            c += w.charAt(i * 2 + 1 - m) * 1;\r\n        }\r\n\r\n        return c % 10 === 0;\r\n    }\r\n\r\n    /**\r\n     * validate all table required inputs at once, using single hidden input\r\n     * @param {String} value\r\n     * @param {HTMLElement} element\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    function tableSingleValidation(value, element) {\r\n        var empty = $(element).closest('table')\r\n            .find('input.required-option:visible')\r\n            .filter(function (i, el) {\r\n                if ($(el).is('disabled')) {\r\n                    return $.mage.isEmpty(el.value);\r\n                }\r\n            })\r\n            .length;\r\n\r\n        return empty === 0;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {float} qty\r\n     * @param {float} qtyIncrements\r\n     * @returns {float}\r\n     */\r\n    function resolveModulo(qty, qtyIncrements) {\r\n        var divideEpsilon = 10000,\r\n            epsilon,\r\n            remainder;\r\n\r\n        while (qtyIncrements < 1) {\r\n            qty *= 10;\r\n            qtyIncrements *= 10;\r\n        }\r\n\r\n        epsilon = qtyIncrements / divideEpsilon;\r\n        remainder = qty % qtyIncrements;\r\n\r\n        if (Math.abs(remainder - qtyIncrements) < epsilon ||\r\n            Math.abs(remainder) < epsilon) {\r\n            remainder = 0;\r\n        }\r\n\r\n        return remainder;\r\n    }\r\n\r\n    /**\r\n     * Collection of validation rules including rules from additional-methods.js\r\n     * @type {Object}\r\n     */\r\n    rules = {\r\n        'max-words': [\r\n            function (value, element, params) {\r\n                return this.optional(element) || $.mage.stripHtml(value).match(/\\b\\w+\\b/g).length <= params;\r\n            },\r\n            $.mage.__('Please enter {0} words or less.')\r\n        ],\r\n        'min-words': [\r\n            function (value, element, params) {\r\n                return this.optional(element) || $.mage.stripHtml(value).match(/\\b\\w+\\b/g).length >= params;\r\n            },\r\n            $.mage.__('Please enter at least {0} words.')\r\n        ],\r\n        'range-words': [\r\n            function (value, element, params) {\r\n                return this.optional(element) ||\r\n                    $.mage.stripHtml(value).match(/\\b\\w+\\b/g).length >= params[0] &&\r\n                    value.match(/bw+b/g).length < params[1];\r\n            },\r\n            $.mage.__('Please enter between {0} and {1} words.')\r\n        ],\r\n        'letters-with-basic-punc': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^[a-z\\-.,()'\\\"\\s]+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters or punctuation only please')\r\n        ],\r\n        'alphanumeric': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^\\w+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters, numbers, spaces or underscores only please')\r\n        ],\r\n        'letters-only': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^[a-z]+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters only please')\r\n        ],\r\n        'no-whitespace': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^\\S+$/i.test(value);\r\n            },\r\n            $.mage.__('No white space please')\r\n        ],\r\n        'no-marginal-whitespace': [\r\n            function (value, element) {\r\n                return this.optional(element) || !/^\\s+|\\s+$/i.test(value);\r\n            },\r\n            $.mage.__('No marginal white space please')\r\n        ],\r\n        'zip-range': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^90[2-5]-\\d{2}-\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Your ZIP-code must be in the range 902xx-xxxx to 905-xx-xxxx')\r\n        ],\r\n        'integer': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^-?\\d+$/.test(value);\r\n            },\r\n            $.mage.__('A positive or negative non-decimal number please')\r\n        ],\r\n        'vinUS': [\r\n            function (v) {\r\n                var i, n, d, f, cd, cdv, LL, VL, FL, rs;\r\n\r\n                /* eslint-disable max-depth */\r\n                if (v.length !== 17) {\r\n                    return false;\r\n                }\r\n\r\n                LL = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L',\r\n                    'M', 'N', 'P', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n                VL = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 7, 9, 2, 3, 4, 5, 6, 7, 8, 9];\r\n                FL = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2];\r\n                rs = 0;\r\n\r\n                for (i = 0; i < 17; i++) {\r\n                    f = FL[i];\r\n                    d = v.slice(i, i + 1);\r\n\r\n                    if (i === 8) {\r\n                        cdv = d;\r\n                    }\r\n\r\n                    if (!isNaN(d)) {\r\n                        d *= f;\r\n                    } else {\r\n                        for (n = 0; n < LL.length; n++) {\r\n                            if (d.toUpperCase() === LL[n]) {\r\n                                d = VL[n];\r\n                                d *= f;\r\n\r\n                                if (isNaN(cdv) && n === 8) {\r\n                                    cdv = LL[n];\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    rs += d;\r\n                }\r\n\r\n                /* eslint-enable max-depth */\r\n                cd = rs % 11;\r\n\r\n                if (cd === 10) {\r\n                    cd = 'X';\r\n                }\r\n\r\n                if (cd === cdv) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('The specified vehicle identification number (VIN) is invalid.')\r\n        ],\r\n        'dateITA': [\r\n            function (value, element) {\r\n                var check = false,\r\n                    re = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/,\r\n                    adata, gg, mm, aaaa, xdata;\r\n\r\n                if (re.test(value)) {\r\n                    adata = value.split('/');\r\n                    gg = parseInt(adata[0], 10);\r\n                    mm = parseInt(adata[1], 10);\r\n                    aaaa = parseInt(adata[2], 10);\r\n                    xdata = new Date(aaaa, mm - 1, gg);\r\n\r\n                    if (xdata.getFullYear() === aaaa &&\r\n                        xdata.getMonth() === mm - 1 &&\r\n                        xdata.getDate() === gg\r\n                    ) {\r\n                        check = true;\r\n                    } else {\r\n                        check = false;\r\n                    }\r\n                } else {\r\n                    check = false;\r\n                }\r\n\r\n                return this.optional(element) || check;\r\n            },\r\n            $.mage.__('Please enter a correct date')\r\n        ],\r\n        'dateNL': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^\\d\\d?[\\.\\/-]\\d\\d?[\\.\\/-]\\d\\d\\d?\\d?$/.test(value);\r\n            },\r\n            'Vul hier een geldige datum in.'\r\n        ],\r\n        'time': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^([01]\\d|2[0-3])(:[0-5]\\d){0,2}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid time, between 00:00 and 23:59')\r\n        ],\r\n        'time12h': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^((0?[1-9]|1[012])(:[0-5]\\d){0,2}(\\s[AP]M))$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid time, between 00:00 am and 12:00 pm')\r\n        ],\r\n        'phoneUS': [\r\n            function (phoneNumber, element) {\r\n                phoneNumber = phoneNumber.replace(/\\s+/g, '');\r\n\r\n                return this.optional(element) || phoneNumber.length > 9 &&\r\n                    phoneNumber.match(/^(1-?)?(\\([2-9]\\d{2}\\)|[2-9]\\d{2})-?[2-9]\\d{2}-?\\d{4}$/);\r\n            },\r\n            $.mage.__('Please specify a valid phone number')\r\n        ],\r\n        'phoneUK': [\r\n            function (phoneNumber, element) {\r\n                return this.optional(element) || phoneNumber.length > 9 &&\r\n                    phoneNumber.match(/^(\\(?(0|\\+44)[1-9]{1}\\d{1,4}?\\)?\\s?\\d{3,4}\\s?\\d{3,4})$/);\r\n            },\r\n            $.mage.__('Please specify a valid phone number')\r\n        ],\r\n        'mobileUK': [\r\n            function (phoneNumber, element) {\r\n                return this.optional(element) || phoneNumber.length > 9 &&\r\n                    phoneNumber.match(/^((0|\\+44)7\\d{3}\\s?\\d{6})$/);\r\n            },\r\n            $.mage.__('Please specify a valid mobile number')\r\n        ],\r\n        'stripped-min-length': [\r\n            function (value, element, param) {\r\n                return value.length >= param;\r\n            },\r\n            $.mage.__('Please enter at least {0} characters')\r\n        ],\r\n\r\n        /* detect chars that would require more than 3 bytes */\r\n        'validate-no-utf8mb4-characters': [\r\n            function (value) {\r\n                var validator = this,\r\n                    message = $.mage.__('Please remove invalid characters: {0}.'),\r\n                    matches = value.match(/(?:[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g),\r\n                    result = matches === null;\r\n\r\n                if (!result) {\r\n                    validator.charErrorMessage = message.replace('{0}', matches.join());\r\n                }\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.charErrorMessage;\r\n            }\r\n        ],\r\n\r\n        /* eslint-disable max-len */\r\n        'email2': [\r\n            function (value, element) {\r\n                return this.optional(element) ||\r\n                    /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i.test(value);\r\n            },\r\n            $.validator.messages.email\r\n        ],\r\n        'url2': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(value);\r\n            },\r\n            $.validator.messages.url\r\n        ],\r\n\r\n        /* eslint-enable max-len */\r\n        'credit-card-types': [\r\n            function (value, element, param) {\r\n                var validTypes;\r\n\r\n                if (/[^0-9-]+/.test(value)) {\r\n                    return false;\r\n                }\r\n                value = value.replace(/\\D/g, '');\r\n\r\n                validTypes = 0x0000;\r\n\r\n                if (param.mastercard) {\r\n                    validTypes |= 0x0001;\r\n                }\r\n\r\n                if (param.visa) {\r\n                    validTypes |= 0x0002;\r\n                }\r\n\r\n                if (param.amex) {\r\n                    validTypes |= 0x0004;\r\n                }\r\n\r\n                if (param.dinersclub) {\r\n                    validTypes |= 0x0008;\r\n                }\r\n\r\n                if (param.enroute) {\r\n                    validTypes |= 0x0010;\r\n                }\r\n\r\n                if (param.discover) {\r\n                    validTypes |= 0x0020;\r\n                }\r\n\r\n                if (param.jcb) {\r\n                    validTypes |= 0x0040;\r\n                }\r\n\r\n                if (param.unknown) {\r\n                    validTypes |= 0x0080;\r\n                }\r\n\r\n                if (param.all) {\r\n                    validTypes = 0x0001 | 0x0002 | 0x0004 | 0x0008 | 0x0010 | 0x0020 | 0x0040 | 0x0080;\r\n                }\r\n\r\n                if (validTypes & 0x0001 && /^(51|52|53|54|55)/.test(value)) { //mastercard\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0002 && /^(4)/.test(value)) { //visa\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0004 && /^(34|37)/.test(value)) { //amex\r\n                    return value.length === 15;\r\n                }\r\n\r\n                if (validTypes & 0x0008 && /^(300|301|302|303|304|305|36|38)/.test(value)) { //dinersclub\r\n                    return value.length === 14;\r\n                }\r\n\r\n                if (validTypes & 0x0010 && /^(2014|2149)/.test(value)) { //enroute\r\n                    return value.length === 15;\r\n                }\r\n\r\n                if (validTypes & 0x0020 && /^(6011)/.test(value)) { //discover\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0040 && /^(3)/.test(value)) { //jcb\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0040 && /^(2131|1800)/.test(value)) { //jcb\r\n                    return value.length === 15;\r\n                }\r\n\r\n                if (validTypes & 0x0080) { //unknown\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n\r\n        /* eslint-disable max-len */\r\n        'ipv4': [\r\n            function (value, element) {\r\n                return this.optional(element) ||\r\n                    /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid IP v4 address.')\r\n        ],\r\n        'ipv6': [\r\n            function (value, element) {\r\n                return this.optional(element) || /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid IP v6 address.')\r\n        ],\r\n\r\n        /* eslint-enable max-len */\r\n        'pattern': [\r\n            function (value, element, param) {\r\n                return this.optional(element) || new RegExp(param).test(value);\r\n            },\r\n            $.mage.__('Invalid format.')\r\n        ],\r\n        'allow-container-className': [\r\n            function (element) {\r\n                if (element.type === 'radio' || element.type === 'checkbox') {\r\n                    return $(element).hasClass('change-container-classname');\r\n                }\r\n            },\r\n            ''\r\n        ],\r\n        'validate-no-html-tags': [\r\n            function (value) {\r\n                return !/<(\\/)?\\w+/.test(value);\r\n            },\r\n            $.mage.__('HTML tags are not allowed.')\r\n        ],\r\n        'validate-select': [\r\n            function (value) {\r\n                return value !== 'none' && value != null && value.length !== 0;\r\n            },\r\n            $.mage.__('Please select an option.')\r\n        ],\r\n        'validate-no-empty': [\r\n            function (value) {\r\n                return !$.mage.isEmpty(value);\r\n            },\r\n            $.mage.__('Empty Value.')\r\n        ],\r\n        'validate-alphanum-with-spaces': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[a-zA-Z0-9 ]+$/.test(v);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or spaces only in this field.')\r\n        ],\r\n        'validate-data': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[A-Za-z]+[A-Za-z0-9_]+$/.test(v);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.') //eslint-disable-line max-len\r\n        ],\r\n        'validate-street': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[ \\w]{3,}([A-Za-z]\\.)?([ \\w]*\\#\\d+)?(\\r\\n| )[ \\w]{3,}/.test(v);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9), spaces and \"#\" in this field.')\r\n        ],\r\n        'validate-phoneStrict': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\r\n        ],\r\n        'validate-phoneLax': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) ||\r\n                    /^((\\d[\\-. ]?)?((\\(\\d{3}\\))|\\d{3}))?[\\-. ]?\\d{3}[\\-. ]?\\d{4}$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\r\n        ],\r\n        'validate-fax': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid fax number (Ex: 123-456-7890).')\r\n        ],\r\n        'validate-email': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*@([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*\\.(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]){2,})$/i.test(v); //eslint-disable-line max-len\r\n            },\r\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\r\n        ],\r\n        'validate-emailSender': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[\\S ]+$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\r\n        ],\r\n        'validate-password': [\r\n            function (v) {\r\n                var pass;\r\n\r\n                if (v == null) {\r\n                    return false;\r\n                }\r\n                //strip leading and trailing spaces\r\n                pass = v.trim();\r\n\r\n                if (!pass.length) {\r\n                    return true;\r\n                }\r\n\r\n                return !(pass.length > 0 && pass.length < 6);\r\n            },\r\n            $.mage.__('Please enter 6 or more characters. Leading and trailing spaces will be ignored.')\r\n        ],\r\n        'validate-admin-password': [\r\n            function (v) {\r\n                var pass;\r\n\r\n                if (v == null) {\r\n                    return false;\r\n                }\r\n                pass = v.trim();\r\n                // strip leading and trailing spaces\r\n                if (pass.length === 0) {\r\n                    return true;\r\n                }\r\n\r\n                if (!/[a-z]/i.test(v) || !/[0-9]/.test(v)) {\r\n                    return false;\r\n                }\r\n\r\n                if (pass.length < 7) {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter 7 or more characters, using both numeric and alphabetic.')\r\n        ],\r\n        'validate-customer-password': [\r\n            function (v, elm) {\r\n                var validator = this,\r\n                    counter = 0,\r\n                    passwordMinLength = $(elm).data('password-min-length'),\r\n                    passwordMinCharacterSets = $(elm).data('password-min-character-sets'),\r\n                    pass = v.trim(),\r\n                    result = pass.length >= passwordMinLength;\r\n\r\n                if (result === false) {\r\n                    validator.passwordErrorMessage = $.mage.__('Minimum length of this field must be equal or greater than %1 symbols. Leading and trailing spaces will be ignored.').replace('%1', passwordMinLength); //eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                if (pass.match(/\\d+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (pass.match(/[a-z]+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (pass.match(/[A-Z]+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (pass.match(/[^a-zA-Z0-9]+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (counter < passwordMinCharacterSets) {\r\n                    result = false;\r\n                    validator.passwordErrorMessage = $.mage.__('Minimum of different classes of characters in password is %1. Classes of characters: Lower Case, Upper Case, Digits, Special Characters.').replace('%1', passwordMinCharacterSets); //eslint-disable-line max-len\r\n                }\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.passwordErrorMessage;\r\n            }\r\n        ],\r\n        'validate-url': [\r\n            function (v) {\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n                v = (v || '').replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n\r\n                return (/^(http|https|ftp):\\/\\/(([A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))(\\.[A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))*)(:(\\d+))?(\\/[A-Z0-9~](([A-Z0-9_~-]|\\.)*[A-Z0-9~]|))*\\/?(.*)?$/i).test(v); //eslint-disable-line max-len\r\n\r\n            },\r\n            $.mage.__('Please enter a valid URL. Protocol is required (http://, https:// or ftp://).')\r\n        ],\r\n        'validate-clean-url': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^(http|https|ftp):\\/\\/(([A-Z0-9][A-Z0-9_-]*)(\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(v) || /^(www)((\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(v); //eslint-disable-line max-len\r\n\r\n            },\r\n            $.mage.__('Please enter a valid URL. For example http://www.example.com or www.example.com.')\r\n        ],\r\n        'validate-xml-identifier': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[A-Z][A-Z0-9_\\/-]*$/i.test(v);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid XML-identifier (Ex: something_1, block5, id-4).')\r\n        ],\r\n        'validate-ssn': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^\\d{3}-?\\d{2}-?\\d{4}$/.test(v);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid social security number (Ex: 123-45-6789).')\r\n        ],\r\n        'validate-zip-us': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(v);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid zip code (Ex: 90602 or 90602-1234).')\r\n        ],\r\n        'validate-date-au': [\r\n            function (v) {\r\n                var regex, d;\r\n\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n                regex = /^(\\d{2})\\/(\\d{2})\\/(\\d{4})$/;\r\n\r\n                if ($.mage.isEmpty(v) || !regex.test(v)) {\r\n                    return false;\r\n                }\r\n                d = new Date(v.replace(regex, '$2/$1/$3'));\r\n\r\n                return parseInt(RegExp.$2, 10) === 1 + d.getMonth() &&\r\n                    parseInt(RegExp.$1, 10) === d.getDate() &&\r\n                    parseInt(RegExp.$3, 10) === d.getFullYear();\r\n\r\n            },\r\n            $.mage.__('Please use this date format: dd/mm/yyyy. For example 17/03/2006 for the 17th of March, 2006.')\r\n        ],\r\n        'validate-currency-dollar': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^\\$?\\-?([1-9]{1}[0-9]{0,2}(\\,[0-9]{3})*(\\.[0-9]{0,2})?|[1-9]{1}\\d*(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|(\\.[0-9]{1,2})?)$/.test(v); //eslint-disable-line max-len\r\n\r\n            },\r\n            $.mage.__('Please enter a valid $ amount. For example $100.00.')\r\n        ],\r\n        'validate-not-negative-number': [\r\n            function (v) {\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n                v = $.mage.parseNumber(v);\r\n\r\n                return !isNaN(v) && v >= 0;\r\n\r\n            },\r\n            $.mage.__('Please enter a number 0 or greater in this field.')\r\n        ],\r\n        // validate-not-negative-number should be replaced in all places with this one and then removed\r\n        'validate-zero-or-greater': [\r\n            function (v) {\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n                v = $.mage.parseNumber(v);\r\n\r\n                return !isNaN(v) && v >= 0;\r\n\r\n            },\r\n            $.mage.__('Please enter a number 0 or greater in this field.')\r\n        ],\r\n        'validate-greater-than-zero': [\r\n            function (v) {\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n                v = $.mage.parseNumber(v);\r\n\r\n                return !isNaN(v) && v > 0;\r\n            },\r\n            $.mage.__('Please enter a number greater than 0 in this field.')\r\n        ],\r\n        'validate-css-length': [\r\n            function (v) {\r\n                if (v !== '') {\r\n                    return (/^[0-9]*\\.*[0-9]+(px|pc|pt|ex|em|mm|cm|in|%)?$/).test(v);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please input a valid CSS-length (Ex: 100px, 77pt, 20em, .5ex or 50%).')\r\n        ],\r\n        // Additional methods\r\n        'validate-number': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || !isNaN($.mage.parseNumber(v)) && /^\\s*-?\\d*(\\.\\d*)?\\s*$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        'required-number': [\r\n            function (v) {\r\n                return !!v.length;\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        'validate-number-range': [\r\n            function (v, elm, param) {\r\n                var numValue, dataAttrRange, classNameRange, result, range, m, classes, ii;\r\n\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n\r\n                numValue = $.mage.parseNumber(v);\r\n\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                dataAttrRange = /^(-?[\\d.,]+)?-(-?[\\d.,]+)?$/;\r\n                classNameRange = /^number-range-(-?[\\d.,]+)?-(-?[\\d.,]+)?$/;\r\n                result = true;\r\n                range = param;\r\n\r\n                if (typeof range === 'string') {\r\n                    m = dataAttrRange.exec(range);\r\n\r\n                    if (m) {\r\n                        result = result && $.mage.isBetween(numValue, m[1], m[2]);\r\n                    } else {\r\n                        result = false;\r\n                    }\r\n                } else if (elm && elm.className) {\r\n                    classes = elm.className.split(' ');\r\n                    ii = classes.length;\r\n\r\n                    while (ii--) {\r\n                        range = classes[ii];\r\n                        m = classNameRange.exec(range);\r\n\r\n                        if (m) { //eslint-disable-line max-depth\r\n                            result = result && $.mage.isBetween(numValue, m[1], m[2]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.'),\r\n            true\r\n        ],\r\n        'validate-digits': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || !/[^\\d]/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        'validate-forbidden-extensions': [\r\n            function (v, elem) {\r\n                var forbiddenExtensions = $(elem).attr('data-validation-params'),\r\n                    forbiddenExtensionsArray = forbiddenExtensions.split(','),\r\n                    extensionsArray = v.split(','),\r\n                    result = true;\r\n\r\n                this.validateExtensionsMessage = $.mage.__('Forbidden extensions has been used. Avoid usage of ') +\r\n                    forbiddenExtensions;\r\n\r\n                $.each(extensionsArray, function (key, extension) {\r\n                    if (forbiddenExtensionsArray.indexOf(extension) !== -1) {\r\n                        result = false;\r\n                    }\r\n                });\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.validateExtensionsMessage;\r\n            }\r\n        ],\r\n        'validate-digits-range': [\r\n            function (v, elm, param) {\r\n                var numValue, dataAttrRange, classNameRange, result, range, m, classes, ii;\r\n\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n\r\n                numValue = $.mage.parseNumber(v);\r\n\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                dataAttrRange = /^(-?\\d+)?-(-?\\d+)?$/;\r\n                classNameRange = /^digits-range-(-?\\d+)?-(-?\\d+)?$/;\r\n                result = true;\r\n                range = param;\r\n\r\n                if (typeof range === 'string') {\r\n                    m = dataAttrRange.exec(range);\r\n\r\n                    if (m) {\r\n                        result = result && $.mage.isBetween(numValue, m[1], m[2]);\r\n                    } else {\r\n                        result = false;\r\n                    }\r\n                } else if (elm && elm.className) {\r\n                    classes = elm.className.split(' ');\r\n                    ii = classes.length;\r\n\r\n                    while (ii--) {\r\n                        range = classes[ii];\r\n                        m = classNameRange.exec(range);\r\n\r\n                        if (m) { //eslint-disable-line max-depth\r\n                            result = result && $.mage.isBetween(numValue, m[1], m[2]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.'),\r\n            true\r\n        ],\r\n        'validate-range': [\r\n            function (v, elm) {\r\n                var minValue, maxValue, ranges, reRange, result, values,\r\n                    i, name, validRange, minValidRange, maxValidRange;\r\n\r\n                if ($.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                } else if ($.validator.methods['validate-digits'] && $.validator.methods['validate-digits'](v)) {\r\n                    minValue = maxValue = $.mage.parseNumber(v);\r\n                } else {\r\n                    ranges = /^(-?\\d+)?-(-?\\d+)?$/.exec(v);\r\n\r\n                    if (ranges) {\r\n                        minValue = $.mage.parseNumber(ranges[1]);\r\n                        maxValue = $.mage.parseNumber(ranges[2]);\r\n\r\n                        if (minValue > maxValue) { //eslint-disable-line max-depth\r\n                            return false;\r\n                        }\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }\r\n                reRange = /^range-(-?\\d+)?-(-?\\d+)?$/;\r\n                result = true;\r\n                values = $(elm).prop('class').split(' ');\r\n\r\n                for (i = values.length - 1; i >= 0; i--) {\r\n                    name = values[i];\r\n                    validRange = reRange.exec(name);\r\n\r\n                    if (validRange) {\r\n                        minValidRange = $.mage.parseNumber(validRange[1]);\r\n                        maxValidRange = $.mage.parseNumber(validRange[2]);\r\n                        result = result &&\r\n                            (isNaN(minValidRange) || minValue >= minValidRange) &&\r\n                            (isNaN(maxValidRange) || maxValue <= maxValidRange);\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.')\r\n        ],\r\n        'validate-alpha': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[a-zA-Z]+$/.test(v);\r\n            },\r\n            $.mage.__('Please use letters only (a-z or A-Z) in this field.')\r\n        ],\r\n        'validate-code': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[a-zA-Z]+[a-zA-Z0-9_]+$/.test(v);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.') //eslint-disable-line max-len\r\n        ],\r\n        'validate-alphanum': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[a-zA-Z0-9]+$/.test(v);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z) or numbers (0-9) in this field. No spaces or other characters are allowed.') //eslint-disable-line max-len\r\n        ],\r\n        'validate-not-number-first': [\r\n            function (value) {\r\n                return $.mage.isEmptyNoTrim(value) || /^[^0-9-\\.].*$/.test(value.trim());\r\n            },\r\n            $.mage.__('First character must be letter.')\r\n        ],\r\n        'validate-date': [\r\n            function (value, params, additionalParams) {\r\n                var test = moment(value, utils.convertToMomentFormat(additionalParams.dateFormat));\r\n\r\n                return $.mage.isEmptyNoTrim(value) || test.isValid();\r\n            },\r\n            $.mage.__('Please enter a valid date.')\r\n\r\n        ],\r\n        'validate-date-range': [\r\n            function (v, elm) {\r\n                var m = /\\bdate-range-(\\w+)-(\\w+)\\b/.exec(elm.className),\r\n                    currentYear, normalizedTime, dependentElements;\r\n\r\n                if (!m || m[2] === 'to' || $.mage.isEmptyNoTrim(v)) {\r\n                    return true;\r\n                }\r\n\r\n                currentYear = new Date().getFullYear() + '';\r\n\r\n                /**\r\n                 * @param {String} vd\r\n                 * @return {Number}\r\n                 */\r\n                normalizedTime = function (vd) {\r\n                    vd = vd.split(/[.\\/]/);\r\n\r\n                    if (vd[2] && vd[2].length < 4) {\r\n                        vd[2] = currentYear.substr(0, vd[2].length) + vd[2];\r\n                    }\r\n\r\n                    return new Date(vd.join('/')).getTime();\r\n                };\r\n\r\n                dependentElements = $(elm.form).find('.validate-date-range.date-range-' + m[1] + '-to');\r\n\r\n                return !dependentElements.length || $.mage.isEmptyNoTrim(dependentElements[0].value) ||\r\n                    normalizedTime(v) <= normalizedTime(dependentElements[0].value);\r\n            },\r\n            $.mage.__('Make sure the To Date is later than or the same as the From Date.')\r\n        ],\r\n        'validate-cpassword': [\r\n            function () {\r\n                var conf = $('#confirmation').length > 0 ? $('#confirmation') : $($('.validate-cpassword')[0]),\r\n                    pass = false,\r\n                    passwordElements, i, passwordElement;\r\n\r\n                if ($('#password')) {\r\n                    pass = $('#password');\r\n                }\r\n                passwordElements = $('.validate-password');\r\n\r\n                for (i = 0; i < passwordElements.length; i++) {\r\n                    passwordElement = $(passwordElements[i]);\r\n\r\n                    if (passwordElement.closest('form').attr('id') === conf.closest('form').attr('id')) {\r\n                        pass = passwordElement;\r\n                    }\r\n                }\r\n\r\n                if ($('.validate-admin-password').length) {\r\n                    pass = $($('.validate-admin-password')[0]);\r\n                }\r\n\r\n                return pass.val() === conf.val();\r\n            },\r\n            $.mage.__('Please make sure your passwords match.')\r\n        ],\r\n        'validate-identifier': [\r\n            function (v) {\r\n                return $.mage.isEmptyNoTrim(v) || /^[a-z0-9][a-z0-9_\\/-]+(\\.[a-z0-9_-]+)?$/.test(v);\r\n            },\r\n            $.mage.__('Please enter a valid URL Key (Ex: \"example-page\", \"example-page.html\" or \"anotherlevel/example-page\").') //eslint-disable-line max-len\r\n        ],\r\n        'validate-zip-international': [\r\n\r\n            /*function(v) {\r\n             // @TODO: Cleanup\r\n             return Validation.get('IsEmpty').test(v) ||\r\n             /(^[A-z0-9]{2,10}([\\s]{0,1}|[\\-]{0,1})[A-z0-9]{2,10}$)/.test(v);\r\n             }*/\r\n            function () {\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a valid zip code.')\r\n        ],\r\n        'validate-one-required': [\r\n            function (v, elm) {\r\n                var p = $(elm).parent(),\r\n                    options = p.find('input');\r\n\r\n                return options.map(function (el) {\r\n                    return $(el).val();\r\n                }).length > 0;\r\n            },\r\n            $.mage.__('Please select one of the options above.')\r\n        ],\r\n        'validate-state': [\r\n            function (v) {\r\n                return v !== 0;\r\n            },\r\n            $.mage.__('Please select State/Province.')\r\n        ],\r\n        'required-file': [\r\n            function (v, elm) {\r\n                var result = !$.mage.isEmptyNoTrim(v),\r\n                    ovId;\r\n\r\n                if (!result) {\r\n                    ovId = $('#' + $(elm).attr('id') + '_value');\r\n\r\n                    if (ovId.length > 0) {\r\n                        result = !$.mage.isEmptyNoTrim(ovId.val());\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('Please select a file.')\r\n        ],\r\n        'validate-ajax-error': [\r\n            function (v, element) {\r\n                element = $(element);\r\n                element.on('change.ajaxError', function () {\r\n                    element.removeClass('validate-ajax-error');\r\n                    element.off('change.ajaxError');\r\n                });\r\n\r\n                return !element.hasClass('validate-ajax-error');\r\n            },\r\n            ''\r\n        ],\r\n        'validate-optional-datetime': [\r\n            function (v, elm, param) {\r\n                var dateTimeParts = $('.datetime-picker[id^=\"options_' + param + '\"]'),\r\n                    hasWithValue = false,\r\n                    hasWithNoValue = false,\r\n                    pattern = /day_part$/i,\r\n                    i;\r\n\r\n                for (i = 0; i < dateTimeParts.length; i++) {\r\n                    if (!pattern.test($(dateTimeParts[i]).attr('id'))) {\r\n                        if ($(dateTimeParts[i]).val() === 's') { //eslint-disable-line max-depth\r\n                            hasWithValue = true;\r\n                        } else {\r\n                            hasWithNoValue = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return hasWithValue ^ hasWithNoValue;\r\n            },\r\n            $.mage.__('The field isn\\'t complete.')\r\n        ],\r\n        'validate-required-datetime': [\r\n            function (v, elm, param) {\r\n                var dateTimeParts = $('.datetime-picker[id^=\"options_' + param + '\"]'),\r\n                    i;\r\n\r\n                for (i = 0; i < dateTimeParts.length; i++) {\r\n                    if (dateTimeParts[i].value === '') {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('This is a required field.')\r\n        ],\r\n        'validate-one-required-by-name': [\r\n            function (v, elm, selector) {\r\n                var name = elm.name.replace(/([\\\\\"])/g, '\\\\$1'),\r\n                    container = this.currentForm;\r\n\r\n                selector = selector === true ? 'input[name=\"' + name + '\"]:checked' : selector;\r\n\r\n                return !!container.querySelectorAll(selector).length;\r\n            },\r\n            $.mage.__('Please select one of the options.')\r\n        ],\r\n        'less-than-equals-to': [\r\n            function (value, element, params) {\r\n                if ($.isNumeric($(params).val()) && $.isNumeric(value)) {\r\n                    this.lteToVal = $(params).val();\r\n\r\n                    return parseFloat(value) <= parseFloat($(params).val());\r\n                }\r\n\r\n                return true;\r\n            },\r\n            function () {\r\n                var message = $.mage.__('Please enter a value less than or equal to %s.');\r\n\r\n                return message.replace('%s', this.lteToVal);\r\n            }\r\n        ],\r\n        'greater-than-equals-to': [\r\n            function (value, element, params) {\r\n                if ($.isNumeric($(params).val()) && $.isNumeric(value)) {\r\n                    this.gteToVal = $(params).val();\r\n\r\n                    return parseFloat(value) >= parseFloat($(params).val());\r\n                }\r\n\r\n                return true;\r\n            },\r\n            function () {\r\n                var message = $.mage.__('Please enter a value greater than or equal to %s.');\r\n\r\n                return message.replace('%s', this.gteToVal);\r\n            }\r\n        ],\r\n        'validate-emails': [\r\n            function (value) {\r\n                var validRegexp, emails, i;\r\n\r\n                if ($.mage.isEmpty(value)) {\r\n                    return true;\r\n                }\r\n                validRegexp = /^([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*@([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*\\.(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]){2,})$/i; //eslint-disable-line max-len\r\n                emails = value.split(/[\\s\\n\\,]+/g);\r\n\r\n                for (i = 0; i < emails.length; i++) {\r\n                    if (!validRegexp.test(emails[i].trim())) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter valid email addresses, separated by commas. For example, johndoe@domain.com, johnsmith@domain.com.') //eslint-disable-line max-len\r\n        ],\r\n\r\n        'validate-cc-type-select': [\r\n\r\n            /**\r\n             * Validate credit card type matches credit card number\r\n             * @param {*} value - select credit card type\r\n             * @param {*} element - element contains the select box for credit card types\r\n             * @param {*} params - selector for credit card number\r\n             * @return {Boolean}\r\n             */\r\n            function (value, element, params) {\r\n                if (value && params && creditCartTypes[value]) {\r\n                    return creditCartTypes[value][0].test($(params).val().replace(/\\s+/g, ''));\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Card type does not match credit card number.')\r\n        ],\r\n        'validate-cc-number': [\r\n\r\n            /**\r\n             * Validate credit card number based on mod 10.\r\n             *\r\n             * @param {*} value - credit card number\r\n             * @return {Boolean}\r\n             */\r\n            function (value) {\r\n                if (value) {\r\n                    return validateCreditCard(value);\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        'validate-cc-type': [\r\n\r\n            /**\r\n             * Validate credit card number is for the correct credit card type.\r\n             *\r\n             * @param {String} value - credit card number\r\n             * @param {*} element - element contains credit card number\r\n             * @param {*} params - selector for credit card type\r\n             * @return {Boolean}\r\n             */\r\n            function (value, element, params) {\r\n                var ccType;\r\n\r\n                if (value && params) {\r\n                    ccType = $(params).val();\r\n                    value = value.replace(/\\s/g, '').replace(/\\-/g, '');\r\n\r\n                    if (creditCartTypes[ccType] && creditCartTypes[ccType][0]) {\r\n                        return creditCartTypes[ccType][0].test(value);\r\n                    } else if (creditCartTypes[ccType] && !creditCartTypes[ccType][0]) {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Credit card number does not match credit card type.')\r\n        ],\r\n        'validate-cc-exp': [\r\n\r\n            /**\r\n             * Validate credit card expiration date, make sure it's within the year and not before current month.\r\n             *\r\n             * @param {*} value - month\r\n             * @param {*} element - element contains month\r\n             * @param {*} params - year selector\r\n             * @return {Boolean}\r\n             */\r\n            function (value, element, params) {\r\n                var isValid = false,\r\n                    month, year, currentTime, currentMonth, currentYear;\r\n\r\n                if (value && params) {\r\n                    month = value;\r\n                    year = $(params).val();\r\n                    currentTime = new Date();\r\n                    currentMonth = currentTime.getMonth() + 1;\r\n                    currentYear = currentTime.getFullYear();\r\n\r\n                    isValid = !year || year > currentYear || year == currentYear && month >= currentMonth; //eslint-disable-line\r\n                }\r\n\r\n                return isValid;\r\n            },\r\n            $.mage.__('Incorrect credit card expiration date.')\r\n        ],\r\n        'validate-cc-cvn': [\r\n\r\n            /**\r\n             * Validate credit card cvn based on credit card type.\r\n             *\r\n             * @param {*} value - credit card cvn\r\n             * @param {*} element - element contains credit card cvn\r\n             * @param {*} params - credit card type selector\r\n             * @return {*}\r\n             */\r\n            function (value, element, params) {\r\n                var ccType;\r\n\r\n                if (value && params) {\r\n                    ccType = $(params).val();\r\n\r\n                    if (creditCartTypes[ccType] && creditCartTypes[ccType][0]) {\r\n                        return creditCartTypes[ccType][1].test(value);\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card verification number.')\r\n        ],\r\n        'validate-cc-ukss': [\r\n\r\n            /**\r\n             * Validate Switch/Solo/Maestro issue number and start date is filled.\r\n             *\r\n             * @param {*} value - input field value\r\n             * @return {*}\r\n             */\r\n            function (value) {\r\n                return value;\r\n            },\r\n            $.mage.__('Please enter issue number or start date for switch/solo card type.')\r\n        ],\r\n        'validate-length': [\r\n            function (v, elm) {\r\n                var reMax = new RegExp(/^maximum-length-[0-9]+$/),\r\n                    reMin = new RegExp(/^minimum-length-[0-9]+$/),\r\n                    validator = this,\r\n                    result = true,\r\n                    length = 0;\r\n\r\n                $.each(elm.className.split(' '), function (index, name) {\r\n                    if (name.match(reMax) && result) {\r\n                        length = name.split('-')[2];\r\n                        result = v.length <= length;\r\n                        validator.validateMessage =\r\n                            $.mage.__('Please enter less or equal than %1 symbols.').replace('%1', length);\r\n                    }\r\n\r\n                    if (name.match(reMin) && result && !$.mage.isEmpty(v)) {\r\n                        length = name.split('-')[2];\r\n                        result = v.length >= length;\r\n                        validator.validateMessage =\r\n                            $.mage.__('Please enter more or equal than %1 symbols.').replace('%1', length);\r\n                    }\r\n                });\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.validateMessage;\r\n            }\r\n        ],\r\n        'required-entry': [\r\n            function (value) {\r\n                return !$.mage.isEmpty(value);\r\n            }, $.mage.__('This is a required field.')\r\n        ],\r\n        'not-negative-amount': [\r\n            function (v) {\r\n                if (v.length) {\r\n                    return (/^\\s*\\d+([,.]\\d+)*\\s*%?\\s*$/).test(v);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter positive number in this field.')\r\n        ],\r\n        'validate-per-page-value-list': [\r\n            function (v) {\r\n                var isValid = true,\r\n                    values = v.split(','),\r\n                    i;\r\n\r\n                if ($.mage.isEmpty(v)) {\r\n                    return isValid;\r\n                }\r\n\r\n                for (i = 0; i < values.length; i++) {\r\n                    if (!/^[0-9]+$/.test(values[i])) {\r\n                        isValid = false;\r\n                    }\r\n                }\r\n\r\n                return isValid;\r\n            },\r\n            $.mage.__('Please enter a valid value, ex: 10,20,30')\r\n        ],\r\n        'validate-per-page-value': [\r\n            function (v, elm) {\r\n                var values;\r\n\r\n                if ($.mage.isEmpty(v)) {\r\n                    return false;\r\n                }\r\n                values = $('#' + elm.id + '_values').val().split(',');\r\n\r\n                return values.indexOf(v) !== -1;\r\n            },\r\n            $.mage.__('Please enter a valid value from list')\r\n        ],\r\n        'validate-new-password': [\r\n            function (v) {\r\n                if ($.validator.methods['validate-password'] && !$.validator.methods['validate-password'](v)) {\r\n                    return false;\r\n                }\r\n\r\n                if ($.mage.isEmpty(v) && v !== '') {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter 6 or more characters. Leading and trailing spaces will be ignored.')\r\n        ],\r\n        'required-if-not-specified': [\r\n            function (value, element, params) {\r\n                var valid = false,\r\n                    alternate = $(params),\r\n                    alternateValue;\r\n\r\n                if (alternate.length > 0) {\r\n                    valid = this.check(alternate);\r\n                    // if valid, it may be blank, so check for that\r\n                    if (valid) {\r\n                        alternateValue = alternate.val();\r\n\r\n                        if (typeof alternateValue == 'undefined' || alternateValue.length === 0) { //eslint-disable-line\r\n                            valid = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!valid) {\r\n                    valid = !this.optional(element);\r\n                }\r\n\r\n                return valid;\r\n            },\r\n            $.mage.__('This is a required field.')\r\n        ],\r\n        'required-if-all-sku-empty-and-file-not-loaded': [\r\n            function (value, element, params) {\r\n                var valid = false,\r\n                    alternate = $(params.specifiedId),\r\n                    alternateValue;\r\n\r\n                if (alternate.length > 0) {\r\n                    valid = this.check(alternate);\r\n                    // if valid, it may be blank, so check for that\r\n                    if (valid) {\r\n                        alternateValue = alternate.val();\r\n\r\n                        if (typeof alternateValue == 'undefined' || alternateValue.length === 0) { //eslint-disable-line\r\n                            valid = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!valid) {\r\n                    valid = !this.optional(element);\r\n                }\r\n\r\n                $('input[' + params.dataSku + '=true]').each(function () {\r\n                    if ($(this).val() !== '') {\r\n                        valid = true;\r\n                    }\r\n                });\r\n\r\n                return valid;\r\n            },\r\n            $.mage.__('Please enter valid SKU key.')\r\n        ],\r\n        'required-if-specified': [\r\n            function (value, element, params) {\r\n                var valid = true,\r\n                    dependent = $(params),\r\n                    dependentValue;\r\n\r\n                if (dependent.length > 0) {\r\n                    valid = this.check(dependent);\r\n                    // if valid, it may be blank, so check for that\r\n                    if (valid) {\r\n                        dependentValue = dependent.val();\r\n                        valid = typeof dependentValue != 'undefined' && dependentValue.length > 0;\r\n                    }\r\n                }\r\n\r\n                if (valid) {\r\n                    valid = !this.optional(element);\r\n                } else {\r\n                    valid = true; // dependent was not valid, so don't even check\r\n                }\r\n\r\n                return valid;\r\n            },\r\n            $.mage.__('This is a required field.')\r\n        ],\r\n        'required-number-if-specified': [\r\n            function (value, element, params) {\r\n                var valid = true,\r\n                    dependent = $(params),\r\n                    depeValue;\r\n\r\n                if (dependent.length) {\r\n                    valid = this.check(dependent);\r\n\r\n                    if (valid) {\r\n                        depeValue = dependent[0].value;\r\n                        valid = !!(depeValue && depeValue.length);\r\n                    }\r\n                }\r\n\r\n                return valid ? !!value.length : true;\r\n            },\r\n            $.mage.__('Please enter a valid number.')\r\n        ],\r\n        'datetime-validation': [\r\n            function (value, element) {\r\n                var isValid = true;\r\n\r\n                if ($(element).val().length === 0) {\r\n                    isValid = false;\r\n                    $(element).addClass('mage-error');\r\n                }\r\n\r\n                return isValid;\r\n            },\r\n            $.mage.__('This is required field')\r\n        ],\r\n        'required-text-swatch-entry': [\r\n            tableSingleValidation,\r\n            $.mage.__('Admin is a required field in each row.')\r\n        ],\r\n        'required-visual-swatch-entry': [\r\n            tableSingleValidation,\r\n            $.mage.__('Admin is a required field in each row.')\r\n        ],\r\n        'required-dropdown-attribute-entry': [\r\n            tableSingleValidation,\r\n            $.mage.__('Admin is a required field in each row.')\r\n        ],\r\n        'validate-item-quantity': [\r\n            function (value, element, params) {\r\n                var validator = this,\r\n                    result = false,\r\n                    // obtain values for validation\r\n                    qty = $.mage.parseNumber(value),\r\n                    isMinAllowedValid = typeof params.minAllowed === 'undefined' ||\r\n                        qty >= $.mage.parseNumber(params.minAllowed),\r\n                    isMaxAllowedValid = typeof params.maxAllowed === 'undefined' ||\r\n                        qty <= $.mage.parseNumber(params.maxAllowed),\r\n                    isQtyIncrementsValid = typeof params.qtyIncrements === 'undefined' ||\r\n                        resolveModulo(qty, $.mage.parseNumber(params.qtyIncrements)) === 0.0;\r\n\r\n                result = qty > 0;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('Please enter a quantity greater than 0.');//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                result = isMinAllowedValid;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('The fewest you may purchase is %1.').replace('%1', params.minAllowed);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                result = isMaxAllowedValid;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('The maximum you may purchase is %1.').replace('%1', params.maxAllowed);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                result = isQtyIncrementsValid;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('You can buy this product only in quantities of %1 at a time.').replace('%1', params.qtyIncrements);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.itemQtyErrorMessage;\r\n            }\r\n        ],\r\n        'password-not-equal-to-user-name': [\r\n            function (value, element, params) {\r\n                if (typeof params === 'string') {\r\n                    return value.toLowerCase() !== params.toLowerCase();\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('The password can\\'t be the same as the email address. Create a new password and try again.')\r\n        ]\r\n    };\r\n\r\n    $.each(rules, function (i, rule) {\r\n        rule.unshift(i);\r\n        $.validator.addMethod.apply($.validator, rule);\r\n    });\r\n    $.validator.addClassRules({\r\n        'required-option': {\r\n            required: true\r\n        },\r\n        'required-options-count': {\r\n            required: true\r\n        },\r\n        'validate-both-passwords': {\r\n            'validate-cpassword': true\r\n        }\r\n    });\r\n    $.validator.messages = $.extend($.validator.messages, {\r\n        required: $.mage.__('This is a required field.'),\r\n        remote: $.mage.__('Please fix this field.'),\r\n        email: $.mage.__('Please enter a valid email address.'),\r\n        url: $.mage.__('Please enter a valid URL.'),\r\n        date: $.mage.__('Please enter a valid date.'),\r\n        dateISO: $.mage.__('Please enter a valid date (ISO).'),\r\n        number: $.mage.__('Please enter a valid number.'),\r\n        digits: $.mage.__('Please enter only digits.'),\r\n        creditcard: $.mage.__('Please enter a valid credit card number.'),\r\n        equalTo: $.mage.__('Please enter the same value again.'),\r\n        maxlength: $.validator.format($.mage.__('Please enter no more than {0} characters.')),\r\n        minlength: $.validator.format($.mage.__('Please enter at least {0} characters.')),\r\n        rangelength: $.validator.format($.mage.__('Please enter a value between {0} and {1} characters long.')),\r\n        range: $.validator.format($.mage.__('Please enter a value between {0} and {1}.')),\r\n        max: $.validator.format($.mage.__('Please enter a value less than or equal to {0}.')),\r\n        min: $.validator.format($.mage.__('Please enter a value greater than or equal to {0}.'))\r\n    });\r\n\r\n    if ($.metadata) {\r\n        // Setting the type as html5 to enable data-validate attribute\r\n        $.metadata.setType('html5');\r\n    }\r\n\r\n    showLabel = $.validator.prototype.showLabel;\r\n    $.extend(true, $.validator.prototype, {\r\n        /**\r\n         * @param {*} element\r\n         * @param {*} message\r\n         */\r\n        showLabel: function (element, message) {\r\n            var label, elem;\r\n\r\n            showLabel.call(this, element, message);\r\n\r\n            // ARIA (adding aria-invalid & aria-describedby)\r\n            label = this.errorsFor(element);\r\n            elem = $(element);\r\n\r\n            if (!label.attr('id')) {\r\n                label.attr('id', this.idOrName(element) + '-error');\r\n            }\r\n            elem.attr('aria-invalid', 'true')\r\n                .attr('aria-describedby', label.attr('id'));\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Validate form field without instantiating validate plug-in.\r\n     *\r\n     * @param {Element|String} element - DOM element or selector\r\n     * @return {Boolean} validation result\r\n     */\r\n    $.validator.validateElement = function (element) {\r\n        var form, validator, valid, classes;\r\n\r\n        element = $(element);\r\n        form = element.get(0).form;\r\n        validator = form ? $(form).data('validator') : null;\r\n\r\n        if (validator) {\r\n            return validator.element(element.get(0));\r\n        }\r\n        valid = true;\r\n        classes = element.prop('class').split(' ');\r\n        $.each(classes, $.proxy(function (i, className) {\r\n            if (this.methods[className] && !this.methods[className](element.val(), element.get(0))) {\r\n                valid = false;\r\n\r\n                return valid;\r\n            }\r\n        }, this));\r\n\r\n        return valid;\r\n    };\r\n\r\n    originValidateDelegate = $.fn.validateDelegate;\r\n\r\n    /**\r\n     * @return {*}\r\n     */\r\n    $.fn.validateDelegate = function () {\r\n        if (!this[0].form) {\r\n            return this;\r\n        }\r\n\r\n        return originValidateDelegate.apply(this, arguments);\r\n    };\r\n\r\n    /**\r\n     * Validate single element.\r\n     *\r\n     * @param {Element} element\r\n     * @param {Object} config\r\n     * @returns {*}\r\n     */\r\n    $.validator.validateSingleElement = function (element, config) {\r\n        var errors = {},\r\n            valid = true,\r\n            validateConfig = {\r\n                errorElement: 'label',\r\n                ignore: '.ignore-validate',\r\n                hideError: false\r\n            },\r\n            form, validator, classes, elementValue;\r\n\r\n        $.extend(validateConfig, config);\r\n        element = $(element).not(validateConfig.ignore);\r\n\r\n        if (!element.length) {\r\n            return true;\r\n        }\r\n\r\n        form = element.get(0).form;\r\n        validator = form ? $(form).data('validator') : null;\r\n\r\n        if (validator) {\r\n            return validator.element(element.get(0));\r\n        }\r\n\r\n        classes = element.prop('class').split(' ');\r\n        validator = element.parent().data('validator') ||\r\n            $.mage.validation(validateConfig, element.parent()).validate;\r\n\r\n        element.removeClass(validator.settings.errorClass);\r\n        validator.toHide = validator.toShow;\r\n        validator.hideErrors();\r\n        validator.toShow = validator.toHide = $([]);\r\n\r\n        $.each(classes, $.proxy(function (i, className) {\r\n            elementValue = element.val();\r\n\r\n            if (element.is(':checkbox') || element.is(':radio')) {\r\n                elementValue = element.is(':checked') || null;\r\n            }\r\n\r\n            if (this.methods[className] && !this.methods[className](elementValue, element.get(0))) {\r\n                valid = false;\r\n                errors[element.get(0).name] = this.messages[className];\r\n                validator.invalid[element.get(0).name] = true;\r\n\r\n                if (!validateConfig.hideError) {\r\n                    validator.showErrors(errors);\r\n                }\r\n\r\n                return valid;\r\n            }\r\n        }, this));\r\n\r\n        return valid;\r\n    };\r\n\r\n    $.widget('mage.validation', {\r\n        options: {\r\n            meta: 'validate',\r\n            onfocusout: false,\r\n            onkeyup: false,\r\n            onclick: false,\r\n            ignoreTitle: true,\r\n            errorClass: 'mage-error',\r\n            errorElement: 'div',\r\n\r\n            /**\r\n             * @param {*} error\r\n             * @param {*} element\r\n             */\r\n            errorPlacement: function (error, element) {\r\n                var errorPlacement = element,\r\n                    fieldWrapper;\r\n\r\n                // logic for date-picker error placement\r\n                if (element.hasClass('_has-datepicker')) {\r\n                    errorPlacement = element.siblings('button');\r\n                }\r\n                // logic for field wrapper\r\n                fieldWrapper = element.closest('.addon');\r\n\r\n                if (fieldWrapper.length) {\r\n                    errorPlacement = fieldWrapper.after(error);\r\n                }\r\n                //logic for checkboxes/radio\r\n                if (element.is(':checkbox') || element.is(':radio')) {\r\n                    errorPlacement = element.parents('.control').children().last();\r\n\r\n                    //fallback if group does not have .control parent\r\n                    if (!errorPlacement.length) {\r\n                        errorPlacement = element.siblings('label').last();\r\n                    }\r\n                }\r\n                //logic for control with tooltip\r\n                if (element.siblings('.tooltip').length) {\r\n                    errorPlacement = element.siblings('.tooltip');\r\n                }\r\n                //logic for select with tooltip in after element\r\n                if (element.next().find('.tooltip').length) {\r\n                    errorPlacement = element.next();\r\n                }\r\n                errorPlacement.after(error);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if form pass validation rules without submit.\r\n         *\r\n         * @return boolean\r\n         */\r\n        isValid: function () {\r\n            return this.element.valid();\r\n        },\r\n\r\n        /**\r\n         * Remove validation error messages\r\n         */\r\n        clearError: function () {\r\n            if (arguments.length) {\r\n                $.each(arguments, $.proxy(function (index, item) {\r\n                    this.validate.prepareElement(item);\r\n                    this.validate.hideErrors();\r\n                }, this));\r\n            } else {\r\n                this.validate.resetForm();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validation creation.\r\n         *\r\n         * @protected\r\n         */\r\n        _create: function () {\r\n            this.validate = this.element.validate(this.options);\r\n\r\n            // ARIA (adding aria-required attribute)\r\n            this.element\r\n                .find('.field.required')\r\n                .find('.control')\r\n                .find('input, select, textarea')\r\n                .attr('aria-required', 'true');\r\n\r\n            this._listenFormValidate();\r\n        },\r\n\r\n        /**\r\n         * Validation listening.\r\n         *\r\n         * @protected\r\n         */\r\n        _listenFormValidate: function () {\r\n            $('form').on('invalid-form.validate', this.listenFormValidateHandler);\r\n        },\r\n\r\n        /**\r\n         * Handle form validation. Focus on first invalid form field.\r\n         *\r\n         * @param {jQuery.Event} event\r\n         * @param {Object} validation\r\n         */\r\n        listenFormValidateHandler: function (event, validation) {\r\n            var firstActive = $(validation.errorList[0].element || []),\r\n                lastActive = $(validation.findLastActive() ||\r\n                    validation.errorList.length && validation.errorList[0].element || []),\r\n                windowHeight = $(window).height(),\r\n                parent, successList;\r\n\r\n            if (lastActive.is(':hidden')) {\r\n                parent = lastActive.parent();\r\n                $('html, body').animate({\r\n                    scrollTop: parent.offset().top - windowHeight / 2\r\n                });\r\n            }\r\n\r\n            // ARIA (removing aria attributes if success)\r\n            successList = validation.successList;\r\n\r\n            if (successList.length) {\r\n                $.each(successList, function () {\r\n                    $(this)\r\n                        .removeAttr('aria-describedby')\r\n                        .removeAttr('aria-invalid');\r\n                });\r\n            }\r\n\r\n            if (firstActive.length) {\r\n                $('html, body').stop().animate({\r\n                    scrollTop: firstActive.parent().offset().top - windowHeight / 2\r\n                });\r\n                firstActive.focus();\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.validation;\r\n});\r\n","mage/apply/main.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    './scripts'\r\n], function (_, $, processScripts) {\r\n    'use strict';\r\n\r\n    var dataAttr = 'data-mage-init',\r\n        nodeSelector = '[' + dataAttr + ']';\r\n\r\n    /**\r\n     * Initializes components assigned to a specified element via data-* attribute.\r\n     *\r\n     * @param {HTMLElement} el - Element to initialize components with.\r\n     * @param {Object|String} config - Initial components' config.\r\n     * @param {String} component - Components' path.\r\n     */\r\n    function init(el, config, component) {\r\n        require([component], function (fn) {\r\n            var $el;\r\n\r\n            if (typeof fn === 'object') {\r\n                fn = fn[component].bind(fn);\r\n            }\r\n\r\n            if (_.isFunction(fn)) {\r\n                fn = fn.bind(null, config, el);\r\n            } else {\r\n                $el = $(el);\r\n\r\n                if ($el[component]) {\r\n                    // eslint-disable-next-line jquery-no-bind-unbind\r\n                    fn = $el[component].bind($el, config);\r\n                }\r\n            }\r\n            // Init module in separate task to prevent blocking main thread.\r\n            setTimeout(fn);\r\n        }, function (error) {\r\n            if ('console' in window && typeof window.console.error === 'function') {\r\n                console.error(error);\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Parses elements 'data-mage-init' attribute as a valid JSON data.\r\n     * Note: data-mage-init attribute will be removed.\r\n     *\r\n     * @param {HTMLElement} el - Element whose attribute should be parsed.\r\n     * @returns {Object}\r\n     */\r\n    function getData(el) {\r\n        var data = el.getAttribute(dataAttr);\r\n\r\n        el.removeAttribute(dataAttr);\r\n\r\n        return {\r\n            el: el,\r\n            data: JSON.parse(data)\r\n        };\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Initializes components assigned to HTML elements via [data-mage-init].\r\n         *\r\n         * @example Sample 'data-mage-init' declaration.\r\n         *      data-mage-init='{\"path/to/component\": {\"foo\": \"bar\"}}'\r\n         */\r\n        apply: function (context) {\r\n            var virtuals = processScripts(!context ? document : context),\r\n                nodes = document.querySelectorAll(nodeSelector);\r\n\r\n            _.toArray(nodes)\r\n                .map(getData)\r\n                .concat(virtuals)\r\n                .forEach(function (itemContainer) {\r\n                    var element = itemContainer.el;\r\n\r\n                    _.each(itemContainer.data, function (obj, key) {\r\n                            if (obj.mixins) {\r\n                                require(obj.mixins, function () { //eslint-disable-line max-nested-callbacks\r\n                                    var i, len;\r\n\r\n                                    for (i = 0, len = arguments.length; i < len; i++) {\r\n                                        $.extend(\r\n                                            true,\r\n                                            itemContainer.data[key],\r\n                                            arguments[i](itemContainer.data[key], element)\r\n                                        );\r\n                                    }\r\n\r\n                                    delete obj.mixins;\r\n                                    init.call(null, element, obj, key);\r\n                                });\r\n                            } else {\r\n                                init.call(null, element, obj, key);\r\n                            }\r\n\r\n                        }\r\n                    );\r\n\r\n                });\r\n        },\r\n        applyFor: init\r\n    };\r\n});\r\n","mage/apply/scripts.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'jquery'\r\n], function (_, $) {\r\n    'use strict';\r\n\r\n    var scriptSelector = 'script[type=\"text/x-magento-init\"]',\r\n        dataAttr = 'data-mage-init',\r\n        virtuals = [];\r\n\r\n    /**\r\n     * Adds components to the virtual list.\r\n     *\r\n     * @param {Object} components\r\n     */\r\n    function addVirtual(components) {\r\n        virtuals.push({\r\n            el: false,\r\n            data: components\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Merges provided data with a current data\r\n     * of a elements' \"data-mage-init\" attribute.\r\n     *\r\n     * @param {Object} components - Object with components and theirs configuration.\r\n     * @param {HTMLElement} elem - Element whose data should be modified.\r\n     */\r\n    function setData(components, elem) {\r\n        var data = elem.getAttribute(dataAttr);\r\n\r\n        data = data ? JSON.parse(data) : {};\r\n        _.each(components, function (obj, key) {\r\n            if (_.has(obj, 'mixins')) {\r\n                data[key] = data[key] || {};\r\n                data[key].mixins = data[key].mixins || [];\r\n                data[key].mixins = data[key].mixins.concat(obj.mixins);\r\n                delete obj.mixins;\r\n            }\r\n        });\r\n\r\n        data = $.extend(true, data, components);\r\n        data = JSON.stringify(data);\r\n        elem.setAttribute(dataAttr, data);\r\n    }\r\n\r\n    /**\r\n     * Search for the elements by privded selector and extends theirs data.\r\n     *\r\n     * @param {Object} components - Object with components and theirs configuration.\r\n     * @param {String} selector - Selector for the elements.\r\n     */\r\n    function processElems(components, selector) {\r\n        var elems,\r\n            iterator;\r\n\r\n        if (selector === '*') {\r\n            addVirtual(components);\r\n\r\n            return;\r\n        }\r\n\r\n        elems = document.querySelectorAll(selector);\r\n        iterator = setData.bind(null, components);\r\n\r\n        _.toArray(elems).forEach(iterator);\r\n    }\r\n\r\n    /**\r\n     * Parses content of a provided script node.\r\n     * Note: node will be removed from DOM.\r\n     *\r\n     * @param {HTMLScriptElement} node - Node to be processed.\r\n     * @returns {Object}\r\n     */\r\n    function getNodeData(node) {\r\n        var data = node.textContent;\r\n\r\n        node.parentNode.removeChild(node);\r\n\r\n        return JSON.parse(data);\r\n    }\r\n\r\n    /**\r\n     * Parses 'script' tags with a custom type attribute and moves it's data\r\n     * to a 'data-mage-init' attribute of an element found by provided selector.\r\n     * Note: All found script nodes will be removed from DOM.\r\n     *\r\n     * @returns {Array} An array of components not assigned to the specific element.\r\n     *\r\n     * @example Sample declaration.\r\n     *      <script type=\"text/x-magento-init\">\r\n     *          {\r\n     *              \"body\": {\r\n     *                  \"path/to/component\": {\"foo\": \"bar\"}\r\n     *              }\r\n     *          }\r\n     *      </script>\r\n     *\r\n     * @example Providing data without selector.\r\n     *      {\r\n     *          \"*\": {\r\n     *              \"path/to/component\": {\"bar\": \"baz\"}\r\n     *          }\r\n     *      }\r\n     */\r\n    return function () {\r\n        var nodes = document.querySelectorAll(scriptSelector);\r\n\r\n        _.toArray(nodes)\r\n            .map(getNodeData)\r\n            .forEach(function (item) {\r\n                _.each(item, processElems);\r\n            });\r\n\r\n        return virtuals.splice(0, virtuals.length);\r\n    };\r\n});\r\n","mage/gallery/gallery.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'fotorama/fotorama',\r\n    'underscore',\r\n    'matchMedia',\r\n    'mage/template',\r\n    'text!mage/gallery/gallery.html',\r\n    'uiClass',\r\n    'mage/translate'\r\n], function ($, fotorama, _, mediaCheck, template, galleryTpl, Class, $t) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Retrieves index if the main item.\r\n     * @param {Array.<Object>} data - Set of gallery items.\r\n     */\r\n    var getMainImageIndex = function (data) {\r\n            var mainIndex;\r\n\r\n            if (_.every(data, function (item) {\r\n                    return _.isObject(item);\r\n                })\r\n            ) {\r\n                mainIndex = _.findIndex(data, function (item) {\r\n                    return item.isMain;\r\n                });\r\n            }\r\n\r\n            return mainIndex > 0 ? mainIndex : 0;\r\n        },\r\n\r\n        /**\r\n         * Helper for parse translate property\r\n         *\r\n         * @param {Element} el - el that to parse\r\n         * @returns {Array} - array of properties.\r\n         */\r\n        getTranslate = function (el) {\r\n            var slideTransform = $(el).attr('style').split(';');\r\n\r\n            slideTransform = $.map(slideTransform, function (style) {\r\n                style = style.trim();\r\n\r\n                if (style.startsWith('transform: translate3d')) {\r\n                    return style.match(/transform: translate3d\\((.+)px,(.+)px,(.+)px\\)/);\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n            return slideTransform.filter(Boolean);\r\n        },\r\n\r\n        /**\r\n         * @param {*} str\r\n         * @return {*}\r\n         * @private\r\n         */\r\n        _toNumber = function (str) {\r\n            var type = typeof str;\r\n\r\n            if (type === 'string') {\r\n                return parseInt(str); //eslint-disable-line radix\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n    return Class.extend({\r\n\r\n        defaults: {\r\n            settings: {},\r\n            config: {},\r\n            startConfig: {}\r\n        },\r\n\r\n        /**\r\n         * Checks if device has touch interface.\r\n         * @return {Boolean} The result of searching touch events on device.\r\n         */\r\n        isTouchEnabled: (function () {\r\n            return 'ontouchstart' in document.documentElement;\r\n        })(),\r\n\r\n        /**\r\n         * Initializes gallery.\r\n         * @param {Object} config - Gallery configuration.\r\n         * @param {String} element - String selector of gallery DOM element.\r\n         */\r\n        initialize: function (config, element) {\r\n            var self = this;\r\n\r\n            this._super();\r\n\r\n            _.bindAll(this,\r\n                '_focusSwitcher'\r\n            );\r\n\r\n            /*turn off arrows for touch devices*/\r\n            if (this.isTouchEnabled) {\r\n                config.options.arrows = false;\r\n\r\n                if (config.fullscreen) {\r\n                    config.fullscreen.arrows = false;\r\n                }\r\n            }\r\n\r\n            config.options.width = _toNumber(config.options.width);\r\n            config.options.height = _toNumber(config.options.height);\r\n            config.options.thumbwidth = _toNumber(config.options.thumbwidth);\r\n            config.options.thumbheight = _toNumber(config.options.thumbheight);\r\n\r\n            config.options.swipe = true;\r\n            this.config = config;\r\n\r\n            this.settings = {\r\n                $element: $(element),\r\n                $pageWrapper: $('body>.page-wrapper'),\r\n                currentConfig: config,\r\n                defaultConfig: _.clone(config),\r\n                fullscreenConfig: _.clone(config.fullscreen),\r\n                breakpoints: config.breakpoints,\r\n                activeBreakpoint: {},\r\n                fotoramaApi: null,\r\n                isFullscreen: false,\r\n                api: null,\r\n                data: _.clone(config.data)\r\n            };\r\n            config.options.ratio = config.options.width / config.options.height;\r\n            config.options.height = null;\r\n\r\n            $.extend(true, this.startConfig, config);\r\n\r\n            this.initGallery();\r\n            this.initApi();\r\n            this.setupBreakpoints();\r\n            this.initFullscreenSettings();\r\n\r\n            this.settings.$element.on('click', '.fotorama__stage__frame', function () {\r\n                if (\r\n                    !$(this).parents('.fotorama__shadows--left, .fotorama__shadows--right').length &&\r\n                    !$(this).hasClass('fotorama-video-container')\r\n                ) {\r\n                    self.openFullScreen();\r\n                }\r\n            });\r\n\r\n            if (this.isTouchEnabled && this.settings.isFullscreen) {\r\n                this.settings.$element.on('tap', '.fotorama__stage__frame', function () {\r\n                    var translate = getTranslate($(this).parents('.fotorama__stage__shaft'));\r\n\r\n                    if (translate[1] === '0' && !$(this).hasClass('fotorama-video-container')) {\r\n                        self.openFullScreen();\r\n                        self.settings.$pageWrapper.hide();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Open gallery fullscreen\r\n         */\r\n        openFullScreen: function () {\r\n            this.settings.api.fotorama.requestFullScreen();\r\n            this.settings.$fullscreenIcon.css({\r\n                opacity: 1,\r\n                visibility: 'visible',\r\n                display: 'block'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Gallery fullscreen settings.\r\n         */\r\n        initFullscreenSettings: function () {\r\n            var settings = this.settings,\r\n                self = this;\r\n\r\n            settings.$gallery = this.settings.$element.find('[data-gallery-role=\"gallery\"]');\r\n            settings.$fullscreenIcon = this.settings.$element.find('[data-gallery-role=\"fotorama__fullscreen-icon\"]');\r\n            settings.focusableStart = this.settings.$element.find('[data-gallery-role=\"fotorama__focusable-start\"]');\r\n            settings.focusableEnd = this.settings.$element.find('[data-gallery-role=\"fotorama__focusable-end\"]');\r\n            settings.closeIcon = this.settings.$element.find('[data-gallery-role=\"fotorama__fullscreen-icon\"]');\r\n            settings.fullscreenConfig.swipe = true;\r\n\r\n            settings.$gallery.on('fotorama:fullscreenenter', function () {\r\n                settings.closeIcon.show();\r\n                settings.focusableStart.attr('tabindex', '0');\r\n                settings.focusableEnd.attr('tabindex', '0');\r\n                settings.focusableStart.on('focusin', self._focusSwitcher);\r\n                settings.focusableEnd.on('focusin', self._focusSwitcher);\r\n                settings.api.updateOptions(settings.defaultConfig.options, true);\r\n                settings.api.updateOptions(settings.fullscreenConfig, true);\r\n\r\n                if (!_.isEqual(settings.activeBreakpoint, {}) && settings.breakpoints) {\r\n                    settings.api.updateOptions(settings.activeBreakpoint.options, true);\r\n                }\r\n                settings.isFullscreen = true;\r\n            });\r\n\r\n            settings.$gallery.on('fotorama:fullscreenexit', function () {\r\n                settings.closeIcon.hide();\r\n                settings.focusableStart.attr('tabindex', '-1');\r\n                settings.focusableEnd.attr('tabindex', '-1');\r\n                settings.api.updateOptions(settings.defaultConfig.options, true);\r\n                settings.focusableStart.off('focusin', this._focusSwitcher);\r\n                settings.focusableEnd.off('focusin', this._focusSwitcher);\r\n                settings.closeIcon.hide();\r\n\r\n                if (!_.isEqual(settings.activeBreakpoint, {}) && settings.breakpoints) {\r\n                    settings.api.updateOptions(settings.activeBreakpoint.options, true);\r\n                }\r\n                settings.isFullscreen = false;\r\n                settings.$element.data('gallery').updateOptions({\r\n                    swipe: true\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Switcher focus.\r\n         */\r\n        _focusSwitcher: function (e) {\r\n            var target = $(e.target),\r\n                settings = this.settings;\r\n\r\n            if (target.is(settings.focusableStart)) {\r\n                this._setFocus('start');\r\n            } else if (target.is(settings.focusableEnd)) {\r\n                this._setFocus('end');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set focus to element.\r\n         * @param {String} position - can be \"start\" and \"end\"\r\n         *      positions.\r\n         *      If position is \"end\" - sets focus to first\r\n         *      focusable element in modal window scope.\r\n         *      If position is \"start\" - sets focus to last\r\n         *      focusable element in modal window scope\r\n         */\r\n        _setFocus: function (position) {\r\n            var settings = this.settings,\r\n                focusableElements,\r\n                infelicity;\r\n\r\n            if (position === 'end') {\r\n                settings.$gallery.find(settings.closeIcon).trigger('focus');\r\n            } else if (position === 'start') {\r\n                infelicity = 3; //Constant for find last focusable element\r\n                focusableElements = settings.$gallery.find(':focusable');\r\n                focusableElements.eq(focusableElements.length - infelicity).trigger('focus');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes gallery with configuration options.\r\n         */\r\n        initGallery: function () {\r\n            var breakpoints = {},\r\n                settings = this.settings,\r\n                config = this.config,\r\n                tpl = template(galleryTpl, {\r\n                    next: $t('Next'),\r\n                    previous: $t('Previous')\r\n                }),\r\n                mainImageIndex,\r\n                $element = settings.$element,\r\n                $fotoramaElement,\r\n                $fotoramaStage;\r\n\r\n            if (settings.breakpoints) {\r\n                _.each(_.values(settings.breakpoints), function (breakpoint) {\r\n                    var conditions;\r\n\r\n                    _.each(_.pairs(breakpoint.conditions), function (pair) {\r\n                        conditions = conditions ? conditions + ' and (' + pair[0] + ': ' + pair[1] + ')' :\r\n                        '(' + pair[0] + ': ' + pair[1] + ')';\r\n                    });\r\n                    breakpoints[conditions] = breakpoint.options;\r\n                });\r\n                settings.breakpoints = breakpoints;\r\n            }\r\n\r\n            _.extend(config, config.options,\r\n                {\r\n                    options: undefined,\r\n                    click: false,\r\n                    breakpoints: null\r\n                }\r\n            );\r\n            settings.currentConfig = config;\r\n\r\n            $element\r\n                .css('min-height', settings.$element.height())\r\n                .append(tpl);\r\n\r\n            $fotoramaElement = $element.find('[data-gallery-role=\"gallery\"]');\r\n\r\n            $fotoramaStage = $fotoramaElement.find('.fotorama__stage');\r\n            $fotoramaStage.css('position', 'absolute');\r\n\r\n            $fotoramaElement.fotorama(config);\r\n            $fotoramaElement.find('.fotorama__stage__frame.fotorama__active')\r\n                    .one('f:load', function () {\r\n                        // Remove placeholder when main gallery image loads.\r\n                        $element.find('.gallery-placeholder__image').remove();\r\n                        $element\r\n                            .removeClass('_block-content-loading')\r\n                            .css('min-height', '');\r\n\r\n                        $fotoramaStage.css('position', '');\r\n                    });\r\n            settings.$elementF = $fotoramaElement;\r\n            settings.fotoramaApi = $fotoramaElement.data('fotorama');\r\n\r\n            $.extend(true, config, this.startConfig);\r\n\r\n            mainImageIndex = getMainImageIndex(config.data);\r\n\r\n            if (mainImageIndex) {\r\n                this.settings.fotoramaApi.show({\r\n                    index: mainImageIndex,\r\n                    time: 0\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates breakpoints for gallery.\r\n         */\r\n        setupBreakpoints: function () {\r\n            var pairs,\r\n                settings = this.settings,\r\n                config = this.config,\r\n                startConfig = this.startConfig,\r\n                isInitialized = {},\r\n                isTouchEnabled = this.isTouchEnabled;\r\n\r\n            if (_.isObject(settings.breakpoints)) {\r\n                pairs = _.pairs(settings.breakpoints);\r\n                _.each(pairs, function (pair) {\r\n                    var mediaQuery = pair[0];\r\n\r\n                    isInitialized[mediaQuery] = false;\r\n                    mediaCheck({\r\n                        media: mediaQuery,\r\n\r\n                        /**\r\n                         * Is triggered when breakpoint enties.\r\n                         */\r\n                        entry: function () {\r\n                            $.extend(true, config, _.clone(startConfig));\r\n\r\n                            settings.api.updateOptions(settings.defaultConfig.options, true);\r\n\r\n                            if (settings.isFullscreen) {\r\n                                settings.api.updateOptions(settings.fullscreenConfig, true);\r\n                            }\r\n\r\n                            if (isTouchEnabled) {\r\n                                settings.breakpoints[mediaQuery].options.arrows = false;\r\n\r\n                                if (settings.breakpoints[mediaQuery].options.fullscreen) {\r\n                                    settings.breakpoints[mediaQuery].options.fullscreen.arrows = false;\r\n                                }\r\n                            }\r\n\r\n                            settings.api.updateOptions(settings.breakpoints[mediaQuery].options, true);\r\n                            $.extend(true, config, settings.breakpoints[mediaQuery]);\r\n                            settings.activeBreakpoint = settings.breakpoints[mediaQuery];\r\n\r\n                            isInitialized[mediaQuery] = true;\r\n                        },\r\n\r\n                        /**\r\n                         * Is triggered when breakpoint exits.\r\n                         */\r\n                        exit: function () {\r\n                            if (isInitialized[mediaQuery]) {\r\n                                $.extend(true, config, _.clone(startConfig));\r\n                                settings.api.updateOptions(settings.defaultConfig.options, true);\r\n\r\n                                if (settings.isFullscreen) {\r\n                                    settings.api.updateOptions(settings.fullscreenConfig, true);\r\n                                }\r\n                                settings.activeBreakpoint = {};\r\n                            } else {\r\n                                isInitialized[mediaQuery] = true;\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates gallery's API.\r\n         */\r\n        initApi: function () {\r\n            var settings = this.settings,\r\n                config = this.config,\r\n                api = {\r\n\r\n                    /**\r\n                     * Contains fotorama's API methods.\r\n                     */\r\n                    fotorama: settings.fotoramaApi,\r\n\r\n                    /**\r\n                     * Displays the last image on preview.\r\n                     */\r\n                    last: function () {\r\n                        settings.fotoramaApi.show('>>');\r\n                    },\r\n\r\n                    /**\r\n                     * Displays the first image on preview.\r\n                     */\r\n                    first: function () {\r\n                        settings.fotoramaApi.show('<<');\r\n                    },\r\n\r\n                    /**\r\n                     * Displays previous element on preview.\r\n                     */\r\n                    prev: function () {\r\n                        settings.fotoramaApi.show('<');\r\n                    },\r\n\r\n                    /**\r\n                     * Displays next element on preview.\r\n                     */\r\n                    next: function () {\r\n                        settings.fotoramaApi.show('>');\r\n                    },\r\n\r\n                    /**\r\n                     * Displays image with appropriate count number on preview.\r\n                     * @param {Number} index - Number of image that should be displayed.\r\n                     */\r\n                    seek: function (index) {\r\n                        if (_.isNumber(index) && index !== 0) {\r\n\r\n                            if (index > 0) {\r\n                                index -= 1;\r\n                            }\r\n                            settings.fotoramaApi.show(index);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates gallery with new set of options.\r\n                     * @param {Object} configuration - Standart gallery configuration object.\r\n                     * @param {Boolean} isInternal - Is this function called via breakpoints.\r\n                     */\r\n                    updateOptions: function (configuration, isInternal) {\r\n\r\n                        var $selectable = $('a[href], area[href], input, select, ' +\r\n                                'textarea, button, iframe, object, embed, *[tabindex], *[contenteditable]')\r\n                                .not('[tabindex=-1], [disabled], :hidden'),\r\n                            $focus = $(':focus'),\r\n                            index;\r\n\r\n                        if (_.isObject(configuration)) {\r\n\r\n                            //Saves index of focus\r\n                            $selectable.each(function (number) {\r\n                                if ($(this).is($focus)) {\r\n                                    index = number;\r\n                                }\r\n                            });\r\n\r\n                            if (this.isTouchEnabled) {\r\n                                configuration.arrows = false;\r\n                            }\r\n                            configuration.click = false;\r\n                            configuration.breakpoints = null;\r\n\r\n                            if (!isInternal) {\r\n                                !_.isEqual(settings.activeBreakpoint, {} && settings.breakpoints) ?\r\n                                    $.extend(true, settings.activeBreakpoint.options, configuration) :\r\n\r\n                                    settings.isFullscreen ?\r\n                                        $.extend(true, settings.fullscreenConfig, configuration) :\r\n                                        $.extend(true, settings.defaultConfig.options, configuration);\r\n\r\n                            }\r\n                            $.extend(true, settings.currentConfig.options, configuration);\r\n                            settings.fotoramaApi.setOptions(settings.currentConfig.options);\r\n\r\n                            if (_.isNumber(index)) {\r\n                                $selectable.eq(index).trigger('focus');\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates gallery with specific set of items.\r\n                     * @param {Array.<Object>} data - Set of gallery items to update.\r\n                     */\r\n                    updateData: function (data) {\r\n                        var mainImageIndex;\r\n\r\n                        if (_.isArray(data)) {\r\n                            settings.fotoramaApi.load(data);\r\n                            mainImageIndex = getMainImageIndex(data);\r\n\r\n                            if (settings.fotoramaApi.activeIndex !== mainImageIndex) {\r\n                                settings.fotoramaApi.show({\r\n                                    index: mainImageIndex,\r\n                                    time: 0\r\n                                });\r\n                            }\r\n\r\n                            $.extend(false, settings, {\r\n                                data: data,\r\n                                defaultConfig: data\r\n                            });\r\n                            $.extend(false, config, {\r\n                                data: data\r\n                            });\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Returns current images list\r\n                     *\r\n                     * @returns {Array}\r\n                     */\r\n                    returnCurrentImages: function () {\r\n                        var images = [];\r\n\r\n                        _.each(this.fotorama.data, function (item) {\r\n                            images.push(_.omit(item, '$navThumbFrame', '$navDotFrame', '$stageFrame', 'labelledby'));\r\n                        });\r\n\r\n                        return images;\r\n                    },\r\n\r\n                    /**\r\n                     * Updates gallery data partially by index\r\n                     * @param {Number} index - Index of image in data array to be updated.\r\n                     * @param {Object} item - Standart gallery image object.\r\n                     *\r\n                     */\r\n                    updateDataByIndex: function (index, item) {\r\n                        settings.fotoramaApi.spliceByIndex(index, item);\r\n                    }\r\n                };\r\n\r\n            settings.$element.data('gallery', api);\r\n            settings.api = settings.$element.data('gallery');\r\n            settings.$element.trigger('gallery:loaded');\r\n        }\r\n    });\r\n});\r\n","mage/msie/file-reader.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Init \"readAsBinaryString\" function for FileReader class.\r\n     * It need for IE11\r\n     * @param {Blob} fileData\r\n     */\r\n    var readAsBinaryStringIEFunc = function (fileData) {\r\n        var binary = '',\r\n            self = this,\r\n            reader = new FileReader();\r\n\r\n        /**\r\n         * Read file as binary string\r\n         */\r\n        reader.onload = function () {\r\n            var bytes, length, index;\r\n\r\n            /* eslint-disable no-undef */\r\n            bytes = new Uint8Array(reader.result);\r\n            /* eslint-enable */\r\n            length = bytes.length;\r\n\r\n            for (index = 0; index < length; index++) {\r\n                binary += String.fromCharCode(bytes[index]);\r\n            }\r\n            //self.result  - readonly so assign binary\r\n            self.content = binary;\r\n            $(self).trigger('onload');\r\n        };\r\n        reader.readAsArrayBuffer(fileData);\r\n    };\r\n\r\n    if (typeof FileReader.prototype.readAsBinaryString === 'undefined') {\r\n        FileReader.prototype.readAsBinaryString = readAsBinaryStringIEFunc;\r\n    }\r\n});\r\n","mage/requirejs/baseUrlResolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * Sample configuration:\r\n *\r\n require.config({\r\n        \"config\": {\r\n            \"baseUrlInterceptor\": {\r\n                \"Magento_Ui/js/lib/knockout/bindings/collapsible.js\": \"../../../../frontend/Magento/luma/en_US/\"\r\n            }\r\n        }\r\n    });\r\n */\r\n\r\n/* global jsSuffixRegExp */\r\n/* eslint-disable max-depth */\r\ndefine('baseUrlInterceptor', [\r\n    'module'\r\n], function (module) {\r\n    'use strict';\r\n\r\n    /**\r\n     * RequireJS Context object\r\n     */\r\n    var ctx = require.s.contexts._,\r\n\r\n        /**\r\n         * Original function\r\n         *\r\n         * @type {Function}\r\n         */\r\n        origNameToUrl = ctx.nameToUrl,\r\n\r\n        /**\r\n         * Original function\r\n         *\r\n         * @type {Function}\r\n         */\r\n        newContextConstr = require.s.newContext;\r\n\r\n    /**\r\n     * Remove dots from URL\r\n     *\r\n     * @param {Array} ary\r\n     */\r\n    function trimDots(ary) {\r\n        var i, part, length = ary.length;\r\n\r\n        for (i = 0; i < length; i++) {\r\n            part = ary[i];\r\n\r\n            if (part === '.') {\r\n                ary.splice(i, 1);\r\n                i -= 1;\r\n            } else if (part === '..') {\r\n                if (i === 1 && (ary[2] === '..' || ary[0] === '..')) {\r\n                    //End of the line. Keep at least one non-dot\r\n                    //path segment at the front so it can be mapped\r\n                    //correctly to disk. Otherwise, there is likely\r\n                    //no path mapping for a path starting with '..'.\r\n                    //This can still fail, but catches the most reasonable\r\n                    //uses of ..\r\n                    break;\r\n                } else if (i > 0) {\r\n                    ary.splice(i - 1, 2);\r\n                    i -= 2;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Normalize URL string (remove '/../')\r\n     *\r\n     * @param {String} name\r\n     * @param {String} baseName\r\n     * @param {Object} applyMap\r\n     * @param {Object} localContext\r\n     * @returns {*}\r\n     */\r\n    function normalize(name, baseName, applyMap, localContext) {\r\n        var lastIndex,\r\n            baseParts = baseName && baseName.split('/'),\r\n            normalizedBaseParts = baseParts;\r\n\r\n        //Adjust any relative paths.\r\n        if (name && name.charAt(0) === '.') {\r\n            //If have a base name, try to normalize against it,\r\n            //otherwise, assume it is a top-level require that will\r\n            //be relative to baseUrl in the end.\r\n            if (baseName) {\r\n                //Convert baseName to array, and lop off the last part,\r\n                //so that . matches that 'directory' and not name of the baseName's\r\n                //module. For instance, baseName of 'one/two/three', maps to\r\n                //'one/two/three.js', but we want the directory, 'one/two' for\r\n                //this normalization.\r\n                normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\r\n                name = name.split('/');\r\n                lastIndex = name.length - 1;\r\n\r\n                // If wanting node ID compatibility, strip .js from end\r\n                // of IDs. Have to do this here, and not in nameToUrl\r\n                // because node allows either .js or non .js to map\r\n                // to same file.\r\n                if (localContext.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\r\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\r\n                }\r\n\r\n                name = normalizedBaseParts.concat(name);\r\n                trimDots(name);\r\n                name = name.join('/');\r\n            } else if (name.indexOf('./') === 0) {\r\n                // No baseName, so this is ID is resolved relative\r\n                // to baseUrl, pull off the leading dot.\r\n                name = name.substring(2);\r\n            }\r\n        }\r\n\r\n        return name;\r\n    }\r\n\r\n    /**\r\n     * Get full url.\r\n     *\r\n     * @param {Object} context\r\n     * @param {String} url\r\n     * @return {String}\r\n     */\r\n    function getUrl(context, url) {\r\n        var baseUrl = context.config.baseUrl,\r\n            newConfig = context.config,\r\n            modulePath = url.replace(baseUrl, ''),\r\n            newBaseUrl,\r\n            rewrite = module.config()[modulePath];\r\n\r\n        if (!rewrite) {\r\n            return url;\r\n        }\r\n\r\n        newBaseUrl = normalize(rewrite, baseUrl, undefined, newConfig);\r\n\r\n        return newBaseUrl + modulePath;\r\n    }\r\n\r\n    /**\r\n     * Replace original function.\r\n     *\r\n     * @returns {*}\r\n     */\r\n    ctx.nameToUrl = function () {\r\n        return getUrl(ctx, origNameToUrl.apply(ctx, arguments));\r\n    };\r\n\r\n    /**\r\n     * Replace original function.\r\n     *\r\n     * @return {*}\r\n     */\r\n    require.s.newContext = function () {\r\n        var newCtx = newContextConstr.apply(require.s, arguments),\r\n            newOrigNameToUrl = newCtx.nameToUrl;\r\n\r\n        /**\r\n         * New implementation of native function.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        newCtx.nameToUrl = function () {\r\n            return getUrl(newCtx, newOrigNameToUrl.apply(newCtx, arguments));\r\n        };\r\n\r\n        return newCtx;\r\n    };\r\n});\r\n\r\nrequire(['baseUrlInterceptor'], function () {\r\n    'use strict';\r\n\r\n});\r\n","mage/requirejs/resolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'domReady!'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    var context = require.s.contexts._,\r\n        execCb = context.execCb,\r\n        registry = context.registry,\r\n        callbacks = [],\r\n        retries = 10,\r\n        updateDelay = 1,\r\n        ready,\r\n        update;\r\n\r\n    /**\r\n     * Checks if provided callback already exists in the callbacks list.\r\n     *\r\n     * @param {Object} callback - Callback object to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isSubscribed(callback) {\r\n        return !!_.findWhere(callbacks, callback);\r\n    }\r\n\r\n    /**\r\n     * Checks if provided module is rejected during load.\r\n     *\r\n     * @param {Object} module - Module to be checked.\r\n     * @return {Boolean}\r\n     */\r\n    function isRejected(module) {\r\n        return registry[module.id] && (registry[module.id].inited || registry[module.id].error);\r\n    }\r\n\r\n    /**\r\n     * Checks if provided module had path fallback triggered.\r\n     *\r\n     * @param {Object} module - Module to be checked.\r\n     * @return {Boolean}\r\n     */\r\n    function isPathFallback(module) {\r\n        return registry[module.id] && registry[module.id].events.error;\r\n    }\r\n\r\n    /**\r\n     * Checks if provided module has unresolved dependencies.\r\n     *\r\n     * @param {Object} module - Module to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isPending(module) {\r\n        if (!module.depCount) {\r\n            return false;\r\n        }\r\n\r\n        return module.depCount >\r\n            _.filter(module.depMaps, isRejected).length + _.filter(module.depMaps, isPathFallback).length;\r\n    }\r\n\r\n    /**\r\n     * Checks if requirejs's registry object contains pending modules.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    function hasPending() {\r\n        return _.some(registry, isPending);\r\n    }\r\n\r\n    /**\r\n     * Checks if 'resolver' module is in ready\r\n     * state and that there are no pending modules.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    function isReady() {\r\n        return ready && !hasPending();\r\n    }\r\n\r\n    /**\r\n     * Invokes provided callback handler.\r\n     *\r\n     * @param {Object} callback\r\n     */\r\n    function invoke(callback) {\r\n        callback.handler.call(callback.ctx);\r\n    }\r\n\r\n    /**\r\n     * Sets 'resolver' module to a ready state\r\n     * and invokes pending callbacks.\r\n     */\r\n    function resolve() {\r\n        ready = true;\r\n\r\n        callbacks.splice(0).forEach(invoke);\r\n    }\r\n\r\n    /**\r\n     * Drops 'ready' flag and runs the update process.\r\n     */\r\n    function tick() {\r\n        ready = false;\r\n\r\n        update(retries);\r\n    }\r\n\r\n    /**\r\n     * Adds callback which will be invoked\r\n     * when all of the pending modules are initiated.\r\n     *\r\n     * @param {Function} handler - 'Ready' event handler function.\r\n     * @param {Object} [ctx] - Optional context with which handler\r\n     *      will be invoked.\r\n     */\r\n    function subscribe(handler, ctx) {\r\n        var callback = {\r\n            handler: handler,\r\n            ctx: ctx\r\n        };\r\n\r\n        if (!isSubscribed(callback)) {\r\n            callbacks.push(callback);\r\n\r\n            if (isReady()) {\r\n                _.defer(tick);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks for all modules to be initiated\r\n     * and invokes pending callbacks if it's so.\r\n     *\r\n     * @param {Number} [retry] - Number of retries\r\n     *      that will be used to repeat the 'update' function\r\n     *      invokation in case if there are no pending requests.\r\n     */\r\n    update = _.debounce(function (retry) {\r\n        if (!hasPending()) {\r\n            retry ? update(--retry) : resolve();\r\n        }\r\n    }, updateDelay);\r\n\r\n    /**\r\n     * Overrides requirejs's original 'execCb' method\r\n     * in order to track pending modules.\r\n     *\r\n     * @returns {*} Result of original method call.\r\n     */\r\n    context.execCb = function () {\r\n        var exported = execCb.apply(context, arguments);\r\n\r\n        tick();\r\n\r\n        return exported;\r\n    };\r\n\r\n    return subscribe;\r\n});\r\n","mage/requirejs/text.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/* inspired by http://github.com/requirejs/text */\r\n/*global XMLHttpRequest, XDomainRequest */\r\n\r\ndefine(['module'], function (module) {\r\n    'use strict';\r\n\r\n    var xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\r\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\r\n        stripReg = /!strip$/i,\r\n        defaultConfig = module.config && module.config() || {};\r\n\r\n    /**\r\n     * Strips <?xml ...?> declarations so that external SVG and XML documents can be\r\n     * added to a document without worry.\r\n     * Also, if the string is an HTML document, only the part inside the body tag is returned.\r\n     *\r\n     * @param {String} external\r\n     * @returns {String}\r\n     */\r\n    function stripContent(external) {\r\n        var matches;\r\n\r\n        if (!external) {\r\n            return '';\r\n        }\r\n\r\n        matches = external.match(bodyRegExp);\r\n        external = matches ?\r\n            matches[1] :\r\n            external.replace(xmlRegExp, '');\r\n\r\n        return external;\r\n    }\r\n\r\n    /**\r\n     * Checks that url match current location\r\n     *\r\n     * @param {String} url\r\n     * @returns {Boolean}\r\n     */\r\n    function sameDomain(url) {\r\n        var uProtocol, uHostName, uPort,\r\n            xdRegExp = /^([\\w:]+)?\\/\\/([^\\/\\\\]+)/i,\r\n            location = window.location,\r\n            match = xdRegExp.exec(url);\r\n\r\n        if (!match) {\r\n            return true;\r\n        }\r\n        uProtocol = match[1];\r\n        uHostName = match[2];\r\n\r\n        uHostName = uHostName.split(':');\r\n        uPort = uHostName[1] || '';\r\n        uHostName = uHostName[0];\r\n\r\n        return (!uProtocol || uProtocol === location.protocol) &&\r\n            (!uHostName || uHostName.toLowerCase() === location.hostname.toLowerCase()) &&\r\n            (!uPort && !uHostName || uPort === location.port);\r\n    }\r\n\r\n    /**\r\n     * @returns {XMLHttpRequest|XDomainRequest|null}\r\n     */\r\n    function createRequest(url) {\r\n        var xhr = new XMLHttpRequest();\r\n\r\n        if (!sameDomain(url) && typeof XDomainRequest !== 'undefined') {\r\n            xhr = new XDomainRequest();\r\n        }\r\n\r\n        return xhr;\r\n    }\r\n\r\n    /**\r\n     * XHR requester. Returns value to callback.\r\n     *\r\n     * @param {String} url\r\n     * @param {Function} callback\r\n     * @param {Function} fail\r\n     * @param {Object} headers\r\n     */\r\n    function getContent(url, callback, fail, headers) {\r\n        var xhr = createRequest(url),\r\n            header;\r\n\r\n        xhr.open('GET', url);\r\n\r\n        /*eslint-disable max-depth */\r\n        if ('setRequestHeader' in xhr && headers) {\r\n            for (header in headers) {\r\n                if (headers.hasOwnProperty(header)) {\r\n                    xhr.setRequestHeader(header.toLowerCase(), headers[header]);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        xhr.onreadystatechange = function () {\r\n            var status, err;\r\n\r\n            //Do not explicitly handle errors, those should be\r\n            //visible via console output in the browser.\r\n            if (xhr.readyState === 4) {\r\n                status = xhr.status || 0;\r\n\r\n                if (status > 399 && status < 600) {\r\n                    //An http 4xx or 5xx error. Signal an error.\r\n                    err = new Error(url + ' HTTP status: ' + status);\r\n                    err.xhr = xhr;\r\n\r\n                    if (fail) {\r\n                        fail(err);\r\n                    }\r\n                } else {\r\n                    callback(xhr.responseText);\r\n\r\n                    if (defaultConfig.onXhrComplete) {\r\n                        defaultConfig.onXhrComplete(xhr, url);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /*eslint-enable max-depth */\r\n\r\n        if (defaultConfig.onXhr) {\r\n            defaultConfig.onXhr(xhr, url);\r\n        }\r\n\r\n        xhr.send();\r\n    }\r\n\r\n    /**\r\n     * Main method used by RequireJs.\r\n     *\r\n     * @param {String} name - has format: some.module.filext!strip\r\n     * @param {Function} req\r\n     * @param {Function|undefined} onLoad\r\n     */\r\n    function loadContent(name, req, onLoad) {\r\n\r\n        var toStrip = stripReg.test(name),\r\n            url = req.toUrl(name.replace(stripReg, '')),\r\n            headers = defaultConfig.headers;\r\n\r\n        getContent(url, function (content) {\r\n                content = toStrip ? stripContent(content) : content;\r\n                onLoad(content);\r\n            }, onLoad.error, headers);\r\n    }\r\n\r\n    return {\r\n        load: loadContent,\r\n        get: getContent\r\n    };\r\n});\r\n","mage/utils/arrays.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    './strings'\r\n], function (_, utils) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Defines index of an item in a specified container.\r\n     *\r\n     * @param {*} item - Item whose index should be defined.\r\n     * @param {Array} container - Container upon which to perform search.\r\n     * @returns {Number}\r\n     */\r\n    function getIndex(item, container) {\r\n        var index = container.indexOf(item);\r\n\r\n        if (~index) {\r\n            return index;\r\n        }\r\n\r\n        return _.findIndex(container, function (value) {\r\n            return value && value.name === item;\r\n        });\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Facade method to remove/add value from/to array\r\n         * without creating a new instance.\r\n         *\r\n         * @param {Array} arr - Array to be modified.\r\n         * @param {*} value - Value to add/remove.\r\n         * @param {Boolean} add - Flag that specfies operation.\r\n         * @returns {Utils} Chainable.\r\n         */\r\n        toggle: function (arr, value, add) {\r\n            return add ?\r\n                this.add(arr, value) :\r\n                this.remove(arr, value);\r\n        },\r\n\r\n        /**\r\n         * Removes the incoming value from array in case\r\n         * without creating a new instance of it.\r\n         *\r\n         * @param {Array} arr - Array to be modified.\r\n         * @param {*} value - Value to be removed.\r\n         * @returns {Utils} Chainable.\r\n         */\r\n        remove: function (arr, value) {\r\n            var index = arr.indexOf(value);\r\n\r\n            if (~index) {\r\n                arr.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds the incoming value to array if\r\n         * it's not alredy present in there.\r\n         *\r\n         * @param {Array} arr - Array to be modifed.\r\n         * @param {...*} arguments - Values to be added.\r\n         * @returns {Utils} Chainable.\r\n         */\r\n        add: function (arr) {\r\n            var values = _.toArray(arguments).slice(1);\r\n\r\n            values.forEach(function (value) {\r\n                if (!~arr.indexOf(value)) {\r\n                    arr.push(value);\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Inserts specified item into container at a specified position.\r\n         *\r\n         * @param {*} item - Item to be inserted into container.\r\n         * @param {Array} container - Container of items.\r\n         * @param {*} [position=-1] - Position at which item should be inserted.\r\n         *      Position can represent:\r\n         *          - specific index in container\r\n         *          - item which might already be present in container\r\n         *          - structure with one of these properties: after, before\r\n         * @returns {Boolean|*}\r\n         *      - true if element has changed its' position\r\n         *      - false if nothing has changed\r\n         *      - inserted value if it wasn't present in container\r\n         */\r\n        insert: function (item, container, position) {\r\n            var currentIndex = getIndex(item, container),\r\n                newIndex,\r\n                target;\r\n\r\n            if (typeof position === 'undefined') {\r\n                position = -1;\r\n            } else if (typeof position === 'string') {\r\n                position = isNaN(+position) ? position : +position;\r\n            }\r\n\r\n            newIndex = position;\r\n\r\n            if (~currentIndex) {\r\n                target = container.splice(currentIndex, 1)[0];\r\n\r\n                if (typeof item === 'string') {\r\n                    item = target;\r\n                }\r\n            }\r\n\r\n            if (typeof position !== 'number') {\r\n                target = position.after || position.before || position;\r\n\r\n                newIndex = getIndex(target, container);\r\n\r\n                if (~newIndex && (position.after || newIndex >= currentIndex)) {\r\n                    newIndex++;\r\n                }\r\n            }\r\n\r\n            if (newIndex < 0) {\r\n                newIndex += container.length + 1;\r\n            }\r\n\r\n            container[newIndex] ?\r\n                container.splice(newIndex, 0, item) :\r\n                container[newIndex] = item;\r\n\r\n            return !~currentIndex ? item : currentIndex !== newIndex;\r\n        },\r\n\r\n        /**\r\n         * @param {Array} elems\r\n         * @param {Number} offset\r\n         * @return {Number|*}\r\n         */\r\n        formatOffset: function (elems, offset) {\r\n            if (utils.isEmpty(offset)) {\r\n                offset = -1;\r\n            }\r\n\r\n            offset = +offset;\r\n\r\n            if (offset < 0) {\r\n                offset += elems.length + 1;\r\n            }\r\n\r\n            return offset;\r\n        }\r\n    };\r\n});\r\n","mage/utils/compare.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mage/utils/objects'\r\n], function (_, utils) {\r\n    'use strict';\r\n\r\n    var result = [];\r\n\r\n    /**\r\n     * Checks if all of the provided arrays contains equal values.\r\n     *\r\n     * @param {(Boolean|Array)} [keepOrder=false]\r\n     * @param {Array} target\r\n     * @returns {Boolean}\r\n     */\r\n    function equalArrays(keepOrder, target) {\r\n        var args = _.toArray(arguments),\r\n            arrays;\r\n\r\n        if (!Array.isArray(keepOrder)) {\r\n            arrays      = args.slice(2);\r\n        } else {\r\n            target      = keepOrder;\r\n            keepOrder   = false;\r\n            arrays      = args.slice(1);\r\n        }\r\n\r\n        if (!arrays.length) {\r\n            return true;\r\n        }\r\n\r\n        return arrays.every(function (array) {\r\n            if (array === target) {\r\n                return true;\r\n            } else if (array.length !== target.length) {\r\n                return false;\r\n            } else if (!keepOrder) {\r\n                return !_.difference(target, array).length;\r\n            }\r\n\r\n            return array.every(function (value, index) {\r\n                return target[index] === value;\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Checks if two values are different.\r\n     *\r\n     * @param {*} a - First value.\r\n     * @param {*} b - Second value.\r\n     * @returns {Boolean}\r\n     */\r\n    function isDifferent(a, b) {\r\n        var oldIsPrimitive = utils.isPrimitive(a);\r\n\r\n        if (Array.isArray(a) && Array.isArray(b)) {\r\n            return !equalArrays(true, a, b);\r\n        }\r\n\r\n        return oldIsPrimitive ? a !== b : true;\r\n    }\r\n\r\n    /**\r\n     * @param {String} prefix\r\n     * @param {String} part\r\n     */\r\n    function getPath(prefix, part) {\r\n        return prefix ? prefix + '.' + part : part;\r\n    }\r\n\r\n    /**\r\n     * Checks if object has own specified property.\r\n     *\r\n     * @param {*} obj - Value to be checked.\r\n     * @param {String} key - Key of the property.\r\n     * @returns {Boolean}\r\n     */\r\n    function hasOwn(obj, key) {\r\n        return Object.prototype.hasOwnProperty.call(obj, key);\r\n    }\r\n\r\n    /**\r\n     * @param {Array} changes\r\n     */\r\n    function getContainers(changes) {\r\n        var containers  = {},\r\n            indexed     = _.indexBy(changes, 'path');\r\n\r\n        _.each(indexed, function (change, name) {\r\n            var path;\r\n\r\n            name.split('.').forEach(function (part) {\r\n                path = getPath(path, part);\r\n\r\n                if (path in indexed) {\r\n                    return;\r\n                }\r\n\r\n                (containers[path] = containers[path] || []).push(change);\r\n            });\r\n        });\r\n\r\n        return containers;\r\n    }\r\n\r\n    /**\r\n     * @param {String} path\r\n     * @param {String} name\r\n     * @param {String} type\r\n     * @param {String} newValue\r\n     * @param {String} oldValue\r\n     */\r\n    function addChange(path, name, type, newValue, oldValue) {\r\n        var data;\r\n\r\n        data = {\r\n            path: path,\r\n            name: name,\r\n            type: type\r\n        };\r\n\r\n        if (type !== 'remove') {\r\n            data.value = newValue;\r\n            data.oldValue = oldValue;\r\n        } else {\r\n            data.oldValue = newValue;\r\n        }\r\n\r\n        result.push(data);\r\n    }\r\n\r\n    /**\r\n     * @param {String} ns\r\n     * @param {String} name\r\n     * @param {String} type\r\n     * @param {String} iterator\r\n     * @param {String} placeholder\r\n     */\r\n    function setAll(ns, name, type, iterator, placeholder) {\r\n        var key;\r\n\r\n        if (arguments.length > 4) {\r\n            type === 'add' ?\r\n                addChange(ns, name, 'update', iterator, placeholder) :\r\n                addChange(ns, name, 'update', placeholder, iterator);\r\n        } else {\r\n            addChange(ns, name, type, iterator);\r\n        }\r\n\r\n        if (!utils.isObject(iterator)) {\r\n            return;\r\n        }\r\n\r\n        for (key in iterator) {\r\n            if (hasOwn(iterator, key)) {\r\n                setAll(getPath(ns, key), key, type, iterator[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*eslint-disable max-depth*/\r\n    /**\r\n     * @param {Object} old\r\n     * @param {Object} current\r\n     * @param {String} ns\r\n     * @param {String} name\r\n     */\r\n    function compare(old, current, ns, name) {\r\n        var key,\r\n            oldIsObj = utils.isObject(old),\r\n            newIsObj = utils.isObject(current);\r\n\r\n        if (oldIsObj && newIsObj) {\r\n            for (key in old) {\r\n                if (hasOwn(old, key) && !hasOwn(current, key)) {\r\n                    setAll(getPath(ns, key), key, 'remove', old[key]);\r\n                }\r\n            }\r\n\r\n            for (key in current) {\r\n                if (hasOwn(current, key)) {\r\n                    hasOwn(old, key) ?\r\n                        compare(old[key], current[key], getPath(ns, key), key) :\r\n                        setAll(getPath(ns, key), key, 'add', current[key]);\r\n                }\r\n            }\r\n        } else if (oldIsObj) {\r\n            setAll(ns, name, 'remove', old, current);\r\n        } else if (newIsObj) {\r\n            setAll(ns, name, 'add', current, old);\r\n        } else if (isDifferent(old, current)) {\r\n            addChange(ns, name, 'update', current, old);\r\n        }\r\n    }\r\n\r\n    /*eslint-enable max-depth*/\r\n\r\n    return {\r\n\r\n        /**\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        compare: function () {\r\n            var changes;\r\n\r\n            compare.apply(null, arguments);\r\n\r\n            changes = result.splice(0);\r\n\r\n            return {\r\n                containers: getContainers(changes),\r\n                changes: changes,\r\n                equal: !changes.length\r\n            };\r\n        },\r\n\r\n        equalArrays: equalArrays\r\n    };\r\n});\r\n","mage/utils/main.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(function (require) {\r\n    'use strict';\r\n\r\n    var utils = {},\r\n        _ = require('underscore'),\r\n        root = typeof self == 'object' && self.self === self && self ||\r\n            typeof global == 'object' && global.global === global && global ||\r\n            Function('return this')() || {};\r\n\r\n    root._ = _;\r\n\r\n    return _.extend(\r\n        utils,\r\n        require('./arrays'),\r\n        require('./compare'),\r\n        require('./misc'),\r\n        require('./objects'),\r\n        require('./strings'),\r\n        require('./template')\r\n    );\r\n});\r\n","mage/utils/misc.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    'mage/utils/objects'\r\n], function (_, $, utils) {\r\n    'use strict';\r\n\r\n    var defaultAttributes,\r\n        ajaxSettings,\r\n        map;\r\n\r\n    defaultAttributes = {\r\n        method: 'post',\r\n        enctype: 'multipart/form-data'\r\n    };\r\n\r\n    ajaxSettings = {\r\n        default: {\r\n            method: 'POST',\r\n            cache: false,\r\n            processData: false,\r\n            contentType: false\r\n        },\r\n        simple: {\r\n            method: 'POST',\r\n            dataType: 'json'\r\n        }\r\n    };\r\n\r\n    map = {\r\n        'D': 'DDD',\r\n        'dd': 'DD',\r\n        'd': 'D',\r\n        'EEEE': 'dddd',\r\n        'EEE': 'ddd',\r\n        'e': 'd',\r\n        'yyyy': 'YYYY',\r\n        'yy': 'YY',\r\n        'y': 'YYYY',\r\n        'a': 'A'\r\n    };\r\n\r\n    return {\r\n\r\n        /**\r\n         * Generates a unique identifier.\r\n         *\r\n         * @param {Number} [size=7] - Length of a resulting identifier.\r\n         * @returns {String}\r\n         */\r\n        uniqueid: function (size) {\r\n            var code = Math.random() * 25 + 65 | 0,\r\n                idstr = String.fromCharCode(code);\r\n\r\n            size = size || 7;\r\n\r\n            while (idstr.length < size) {\r\n                code = Math.floor(Math.random() * 42 + 48);\r\n\r\n                if (code < 58 || code > 64) {\r\n                    idstr += String.fromCharCode(code);\r\n                }\r\n            }\r\n\r\n            return idstr;\r\n        },\r\n\r\n        /**\r\n         * Limits function call.\r\n         *\r\n         * @param {Object} owner\r\n         * @param {String} target\r\n         * @param {Number} limit\r\n         */\r\n        limit: function (owner, target, limit) {\r\n            var fn = owner[target];\r\n\r\n            owner[target] = _.debounce(fn.bind(owner), limit);\r\n        },\r\n\r\n        /**\r\n         * Converts mage date format to a moment.js format.\r\n         *\r\n         * @param {String} mageFormat\r\n         * @returns {String}\r\n         */\r\n        normalizeDate: function (mageFormat) {\r\n            var result = mageFormat;\r\n\r\n            _.each(map, function (moment, mage) {\r\n                result = result.replace(mage, moment);\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Puts provided value in range of min and max parameters.\r\n         *\r\n         * @param {Number} value - Value to be located.\r\n         * @param {Number} min - Min value.\r\n         * @param {Number} max - Max value.\r\n         * @returns {Number}\r\n         */\r\n        inRange: function (value, min, max) {\r\n            return Math.min(Math.max(min, value), max);\r\n        },\r\n\r\n        /**\r\n         * Serializes and sends data via POST request.\r\n         *\r\n         * @param {Object} options - Options object that consists of\r\n         *      a 'url' and 'data' properties.\r\n         * @param {Object} attrs - Attributes that will be added to virtual form.\r\n         */\r\n        submit: function (options, attrs) {\r\n            var form        = document.createElement('form'),\r\n                data        = utils.serialize(options.data),\r\n                attributes  = _.extend({}, defaultAttributes, attrs || {});\r\n\r\n            if (!attributes.action) {\r\n                attributes.action = options.url;\r\n            }\r\n\r\n            data['form_key'] = window.FORM_KEY;\r\n\r\n            _.each(attributes, function (value, name) {\r\n                form.setAttribute(name, value);\r\n            });\r\n\r\n            data = _.map(\r\n                data,\r\n                function (value, name) {\r\n                    return '<input type=\"hidden\" ' +\r\n                        'name=\"' + _.escape(name) + '\" ' +\r\n                        'value=\"' + _.escape(value) + '\"' +\r\n                        ' />';\r\n                }\r\n            ).join('');\r\n\r\n            form.insertAdjacentHTML('afterbegin', data);\r\n            document.body.appendChild(form);\r\n\r\n            form.submit();\r\n        },\r\n\r\n        /**\r\n         * Serializes and sends data via AJAX POST request.\r\n         *\r\n         * @param {Object} options - Options object that consists of\r\n         *      a 'url' and 'data' properties.\r\n         * @param {Object} config\r\n         */\r\n        ajaxSubmit: function (options, config) {\r\n            var t = new Date().getTime(),\r\n                settings;\r\n\r\n            options.data['form_key'] = window.FORM_KEY;\r\n            options.data = this.prepareFormData(options.data, config.ajaxSaveType);\r\n            settings = _.extend({}, ajaxSettings[config.ajaxSaveType], options || {});\r\n\r\n            if (!config.ignoreProcessEvents) {\r\n                $('body').trigger('processStart');\r\n            }\r\n\r\n            return $.ajax(settings)\r\n                .done(function (data) {\r\n                    if (config.response) {\r\n                        data.t = t;\r\n                        config.response.data(data);\r\n                        config.response.status(undefined);\r\n                        config.response.status(!data.error);\r\n                    }\r\n                })\r\n                .fail(function () {\r\n                    if (config.response) {\r\n                        config.response.status(undefined);\r\n                        config.response.status(false);\r\n                        config.response.data({\r\n                            error: true,\r\n                            messages: 'Something went wrong.',\r\n                            t: t\r\n                        });\r\n                    }\r\n                })\r\n                .always(function () {\r\n                    if (!config.ignoreProcessEvents) {\r\n                        $('body').trigger('processStop');\r\n                    }\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Creates FormData object and append this data.\r\n         *\r\n         * @param {Object} data\r\n         * @param {String} type\r\n         * @returns {FormData}\r\n         */\r\n        prepareFormData: function (data, type) {\r\n            var formData;\r\n\r\n            if (type === 'default') {\r\n                formData = new FormData();\r\n                _.each(utils.serialize(data), function (val, name) {\r\n                    formData.append(name, val);\r\n                });\r\n            } else if (type === 'simple') {\r\n                formData = utils.serialize(data);\r\n            }\r\n\r\n            return formData;\r\n        },\r\n\r\n        /**\r\n         * Filters data object. Finds properties with suffix\r\n         * and sets their values to properties with the same name without suffix.\r\n         *\r\n         * @param {Object} data - The data object that should be filtered\r\n         * @param {String} suffix - The string by which data object should be filtered\r\n         * @param {String} separator - The string that is separator between property and suffix\r\n         *\r\n         * @returns {Object} Filtered data object\r\n         */\r\n        filterFormData: function (data, suffix, separator) {\r\n            data = data || {};\r\n            suffix = suffix || 'prepared-for-send';\r\n            separator = separator || '-';\r\n\r\n            _.each(data, function (value, key) {\r\n                if (_.isObject(value) && !Array.isArray(value)) {\r\n                    this.filterFormData(value, suffix, separator);\r\n                } else if (_.isString(key) && ~key.indexOf(suffix)) {\r\n                    data[key.split(separator)[0]] = value;\r\n                    delete data[key];\r\n                }\r\n            }, this);\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Replaces special characters with their corresponding HTML entities.\r\n         *\r\n         * @param {String} string - Text to escape.\r\n         * @returns {String} Escaped text.\r\n         */\r\n        escape: function (string) {\r\n            return string ? $('<p></p>').text(string).html().replace(/\"/g, '&quot;') : string;\r\n        },\r\n\r\n        /**\r\n         * Replaces symbol codes with their unescaped counterparts.\r\n         *\r\n         * @param {String} data\r\n         *\r\n         * @returns {String}\r\n         */\r\n        unescape: function (data) {\r\n            var unescaped = _.unescape(data),\r\n                mapCharacters = {\r\n                    '&#039;': '\\''\r\n                };\r\n\r\n            _.each(mapCharacters, function (value, key) {\r\n                unescaped = unescaped.replace(key, value);\r\n            });\r\n\r\n            return unescaped;\r\n        },\r\n\r\n        /**\r\n         * Converts PHP IntlFormatter format to moment format.\r\n         *\r\n         * @param {String} format - PHP format\r\n         * @returns {String} - moment compatible formatting\r\n         */\r\n        convertToMomentFormat: function (format) {\r\n            var newFormat;\r\n\r\n            newFormat = format.replace(/yyyy|yy|y/, 'YYYY'); // replace the year\r\n            newFormat = newFormat.replace(/dd|d/g, 'DD'); // replace the date\r\n\r\n            return newFormat;\r\n        },\r\n\r\n        /**\r\n         * Get Url Parameters.\r\n         *\r\n         * @param {String} url - Url string\r\n         * @returns {Object}\r\n         */\r\n        getUrlParameters: function (url) {\r\n            var params = {},\r\n                queries = url.split('?'),\r\n                temp,\r\n                i,\r\n                l;\r\n\r\n            if (!queries[1]) {\r\n                return params;\r\n            }\r\n\r\n            queries = queries[1].split('&');\r\n\r\n            for (i = 0, l = queries.length; i < l; i++) {\r\n                temp = queries[i].split('=');\r\n\r\n                if (temp[1]) {\r\n                    params[temp[0]] = decodeURIComponent(temp[1].replace(/\\+/g, '%20'));\r\n                } else {\r\n                    params[temp[0]] = '';\r\n                }\r\n            }\r\n\r\n            return params;\r\n        }\r\n    };\r\n});\r\n","mage/utils/objects.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    'mage/utils/strings'\r\n], function (ko, $, _, stringUtils) {\r\n    'use strict';\r\n\r\n    var primitives = [\r\n        'undefined',\r\n        'boolean',\r\n        'number',\r\n        'string'\r\n    ];\r\n\r\n    /**\r\n     * Sets nested property of a specified object.\r\n     * @private\r\n     *\r\n     * @param {Object} parent - Object to look inside for the properties.\r\n     * @param {Array} path - Splitted path the property.\r\n     * @param {*} value - Value of the last property in 'path' array.\r\n     * returns {*} New value for the property.\r\n     */\r\n    function setNested(parent, path, value) {\r\n        var last = path.pop(),\r\n            len = path.length,\r\n            pi = 0,\r\n            part = path[pi];\r\n\r\n        for (; pi < len; part = path[++pi]) {\r\n            if (!_.isObject(parent[part])) {\r\n                parent[part] = {};\r\n            }\r\n\r\n            parent = parent[part];\r\n        }\r\n\r\n        if (typeof parent[last] === 'function') {\r\n            parent[last](value);\r\n        } else {\r\n            parent[last] = value;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Retrieves value of a nested property.\r\n     * @private\r\n     *\r\n     * @param {Object} parent - Object to look inside for the properties.\r\n     * @param {Array} path - Splitted path the property.\r\n     * @returns {*} Value of the property.\r\n     */\r\n    function getNested(parent, path) {\r\n        var exists = true,\r\n            len = path.length,\r\n            pi = 0;\r\n\r\n        for (; pi < len && exists; pi++) {\r\n            parent = parent[path[pi]];\r\n\r\n            if (typeof parent === 'undefined') {\r\n                exists = false;\r\n            }\r\n        }\r\n\r\n        if (exists) {\r\n            if (ko.isObservable(parent)) {\r\n                parent = parent();\r\n            }\r\n\r\n            return parent;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes property from a specified object.\r\n     * @private\r\n     *\r\n     * @param {Object} parent - Object from which to remove property.\r\n     * @param {Array} path - Splitted path to the property.\r\n     */\r\n    function removeNested(parent, path) {\r\n        var field = path.pop();\r\n\r\n        parent = getNested(parent, path);\r\n\r\n        if (_.isObject(parent)) {\r\n            delete parent[field];\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Retrieves or defines objects' property by a composite path.\r\n         *\r\n         * @param {Object} data - Container for the properties specified in path.\r\n         * @param {String} path - Objects' properties divided by dots.\r\n         * @param {*} [value] - New value for the last property.\r\n         * @returns {*} Returns value of the last property in chain.\r\n         *\r\n         * @example\r\n         *      utils.nested({}, 'one.two', 3);\r\n         *      => { one: {two: 3} }\r\n         */\r\n        nested: function (data, path, value) {\r\n            var action = arguments.length > 2 ? setNested : getNested;\r\n\r\n            path = path ? path.split('.') : [];\r\n\r\n            return action(data, path, value);\r\n        },\r\n\r\n        /**\r\n         * Removes nested property from an object.\r\n         *\r\n         * @param {Object} data - Data source.\r\n         * @param {String} path - Path to the property e.g. 'one.two.three'\r\n         */\r\n        nestedRemove: function (data, path) {\r\n            path = path.split('.');\r\n\r\n            removeNested(data, path);\r\n        },\r\n\r\n        /**\r\n         * Flattens objects' nested properties.\r\n         *\r\n         * @param {Object} data - Object to flatten.\r\n         * @param {String} [separator='.'] - Objects' keys separator.\r\n         * @returns {Object} Flattened object.\r\n         *\r\n         * @example Example with a default separator.\r\n         *      utils.flatten({one: { two: { three: 'value'} }});\r\n         *      => { 'one.two.three': 'value' };\r\n         *\r\n         * @example Example with a custom separator.\r\n         *      utils.flatten({one: { two: { three: 'value'} }}, '=>');\r\n         *      => {'one=>two=>three': 'value'};\r\n         */\r\n        flatten: function (data, separator, parent, result) {\r\n            separator = separator || '.';\r\n            result = result || {};\r\n\r\n            if (!data) {\r\n                return result;\r\n            }\r\n\r\n            // UnderscoreJS each breaks when an object has a length property so we use Object.keys\r\n            _.each(Object.keys(data), function (name) {\r\n                var node = data[name];\r\n\r\n                if ({}.toString.call(node) === '[object Function]') {\r\n                    return;\r\n                }\r\n\r\n                if (parent) {\r\n                    name = parent + separator + name;\r\n                }\r\n\r\n                typeof node === 'object' ?\r\n                    this.flatten(node, separator, name, result) :\r\n                    result[name] = node;\r\n\r\n            }, this);\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Opposite operation of the 'flatten' method.\r\n         *\r\n         * @param {Object} data - Previously flattened object.\r\n         * @param {String} [separator='.'] - Keys separator.\r\n         * @returns {Object} Object with nested properties.\r\n         *\r\n         * @example Example using custom separator.\r\n         *      utils.unflatten({'one=>two': 'value'}, '=>');\r\n         *      => {\r\n         *          one: { two: 'value' }\r\n         *      };\r\n         */\r\n        unflatten: function (data, separator) {\r\n            var result = {};\r\n\r\n            separator = separator || '.';\r\n\r\n            _.each(data, function (value, nodes) {\r\n                nodes = nodes.split(separator);\r\n\r\n                setNested(result, nodes, value);\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Same operation as 'flatten' method,\r\n         * but returns objects' keys wrapped in '[]'.\r\n         *\r\n         * @param {Object} data - Object that should be serialized.\r\n         * @returns {Object} Serialized data.\r\n         *\r\n         * @example\r\n         *      utils.serialize({one: { two: { three: 'value'} }});\r\n         *      => { 'one[two][three]': 'value' }\r\n         */\r\n        serialize: function (data) {\r\n            var result = {};\r\n\r\n            data = this.flatten(data);\r\n\r\n            _.each(data, function (value, keys) {\r\n                keys = stringUtils.serializeName(keys);\r\n                value = _.isUndefined(value) ? '' : value;\r\n\r\n                result[keys] = value;\r\n            }, this);\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Performs deep extend of specified objects.\r\n         *\r\n         * @returns {Object|Array} Extended object.\r\n         */\r\n        extend: function () {\r\n            var args = _.toArray(arguments);\r\n\r\n            args.unshift(true);\r\n\r\n            return $.extend.apply($, args);\r\n        },\r\n\r\n        /**\r\n         * Performs a deep clone of a specified object.\r\n         *\r\n         * @param {(Object|Array)} data - Data that should be copied.\r\n         * @returns {Object|Array} Cloned object.\r\n         */\r\n        copy: function (data) {\r\n            var result = data,\r\n                isArray = Array.isArray(data),\r\n                placeholder;\r\n\r\n            if (this.isObject(data) || isArray) {\r\n                placeholder = isArray ? [] : {};\r\n                result = this.extend(placeholder, data);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Performs a deep clone of a specified object.\r\n         * Doesn't save links to original object.\r\n         *\r\n         * @param {*} original - Object to clone\r\n         * @returns {*}\r\n         */\r\n        hardCopy: function (original) {\r\n            if (original === null || typeof original !== 'object') {\r\n                return original;\r\n            }\r\n\r\n            return JSON.parse(JSON.stringify(original));\r\n        },\r\n\r\n        /**\r\n         * Removes specified nested properties from the target object.\r\n         *\r\n         * @param {Object} target - Object whose properties should be removed.\r\n         * @param {(...String|Array|Object)} list - List that specifies properties to be removed.\r\n         * @returns {Object} Modified object.\r\n         *\r\n         * @example Basic usage\r\n         *      var obj = {a: {b: 2}, c: 'a'};\r\n         *\r\n         *      omit(obj, 'a.b');\r\n         *      => {'a.b': 2};\r\n         *      obj => {a: {}, c: 'a'};\r\n         *\r\n         * @example Various syntaxes that would return same result\r\n         *      omit(obj, ['a.b', 'c']);\r\n         *      omit(obj, 'a.b', 'c');\r\n         *      omit(obj, {'a.b': true, 'c': true});\r\n         */\r\n        omit: function (target, list) {\r\n            var removed = {},\r\n                ignored = list;\r\n\r\n            if (this.isObject(list)) {\r\n                ignored = [];\r\n\r\n                _.each(list, function (value, key) {\r\n                    if (value) {\r\n                        ignored.push(key);\r\n                    }\r\n                });\r\n            } else if (_.isString(list)) {\r\n                ignored = _.toArray(arguments).slice(1);\r\n            }\r\n\r\n            _.each(ignored, function (path) {\r\n                var value = this.nested(target, path);\r\n\r\n                if (!_.isUndefined(value)) {\r\n                    removed[path] = value;\r\n\r\n                    this.nestedRemove(target, path);\r\n                }\r\n            }, this);\r\n\r\n            return removed;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided value is a plain object.\r\n         *\r\n         * @param {*} value - Value to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isObject: function (value) {\r\n            var objProto = Object.prototype;\r\n\r\n            return typeof value == 'object' ?\r\n            objProto.toString.call(value) === '[object Object]' :\r\n                false;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {*} value\r\n         * @returns {Boolean}\r\n         */\r\n        isPrimitive: function (value) {\r\n            return value === null || ~primitives.indexOf(typeof value);\r\n        },\r\n\r\n        /**\r\n         * Iterates over obj props/array elems recursively, applying action to each one\r\n         *\r\n         * @param {Object|Array} data - Data to be iterated.\r\n         * @param {Function} action - Callback to be called with each item as an argument.\r\n         * @param {Number} [maxDepth=7] - Max recursion depth.\r\n         */\r\n        forEachRecursive: function (data, action, maxDepth) {\r\n            maxDepth = typeof maxDepth === 'number' && !isNaN(maxDepth) ? maxDepth - 1 : 7;\r\n\r\n            if (!_.isFunction(action) || _.isFunction(data) || maxDepth < 0) {\r\n                return;\r\n            }\r\n\r\n            if (!_.isObject(data)) {\r\n                action(data);\r\n\r\n                return;\r\n            }\r\n\r\n            _.each(data, function (value) {\r\n                this.forEachRecursive(value, action, maxDepth);\r\n            }, this);\r\n\r\n            action(data);\r\n        },\r\n\r\n        /**\r\n         * Maps obj props/array elems recursively\r\n         *\r\n         * @param {Object|Array} data - Data to be iterated.\r\n         * @param {Function} action - Callback to transform each item.\r\n         * @param {Number} [maxDepth=7] - Max recursion depth.\r\n         *\r\n         * @returns {Object|Array}\r\n         */\r\n        mapRecursive: function (data, action, maxDepth) {\r\n            var newData;\r\n\r\n            maxDepth = typeof maxDepth === 'number' && !isNaN(maxDepth) ? maxDepth - 1 : 7;\r\n\r\n            if (!_.isFunction(action) || _.isFunction(data) || maxDepth < 0) {\r\n                return data;\r\n            }\r\n\r\n            if (!_.isObject(data)) {\r\n                return action(data);\r\n            }\r\n\r\n            if (_.isArray(data)) {\r\n                newData = _.map(data, function (item) {\r\n                    return this.mapRecursive(item, action, maxDepth);\r\n                }, this);\r\n\r\n                return action(newData);\r\n            }\r\n\r\n            newData = _.mapObject(data, function (val, key) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    return this.mapRecursive(val, action, maxDepth);\r\n                }\r\n\r\n                return val;\r\n            }, this);\r\n\r\n            return action(newData);\r\n        },\r\n\r\n        /**\r\n         * Removes empty(in common sence) obj props/array elems\r\n         *\r\n         * @param {*} data - Data to be cleaned.\r\n         * @returns {*}\r\n         */\r\n        removeEmptyValues: function (data) {\r\n            if (!_.isObject(data)) {\r\n                return data;\r\n            }\r\n\r\n            if (_.isArray(data)) {\r\n                return data.filter(function (item) {\r\n                    return !this.isEmptyObj(item);\r\n                }, this);\r\n            }\r\n\r\n            return _.omit(data, this.isEmptyObj.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Checks that argument of any type is empty in common sence:\r\n         * empty string, string with spaces only, object without own props, empty array, null or undefined\r\n         *\r\n         * @param {*} val - Value to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isEmptyObj: function (val) {\r\n\r\n            return _.isObject(val) && _.isEmpty(val) ||\r\n            this.isEmpty(val) ||\r\n            val && val.trim && this.isEmpty(val.trim());\r\n        }\r\n    };\r\n});\r\n\r\n","mage/utils/strings.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    var jsonRe = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/;\r\n\r\n    return {\r\n\r\n        /**\r\n         * Attempts to convert string to one of the primitive values,\r\n         * or to parse it as a valid json object.\r\n         *\r\n         * @param {String} str - String to be processed.\r\n         * @returns {*}\r\n         */\r\n        castString: function (str) {\r\n            try {\r\n                str = str === 'true' ? true :\r\n                    str === 'false' ? false :\r\n                        str === 'null' ? null :\r\n                            +str + '' === str ? +str :\r\n                                jsonRe.test(str) ? JSON.parse(str) :\r\n                                    str;\r\n            } catch (e) {\r\n            }\r\n\r\n            return str;\r\n        },\r\n\r\n        /**\r\n         * Splits string by separator if it's possible,\r\n         * otherwise returns the incoming value.\r\n         *\r\n         * @param {(String|Array|*)} str - String to split.\r\n         * @param {String} [separator=' '] - Seperator based on which to split the string.\r\n         * @returns {Array|*} Splitted string or the incoming value.\r\n         */\r\n        stringToArray: function (str, separator) {\r\n            separator = separator || ' ';\r\n\r\n            return typeof str === 'string' ?\r\n                str.split(separator) :\r\n                str;\r\n        },\r\n\r\n        /**\r\n         * Converts the incoming string which consists\r\n         * of a specified delimiters into a format commonly used in form elements.\r\n         *\r\n         * @param {String} name - The incoming string.\r\n         * @param {String} [separator='.']\r\n         * @returns {String} Serialized string.\r\n         *\r\n         * @example\r\n         *      utils.serializeName('one.two.three');\r\n         *      => 'one[two][three]';\r\n         */\r\n        serializeName: function (name, separator) {\r\n            var result;\r\n\r\n            separator = separator || '.';\r\n            name = name.split(separator);\r\n\r\n            result = name.shift();\r\n\r\n            name.forEach(function (part) {\r\n                result += '[' + part + ']';\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Checks wether the incoming value is not empty,\r\n         * e.g. not 'null' or 'undefined'\r\n         *\r\n         * @param {*} value - Value to check.\r\n         * @returns {Boolean}\r\n         */\r\n        isEmpty: function (value) {\r\n            return value === '' || _.isUndefined(value) || _.isNull(value);\r\n        },\r\n\r\n        /**\r\n         * Adds 'prefix' to the 'part' value if it was provided.\r\n         *\r\n         * @param {String} prefix\r\n         * @param {String} part\r\n         * @returns {String}\r\n         */\r\n        fullPath: function (prefix, part) {\r\n            return prefix ? prefix + '.' + part : part;\r\n        },\r\n\r\n        /**\r\n         * Splits incoming string and returns its' part specified by offset.\r\n         *\r\n         * @param {String} parts\r\n         * @param {Number} [offset]\r\n         * @param {String} [delimiter=.]\r\n         * @returns {String}\r\n         */\r\n        getPart: function (parts, offset, delimiter) {\r\n            delimiter = delimiter || '.';\r\n            parts = parts.split(delimiter);\r\n            offset = this.formatOffset(parts, offset);\r\n\r\n            parts.splice(offset, 1);\r\n\r\n            return parts.join(delimiter) || '';\r\n        },\r\n\r\n        /**\r\n         * Converts nameThroughCamelCase to name-through-minus\r\n         *\r\n         * @param {String} string\r\n         * @returns {String}\r\n         */\r\n        camelCaseToMinus: function camelCaseToMinus(string) {\r\n            return ('' + string)\r\n                .split('')\r\n                .map(function (symbol, index) {\r\n                    return index ?\r\n                        symbol.toUpperCase() === symbol ?\r\n                        '-' + symbol.toLowerCase() :\r\n                            symbol :\r\n                        symbol.toLowerCase();\r\n                })\r\n                .join('');\r\n        },\r\n\r\n        /**\r\n         * Converts name-through-minus to nameThroughCamelCase\r\n         *\r\n         * @param {String} string\r\n         * @returns {String}\r\n         */\r\n        minusToCamelCase: function minusToCamelCase(string) {\r\n            return ('' + string)\r\n                .split('-')\r\n                .map(function (part, index) {\r\n                    return index ? part.charAt(0).toUpperCase() + part.slice(1) : part;\r\n                })\r\n                .join('');\r\n        }\r\n    };\r\n});\r\n","mage/utils/template.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* eslint-disable no-shadow */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/utils/objects',\r\n    'mage/utils/strings'\r\n], function ($, _, utils, stringUtils) {\r\n    'use strict';\r\n\r\n    var tmplSettings = _.templateSettings,\r\n        interpolate = /\\$\\{([\\s\\S]+?)\\}/g,\r\n        opener = '${',\r\n        template,\r\n        hasStringTmpls;\r\n\r\n    /**\r\n     * Identifies whether ES6 templates are supported.\r\n     */\r\n    hasStringTmpls = (function () {\r\n        var testString = 'var foo = \"bar\"; return `${ foo }` === foo';\r\n\r\n        try {\r\n            return Function(testString)();\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    })();\r\n\r\n    /**\r\n     * Objects can specify how to use templating for their properties - getting that configuration.\r\n     *\r\n     * To disable rendering for all properties of your object add __disableTmpl: true.\r\n     * To disable for specific property add __disableTmpl: {propertyName: true}.\r\n     * To limit recursion for a specific property add __disableTmpl: {propertyName: numberOfCycles}.\r\n     *\r\n     * @param {String} tmpl\r\n     * @param {Object | undefined} target\r\n     * @returns {Boolean|Object}\r\n     */\r\n    function isTmplIgnored(tmpl, target) {\r\n        var parsedTmpl;\r\n\r\n        try {\r\n            parsedTmpl = JSON.parse(tmpl);\r\n\r\n            if (typeof parsedTmpl === 'object') {\r\n                return tmpl.includes('__disableTmpl');\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n        if (typeof target !== 'undefined') {\r\n            if (typeof target === 'object' && target.hasOwnProperty('__disableTmpl')) {\r\n                return target.__disableTmpl;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    if (hasStringTmpls) {\r\n\r\n        /*eslint-disable no-unused-vars, no-eval*/\r\n        /**\r\n         * Evaluates template string using ES6 templates.\r\n         *\r\n         * @param {String} tmpl - Template string.\r\n         * @param {Object} $ - Data object used in a template.\r\n         * @returns {String} Compiled template.\r\n         */\r\n        template = function (tmpl, $) {\r\n            return eval('`' + tmpl + '`');\r\n        };\r\n\r\n        /*eslint-enable no-unused-vars, no-eval*/\r\n    } else {\r\n\r\n        /**\r\n         * Fallback function used when ES6 templates are not supported.\r\n         * Uses underscore templates renderer.\r\n         *\r\n         * @param {String} tmpl - Template string.\r\n         * @param {Object} data - Data object used in a template.\r\n         * @returns {String} Compiled template.\r\n         */\r\n        template = function (tmpl, data) {\r\n            var cached = tmplSettings.interpolate;\r\n\r\n            tmplSettings.interpolate = interpolate;\r\n\r\n            tmpl = _.template(tmpl, {\r\n                variable: '$'\r\n            })(data);\r\n\r\n            tmplSettings.interpolate = cached;\r\n\r\n            return tmpl;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Checks if provided value contains template syntax.\r\n     *\r\n     * @param {*} value - Value to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isTemplate(value) {\r\n        return typeof value === 'string' &&\r\n            value.indexOf(opener) !== -1 &&\r\n            // the below pattern almost always indicates an accident which should not cause template evaluation\r\n            // refuse to evaluate\r\n            value.indexOf('${{') === -1;\r\n    }\r\n\r\n    /**\r\n     * Iteratively processes provided string\r\n     * until no templates syntax will be found.\r\n     *\r\n     * @param {String} tmpl - Template string.\r\n     * @param {Object} data - Data object used in a template.\r\n     * @param {Boolean} [castString=false] - Flag that indicates whether template\r\n     *      should be casted after evaluation to a value of another type or\r\n     *      that it should be leaved as a string.\r\n     * @param {Number|undefined} maxCycles - Maximum number of rendering cycles, can be 0.\r\n     * @returns {*} Compiled template.\r\n     */\r\n    function render(tmpl, data, castString, maxCycles) {\r\n        var last = tmpl,\r\n            cycles = 0;\r\n\r\n        while (~tmpl.indexOf(opener) && (typeof maxCycles === 'undefined' || cycles < maxCycles)) {\r\n            if (!isTmplIgnored(tmpl)) {\r\n                tmpl = template(tmpl, data);\r\n            }\r\n\r\n            if (tmpl === last) {\r\n                break;\r\n            }\r\n\r\n            last = tmpl;\r\n            cycles++;\r\n        }\r\n\r\n        return castString ?\r\n            stringUtils.castString(tmpl) :\r\n            tmpl;\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Applies provided data to the template.\r\n         *\r\n         * @param {Object|String} tmpl\r\n         * @param {Object} [data] - Data object to match with template.\r\n         * @param {Boolean} [castString=false] - Flag that indicates whether template\r\n         *      should be casted after evaluation to a value of another type or\r\n         *      that it should be leaved as a string.\r\n         * @returns {*}\r\n         *\r\n         * @example Template defined as a string.\r\n         *      var source = { foo: 'Random Stuff', bar: 'Some' };\r\n         *\r\n         *      utils.template('${ $.bar } ${ $.foo }', source);\r\n         *      => 'Some Random Stuff';\r\n         *\r\n         * @example Template defined as an object.\r\n         *      var tmpl = {\r\n         *              key: {'${ $.$data.bar }': '${ $.$data.foo }'},\r\n         *              foo: 'bar',\r\n         *              x1: 2, x2: 5,\r\n         *              delta: '${ $.x2 - $.x1 }',\r\n         *              baz: 'Upper ${ $.foo.toUpperCase() }'\r\n         *      };\r\n         *\r\n         *      utils.template(tmpl, source);\r\n         *      => {\r\n         *          key: {'Some': 'Random Stuff'},\r\n         *          foo: 'bar',\r\n         *          x1: 2, x2: 5,\r\n         *          delta: 3,\r\n         *          baz: 'Upper BAR'\r\n         *      };\r\n         */\r\n        template: function (tmpl, data, castString, dontClone) {\r\n            if (typeof tmpl === 'string') {\r\n                return render(tmpl, data, castString);\r\n            }\r\n\r\n            if (!dontClone) {\r\n                tmpl = utils.copy(tmpl);\r\n            }\r\n\r\n            tmpl.$data = data || {};\r\n\r\n            /**\r\n             * Template iterator function.\r\n             */\r\n            _.each(tmpl, function iterate(value, key, list) {\r\n                var disabled,\r\n                    maxCycles;\r\n\r\n                if (key === '$data') {\r\n                    return;\r\n                }\r\n\r\n                if (isTemplate(key)) {\r\n                    delete list[key];\r\n\r\n                    key = render(key, tmpl);\r\n                    list[key] = value;\r\n                }\r\n\r\n                if (isTemplate(value)) {\r\n                    //Getting template disabling settings, can be true for all disabled and separate settings\r\n                    //for each property.\r\n                    disabled = isTmplIgnored(value, list);\r\n\r\n                    if (typeof disabled === 'object' && disabled.hasOwnProperty(key) && disabled[key] !== false) {\r\n                        //Checking if specific settings for a property provided.\r\n                        maxCycles = disabled[key];\r\n                    }\r\n\r\n                    if (disabled === true || maxCycles === true) {\r\n                        //Rendering for all properties is disabled.\r\n                        maxCycles = 0;\r\n                    }\r\n\r\n                    list[key] = render(value, tmpl, castString, maxCycles);\r\n                } else if ($.isPlainObject(value) || Array.isArray(value)) {\r\n                    _.each(value, iterate);\r\n                }\r\n            });\r\n\r\n            delete tmpl.$data;\r\n\r\n            return tmpl;\r\n        }\r\n    };\r\n});\r\n","mage/utils/wrapper.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * Utility methods used to wrap and extend functions.\r\n *\r\n * @example Usage of a 'wrap' method with arguments delegation.\r\n *      var multiply = function (a, b) {\r\n *          return a * b;\r\n *      };\r\n *\r\n *      multiply = module.wrap(multiply, function (orig) {\r\n *          return 'Result is: ' + orig();\r\n *      });\r\n *\r\n *      multiply(2, 2);\r\n *      => 'Result is: 4'\r\n *\r\n * @example Usage of 'wrapSuper' method.\r\n *      var multiply = function (a, b) {\r\n *         return a * b;\r\n *      };\r\n *\r\n *      var obj = {\r\n *          multiply: module.wrapSuper(multiply, function () {\r\n *              return 'Result is: ' + this._super();\r\n *          });\r\n *      };\r\n *\r\n *      obj.multiply(2, 2);\r\n *      => 'Result is: 4'\r\n */\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Checks if string has a '_super' substring.\r\n     */\r\n    var superReg = /\\b_super\\b/;\r\n\r\n    return {\r\n\r\n        /**\r\n         * Wraps target function with a specified wrapper, which will receive\r\n         * reference to the original function as a first argument.\r\n         *\r\n         * @param {Function} target - Function to be wrapped.\r\n         * @param {Function} wrapper - Wrapper function.\r\n         * @returns {Function} Wrapper function.\r\n         */\r\n        wrap: function (target, wrapper) {\r\n            if (!_.isFunction(target) || !_.isFunction(wrapper)) {\r\n                return wrapper;\r\n            }\r\n\r\n            return function () {\r\n                var args    = _.toArray(arguments),\r\n                    ctx     = this,\r\n                    _super;\r\n\r\n                /**\r\n                 * Function that will be passed to the wrapper.\r\n                 * If no arguments will be passed to it, then the original\r\n                 * function will be called with an arguments of a wrapper function.\r\n                 */\r\n                _super = function () {\r\n                    var superArgs = arguments.length ? arguments : args.slice(1);\r\n\r\n                    return target.apply(ctx, superArgs);\r\n                };\r\n\r\n                args.unshift(_super);\r\n\r\n                return wrapper.apply(ctx, args);\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Wraps the incoming function to implement support of the '_super' method.\r\n         *\r\n         * @param {Function} target - Function to be wrapped.\r\n         * @param {Function} wrapper - Wrapper function.\r\n         * @returns {Function} Wrapped function.\r\n         */\r\n        wrapSuper: function (target, wrapper) {\r\n            if (!this.hasSuper(wrapper) || !_.isFunction(target)) {\r\n                return wrapper;\r\n            }\r\n\r\n            return function () {\r\n                var _super  = this._super,\r\n                    args    = arguments,\r\n                    result;\r\n\r\n                /**\r\n                 * Temporary define '_super' method which\r\n                 * contains call to the original function.\r\n                 */\r\n                this._super = function () {\r\n                    var superArgs = arguments.length ? arguments : args;\r\n\r\n                    return target.apply(this, superArgs);\r\n                };\r\n\r\n                result = wrapper.apply(this, args);\r\n\r\n                this._super = _super;\r\n\r\n                return result;\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Checks wether the incoming method contains calls of the '_super' method.\r\n         *\r\n         * @param {Function} fn - Function to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        hasSuper: function (fn) {\r\n            return _.isFunction(fn) && superReg.test(fn);\r\n        },\r\n\r\n        /**\r\n         * Extends target object with provided extenders.\r\n         * If property in target and extender objects is a function,\r\n         * then it will be wrapped using 'wrap' method.\r\n         *\r\n         * @param {Object} target - Object to be extended.\r\n         * @param {...Object} extenders - Multiple extenders objects.\r\n         * @returns {Object} Modified target object.\r\n         */\r\n        extend: function (target) {\r\n            var extenders = _.toArray(arguments).slice(1),\r\n                iterator = this._extend.bind(this, target);\r\n\r\n            extenders.forEach(iterator);\r\n\r\n            return target;\r\n        },\r\n\r\n        /**\r\n         * Same as the 'extend' method, but operates only on one extender object.\r\n         *\r\n         * @private\r\n         * @param {Object} target\r\n         * @param {Object} extender\r\n         */\r\n        _extend: function (target, extender) {\r\n            _.each(extender, function (value, key) {\r\n                target[key] = this.wrap(target[key], extender[key]);\r\n            }, this);\r\n        }\r\n    };\r\n});\r\n","mage/validation/url.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n\r\n        /**\r\n         * Redirects to the url if it is considered safe\r\n         *\r\n         * @param {String} path - url to be redirected to\r\n         */\r\n        redirect: function (path) {\r\n            path = this.sanitize(path);\r\n\r\n            if (this.validate(path)) {\r\n                window.location.href = path;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validates url\r\n         *\r\n         * @param {Object} path - url to be validated\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function (path) {\r\n            var hostname = window.location.hostname;\r\n\r\n            if (path.indexOf(hostname) === -1 ||\r\n                path.indexOf('javascript:') !== -1 ||\r\n                path.indexOf('vbscript:') !== -1) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Sanitize url, replacing disallowed chars\r\n         *\r\n         * @param {String} path - url to be normalized\r\n         * @returns {String}\r\n         */\r\n        sanitize: function (path) {\r\n            return path.replace('[^-A-Za-z0-9+&@#/%?=~_|!:,.;\\(\\)]', '');\r\n        }\r\n    };\r\n});\r\n","mage/validation/validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/validation',\r\n    'mage/translate'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.each({\r\n        'validate-grouped-qty': [\r\n            function (value, element, params) {\r\n                var result = false,\r\n                    total = 0;\r\n\r\n                $(params).find('input[data-validate*=\"validate-grouped-qty\"]').each(function (i, e) {\r\n                    var val = $(e).val(),\r\n                        valInt;\r\n\r\n                    if (val && val.length > 0) {\r\n                        result = true;\r\n                        valInt = parseFloat(val) || 0;\r\n\r\n                        if (valInt >= 0) {\r\n                            total += valInt;\r\n                        } else {\r\n                            result = false;\r\n\r\n                            return result;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return result && total > 0;\r\n            },\r\n            $.mage.__('Please specify the quantity of product(s).')\r\n        ],\r\n        'validate-one-checkbox-required-by-name': [\r\n            function (value, element, params) {\r\n                var checkedCount = 0,\r\n                    container;\r\n\r\n                if (element.type === 'checkbox') {\r\n                    $('[name=\"' + element.name + '\"]').each(\r\n                        function () {\r\n                            if ($(this).is(':checked')) {\r\n                                checkedCount += 1;\r\n\r\n                                return false;\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n                container = '#' + params;\r\n\r\n                if (checkedCount > 0) {\r\n                    $(container).removeClass('validation-failed');\r\n                    $(container).addClass('validation-passed');\r\n\r\n                    return true;\r\n                }\r\n                $(container).addClass('validation-failed');\r\n                $(container).removeClass('validation-passed');\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Please select one of the options.')\r\n        ],\r\n        'validate-date-between': [\r\n            function (value, element, params) {\r\n                var minDate = new Date(params[0]),\r\n                    maxDate = new Date(params[1]),\r\n                    inputDate = new Date(element.value),\r\n                    message;\r\n\r\n                minDate.setHours(0);\r\n                maxDate.setHours(0);\r\n\r\n                if (inputDate >= minDate && inputDate <= maxDate) {\r\n                    return true;\r\n                }\r\n                message = $.mage.__('Please enter a date between %min and %max.');\r\n                this.dateBetweenErrorMessage = message.replace('%min', minDate).replace('%max', maxDate);\r\n\r\n                return false;\r\n            },\r\n            function () {\r\n                return this.dateBetweenErrorMessage;\r\n            }\r\n        ],\r\n        'validate-dob': [\r\n            function (val, element, params) {\r\n                var dob = $(element).parents('.customer-dob'),\r\n                    dayVal, monthVal, yearVal, dobLength, day, month, year, curYear,\r\n                    validYearMessage, validateDayInMonth, validDateMessage, today, dateEntered;\r\n\r\n                $(dob).find('.' + this.settings.errorClass).removeClass(this.settings.errorClass);\r\n                dayVal = $(dob).find(params[0]).find('input:text').val();\r\n                monthVal = $(dob).find(params[1]).find('input:text').val();\r\n                yearVal = $(dob).find(params[2]).find('input:text').val();\r\n                dobLength = dayVal.length + monthVal.length + yearVal.length;\r\n\r\n                if (params[3] && dobLength === 0) {\r\n                    this.dobErrorMessage = $.mage.__('This is a required field.');\r\n\r\n                    return false;\r\n                }\r\n\r\n                if (!params[3] && dobLength === 0) {\r\n                    return true;\r\n                }\r\n                day = parseInt(dayVal, 10) || 0;\r\n                month = parseInt(monthVal, 10) || 0;\r\n                year = parseInt(yearVal, 10) || 0;\r\n                curYear = (new Date()).getFullYear();\r\n\r\n                if (!day || !month || !year) {\r\n                    this.dobErrorMessage = $.mage.__('Please enter a valid full date.');\r\n\r\n                    return false;\r\n                }\r\n\r\n                if (month < 1 || month > 12) {\r\n                    this.dobErrorMessage = $.mage.__('Please enter a valid month (1-12).');\r\n\r\n                    return false;\r\n                }\r\n\r\n                if (year < 1900 || year > curYear) {\r\n                    validYearMessage = $.mage.__('Please enter a valid year (1900-%1).');\r\n                    this.dobErrorMessage = validYearMessage.replace('%1', curYear.toString());\r\n\r\n                    return false;\r\n                }\r\n                validateDayInMonth = new Date(year, month, 0).getDate();\r\n\r\n                if (day < 1 || day > validateDayInMonth) {\r\n                    validDateMessage = $.mage.__('Please enter a valid day (1-%1).');\r\n                    this.dobErrorMessage = validDateMessage.replace('%1', validateDayInMonth.toString());\r\n\r\n                    return false;\r\n                }\r\n                today = new Date();\r\n                dateEntered = new Date();\r\n                dateEntered.setFullYear(year, month - 1, day);\r\n\r\n                if (dateEntered > today) {\r\n                    this.dobErrorMessage = $.mage.__('Please enter a date from the past.');\r\n\r\n                    return false;\r\n                }\r\n\r\n                day = day % 10 === day ? '0' + day : day;\r\n                month = month % 10 === month ? '0' + month : month;\r\n                $(element).val(month + '/' + day + '/' + year);\r\n\r\n                return true;\r\n            },\r\n            function () {\r\n                return this.dobErrorMessage;\r\n            }\r\n        ]\r\n    }, function (i, rule) {\r\n        rule.unshift(i);\r\n        $.validator.addMethod.apply($.validator, rule);\r\n    });\r\n});\r\n","Magento_Bundle/js/price-bundle.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'priceUtils',\r\n    'priceBox'\r\n], function ($, _, mageTemplate, utils) {\r\n    'use strict';\r\n\r\n    var globalOptions = {\r\n        optionConfig: null,\r\n        productBundleSelector: 'input.bundle.option, select.bundle.option, textarea.bundle.option',\r\n        qtyFieldSelector: 'input.qty',\r\n        priceBoxSelector: '.price-box',\r\n        optionHandlers: {},\r\n        optionTemplate: '<%- data.label %>' +\r\n            '<% if (data.finalPrice.value) { %>' +\r\n            ' +<%- data.finalPrice.formatted %>' +\r\n            '<% } %>',\r\n        controlContainer: 'dd', // should be eliminated\r\n        priceFormat: {},\r\n        isFixedPrice: false,\r\n        optionTierPricesBlocksSelector: '#option-tier-prices-{1} [data-role=\"selection-tier-prices\"]',\r\n        isOptionsInitialized: false\r\n    };\r\n\r\n    $.widget('mage.priceBundle', {\r\n        options: globalOptions,\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function initPriceBundle() {\r\n            var form = this.element,\r\n                options = $(this.options.productBundleSelector, form);\r\n\r\n            options.trigger('change');\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _create: function createPriceBundle() {\r\n            var form = this.element,\r\n                options = $(this.options.productBundleSelector, form),\r\n                priceBox = $(this.options.priceBoxSelector, form),\r\n                qty = $(this.options.qtyFieldSelector, form);\r\n\r\n            this._updatePriceBox();\r\n            priceBox.on('price-box-initialized', this._updatePriceBox.bind(this));\r\n            options.on('change', this._onBundleOptionChanged.bind(this));\r\n            qty.on('change', this._onQtyFieldChanged.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Update price box config with bundle option prices\r\n         * @private\r\n         */\r\n        _updatePriceBox: function () {\r\n            var form = this.element,\r\n                options = $(this.options.productBundleSelector, form),\r\n                priceBox = $(this.options.priceBoxSelector, form);\r\n\r\n            if (!this.options.isOptionsInitialized) {\r\n                if (priceBox.data('magePriceBox') &&\r\n                    priceBox.priceBox('option') &&\r\n                    priceBox.priceBox('option').priceConfig\r\n                ) {\r\n                    if (priceBox.priceBox('option').priceConfig.optionTemplate) { //eslint-disable-line max-depth\r\n                        this._setOption('optionTemplate', priceBox.priceBox('option').priceConfig.optionTemplate);\r\n                    }\r\n                    this._setOption('priceFormat', priceBox.priceBox('option').priceConfig.priceFormat);\r\n                    priceBox.priceBox('setDefault', this.options.optionConfig.prices);\r\n                    this.options.isOptionsInitialized = true;\r\n                }\r\n                this._applyOptionNodeFix(options);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Handle change on bundle option inputs\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _onBundleOptionChanged: function onBundleOptionChanged(event) {\r\n            var changes,\r\n                bundleOption = $(event.target),\r\n                priceBox = $(this.options.priceBoxSelector, this.element),\r\n                handler = this.options.optionHandlers[bundleOption.data('role')];\r\n\r\n            bundleOption.data('optionContainer', bundleOption.closest(this.options.controlContainer));\r\n            bundleOption.data('qtyField', bundleOption.data('optionContainer').find(this.options.qtyFieldSelector));\r\n\r\n            if (handler && handler instanceof Function) {\r\n                changes = handler(bundleOption, this.options.optionConfig, this);\r\n            } else {\r\n                changes = defaultGetOptionValue(bundleOption, this.options.optionConfig);//eslint-disable-line\r\n            }\r\n\r\n            // eslint-disable-next-line no-use-before-define\r\n            if (isValidQty(bundleOption)) {\r\n                if (changes) {\r\n                    priceBox.trigger('updatePrice', changes);\r\n                }\r\n\r\n                this._displayTierPriceBlock(bundleOption);\r\n                this.updateProductSummary();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle change on qty inputs near bundle option\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _onQtyFieldChanged: function onQtyFieldChanged(event) {\r\n            var field = $(event.target),\r\n                optionInstance,\r\n                optionConfig;\r\n\r\n            if (field.data('optionId') && field.data('optionValueId')) {\r\n                optionInstance = field.data('option');\r\n                optionConfig = this.options.optionConfig\r\n                    .options[field.data('optionId')]\r\n                    .selections[field.data('optionValueId')];\r\n                optionConfig.qty = field.val();\r\n\r\n                // eslint-disable-next-line no-use-before-define\r\n                if (isValidQty(optionInstance)) {\r\n                    optionInstance.trigger('change');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Helper to fix backend behavior:\r\n         *  - if default qty large than 1 then backend multiply price in config\r\n         *\r\n         * @deprecated\r\n         * @private\r\n         */\r\n        _applyQtyFix: function applyQtyFix() {\r\n            var config = this.options.optionConfig;\r\n\r\n            if (config.isFixedPrice) {\r\n                _.each(config.options, function (option) {\r\n                    _.each(option.selections, function (item) {\r\n                        if (item.qty && item.qty !== 1) {\r\n                            _.each(item.prices, function (price) {\r\n                                price.amount /= item.qty;\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Helper to fix issue with option nodes:\r\n         *  - you can't place any html in option ->\r\n         *    so you can't style it via CSS\r\n         * @param {jQuery} options\r\n         * @private\r\n         */\r\n        _applyOptionNodeFix: function applyOptionNodeFix(options) {\r\n            var config = this.options,\r\n                format = config.priceFormat,\r\n                template = config.optionTemplate;\r\n\r\n            template = mageTemplate(template);\r\n            options.filter('select').each(function (index, element) {\r\n                var $element = $(element),\r\n                    optionId = utils.findOptionId($element),\r\n                    optionConfig = config.optionConfig && config.optionConfig.options[optionId].selections,\r\n                    value;\r\n\r\n                $element.find('option').each(function (idx, option) {\r\n                    var $option,\r\n                        optionValue,\r\n                        toTemplate,\r\n                        prices;\r\n\r\n                    $option = $(option);\r\n                    optionValue = $option.val();\r\n\r\n                    if (!optionValue && optionValue !== 0) {\r\n                        return;\r\n                    }\r\n\r\n                    toTemplate = {\r\n                        data: {\r\n                            label: optionConfig[optionValue] && optionConfig[optionValue].name\r\n                        }\r\n                    };\r\n                    prices = optionConfig[optionValue].prices;\r\n\r\n                    _.each(prices, function (price, type) {\r\n                        value = +price.amount;\r\n                        value += _.reduce(price.adjustments, function (sum, x) {//eslint-disable-line\r\n                            return sum + x;\r\n                        }, 0);\r\n                        toTemplate.data[type] = {\r\n                            value: value,\r\n                            formatted: utils.formatPrice(value, format)\r\n                        };\r\n                    });\r\n\r\n                    $option.html(template(toTemplate));\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Custom behavior on getting options:\r\n         * now widget able to deep merge accepted configuration with instance options.\r\n         * @param  {Object}  options\r\n         * @return {$.Widget}\r\n         */\r\n        _setOptions: function setOptions(options) {\r\n            $.extend(true, this.options, options);\r\n\r\n            this._super(options);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Show or hide option tier prices block\r\n         *\r\n         * @param {Object} optionElement\r\n         * @private\r\n         */\r\n        _displayTierPriceBlock: function (optionElement) {\r\n            var optionType = optionElement.prop('type'),\r\n                optionId,\r\n                optionValue,\r\n                optionTierPricesElements;\r\n\r\n            if (optionType === 'select-one') {\r\n                optionId = utils.findOptionId(optionElement[0]);\r\n                optionValue = optionElement.val() || null;\r\n                optionTierPricesElements = $(this.options.optionTierPricesBlocksSelector.replace('{1}', optionId));\r\n\r\n                _.each(optionTierPricesElements, function (tierPriceElement) {\r\n                    var selectionId = $(tierPriceElement).data('selection-id') + '';\r\n\r\n                    if (selectionId === optionValue) {\r\n                        $(tierPriceElement).show();\r\n                    } else {\r\n                        $(tierPriceElement).hide();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handler to update productSummary box\r\n         */\r\n        updateProductSummary: function updateProductSummary() {\r\n            this.element.trigger('updateProductSummary', {\r\n                config: this.options.optionConfig\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.priceBundle;\r\n\r\n    /**\r\n     * Converts option value to priceBox object\r\n     *\r\n     * @param   {jQuery} element\r\n     * @param   {Object} config\r\n     * @returns {Object|null} - priceBox object with additional prices\r\n     */\r\n    function defaultGetOptionValue(element, config) {\r\n        var changes = {},\r\n            optionHash,\r\n            tempChanges,\r\n            qtyField,\r\n            optionId = utils.findOptionId(element[0]),\r\n            optionValue = element.val() || null,\r\n            optionName = element.prop('name'),\r\n            optionType = element.prop('type'),\r\n            optionConfig = config.options[optionId].selections,\r\n            optionQty = 0,\r\n            canQtyCustomize = false,\r\n            selectedIds = config.selected;\r\n\r\n        switch (optionType) {\r\n            case 'radio':\r\n            case 'select-one':\r\n\r\n                if (optionType === 'radio' && !element.is(':checked')) {\r\n                    return null;\r\n                }\r\n\r\n                qtyField = element.data('qtyField');\r\n                qtyField.data('option', element);\r\n\r\n                if (optionValue) {\r\n                    optionQty = optionConfig[optionValue].qty || 0;\r\n                    canQtyCustomize = optionConfig[optionValue].customQty === '1';\r\n                    toggleQtyField(qtyField, optionQty, optionId, optionValue, canQtyCustomize);//eslint-disable-line\r\n                    tempChanges = utils.deepClone(optionConfig[optionValue].prices);\r\n                    tempChanges = applyTierPrice(//eslint-disable-line\r\n                        tempChanges,\r\n                        optionQty,\r\n                        optionConfig[optionValue]\r\n                    );\r\n                    tempChanges = applyQty(tempChanges, optionQty);//eslint-disable-line\r\n                } else {\r\n                    tempChanges = {};\r\n                    toggleQtyField(qtyField, '0', optionId, optionValue, false);//eslint-disable-line\r\n                }\r\n                optionHash = 'bundle-option-' + optionName;\r\n                changes[optionHash] = tempChanges;\r\n                selectedIds[optionId] = [optionValue];\r\n                break;\r\n\r\n            case 'select-multiple':\r\n                optionValue = _.compact(optionValue);\r\n\r\n                _.each(optionConfig, function (row, optionValueCode) {\r\n                    optionHash = 'bundle-option-' + optionName + '##' + optionValueCode;\r\n                    optionQty = row.qty || 0;\r\n                    tempChanges = utils.deepClone(row.prices);\r\n                    tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig);//eslint-disable-line\r\n                    tempChanges = applyQty(tempChanges, optionQty);//eslint-disable-line\r\n                    changes[optionHash] = _.contains(optionValue, optionValueCode) ? tempChanges : {};\r\n                });\r\n\r\n                selectedIds[optionId] = optionValue || [];\r\n                break;\r\n\r\n            case 'checkbox':\r\n                optionHash = 'bundle-option-' + optionName + '##' + optionValue;\r\n                optionQty = optionConfig[optionValue].qty || 0;\r\n                tempChanges = utils.deepClone(optionConfig[optionValue].prices);\r\n                tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig);//eslint-disable-line\r\n                tempChanges = applyQty(tempChanges, optionQty);//eslint-disable-line\r\n                changes[optionHash] = element.is(':checked') ? tempChanges : {};\r\n\r\n                selectedIds[optionId] = selectedIds[optionId] || [];\r\n\r\n                if (!_.contains(selectedIds[optionId], optionValue) && element.is(':checked')) {\r\n                    selectedIds[optionId].push(optionValue);\r\n                } else if (!element.is(':checked')) {\r\n                    selectedIds[optionId] = _.without(selectedIds[optionId], optionValue);\r\n                }\r\n                break;\r\n\r\n            case 'hidden':\r\n                optionHash = 'bundle-option-' + optionName + '##' + optionValue;\r\n                optionQty = optionConfig[optionValue].qty || 0;\r\n                canQtyCustomize = optionConfig[optionValue].customQty === '1';\r\n                qtyField = element.data('qtyField');\r\n                qtyField.data('option', element);\r\n                toggleQtyField(qtyField, optionQty, optionId, optionValue, canQtyCustomize);//eslint-disable-line\r\n                tempChanges = utils.deepClone(optionConfig[optionValue].prices);\r\n                tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig);//eslint-disable-line\r\n                tempChanges = applyQty(tempChanges, optionQty);//eslint-disable-line\r\n\r\n                optionHash = 'bundle-option-' + optionName;\r\n                changes[optionHash] = tempChanges;\r\n                selectedIds[optionId] = [optionValue];\r\n                break;\r\n        }\r\n\r\n        return changes;\r\n    }\r\n\r\n    /**\r\n     * Check the quantity field if negative value occurs.\r\n     *\r\n     * @param {Object} bundleOption\r\n     */\r\n    function isValidQty(bundleOption) {\r\n        var isValid = true,\r\n            qtyElem = bundleOption.data('qtyField'),\r\n            bundleOptionType = bundleOption.prop('type'),\r\n            qtyValidator = qtyElem.data('validate') &&\r\n                typeof qtyElem.data('validate')['validate-item-quantity'] === 'object' ?\r\n                qtyElem.data('validate')['validate-item-quantity'] : null;\r\n\r\n        if (['radio', 'select-one'].includes(bundleOptionType) &&\r\n            qtyValidator &&\r\n            (qtyElem.val() < qtyValidator.minAllowed || qtyElem.val() > qtyValidator.maxAllowed)\r\n        ) {\r\n            isValid = false;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Helper to toggle qty field\r\n     * @param {jQuery} element\r\n     * @param {String|Number} value\r\n     * @param {String|Number} optionId\r\n     * @param {String|Number} optionValueId\r\n     * @param {Boolean} canEdit\r\n     */\r\n    function toggleQtyField(element, value, optionId, optionValueId, canEdit) {\r\n        element\r\n            .val(value)\r\n            .data('optionId', optionId)\r\n            .data('optionValueId', optionValueId)\r\n            .attr('disabled', !canEdit);\r\n\r\n        if (canEdit) {\r\n            element.removeClass('qty-disabled');\r\n        } else {\r\n            element.addClass('qty-disabled');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper to multiply on qty\r\n     *\r\n     * @param   {Object} prices\r\n     * @param   {Number} qty\r\n     * @returns {Object}\r\n     */\r\n    function applyQty(prices, qty) {\r\n        _.each(prices, function (everyPrice) {\r\n            everyPrice.amount *= qty;\r\n            _.each(everyPrice.adjustments, function (el, index) {\r\n                everyPrice.adjustments[index] *= qty;\r\n            });\r\n        });\r\n\r\n        return prices;\r\n    }\r\n\r\n    /**\r\n     * Helper to limit price with tier price\r\n     *\r\n     * @param {Object} oneItemPrice\r\n     * @param {Number} qty\r\n     * @param {Object} optionConfig\r\n     * @returns {Object}\r\n     */\r\n    function applyTierPrice(oneItemPrice, qty, optionConfig) {\r\n        var tiers = optionConfig.tierPrice,\r\n            magicKey = _.keys(oneItemPrice)[0],\r\n            tiersFirstKey = _.keys(optionConfig)[0],\r\n            lowest = false;\r\n\r\n        if (!tiers) {//tiers is undefined when options has only one option\r\n            tiers = optionConfig[tiersFirstKey].tierPrice;\r\n        }\r\n\r\n        tiers.sort(function (a, b) {//sorting based on \"price_qty\"\r\n            return a['price_qty'] - b['price_qty'];\r\n        });\r\n\r\n        _.each(tiers, function (tier, index) {\r\n            if (tier['price_qty'] > qty) {\r\n                return;\r\n            }\r\n\r\n            if (tier.prices[magicKey].amount < oneItemPrice[magicKey].amount) {\r\n                lowest = index;\r\n            }\r\n        });\r\n\r\n        if (lowest !== false) {\r\n            oneItemPrice = utils.deepClone(tiers[lowest].prices);\r\n        }\r\n\r\n        return oneItemPrice;\r\n    }\r\n});\r\n","Magento_Bundle/js/product-summary.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'jquery-ui-modules/widget',\r\n    'Magento_Bundle/js/price-bundle'\r\n], function ($, mageTemplate) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Widget product Summary:\r\n     * Handles rendering of Bundle options and displays them in the Summary box\r\n     */\r\n    $.widget('mage.productSummary', {\r\n        options: {\r\n            mainContainer:          '#product_addtocart_form',\r\n            templates: {\r\n                summaryBlock:       '[data-template=\"bundle-summary\"]',\r\n                optionBlock:        '[data-template=\"bundle-option\"]'\r\n            },\r\n            optionSelector:         '[data-container=\"options\"]',\r\n            summaryContainer:       '[data-container=\"product-summary\"]',\r\n            bundleSummaryContainer: '.bundle-summary'\r\n        },\r\n        cache: {},\r\n\r\n        /**\r\n         * Method attaches event observer to the product form\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element\r\n                .closest(this.options.mainContainer)\r\n                .on('updateProductSummary', $.proxy(this._renderSummaryBox, this))\r\n                .priceBundle({})\r\n            ;\r\n        },\r\n\r\n        /**\r\n         * Method extracts data from the event and renders Summary box\r\n         * using jQuery template mechanism\r\n         * @param {Event} event\r\n         * @param {Object} data\r\n         * @private\r\n         */\r\n        _renderSummaryBox: function (event, data) {\r\n            this.cache.currentElement = data.config;\r\n            this.cache.currentElementCount = 0;\r\n\r\n            // Clear Summary box\r\n            this.element.html('');\r\n            this.cache.currentElement.positions.forEach(function (optionId) {\r\n                this._renderOption(optionId, this.cache.currentElement.selected[optionId]);\r\n            }, this);\r\n            this.element\r\n                .parents(this.options.bundleSummaryContainer)\r\n                .toggleClass('empty', !this.cache.currentElementCount); // Zero elements equal '.empty' container\r\n        },\r\n\r\n        /**\r\n         * @param {String} key\r\n         * @param {String} row\r\n         * @private\r\n         */\r\n        _renderOption: function (key, row) {\r\n            var template;\r\n\r\n            if (row && row.length > 0 && row[0] !== null) {\r\n                template = this.element\r\n                    .closest(this.options.summaryContainer)\r\n                    .find(this.options.templates.summaryBlock)\r\n                    .html();\r\n                template = mageTemplate(template.trim(), {\r\n                    data: {\r\n                        _label_: this.cache.currentElement.options[key].title\r\n                    }\r\n                });\r\n\r\n                this.cache.currentKey = key;\r\n                this.cache.summaryContainer = $(template);\r\n                this.element.append(this.cache.summaryContainer);\r\n\r\n                $.each(row, this._renderOptionRow.bind(this));\r\n                this.cache.currentElementCount += row.length;\r\n\r\n                //Reset Cache\r\n                this.cache.currentKey = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {String} key\r\n         * @param {String} optionIndex\r\n         * @private\r\n         */\r\n        _renderOptionRow: function (key, optionIndex) {\r\n            var template;\r\n\r\n            template = this.element\r\n                .closest(this.options.summaryContainer)\r\n                .find(this.options.templates.optionBlock)\r\n                .html();\r\n            template = mageTemplate(template.trim(), {\r\n                data: {\r\n                    _quantity_: this.cache.currentElement.options[this.cache.currentKey].selections[optionIndex].qty,\r\n                    _label_: this.cache.currentElement.options[this.cache.currentKey].selections[optionIndex].name\r\n                }\r\n            });\r\n            this.cache.summaryContainer\r\n                .find(this.options.optionSelector)\r\n                .append(template);\r\n        }\r\n    });\r\n\r\n    return $.mage.productSummary;\r\n});\r\n","Magento_Bundle/js/slide.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.slide', {\r\n        options: {\r\n            slideSpeed: 1500,\r\n            slideSelector: '#bundle-slide',\r\n            slideBackSelector: '.bundle-slide-back',\r\n            bundleProductSelector: '#bundleProduct',\r\n            bundleOptionsContainer: '#options-container',\r\n            productViewContainer: '#productView',\r\n            slidedown: true\r\n\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            if (this.options.slidedown === true) {\r\n                $(this.options.slideSelector).on('click', $.proxy(this._show, this));\r\n                $(this.options.slideBackSelector).on('click', $.proxy(this._hide, this));\r\n                this.options.autostart && this._show();\r\n            } else {\r\n                $(this.options.slideSelector).on('click', $.proxy(this._slide, this));\r\n                $(this.options.slideBackSelector).on('click', $.proxy(this._slideBack, this));\r\n                this.options.autostart && this._slide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * slide bundleOptionsContainer over to the main view area\r\n         * @private\r\n         */\r\n        _slide: function () {\r\n            $(this.options.bundleProductSelector).css('top', '0px');\r\n            $(this.options.bundleOptionsContainer).show();\r\n            this.element.css('height', $(this.options.productViewContainer).height() + 'px');\r\n            $(this.options.bundleProductSelector).css('left', '0px').animate(\r\n                {\r\n                    'left': '-' + this.element.width() + 'px'\r\n                },\r\n                this.options.slideSpeed,\r\n                $.proxy(function () {\r\n                    this.element.css('height', 'auto');\r\n                    $(this.options.productViewContainer).hide();\r\n                }, this)\r\n            );\r\n        },\r\n\r\n        /**\r\n         * slideback productViewContainer to main view area\r\n         * @private\r\n         */\r\n        _slideBack: function () {\r\n            $(this.options.bundleProductSelector).css('top', '0px');\r\n            $(this.options.productViewContainer).show();\r\n            this.element.css('height', $(this.options.bundleOptionsContainer).height() + 'px');\r\n            $(this.options.bundleProductSelector).animate(\r\n                {\r\n                    'left': '0px'\r\n                },\r\n                this.options.slideSpeed,\r\n                $.proxy(function () {\r\n                    $(this.options.bundleOptionsContainer).hide();\r\n                    this.element.css('height', 'auto');\r\n                }, this)\r\n            );\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _show: function () {\r\n            $(this.options.bundleOptionsContainer).slideDown(800);\r\n            $('html, body').animate({\r\n                scrollTop: $(this.options.bundleOptionsContainer).offset().top\r\n            }, 600);\r\n            $('#product-options-wrapper > fieldset').trigger('focus');\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _hide: function () {\r\n            $('html, body').animate({\r\n                scrollTop: 0\r\n            }, 600);\r\n            $(this.options.bundleOptionsContainer).slideUp(800);\r\n        }\r\n    });\r\n\r\n    return $.mage.slide;\r\n});\r\n","Magento_Captcha/js/captcha.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @api\r\n     */\r\n    $.widget('mage.captcha', {\r\n        options: {\r\n            refreshClass: 'refreshing',\r\n            reloadSelector: '.captcha-reload',\r\n            imageSelector: '.captcha-img',\r\n            imageLoader: ''\r\n        },\r\n\r\n        /**\r\n         * Method binds click event to reload image\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('click', this.options.reloadSelector, $.proxy(this.refresh, this));\r\n        },\r\n\r\n        /**\r\n         * Method triggers an AJAX request to refresh the CAPTCHA image\r\n         */\r\n        refresh: function () {\r\n            var imageLoader = this.options.imageLoader;\r\n\r\n            if (imageLoader) {\r\n                this.element.find(this.options.imageSelector).attr('src', imageLoader);\r\n            }\r\n            this.element.addClass(this.options.refreshClass);\r\n\r\n            $.ajax({\r\n                url: this.options.url,\r\n                type: 'post',\r\n                dataType: 'json',\r\n                context: this,\r\n                data: {\r\n                    'formId': this.options.type\r\n                },\r\n\r\n                /**\r\n                 * @param {Object} response\r\n                 */\r\n                success: function (response) {\r\n                    if (response.imgSrc) {\r\n                        this.element.find(this.options.imageSelector).attr('src', response.imgSrc);\r\n                    }\r\n                },\r\n\r\n                /** Complete callback. */\r\n                complete: function () {\r\n                    this.element.removeClass(this.options.refreshClass);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.captcha;\r\n});\r\n","Magento_Captcha/js/action/refresh.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery', 'mage/url'\r\n], function ($, urlBuilder) {\r\n    'use strict';\r\n\r\n    return function (refreshUrl, formId, imageSource) {\r\n        return $.ajax({\r\n            url: urlBuilder.build(refreshUrl),\r\n            type: 'POST',\r\n            data: JSON.stringify({\r\n                'formId': formId\r\n            }),\r\n            global: false,\r\n            contentType: 'application/json'\r\n        }).done(\r\n            function (response) {\r\n                if (response.imgSrc) {\r\n                    imageSource(response.imgSrc);\r\n                }\r\n            }\r\n        );\r\n    };\r\n});\r\n","Magento_Captcha/js/model/captcha.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/*global alert*/\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'Magento_Captcha/js/action/refresh'\r\n], function ($, ko, refreshAction) {\r\n    'use strict';\r\n\r\n    return function (captchaData) {\r\n        return {\r\n            formId: captchaData.formId,\r\n            imageSource: ko.observable(captchaData.imageSrc),\r\n            visibility: ko.observable(false),\r\n            captchaValue: ko.observable(null),\r\n            isRequired: ko.observable(captchaData.isRequired),\r\n            isCaseSensitive: captchaData.isCaseSensitive,\r\n            imageHeight: captchaData.imageHeight,\r\n            refreshUrl: captchaData.refreshUrl,\r\n            isLoading: ko.observable(false),\r\n            timestamp: null,\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getFormId: function () {\r\n                return this.formId;\r\n            },\r\n\r\n            /**\r\n             * @param {String} formId\r\n             */\r\n            setFormId: function (formId) {\r\n                this.formId = formId;\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            getIsVisible: function () {\r\n                return this.visibility();\r\n            },\r\n\r\n            /**\r\n             * @param {Boolean} flag\r\n             */\r\n            setIsVisible: function (flag) {\r\n                this.visibility(flag);\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            getIsRequired: function () {\r\n                return this.isRequired();\r\n            },\r\n\r\n            /**\r\n             * @param {Boolean} flag\r\n             */\r\n            setIsRequired: function (flag) {\r\n                this.isRequired(flag);\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            getIsCaseSensitive: function () {\r\n                return this.isCaseSensitive;\r\n            },\r\n\r\n            /**\r\n             * @param {Boolean} flag\r\n             */\r\n            setIsCaseSensitive: function (flag) {\r\n                this.isCaseSensitive = flag;\r\n            },\r\n\r\n            /**\r\n             * @return {String|Number}\r\n             */\r\n            getImageHeight: function () {\r\n                return this.imageHeight;\r\n            },\r\n\r\n            /**\r\n             * @param {String|Number}height\r\n             */\r\n            setImageHeight: function (height) {\r\n                this.imageHeight = height;\r\n            },\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getImageSource: function () {\r\n                return this.imageSource;\r\n            },\r\n\r\n            /**\r\n             * @param {String} imageSource\r\n             */\r\n            setImageSource: function (imageSource) {\r\n                this.imageSource(imageSource);\r\n            },\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getRefreshUrl: function () {\r\n                return this.refreshUrl;\r\n            },\r\n\r\n            /**\r\n             * @param {String} url\r\n             */\r\n            setRefreshUrl: function (url) {\r\n                this.refreshUrl = url;\r\n            },\r\n\r\n            /**\r\n             * @return {*}\r\n             */\r\n            getCaptchaValue: function () {\r\n                return this.captchaValue;\r\n            },\r\n\r\n            /**\r\n             * @param {*} value\r\n             */\r\n            setCaptchaValue: function (value) {\r\n                this.captchaValue(value);\r\n            },\r\n\r\n            /**\r\n             * Refresh captcha.\r\n             */\r\n            refresh: function () {\r\n                var refresh,\r\n                    self = this;\r\n\r\n                this.isLoading(true);\r\n\r\n                refresh = refreshAction(this.getRefreshUrl(), this.getFormId(), this.getImageSource());\r\n                $.when(refresh).done(function () {\r\n                    self.isLoading(false);\r\n                });\r\n            }\r\n        };\r\n    };\r\n});\r\n","Magento_Captcha/js/model/captchaList.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['jquery'], function ($) {\r\n    'use strict';\r\n\r\n    var captchaList = [];\r\n\r\n    return {\r\n        /**\r\n         * @param {Object} captcha\r\n         */\r\n        add: function (captcha) {\r\n            captchaList.push(captcha);\r\n        },\r\n\r\n        /**\r\n         * @param {String} formId\r\n         * @return {Object}\r\n         */\r\n        getCaptchaByFormId: function (formId) {\r\n            var captcha = null;\r\n\r\n            $.each(captchaList, function (key, item) {\r\n                if (formId === item.formId) {\r\n                    captcha = item;\r\n\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return captcha;\r\n        },\r\n\r\n        /**\r\n         * @return {Array}\r\n         */\r\n        getCaptchaList: function () {\r\n            return captchaList;\r\n        }\r\n    };\r\n});\r\n","Magento_Captcha/js/view/checkout/defaultCaptcha.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Captcha/js/model/captcha',\r\n    'Magento_Captcha/js/model/captchaList',\r\n    'Magento_Customer/js/customer-data',\r\n    'underscore'\r\n], function ($, Component, Captcha, captchaList, customerData, _) {\r\n    'use strict';\r\n\r\n    var captchaConfig;\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Captcha/checkout/captcha'\r\n        },\r\n        dataScope: 'global',\r\n        currentCaptcha: null,\r\n        subscribedFormIds: [],\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        captchaValue: function () {\r\n            return this.currentCaptcha.getCaptchaValue();\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            if (window[this.configSource] && window[this.configSource].captcha) {\r\n                captchaConfig = window[this.configSource].captcha;\r\n                $.each(captchaConfig, function (formId, captchaData) {\r\n                    var captcha;\r\n\r\n                    captchaData.formId = formId;\r\n                    captcha = Captcha(captchaData);\r\n                    this.checkCustomerData(formId, customerData.get('captcha')(), captcha);\r\n                    this.subscribeCustomerData(formId, captcha);\r\n                    captchaList.add(captcha);\r\n                }.bind(this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check customer data for captcha configuration.\r\n         *\r\n         * @param {String} formId\r\n         * @param {Object} captchaData\r\n         * @param {Object} captcha\r\n         */\r\n        checkCustomerData: function (formId, captchaData, captcha) {\r\n            if (!_.isEmpty(captchaData) &&\r\n                !_.isEmpty(captchaData[formId]) &&\r\n                captchaData[formId].timestamp > captcha.timestamp\r\n            ) {\r\n                if (!captcha.isRequired() && captchaData[formId].isRequired) {\r\n                    captcha.refresh();\r\n                }\r\n                captcha.isRequired(captchaData[formId].isRequired);\r\n                captcha.timestamp = captchaData[formId].timestamp;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Subscribe for customer data updates.\r\n         *\r\n         * @param {String} formId\r\n         * @param {Object} captcha\r\n         */\r\n        subscribeCustomerData: function (formId, captcha) {\r\n            if (this.subscribedFormIds.includes(formId) === false) {\r\n                this.subscribedFormIds.push(formId);\r\n                customerData.get('captcha').subscribe(function (captchaData) {\r\n                    this.checkCustomerData(formId, captchaData, captcha);\r\n                }.bind(this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        getIsLoading: function () {\r\n            return this.currentCaptcha !== null ? this.currentCaptcha.isLoading : false;\r\n        },\r\n\r\n        /**\r\n         * @return {null|Object}\r\n         */\r\n        getCurrentCaptcha: function () {\r\n            return this.currentCaptcha;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} captcha\r\n         */\r\n        setCurrentCaptcha: function (captcha) {\r\n            this.currentCaptcha = captcha;\r\n        },\r\n\r\n        /**\r\n         * @return {String|null}\r\n         */\r\n        getFormId: function () {\r\n            return this.currentCaptcha !== null ? this.currentCaptcha.getFormId() : null;\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        getIsVisible: function () {\r\n            return this.currentCaptcha !== null ? this.currentCaptcha.getIsVisible() : false;\r\n        },\r\n\r\n        /**\r\n         * @param {Boolean} flag\r\n         */\r\n        setIsVisible: function (flag) {\r\n            this.currentCaptcha.setIsVisible(flag);\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isRequired: function () {\r\n            return this.currentCaptcha !== null ? this.currentCaptcha.getIsRequired() : false;\r\n        },\r\n\r\n        /**\r\n         * Set isRequired on current captcha model.\r\n         *\r\n         * @param {Boolean} flag\r\n         */\r\n        setIsRequired: function (flag) {\r\n            this.currentCaptcha.setIsRequired(flag);\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isCaseSensitive: function () {\r\n            return this.currentCaptcha !== null ? this.currentCaptcha.getIsCaseSensitive() : false;\r\n        },\r\n\r\n        /**\r\n         * @return {String|Number|null}\r\n         */\r\n        imageHeight: function () {\r\n            return this.currentCaptcha !== null ? this.currentCaptcha.getImageHeight() : null;\r\n        },\r\n\r\n        /**\r\n         * @return {String|null}\r\n         */\r\n        getImageSource: function () {\r\n            return this.currentCaptcha !== null ? this.currentCaptcha.getImageSource() : null;\r\n        },\r\n\r\n        /**\r\n         * Refresh captcha.\r\n         */\r\n        refresh: function () {\r\n            this.currentCaptcha.refresh();\r\n        }\r\n    });\r\n});\r\n","Magento_Captcha/js/view/checkout/loginCaptcha.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Captcha/js/view/checkout/defaultCaptcha',\r\n    'Magento_Captcha/js/model/captchaList',\r\n    'Magento_Customer/js/action/login',\r\n    'underscore'\r\n],\r\nfunction (defaultCaptcha, captchaList, loginAction, _) {\r\n    'use strict';\r\n\r\n    return defaultCaptcha.extend({\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            var self = this,\r\n                currentCaptcha;\r\n\r\n            this._super();\r\n            currentCaptcha = captchaList.getCaptchaByFormId(this.formId);\r\n\r\n            if (currentCaptcha != null) {\r\n                currentCaptcha.setIsVisible(true);\r\n                this.setCurrentCaptcha(currentCaptcha);\r\n\r\n                loginAction.registerLoginCallback(function (loginData) {\r\n                    if (loginData['captcha_form_id'] &&\r\n                        loginData['captcha_form_id'] === self.formId &&\r\n                        self.isRequired()\r\n                    ) {\r\n                        _.defer(self.refresh.bind(self));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_CardinalCommerce/js/cardinal-client.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'uiClass',\r\n    'Magento_CardinalCommerce/js/cardinal-factory',\r\n    'Magento_Checkout/js/model/quote',\r\n    'mage/translate'\r\n], function ($, Class, cardinalFactory, quote, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * Starts Cardinal Consumer Authentication\r\n         *\r\n         * @param {Object} cardData\r\n         * @return {jQuery.Deferred}\r\n         */\r\n        startAuthentication: function (cardData) {\r\n            var deferred = $.Deferred();\r\n\r\n            if (this.cardinalClient) {\r\n                this._startAuthentication(deferred, cardData);\r\n            } else {\r\n                cardinalFactory(this.getEnvironment())\r\n                    .done(function (client) {\r\n                        this.cardinalClient = client;\r\n                        this._startAuthentication(deferred, cardData);\r\n                    }.bind(this));\r\n            }\r\n\r\n            return deferred.promise();\r\n        },\r\n\r\n        /**\r\n         * Cardinal Consumer Authentication\r\n         *\r\n         * @param {jQuery.Deferred} deferred\r\n         * @param {Object} cardData\r\n         */\r\n        _startAuthentication: function (deferred, cardData) {\r\n            //this.cardinalClient.configure({ logging: { level: 'verbose' } });\r\n            this.cardinalClient.on('payments.validated', function (data, jwt) {\r\n                if (data.ErrorNumber !== 0) {\r\n                    deferred.reject(data.ErrorDescription);\r\n                } else if ($.inArray(data.ActionCode, ['FAILURE', 'ERROR']) !== -1) {\r\n                    deferred.reject($t('Authentication Failed. Please try again with another form of payment.'));\r\n                } else {\r\n                    deferred.resolve(jwt);\r\n                }\r\n                this.cardinalClient.off('payments.validated');\r\n            }.bind(this));\r\n\r\n            this.cardinalClient.on('payments.setupComplete', function () {\r\n                this.cardinalClient.start('cca', this.getRequestOrderObject(cardData));\r\n                this.cardinalClient.off('payments.setupComplete');\r\n            }.bind(this));\r\n\r\n            this.cardinalClient.setup('init', {\r\n                jwt: this.getRequestJWT()\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Returns request order object.\r\n         *\r\n         * The request order object is structured object that is used to pass data\r\n         * to Cardinal that describes an order you'd like to process.\r\n         *\r\n         * If you pass a request object in both the JWT and the browser,\r\n         * Cardinal will merge the objects together where the browser overwrites\r\n         * the JWT object as it is considered the most recently captured data.\r\n         *\r\n         * @param {Object} cardData\r\n         * @returns {Object}\r\n         */\r\n        getRequestOrderObject: function (cardData) {\r\n            var totalAmount = quote.totals()['base_grand_total'],\r\n                currencyCode = quote.totals()['base_currency_code'],\r\n                billingAddress = quote.billingAddress(),\r\n                requestObject;\r\n\r\n            requestObject = {\r\n                OrderDetails: {\r\n                    Amount: totalAmount * 100,\r\n                    CurrencyCode: currencyCode\r\n                },\r\n                Consumer: {\r\n                    Account: {\r\n                        AccountNumber: cardData.accountNumber,\r\n                        ExpirationMonth: cardData.expMonth,\r\n                        ExpirationYear: cardData.expYear,\r\n                        CardCode: cardData.cardCode\r\n                    },\r\n                    BillingAddress: {\r\n                        FirstName: billingAddress.firstname,\r\n                        LastName: billingAddress.lastname,\r\n                        Address1: billingAddress.street[0],\r\n                        Address2: billingAddress.street[1],\r\n                        City: billingAddress.city,\r\n                        State: billingAddress.region,\r\n                        PostalCode: billingAddress.postcode,\r\n                        CountryCode: billingAddress.countryId,\r\n                        Phone1: billingAddress.telephone\r\n                    }\r\n                }\r\n            };\r\n\r\n            return requestObject;\r\n        },\r\n\r\n        /**\r\n         * Returns request JWT\r\n         * @returns {String}\r\n         */\r\n        getRequestJWT: function () {\r\n            return window.checkoutConfig.cardinal.requestJWT;\r\n        },\r\n\r\n        /**\r\n         * Returns type of environment\r\n         * @returns {String}\r\n         */\r\n        getEnvironment: function () {\r\n            return window.checkoutConfig.cardinal.environment;\r\n        }\r\n    };\r\n});\r\n","Magento_CardinalCommerce/js/cardinal-factory.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (environment) {\r\n        var deferred = $.Deferred(),\r\n            dependency = 'cardinaljs';\r\n\r\n        if (environment === 'sandbox') {\r\n            dependency = 'cardinaljsSandbox';\r\n        }\r\n\r\n        require(\r\n            [dependency],\r\n            function (Cardinal) {\r\n                deferred.resolve(Cardinal);\r\n            },\r\n            deferred.reject\r\n        );\r\n\r\n        return deferred.promise();\r\n    };\r\n});\r\n","Magento_Catalog/js/catalog-add-to-cart.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/translate',\r\n    'underscore',\r\n    'Magento_Catalog/js/product/view/product-ids-resolver',\r\n    'Magento_Catalog/js/product/view/product-info-resolver',\r\n    'jquery-ui-modules/widget'\r\n], function ($, $t, _, idsResolver, productInfoResolver) {\r\n    'use strict';\r\n\r\n    $.widget('mage.catalogAddToCart', {\r\n        options: {\r\n            processStart: null,\r\n            processStop: null,\r\n            bindSubmit: true,\r\n            minicartSelector: '[data-block=\"minicart\"]',\r\n            messagesSelector: '[data-placeholder=\"messages\"]',\r\n            productStatusSelector: '.stock.available',\r\n            addToCartButtonSelector: '.action.tocart',\r\n            addToCartButtonDisabledClass: 'disabled',\r\n            addToCartButtonTextWhileAdding: '',\r\n            addToCartButtonTextAdded: '',\r\n            addToCartButtonTextDefault: '',\r\n            productInfoResolver: productInfoResolver\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            if (this.options.bindSubmit) {\r\n                this._bindSubmit();\r\n            }\r\n            $(this.options.addToCartButtonSelector).attr('disabled', false);\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bindSubmit: function () {\r\n            var self = this;\r\n\r\n            if (this.element.data('catalog-addtocart-initialized')) {\r\n                return;\r\n            }\r\n\r\n            this.element.data('catalog-addtocart-initialized', 1);\r\n            this.element.on('submit', function (e) {\r\n                e.preventDefault();\r\n                self.submitForm($(this));\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _redirect: function (url) {\r\n            var urlParts, locationParts, forceReload;\r\n\r\n            urlParts = url.split('#');\r\n            locationParts = window.location.href.split('#');\r\n            forceReload = urlParts[0] === locationParts[0];\r\n\r\n            window.location.assign(url);\r\n\r\n            if (forceReload) {\r\n                window.location.reload();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isLoaderEnabled: function () {\r\n            return this.options.processStart && this.options.processStop;\r\n        },\r\n\r\n        /**\r\n         * Handler for the form 'submit' event\r\n         *\r\n         * @param {jQuery} form\r\n         */\r\n        submitForm: function (form) {\r\n            this.ajaxSubmit(form);\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery} form\r\n         */\r\n        ajaxSubmit: function (form) {\r\n            var self = this,\r\n                productIds = idsResolver(form),\r\n                productInfo = self.options.productInfoResolver(form),\r\n                formData;\r\n\r\n            $(self.options.minicartSelector).trigger('contentLoading');\r\n            self.disableAddToCartButton(form);\r\n            formData = new FormData(form[0]);\r\n\r\n            $.ajax({\r\n                url: form.attr('action'),\r\n                data: formData,\r\n                type: 'post',\r\n                dataType: 'json',\r\n                cache: false,\r\n                contentType: false,\r\n                processData: false,\r\n\r\n                /** @inheritdoc */\r\n                beforeSend: function () {\r\n                    if (self.isLoaderEnabled()) {\r\n                        $('body').trigger(self.options.processStart);\r\n                    }\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                success: function (res) {\r\n                    var eventData, parameters;\r\n\r\n                    $(document).trigger('ajax:addToCart', {\r\n                        'sku': form.data().productSku,\r\n                        'productIds': productIds,\r\n                        'productInfo': productInfo,\r\n                        'form': form,\r\n                        'response': res\r\n                    });\r\n\r\n                    if (self.isLoaderEnabled()) {\r\n                        $('body').trigger(self.options.processStop);\r\n                    }\r\n\r\n                    if (res.backUrl) {\r\n                        eventData = {\r\n                            'form': form,\r\n                            'redirectParameters': []\r\n                        };\r\n                        // trigger global event, so other modules will be able add parameters to redirect url\r\n                        $('body').trigger('catalogCategoryAddToCartRedirect', eventData);\r\n\r\n                        if (eventData.redirectParameters.length > 0 &&\r\n                            window.location.href.split(/[?#]/)[0] === res.backUrl\r\n                        ) {\r\n                            parameters = res.backUrl.split('#');\r\n                            parameters.push(eventData.redirectParameters.join('&'));\r\n                            res.backUrl = parameters.join('#');\r\n                        }\r\n\r\n                        self._redirect(res.backUrl);\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (res.messages) {\r\n                        $(self.options.messagesSelector).html(res.messages);\r\n                    }\r\n\r\n                    if (res.minicart) {\r\n                        $(self.options.minicartSelector).replaceWith(res.minicart);\r\n                        $(self.options.minicartSelector).trigger('contentUpdated');\r\n                    }\r\n\r\n                    if (res.product && res.product.statusText) {\r\n                        $(self.options.productStatusSelector)\r\n                            .removeClass('available')\r\n                            .addClass('unavailable')\r\n                            .find('span')\r\n                            .html(res.product.statusText);\r\n                    }\r\n                    self.enableAddToCartButton(form);\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                error: function (res) {\r\n                    $(document).trigger('ajax:addToCart:error', {\r\n                        'sku': form.data().productSku,\r\n                        'productIds': productIds,\r\n                        'productInfo': productInfo,\r\n                        'form': form,\r\n                        'response': res\r\n                    });\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                complete: function (res) {\r\n                    if (res.state() === 'rejected') {\r\n                        location.reload();\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {String} form\r\n         */\r\n        disableAddToCartButton: function (form) {\r\n            var addToCartButtonTextWhileAdding = this.options.addToCartButtonTextWhileAdding || $t('Adding...'),\r\n                addToCartButton = $(form).find(this.options.addToCartButtonSelector);\r\n\r\n            addToCartButton.addClass(this.options.addToCartButtonDisabledClass);\r\n            addToCartButton.find('span').text(addToCartButtonTextWhileAdding);\r\n            addToCartButton.attr('title', addToCartButtonTextWhileAdding);\r\n        },\r\n\r\n        /**\r\n         * @param {String} form\r\n         */\r\n        enableAddToCartButton: function (form) {\r\n            var addToCartButtonTextAdded = this.options.addToCartButtonTextAdded || $t('Added'),\r\n                self = this,\r\n                addToCartButton = $(form).find(this.options.addToCartButtonSelector);\r\n\r\n            addToCartButton.find('span').text(addToCartButtonTextAdded);\r\n            addToCartButton.attr('title', addToCartButtonTextAdded);\r\n\r\n            setTimeout(function () {\r\n                var addToCartButtonTextDefault = self.options.addToCartButtonTextDefault || $t('Add to Cart');\r\n\r\n                addToCartButton.removeClass(self.options.addToCartButtonDisabledClass);\r\n                addToCartButton.find('span').text(addToCartButtonTextDefault);\r\n                addToCartButton.attr('title', addToCartButtonTextDefault);\r\n            }, 1000);\r\n        }\r\n    });\r\n\r\n    return $.mage.catalogAddToCart;\r\n});\r\n","Magento_Catalog/js/gallery.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.gallery', {\r\n        options: {\r\n            minWidth: 300, // Minimum width of the gallery image.\r\n            widthOffset: 90, // Offset added to the width of the gallery image.\r\n            heightOffset: 210, // Offset added to the height of the gallery image.\r\n            closeWindow: 'div.buttons-set a[role=\"close-window\"]' // Selector for closing the gallery popup window.\r\n        },\r\n\r\n        /**\r\n         * Bind click handler for closing the popup window and resize the popup based on the image size.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            $(this.options.closeWindow).on('click', function () {\r\n                window.close();\r\n            });\r\n            this._resizeWindow();\r\n        },\r\n\r\n        /**\r\n         * Resize the gallery image popup window based on the image's dimensions.\r\n         * @private\r\n         */\r\n        _resizeWindow: function () {\r\n            var img = this.element,\r\n                width = img.width() < this.options.minWidth ? this.options.minWidth : img.width();\r\n\r\n            window.resizeTo(width + this.options.widthOffset, img.height() + this.options.heightOffset);\r\n        }\r\n    });\r\n\r\n    return $.mage.gallery;\r\n});\r\n","Magento_Catalog/js/list.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.compareList', {\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            var elem = this.element,\r\n                products = $('thead td', elem),\r\n                headings;\r\n\r\n            if (products.length > this.options.productsInRow) {\r\n                headings = $('<table></table>')\r\n                    .addClass('comparison headings data table')\r\n                    .insertBefore(elem.closest('.container'));\r\n\r\n                elem.addClass('scroll');\r\n\r\n                $('th', elem).each(function () {\r\n                    var th = $(this),\r\n                        thCopy = th.clone();\r\n\r\n                    th.animate({\r\n                        top: '+=0'\r\n                    }, 50, function () {\r\n                        var height = th.height();\r\n\r\n                        thCopy.css('height', height)\r\n                            .appendTo(headings)\r\n                            .wrap('<tr></tr>');\r\n                    });\r\n                });\r\n            }\r\n\r\n            $(this.options.windowPrintSelector).on('click', function (e) {\r\n                e.preventDefault();\r\n                window.print();\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.compareList;\r\n});\r\n","Magento_Catalog/js/price-box.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Catalog/js/price-utils',\r\n    'underscore',\r\n    'mage/template',\r\n    'jquery-ui-modules/widget'\r\n], function ($, utils, _, mageTemplate) {\r\n    'use strict';\r\n\r\n    var globalOptions = {\r\n        productId: null,\r\n        priceConfig: null,\r\n        prices: {},\r\n        priceTemplate: '<span class=\"price\"><%- data.formatted %></span>'\r\n    };\r\n\r\n    $.widget('mage.priceBox', {\r\n        options: globalOptions,\r\n        qtyInfo: '#qty',\r\n\r\n        /**\r\n         * Widget initialisation.\r\n         * Every time when option changed prices also can be changed. So\r\n         * changed options.prices -> changed cached prices -> recalculation -> redraw price box\r\n         */\r\n        _init: function initPriceBox() {\r\n            var box = this.element;\r\n\r\n            box.trigger('updatePrice');\r\n            this.cache.displayPrices = utils.deepClone(this.options.prices);\r\n        },\r\n\r\n        /**\r\n         * Widget creating.\r\n         */\r\n        _create: function createPriceBox() {\r\n            var box = this.element;\r\n\r\n            this.cache = {};\r\n            this._setDefaultsFromPriceConfig();\r\n            this._setDefaultsFromDataSet();\r\n\r\n            box.on('reloadPrice', this.reloadPrice.bind(this));\r\n            box.on('updatePrice', this.onUpdatePrice.bind(this));\r\n            $(this.qtyInfo).on('input', this.updateProductTierPrice.bind(this));\r\n            box.trigger('price-box-initialized');\r\n        },\r\n\r\n        /**\r\n         * Call on event updatePrice. Proxy to updatePrice method.\r\n         * @param {Event} event\r\n         * @param {Object} prices\r\n         */\r\n        onUpdatePrice: function onUpdatePrice(event, prices) {\r\n            return this.updatePrice(prices);\r\n        },\r\n\r\n        /**\r\n         * Updates price via new (or additional values).\r\n         * It expects object like this:\r\n         * -----\r\n         *   \"option-hash\":\r\n         *      \"price-code\":\r\n         *         \"amount\": 999.99999,\r\n         *         ...\r\n         * -----\r\n         * Empty option-hash object or empty price-code object treats as zero amount.\r\n         * @param {Object} newPrices\r\n         */\r\n        updatePrice: function updatePrice(newPrices) {\r\n            var prices = this.cache.displayPrices,\r\n                additionalPrice = {},\r\n                pricesCode = [],\r\n                priceValue, origin, finalPrice;\r\n\r\n            this.cache.additionalPriceObject = this.cache.additionalPriceObject || {};\r\n\r\n            if (newPrices) {\r\n                $.extend(this.cache.additionalPriceObject, newPrices);\r\n            }\r\n\r\n            if (!_.isEmpty(additionalPrice)) {\r\n                pricesCode = _.keys(additionalPrice);\r\n            } else if (!_.isEmpty(prices)) {\r\n                pricesCode = _.keys(prices);\r\n            }\r\n\r\n            _.each(this.cache.additionalPriceObject, function (additional) {\r\n                if (additional && !_.isEmpty(additional)) {\r\n                    pricesCode = _.keys(additional);\r\n                }\r\n                _.each(pricesCode, function (priceCode) {\r\n                    priceValue = additional[priceCode] || {};\r\n                    priceValue.amount = +priceValue.amount || 0;\r\n                    priceValue.adjustments = priceValue.adjustments || {};\r\n\r\n                    additionalPrice[priceCode] = additionalPrice[priceCode] || {\r\n                        'amount': 0,\r\n                        'adjustments': {}\r\n                    };\r\n                    additionalPrice[priceCode].amount =  0 + (additionalPrice[priceCode].amount || 0) +\r\n                        priceValue.amount;\r\n                    _.each(priceValue.adjustments, function (adValue, adCode) {\r\n                        additionalPrice[priceCode].adjustments[adCode] = 0 +\r\n                            (additionalPrice[priceCode].adjustments[adCode] || 0) + adValue;\r\n                    });\r\n                });\r\n            });\r\n\r\n            if (_.isEmpty(additionalPrice)) {\r\n                this.cache.displayPrices = utils.deepClone(this.options.prices);\r\n            } else {\r\n                _.each(additionalPrice, function (option, priceCode) {\r\n                    origin = this.options.prices[priceCode] || {};\r\n                    finalPrice = prices[priceCode] || {};\r\n                    option.amount = option.amount || 0;\r\n                    origin.amount = origin.amount || 0;\r\n                    origin.adjustments = origin.adjustments || {};\r\n                    finalPrice.adjustments = finalPrice.adjustments || {};\r\n\r\n                    finalPrice.amount = 0 + origin.amount + option.amount;\r\n                    _.each(option.adjustments, function (pa, paCode) {\r\n                        finalPrice.adjustments[paCode] = 0 + (origin.adjustments[paCode] || 0) + pa;\r\n                    });\r\n                }, this);\r\n            }\r\n\r\n            this.element.trigger('priceUpdated', this.cache.displayPrices);\r\n            this.element.trigger('reloadPrice');\r\n        },\r\n\r\n        /*eslint-disable no-extra-parens*/\r\n        /**\r\n         * Render price unit block.\r\n         */\r\n        reloadPrice: function reDrawPrices() {\r\n            var priceFormat = (this.options.priceConfig && this.options.priceConfig.priceFormat) || {},\r\n                priceTemplate = mageTemplate(this.options.priceTemplate);\r\n\r\n            _.each(this.cache.displayPrices, function (price, priceCode) {\r\n                price.final = _.reduce(price.adjustments, function (memo, amount) {\r\n                    return memo + amount;\r\n                }, price.amount);\r\n\r\n                price.formatted = utils.formatPrice(price.final, priceFormat);\r\n\r\n                $('[data-price-type=\"' + priceCode + '\"]', this.element).html(priceTemplate({\r\n                    data: price\r\n                }));\r\n            }, this);\r\n        },\r\n\r\n        /*eslint-enable no-extra-parens*/\r\n        /**\r\n         * Overwrites initial (default) prices object.\r\n         * @param {Object} prices\r\n         */\r\n        setDefault: function setDefaultPrices(prices) {\r\n            this.cache.displayPrices = utils.deepClone(prices);\r\n            this.options.prices = utils.deepClone(prices);\r\n        },\r\n\r\n        /**\r\n         * Custom behavior on getting options:\r\n         * now widget able to deep merge of accepted configuration.\r\n         * @param  {Object} options\r\n         * @return {mage.priceBox}\r\n         */\r\n        _setOptions: function setOptions(options) {\r\n            $.extend(true, this.options, options);\r\n\r\n            if ('disabled' in options) {\r\n                this._setOption('disabled', options.disabled);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * setDefaultsFromDataSet\r\n         */\r\n        _setDefaultsFromDataSet: function _setDefaultsFromDataSet() {\r\n            var box = this.element,\r\n                priceHolders = $('[data-price-type]', box),\r\n                prices = this.options.prices;\r\n\r\n            this.options.productId = box.data('productId');\r\n\r\n            if (_.isEmpty(prices)) {\r\n                priceHolders.each(function (index, element) {\r\n                    var type = $(element).data('priceType'),\r\n                        amount = parseFloat($(element).data('priceAmount'));\r\n\r\n                    if (type && !_.isNaN(amount)) {\r\n                        prices[type] = {\r\n                            amount: amount\r\n                        };\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * setDefaultsFromPriceConfig\r\n         */\r\n        _setDefaultsFromPriceConfig: function _setDefaultsFromPriceConfig() {\r\n            var config = this.options.priceConfig;\r\n\r\n            if (config && config.prices) {\r\n                this.options.prices = config.prices;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Updates product final price according to tier prices\r\n         */\r\n        updateProductTierPrice: function updateProductTierPrice() {\r\n            var productQty = $(this.qtyInfo).val(),\r\n                originalPrice = this.options.prices.finalPrice.amount,\r\n                tierPrice,\r\n                prices,\r\n                i;\r\n\r\n            for (i = 0; i < this.options.priceConfig.tierPrices.length; i++) {\r\n                if (productQty >= this.options.priceConfig.tierPrices[i].qty) {\r\n                    tierPrice = this.options.priceConfig.tierPrices[i].price;\r\n                }\r\n            }\r\n            prices = {\r\n                'prices': {\r\n                    'finalPrice': {\r\n                        'amount': tierPrice - originalPrice\r\n                    }\r\n                }\r\n            };\r\n            this.updatePrice(prices);\r\n        }\r\n    });\r\n\r\n    return $.mage.priceBox;\r\n});\r\n","Magento_Catalog/js/price-option-date.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'priceUtils',\r\n    'priceOptions',\r\n    'jquery-ui-modules/widget'\r\n], function ($, utils) {\r\n    'use strict';\r\n\r\n    var globalOptions = {\r\n            fromSelector: 'form',\r\n            dropdownsSelector: '[data-role=calendar-dropdown]'\r\n        },\r\n        optionHandler = {};\r\n\r\n    optionHandler.optionHandlers = {};\r\n\r\n    /**\r\n     * Custom handler for Date-with-Dropdowns option type.\r\n     * @param  {jQuery} siblings\r\n     * @return {Function} function that return object { optionHash : optionAdditionalPrice }\r\n     */\r\n    function onCalendarDropdownChange(siblings) {\r\n        return function (element, optionConfig) {\r\n            var changes = {},\r\n                optionId = utils.findOptionId(element),\r\n                overhead = optionConfig[optionId].prices,\r\n                isNeedToUpdate = true,\r\n                optionHash = 'price-option-calendar-' + optionId;\r\n\r\n            siblings.each(function (index, el) {\r\n                isNeedToUpdate = isNeedToUpdate && !!$(el).val();\r\n            });\r\n\r\n            overhead = isNeedToUpdate ? overhead : {};\r\n            changes[optionHash] = overhead;\r\n\r\n            return changes;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Returns number of days for special month and year\r\n     * @param  {Number} month\r\n     * @param  {Number} year\r\n     * @return {Number}\r\n     */\r\n    function getDaysInMonth(month, year) {\r\n        return new Date(year, month, 0).getDate();\r\n    }\r\n\r\n    /**\r\n     * Adjusts the number of days in the day option element based on which month or year\r\n     * is selected (changed). Adjusts the days to 28, 29, 30, or 31 typically.\r\n     * @param {jQuery} dropdowns\r\n     */\r\n    function onDateChange(dropdowns) {\r\n        var daysNodes,\r\n            curMonth, curYear, expectedDays,\r\n            options, needed,\r\n            month = dropdowns.filter('[data-calendar-role=month]'),\r\n            year = dropdowns.filter('[data-calendar-role=year]');\r\n\r\n        if (month.length && year.length) {\r\n            daysNodes = dropdowns.filter('[data-calendar-role=day]').find('option');\r\n\r\n            curMonth = month.val() || '01';\r\n            curYear = year.val() || '2000';\r\n            expectedDays = getDaysInMonth(curMonth, curYear);\r\n\r\n            if (daysNodes.length - 1 > expectedDays) { // remove unnecessary option nodes\r\n                daysNodes.each(function (i, e) {\r\n                    if (e.value > expectedDays) {\r\n                        $(e).remove();\r\n                    }\r\n                });\r\n            } else if (daysNodes.length - 1 < expectedDays) { // add missing option nodes\r\n                options = [];\r\n                needed = expectedDays - daysNodes.length + 1;\r\n\r\n                while (needed--) { //eslint-disable-line max-depth\r\n                    options.push(\r\n                        '<option value=\"' + (expectedDays - needed) + '\">' + (expectedDays - needed) + '</option>'\r\n                    );\r\n                }\r\n                $(options.join('')).insertAfter(daysNodes.last());\r\n            }\r\n        }\r\n    }\r\n\r\n    $.widget('mage.priceOptionDate', {\r\n        options: globalOptions,\r\n\r\n        /**\r\n         * Function-initializer of priceOptionDate widget\r\n         * @private\r\n         */\r\n        _create: function initOptionDate() {\r\n            var field = this.element,\r\n                form = field.closest(this.options.fromSelector),\r\n                dropdowns = $(this.options.dropdownsSelector, field),\r\n                dateOptionId;\r\n\r\n            if (dropdowns.length) {\r\n                dateOptionId = this.options.dropdownsSelector + dropdowns.attr('name');\r\n\r\n                optionHandler.optionHandlers[dateOptionId] = onCalendarDropdownChange(dropdowns);\r\n\r\n                form.priceOptions(optionHandler);\r\n\r\n                dropdowns.data('role', dateOptionId);\r\n                dropdowns.on('change', onDateChange.bind(this, dropdowns));\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.priceOptionDate;\r\n});\r\n","Magento_Catalog/js/price-option-file.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.priceOptionFile', {\r\n        options: {\r\n            fileName: '',\r\n            fileNamed: '',\r\n            fieldNameAction: '',\r\n            changeFileSelector: '',\r\n            deleteFileSelector: ''\r\n        },\r\n\r\n        /**\r\n         * Creates instance of widget\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.fileDeleteFlag = this.fileChangeFlag = false;\r\n            this.inputField = this.element.find('input[name=' + this.options.fileName + ']')[0];\r\n            this.inputFieldAction = this.element.find('input[name=' + this.options.fieldNameAction + ']')[0];\r\n            this.fileNameSpan = this.element.parent('dd').find('.' + this.options.fileNamed);\r\n\r\n            $(this.options.changeFileSelector).on('click', $.proxy(function () {\r\n                this._toggleFileChange();\r\n            }, this));\r\n            $(this.options.deleteFileSelector).on('click', $.proxy(function () {\r\n                this._toggleFileDelete();\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Toggles whether the current file is being changed or not. If the file is being deleted\r\n         * then the option to change the file is disabled.\r\n         * @private\r\n         */\r\n        _toggleFileChange: function () {\r\n            this.element.toggle();\r\n            this.fileChangeFlag = !this.fileChangeFlag;\r\n\r\n            if (!this.fileDeleteFlag) {\r\n                $(this.inputFieldAction).attr('value', this.fileChangeFlag ? 'save_new' : 'save_old');\r\n                this.inputField.disabled = !this.fileChangeFlag;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggles whether the file is to be deleted. When the file is being deleted, the name of\r\n         * the file is decorated with strike-through text and the option to change the file is\r\n         * disabled.\r\n         * @private\r\n         */\r\n        _toggleFileDelete: function () {\r\n            this.fileDeleteFlag = $(this.options.deleteFileSelector + ':checked').val();\r\n            $(this.inputFieldAction).attr('value',\r\n                this.fileDeleteFlag ? '' : this.fileChangeFlag ? 'save_new' : 'save_old');\r\n            this.inputField.disabled = this.fileDeleteFlag || !this.fileChangeFlag;\r\n            this.fileNameSpan.css('text-decoration', this.fileDeleteFlag ? 'line-through' : 'none');\r\n        }\r\n    });\r\n\r\n    return $.mage.priceOptionFile;\r\n});\r\n","Magento_Catalog/js/price-options.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'priceUtils',\r\n    'priceBox',\r\n    'jquery-ui-modules/widget'\r\n], function ($, _, mageTemplate, utils) {\r\n    'use strict';\r\n\r\n    var globalOptions = {\r\n        productId: null,\r\n        priceHolderSelector: '.price-box', //data-role=\"priceBox\"\r\n        optionsSelector: '.product-custom-option',\r\n        optionConfig: {},\r\n        optionHandlers: {},\r\n        optionTemplate: '<%= data.label %>' +\r\n        '<% if (data.finalPrice.value > 0) { %>' +\r\n        ' +<%- data.finalPrice.formatted %>' +\r\n        '<% } else if (data.finalPrice.value < 0) { %>' +\r\n        ' <%- data.finalPrice.formatted %>' +\r\n        '<% } %>',\r\n        controlContainer: 'dd'\r\n    };\r\n\r\n    /**\r\n     * Custom option preprocessor\r\n     * @param  {jQuery} element\r\n     * @param  {Object} optionsConfig - part of config\r\n     * @return {Object}\r\n     */\r\n    function defaultGetOptionValue(element, optionsConfig) {\r\n        var changes = {},\r\n            optionValue = element.val(),\r\n            optionId = utils.findOptionId(element[0]),\r\n            optionName = element.prop('name'),\r\n            optionType = element.prop('type'),\r\n            optionConfig = optionsConfig[optionId],\r\n            optionHash = optionName;\r\n\r\n        switch (optionType) {\r\n            case 'text':\r\n            case 'textarea':\r\n                changes[optionHash] = optionValue ? optionConfig.prices : {};\r\n                break;\r\n\r\n            case 'radio':\r\n                if (element.is(':checked')) {\r\n                    changes[optionHash] = optionConfig[optionValue] && optionConfig[optionValue].prices || {};\r\n                }\r\n                break;\r\n\r\n            case 'select-one':\r\n                changes[optionHash] = optionConfig[optionValue] && optionConfig[optionValue].prices || {};\r\n                break;\r\n\r\n            case 'select-multiple':\r\n                _.each(optionConfig, function (row, optionValueCode) {\r\n                    optionHash = optionName + '##' + optionValueCode;\r\n                    changes[optionHash] = _.contains(optionValue, optionValueCode) ? row.prices : {};\r\n                });\r\n                break;\r\n\r\n            case 'checkbox':\r\n                optionHash = optionName + '##' + optionValue;\r\n                changes[optionHash] = element.is(':checked') ? optionConfig[optionValue].prices : {};\r\n                break;\r\n\r\n            case 'file':\r\n                // Checking for 'disable' property equal to checking DOMNode with id*=\"change-\"\r\n                changes[optionHash] = optionValue || element.prop('disabled') ? optionConfig.prices : {};\r\n                break;\r\n        }\r\n\r\n        return changes;\r\n    }\r\n\r\n    $.widget('mage.priceOptions', {\r\n        options: globalOptions,\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _init: function initPriceBundle() {\r\n            $(this.options.optionsSelector, this.element).trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Widget creating method.\r\n         * Triggered once.\r\n         * @private\r\n         */\r\n        _create: function createPriceOptions() {\r\n            var form = this.element,\r\n                options = $(this.options.optionsSelector, form),\r\n                priceBox = $(this.options.priceHolderSelector, $(this.options.optionsSelector).element);\r\n\r\n            if (priceBox.data('magePriceBox') &&\r\n                priceBox.priceBox('option') &&\r\n                priceBox.priceBox('option').priceConfig\r\n            ) {\r\n                if (priceBox.priceBox('option').priceConfig.optionTemplate) {\r\n                    this._setOption('optionTemplate', priceBox.priceBox('option').priceConfig.optionTemplate);\r\n                }\r\n                this._setOption('priceFormat', priceBox.priceBox('option').priceConfig.priceFormat);\r\n            }\r\n\r\n            this._applyOptionNodeFix(options);\r\n\r\n            options.on('change', this._onOptionChanged.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Custom option change-event handler\r\n         * @param {Event} event\r\n         * @private\r\n         */\r\n        _onOptionChanged: function onOptionChanged(event) {\r\n            var changes,\r\n                option = $(event.target),\r\n                handler = this.options.optionHandlers[option.data('role')];\r\n\r\n            option.data('optionContainer', option.closest(this.options.controlContainer));\r\n\r\n            if (handler && handler instanceof Function) {\r\n                changes = handler(option, this.options.optionConfig, this);\r\n            } else {\r\n                changes = defaultGetOptionValue(option, this.options.optionConfig);\r\n            }\r\n            $(this.options.priceHolderSelector).trigger('updatePrice', changes);\r\n        },\r\n\r\n        /**\r\n         * Helper to fix issue with option nodes:\r\n         *  - you can't place any html in option ->\r\n         *    so you can't style it via CSS\r\n         * @param {jQuery} options\r\n         * @private\r\n         */\r\n        _applyOptionNodeFix: function applyOptionNodeFix(options) {\r\n            var config = this.options,\r\n                format = config.priceFormat,\r\n                template = config.optionTemplate;\r\n\r\n            template = mageTemplate(template);\r\n            options.filter('select').each(function (index, element) {\r\n                var $element = $(element),\r\n                    optionId = utils.findOptionId($element),\r\n                    optionConfig = config.optionConfig && config.optionConfig[optionId];\r\n\r\n                $element.find('option').each(function (idx, option) {\r\n                    var $option,\r\n                        optionValue,\r\n                        toTemplate,\r\n                        prices;\r\n\r\n                    $option = $(option);\r\n                    optionValue = $option.val();\r\n\r\n                    if (!optionValue && optionValue !== 0) {\r\n                        return;\r\n                    }\r\n\r\n                    toTemplate = {\r\n                        data: {\r\n                            label: optionConfig[optionValue] && optionConfig[optionValue].name\r\n                        }\r\n                    };\r\n                    prices = optionConfig[optionValue] ? optionConfig[optionValue].prices : null;\r\n\r\n                    if (prices) {\r\n                        _.each(prices, function (price, type) {\r\n                            var value = +price.amount;\r\n\r\n                            value += _.reduce(price.adjustments, function (sum, x) { //eslint-disable-line\r\n                                return sum + x;\r\n                            }, 0);\r\n                            toTemplate.data[type] = {\r\n                                value: value,\r\n                                formatted: utils.formatPrice(value, format)\r\n                            };\r\n                        });\r\n\r\n                        $option.text(template(toTemplate));\r\n                    }\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Custom behavior on getting options:\r\n         * now widget able to deep merge accepted configuration with instance options.\r\n         * @param  {Object}  options\r\n         * @return {$.Widget}\r\n         * @private\r\n         */\r\n        _setOptions: function setOptions(options) {\r\n            $.extend(true, this.options, options);\r\n            this._super(options);\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return $.mage.priceOptions;\r\n});\r\n","Magento_Catalog/js/price-utils.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    var globalPriceFormat = {\r\n        requiredPrecision: 2,\r\n        integerRequired: 1,\r\n        decimalSymbol: ',',\r\n        groupSymbol: ',',\r\n        groupLength: ','\r\n    };\r\n\r\n    /**\r\n     * Repeats {string} {times} times\r\n     * @param  {String} string\r\n     * @param  {Number} times\r\n     * @return {String}\r\n     */\r\n    function stringPad(string, times) {\r\n        return (new Array(times + 1)).join(string);\r\n    }\r\n\r\n    /**\r\n     * Formatter for price amount\r\n     * @param  {Number}  amount\r\n     * @param  {Object}  format\r\n     * @param  {Boolean} isShowSign\r\n     * @return {String}              Formatted value\r\n     */\r\n    function formatPrice(amount, format, isShowSign) {\r\n        var s = '',\r\n            precision, integerRequired, decimalSymbol, groupSymbol, groupLength, pattern, i, pad, j, re, r, am;\r\n\r\n        format = _.extend(globalPriceFormat, format);\r\n\r\n        // copied from price-option.js | Could be refactored with varien/js.js\r\n\r\n        precision = isNaN(format.requiredPrecision = Math.abs(format.requiredPrecision)) ? 2 : format.requiredPrecision;\r\n        integerRequired = isNaN(format.integerRequired = Math.abs(format.integerRequired)) ? 1 : format.integerRequired;\r\n        decimalSymbol = format.decimalSymbol === undefined ? ',' : format.decimalSymbol;\r\n        groupSymbol = format.groupSymbol === undefined ? '.' : format.groupSymbol;\r\n        groupLength = format.groupLength === undefined ? 3 : format.groupLength;\r\n        pattern = format.pattern || '%s';\r\n\r\n        if (isShowSign === undefined || isShowSign === true) {\r\n            s = amount < 0 ? '-' : isShowSign ? '+' : '';\r\n        } else if (isShowSign === false) {\r\n            s = '';\r\n        }\r\n        pattern = pattern.indexOf('{sign}') < 0 ? s + pattern : pattern.replace('{sign}', s);\r\n\r\n        // we're avoiding the usage of to fixed, and using round instead with the e representation to address\r\n        // numbers like 1.005 = 1.01. Using ToFixed to only provide trailing zeroes in case we have a whole number\r\n        i = parseInt(\r\n                amount = Number(Math.round(Math.abs(+amount || 0) + 'e+' + precision) + ('e-' + precision)),\r\n                10\r\n            ) + '';\r\n        pad = i.length < integerRequired ? integerRequired - i.length : 0;\r\n\r\n        i = stringPad('0', pad) + i;\r\n\r\n        j = i.length > groupLength ? i.length % groupLength : 0;\r\n        re = new RegExp('(\\\\d{' + groupLength + '})(?=\\\\d)', 'g');\r\n\r\n        // replace(/-/, 0) is only for fixing Safari bug which appears\r\n        // when Math.abs(0).toFixed() executed on '0' number.\r\n        // Result is '0.-0' :(\r\n\r\n        am = Number(Math.round(Math.abs(amount - i) + 'e+' + precision) + ('e-' + precision));\r\n        r = (j ? i.substr(0, j) + groupSymbol : '') +\r\n            i.substr(j).replace(re, '$1' + groupSymbol) +\r\n            (precision ? decimalSymbol + am.toFixed(precision).replace(/-/, 0).slice(2) : '');\r\n\r\n        return pattern.replace('%s', r).replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\r\n    }\r\n\r\n    /**\r\n     * Deep clone of Object. Doesn't support functions\r\n     * @param {Object} obj\r\n     * @return {Object}\r\n     */\r\n    function objectDeepClone(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Helper to find ID in name attribute\r\n     * @param   {jQuery} element\r\n     * @returns {undefined|String}\r\n     */\r\n    function findOptionId(element) {\r\n        var re, id, name;\r\n\r\n        if (!element) {\r\n            return id;\r\n        }\r\n        name = $(element).attr('name');\r\n\r\n        if (name.indexOf('[') !== -1) {\r\n            re = /\\[([^\\]]+)?\\]/;\r\n        } else {\r\n            re = /_([^\\]]+)?_/; // just to support file-type-option\r\n        }\r\n        id = re.exec(name) && re.exec(name)[1];\r\n\r\n        if (id) {\r\n            return id;\r\n        }\r\n    }\r\n\r\n    return {\r\n        formatPrice: formatPrice,\r\n        deepClone: objectDeepClone,\r\n        strPad: stringPad,\r\n        findOptionId: findOptionId\r\n    };\r\n});\r\n","Magento_Catalog/js/related-products.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'mage/translate'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.relatedProducts', {\r\n        options: {\r\n            relatedCheckbox: '.related-checkbox', // Class name for a related product's input checkbox.\r\n            relatedProductsCheckFlag: false, // Related products checkboxes are initially unchecked.\r\n            relatedProductsField: '#related-products-field', // Hidden input field that stores related products.\r\n            selectAllMessage: $.mage.__('select all'),\r\n            unselectAllMessage: $.mage.__('unselect all'),\r\n            selectAllLink: '[data-role=\"select-all\"]',\r\n            elementsSelector: '.item.product'\r\n        },\r\n\r\n        /**\r\n         * Bind events to the appropriate handlers.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            $(this.options.selectAllLink, this.element).on('click', $.proxy(this._selectAllRelated, this));\r\n            $(this.options.relatedCheckbox, this.element).on('click', $.proxy(this._addRelatedToProduct, this));\r\n\r\n            if (this.element.data('shuffle')) {\r\n                this._shuffle(this.element.find(this.options.elementsSelector));\r\n            }\r\n            this._showRelatedProducts(\r\n                this.element.find(this.options.elementsSelector),\r\n                this.element.data('limit'),\r\n                this.element.data('shuffle-weighted')\r\n            );\r\n        },\r\n\r\n        /**\r\n         * This method either checks all checkboxes for a product's set of related products (select all)\r\n         * or unchecks them (unselect all).\r\n         * @private\r\n         * @param {jQuery.Event} e - Click event on either the \"select all\" link or the \"unselect all\" link.\r\n         * @return {Boolean} - Prevent default event action and event propagation.\r\n         */\r\n        _selectAllRelated: function (e) {\r\n            var innerHTML = this.options.relatedProductsCheckFlag ?\r\n                this.options.selectAllMessage : this.options.unselectAllMessage;\r\n\r\n            $(e.target).html(innerHTML);\r\n            $(this.options.relatedCheckbox).attr(\r\n                'checked',\r\n                this.options.relatedProductsCheckFlag = !this.options.relatedProductsCheckFlag\r\n            );\r\n            this._addRelatedToProduct();\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * This method iterates through each checkbox for all related products and collects only those products\r\n         * whose checkbox has been checked. The selected related products are stored in a hidden input field.\r\n         * @private\r\n         */\r\n        _addRelatedToProduct: function () {\r\n            $(this.options.relatedProductsField).val(\r\n                $(this.options.relatedCheckbox + ':checked').map(function () {\r\n                    return this.value;\r\n                }).get().join(',')\r\n            );\r\n        },\r\n\r\n        /* jscs:disable */\r\n        /* eslint-disable */\r\n        /**\r\n         * Show related products according to limit. Shuffle if needed.\r\n         * @param {*} elements\r\n         * @param {*} limit\r\n         * @param weightedRandom\r\n         * @private\r\n         */\r\n        _showRelatedProducts: function (elements, limit, weightedRandom) {\r\n            var index, weights = [], random = [], weight = 2, shown = 0, $element, currentGroup, prevGroup;\r\n\r\n            if (limit === 0) {\r\n                limit = elements.length;\r\n            }\r\n\r\n            if (weightedRandom && limit > 0 && limit < elements.length) {\r\n                for (index = 0; index < limit; index++) {\r\n                    $element = $(elements[index]);\r\n                    if ($element.data('shuffle-group') !== '') {\r\n                        break;\r\n                    }\r\n                    $element.show();\r\n                    shown++;\r\n                }\r\n                limit -= shown;\r\n                for (index = elements.length - 1; index >= 0; index--) {\r\n                    $element = $(elements[index]);\r\n                    currentGroup = $element.data('shuffle-group');\r\n                    if (currentGroup !== '') {\r\n                        weights.push([index, Math.log(weight)]);\r\n                        if (typeof prevGroup !== 'undefined' && prevGroup !== currentGroup) {\r\n                            weight += 2;\r\n                        }\r\n                        prevGroup = currentGroup;\r\n                    }\r\n                }\r\n\r\n                if (weights.length === 0) {\r\n                    return;\r\n                }\r\n\r\n                for (index = 0; index < weights.length; index++) {\r\n                    random.push([weights[index][0], Math.pow(Math.random(), 1 / weights[index][1])]);\r\n                }\r\n\r\n                random.sort(function(a, b) {\r\n                    a = a[1];\r\n                    b = b[1];\r\n                    return a < b ? 1 : (a > b ? -1 : 0);\r\n                });\r\n                index = 0;\r\n                while (limit) {\r\n                    $(elements[random[index][0]]).show();\r\n                    limit--;\r\n                    index++\r\n                }\r\n                return;\r\n            }\r\n\r\n            for (index = 0; index < limit; index++) {\r\n                $(elements[index]).show();\r\n            }\r\n        },\r\n\r\n        /* jscs:disable */\r\n        /* eslint-disable */\r\n        /**\r\n         * Shuffle an array\r\n         * @param {Array} elements\r\n         * @returns {*}\r\n         */\r\n        _shuffle: function shuffle(elements) {\r\n            var parent, child, lastSibling;\r\n            if (elements.length) {\r\n                parent = $(elements[0]).parent();\r\n            }\r\n            while (elements.length) {\r\n                child = elements.splice(Math.floor(Math.random() *  elements.length), 1)[0];\r\n                lastSibling = parent.find('[data-shuffle-group=\"' + $(child).data('shuffle-group') + '\"]').last();\r\n                lastSibling.after(child);\r\n            }\r\n        }\r\n\r\n        /* jscs:disable */\r\n        /* eslint:disable */\r\n    });\r\n\r\n    return $.mage.relatedProducts;\r\n});\r\n","Magento_Catalog/js/storage-manager.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiElement',\r\n    'mageUtils',\r\n    'Magento_Catalog/js/product/storage/storage-service',\r\n    'Magento_Customer/js/section-config',\r\n    'jquery'\r\n], function (_, Element, utils, storage, sectionConfig, $) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Flush events, that are clones of the same customer data sections\r\n     * Events listener\r\n     */\r\n    $(document).on('submit', function (event) {\r\n        var sections;\r\n\r\n        if (event.target.method.match(/post|put|delete/i)) {\r\n            sections = sectionConfig.getAffectedSections(event.target.action);\r\n\r\n            if (sections && window.localStorage) {\r\n                _.each(sections, function (section) {\r\n                    window.localStorage.removeItem(section);\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            defaultNamespace: {\r\n                lifetime: 1000\r\n            },\r\n            storagesConfiguration: {\r\n                'recently_viewed_product': {\r\n                    namespace: 'recently_viewed_product',\r\n                    className: 'IdsStorage',\r\n                    lifetime: '${ $.defaultNamespace.lifetime }',\r\n                    requestConfig: {\r\n                        typeId: '${ $.storagesConfiguration.recently_viewed_product.namespace }'\r\n                    },\r\n                    savePrevious: {\r\n                        namespace: '${ $.storagesConfiguration.recently_viewed_product.namespace }' + '_previous',\r\n                        className: '${ $.storagesConfiguration.recently_viewed_product.className }'\r\n                    },\r\n                    allowToSendRequest: 0\r\n                },\r\n                'recently_compared_product': {\r\n                    namespace: 'recently_compared_product',\r\n                    className: 'IdsStorageCompare',\r\n                    provider: 'compare-products',\r\n                    lifetime: '${ $.defaultNamespace.lifetime }',\r\n                    requestConfig: {\r\n                        typeId: '${ $.storagesConfiguration.recently_compared_product.namespace }'\r\n                    },\r\n                    savePrevious: {\r\n                        namespace: '${ $.storagesConfiguration.recently_compared_product.namespace }' + '_previous',\r\n                        className: '${ $.storagesConfiguration.recently_compared_product.className }'\r\n                    },\r\n                    allowToSendRequest: 0\r\n                },\r\n                'product_data_storage': {\r\n                    namespace: 'product_data_storage',\r\n                    className: 'DataStorage',\r\n                    allowToSendRequest: 0,\r\n                    updateRequestConfig: {\r\n                        url: '',\r\n                        method: 'GET',\r\n                        dataType: 'json'\r\n                    }\r\n                }\r\n            },\r\n            requestConfig: {\r\n                method: 'POST',\r\n                dataType: 'json',\r\n                ajaxSaveType: 'default',\r\n                ignoreProcessEvents: true\r\n            },\r\n            requestSent: 0\r\n        },\r\n\r\n        /**\r\n         * Initializes provider component.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .prepareStoragesConfig()\r\n                .initStorages()\r\n                .initStartData()\r\n                .initUpdateStorageDataListener();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes storages.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initStorages: function () {\r\n            _.each(this.storagesNamespace, function (name) {\r\n                this[name] = storage.createStorage(this.storagesConfiguration[name]);\r\n\r\n                if (this.storagesConfiguration[name].savePrevious) {\r\n                    this[name].previous = storage.createStorage(this.storagesConfiguration[name].savePrevious);\r\n                }\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes start data.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initStartData: function () {\r\n            _.each(this.storagesNamespace, function (name) {\r\n                this.updateDataHandler(name, this[name].get());\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Prepare storages congfig.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        prepareStoragesConfig: function () {\r\n            this.storagesNamespace = _.keys(this.storagesConfiguration);\r\n\r\n            _.each(this.storagesNamespace, function (name) {\r\n                this.storagesConfiguration[name].requestConfig = _.extend(\r\n                    utils.copy(this.requestConfig),\r\n                    this.storagesConfiguration[name].requestConfig\r\n                );\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Prepare date in UTC format (in GMT), and calculate unix timestamp based in seconds\r\n         *\r\n         * @returns {Number}\r\n         * @private\r\n         */\r\n        getUtcTime: function () {\r\n            return new Date().getTime() / 1000;\r\n        },\r\n\r\n        /**\r\n         * Initializes listeners to storages \"data\" property.\r\n         */\r\n        initUpdateStorageDataListener: function () {\r\n            _.each(this.storagesNamespace, function (name) {\r\n                if (this[name].data) {\r\n                    this[name].data.subscribe(this.updateDataHandler.bind(this, name));\r\n                }\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Handlers for storages \"data\" property\r\n         */\r\n        updateDataHandler: function (name, data) {\r\n            var previousData = this[name].previous ? this[name].previous.get() : false;\r\n\r\n            if (!_.isEmpty(previousData) &&\r\n                !_.isEmpty(data) &&\r\n                !utils.compare(data, previousData).equal) {\r\n                this[name].set(data);\r\n                this[name].previous.set(data);\r\n                this.sendRequest(name, data);\r\n            } else if (\r\n                _.isEmpty(previousData) &&\r\n                !_.isEmpty(data)\r\n            ) {\r\n                this[name].set(data);\r\n                this.sendRequest(name, data);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets last updated time\r\n         *\r\n         * @param {String} name - storage name\r\n         */\r\n        getLastUpdate: function (name) {\r\n            return window.localStorage.getItem(this[name].namespace + '_last_update');\r\n        },\r\n\r\n        /**\r\n         * Sets last updated time\r\n         *\r\n         * @param {String} name - storage name\r\n         */\r\n        setLastUpdate: function (name) {\r\n            window.localStorage.setItem(this[name].namespace + '_last_update', this.getUtcTime());\r\n        },\r\n\r\n        /**\r\n         * Request handler\r\n         *\r\n         * @param {String} name - storage name\r\n         */\r\n        requestHandler: function (name) {\r\n            this.setLastUpdate(name);\r\n            this.requestSent = 1;\r\n        },\r\n\r\n        /**\r\n         * Sends request to server to gets data\r\n         *\r\n         * @param {String} name - storage name\r\n         * @param {Object} data - ids\r\n         */\r\n        sendRequest: function (name, data) {\r\n            var params  = utils.copy(this.storagesConfiguration[name].requestConfig),\r\n                url = params.syncUrl,\r\n                typeId = params.typeId;\r\n\r\n            if (this.requestSent || !~~this.storagesConfiguration[name].allowToSendRequest) {\r\n                return;\r\n            }\r\n\r\n            delete params.typeId;\r\n            delete params.url;\r\n\r\n            return utils.ajaxSubmit({\r\n                url: url,\r\n                data: {\r\n                    ids: data,\r\n                    'type_id': typeId\r\n                }\r\n            }, params).done(this.requestHandler.bind(this, name));\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/upsell-products.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.upsellProducts', {\r\n        options: {\r\n            elementsSelector: '.item.product'\r\n        },\r\n\r\n        /**\r\n         * Bind events to the appropriate handlers.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            if (this.element.data('shuffle')) {\r\n                this._shuffle(this.element.find(this.options.elementsSelector));\r\n            }\r\n            this._showUpsellProducts(\r\n                this.element.find(this.options.elementsSelector),\r\n                this.element.data('limit'),\r\n                this.element.data('shuffle-weighted')\r\n            );\r\n        },\r\n\r\n        /* jscs:disable */\r\n        /* eslint-disable */\r\n        /**\r\n         * Show upsell products according to limit. Shuffle if needed.\r\n         * @param {*} elements\r\n         * @param {Number} limit\r\n         * @param {Boolean} weightedRandom\r\n         * @private\r\n         */\r\n        _showUpsellProducts: function (elements, limit, weightedRandom) {\r\n            var index, weights = [], random = [], weight = 2, shown = 0, $element, currentGroup, prevGroup;\r\n\r\n            if (limit === 0) {\r\n                limit = elements.length;\r\n            }\r\n\r\n            if (weightedRandom && limit > 0 && limit < elements.length) {\r\n                for (index = 0; index < limit; index++) {\r\n                    $element = $(elements[index]);\r\n                    if ($element.data('shuffle-group') !== '') {\r\n                        break;\r\n                    }\r\n                    $element.show();\r\n                    shown++;\r\n                }\r\n                limit -= shown;\r\n                for (index = elements.length - 1; index >= 0; index--) {\r\n                    $element = $(elements[index]);\r\n                    currentGroup = $element.data('shuffle-group');\r\n                    if (currentGroup !== '') {\r\n                        weights.push([index, Math.log(weight)]);\r\n                        if (typeof prevGroup !== 'undefined' && prevGroup !== currentGroup) {\r\n                            weight += 2;\r\n                        }\r\n                        prevGroup = currentGroup;\r\n                    }\r\n                }\r\n\r\n                if (weights.length === 0) {\r\n                    return;\r\n                }\r\n\r\n                for (index = 0; index < weights.length; index++) {\r\n                    random.push([weights[index][0], Math.pow(Math.random(), 1 / weights[index][1])]);\r\n                }\r\n\r\n                random.sort(function(a, b) {\r\n                    a = a[1];\r\n                    b = b[1];\r\n                    return a < b ? 1 : (a > b ? -1 : 0);\r\n                });\r\n                index = 0;\r\n                while (limit) {\r\n                    $(elements[random[index][0]]).show();\r\n                    limit--;\r\n                    index++\r\n                }\r\n                return;\r\n            }\r\n\r\n            for (index = 0; index < limit; index++) {\r\n                $(elements[index]).show();\r\n            }\r\n        },\r\n\r\n        /* jscs:disable */\r\n        /* eslint-disable */\r\n        /**\r\n         * Shuffle an array\r\n         * @param elements\r\n         * @returns {*}\r\n         */\r\n        _shuffle: function shuffle(elements){ //v1.0\r\n            var parent, child, lastSibling;\r\n            if (elements.length) {\r\n                parent = $(elements[0]).parent();\r\n            }\r\n            while (elements.length) {\r\n                child = elements.splice(Math.floor(Math.random() *  elements.length), 1)[0];\r\n                lastSibling = parent.find('[data-shuffle-group=\"' + $(child).data('shuffle-group') + '\"]').last();\r\n                lastSibling.after(child);\r\n            }\r\n        }\r\n\r\n        /* jscs:disable */\r\n        /* eslint:disable */\r\n    });\r\n\r\n    return $.mage.upsellProducts;\r\n});\r\n","Magento_Catalog/js/validate-product.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/mage',\r\n    'Magento_Catalog/product/view/validation',\r\n    'catalogAddToCart'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.productValidate', {\r\n        options: {\r\n            bindSubmit: false,\r\n            radioCheckboxClosest: '.nested',\r\n            addToCartButtonSelector: '.action.tocart'\r\n        },\r\n\r\n        /**\r\n         * Uses Magento's validation widget for the form object.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var bindSubmit = this.options.bindSubmit;\r\n\r\n            this.element.validation({\r\n                radioCheckboxClosest: this.options.radioCheckboxClosest,\r\n\r\n                /**\r\n                 * Uses catalogAddToCart widget as submit handler.\r\n                 * @param {Object} form\r\n                 * @returns {Boolean}\r\n                 */\r\n                submitHandler: function (form) {\r\n                    var jqForm = $(form).catalogAddToCart({\r\n                        bindSubmit: bindSubmit\r\n                    });\r\n\r\n                    jqForm.catalogAddToCart('submitForm', jqForm);\r\n\r\n                    return false;\r\n                }\r\n            });\r\n            $(this.options.addToCartButtonSelector).attr('disabled', false);\r\n        }\r\n    });\r\n\r\n    return $.mage.productValidate;\r\n});\r\n","Magento_Catalog/js/product/addtocart-button.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'Magento_Catalog/js/product/uenc-processor',\r\n    'Magento_Catalog/js/product/list/column-status-validator'\r\n], function (Element, uencProcessor, columnStatusValidator) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            label: ''\r\n        },\r\n\r\n        /**\r\n         * Prepare data, that will be inserted as data-mage-init attribute into button. With help of this attribute\r\n         * Add To * buttons can understand post data and urls\r\n         *\r\n         * @param {Object} row\r\n         * @returns {String}\r\n         */\r\n        getDataMageInit: function (row) {\r\n            return '{\"redirectUrl\": { \"url\" : \"'  + uencProcessor(row['add_to_cart_button'].url) + '\"}}';\r\n        },\r\n\r\n        /**\r\n         * Prepare Data-Post data that will be used in data-mage-init\r\n         *\r\n         * @param {Object} row\r\n         * @return {String}\r\n         */\r\n        getDataPost: function (row) {\r\n            return uencProcessor(row['add_to_cart_button']['post_data']);\r\n        },\r\n\r\n        /**\r\n         * Check if product has required options.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        hasRequiredOptions: function (row) {\r\n            return row['add_to_cart_button']['required_options'];\r\n        },\r\n\r\n        /**\r\n         * Depends on this option, \"Add to cart\" button can be shown or hide\r\n         *\r\n         * @param {Object} row\r\n         * @returns {Boolean}\r\n         */\r\n        isSalable: function (row) {\r\n            return row['is_salable'];\r\n        },\r\n\r\n        /**\r\n         * Depends on this option, stock status text can be \"In stock\" or \"Out Of Stock\"\r\n         *\r\n         * @param {Object} row\r\n         * @returns {Boolean}\r\n         */\r\n        isAvailable: function (row) {\r\n            return row['is_available'];\r\n        },\r\n\r\n        /**\r\n         * Depends on this option, \"Add to cart\" button can be shown or hide. Depends on  backend configuration\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isAllowed: function () {\r\n            return columnStatusValidator.isValid(this.source(), 'add_to_cart', 'show_buttons');\r\n        },\r\n\r\n        /**\r\n         * Get button label.\r\n         *\r\n         * @return {String}\r\n         */\r\n        getLabel: function () {\r\n            return this.label;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/addtocompare-button.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'Magento_Catalog/js/product/uenc-processor',\r\n    'Magento_Catalog/js/product/list/column-status-validator'\r\n], function (Column, uencProcessor, columnStatusValidator) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            label: ''\r\n        },\r\n\r\n        /**\r\n         * Prepare Data-Post data that will be used in data-mage-init\r\n         *\r\n         * @param {Object} row\r\n         * @returns {Array}\r\n         */\r\n        getDataPost: function (row) {\r\n            return uencProcessor(row['add_to_compare_button'].url ||\r\n                    row['add_to_compare_button']['post_data']);\r\n        },\r\n\r\n        /**\r\n         * Depends on this option, \"Add to compare\" button can be shown or hide. Depends on  backend configuration\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isAllowed: function () {\r\n            return columnStatusValidator.isValid(this.source(), 'add_to_compare', 'show_buttons');\r\n        },\r\n\r\n        /**\r\n         * Get button label.\r\n         *\r\n         * @return {String}\r\n         */\r\n        getLabel: function () {\r\n            return this.label;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/breadcrumbs.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Theme/js/model/breadcrumb-list'\r\n], function ($, breadcrumbList) {\r\n    'use strict';\r\n\r\n    return function (widget) {\r\n\r\n        $.widget('mage.breadcrumbs', widget, {\r\n            options: {\r\n                categoryUrlSuffix: '',\r\n                useCategoryPathInUrl: false,\r\n                product: '',\r\n                categoryItemSelector: '.category-item',\r\n                menuContainer: '[data-action=\"navigation\"] > ul'\r\n            },\r\n\r\n            /** @inheritdoc */\r\n            _render: function () {\r\n                this._appendCatalogCrumbs();\r\n                this._super();\r\n            },\r\n\r\n            /**\r\n             * Append category and product crumbs.\r\n             *\r\n             * @private\r\n             */\r\n            _appendCatalogCrumbs: function () {\r\n                var categoryCrumbs = this._resolveCategoryCrumbs();\r\n\r\n                categoryCrumbs.forEach(function (crumbInfo) {\r\n                    breadcrumbList.push(crumbInfo);\r\n                });\r\n\r\n                if (this.options.product) {\r\n                    breadcrumbList.push(this._getProductCrumb());\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Resolve categories crumbs.\r\n             *\r\n             * @return Array\r\n             * @private\r\n             */\r\n            _resolveCategoryCrumbs: function () {\r\n                var menuItem = this._resolveCategoryMenuItem(),\r\n                    categoryCrumbs = [];\r\n\r\n                if (menuItem !== null && menuItem.length) {\r\n                    categoryCrumbs.unshift(this._getCategoryCrumb(menuItem));\r\n\r\n                    while ((menuItem = this._getParentMenuItem(menuItem)) !== null) {\r\n                        categoryCrumbs.unshift(this._getCategoryCrumb(menuItem));\r\n                    }\r\n                }\r\n\r\n                return categoryCrumbs;\r\n            },\r\n\r\n            /**\r\n             * Returns crumb data.\r\n             *\r\n             * @param {Object} menuItem\r\n             * @return {Object}\r\n             * @private\r\n             */\r\n            _getCategoryCrumb: function (menuItem) {\r\n                return {\r\n                    'name': 'category',\r\n                    'label': menuItem.text(),\r\n                    'link': menuItem.attr('href'),\r\n                    'title': ''\r\n                };\r\n            },\r\n\r\n            /**\r\n             * Returns product crumb.\r\n             *\r\n             * @return {Object}\r\n             * @private\r\n             */\r\n            _getProductCrumb: function () {\r\n                return {\r\n                    'name': 'product',\r\n                    'label': this.options.product,\r\n                    'link': '',\r\n                    'title': ''\r\n                };\r\n            },\r\n\r\n            /**\r\n             * Find parent menu item for current.\r\n             *\r\n             * @param {Object} menuItem\r\n             * @return {Object|null}\r\n             * @private\r\n             */\r\n            _getParentMenuItem: function (menuItem) {\r\n                var classes,\r\n                    classNav,\r\n                    parentClass,\r\n                    parentMenuItem = null;\r\n\r\n                if (!menuItem) {\r\n                    return null;\r\n                }\r\n\r\n                classes = menuItem.parent().attr('class');\r\n                classNav = classes.match(/(nav\\-)[0-9]+(\\-[0-9]+)+/gi);\r\n\r\n                if (classNav) {\r\n                    classNav = classNav[0];\r\n                    parentClass = classNav.substr(0, classNav.lastIndexOf('-'));\r\n\r\n                    if (parentClass.lastIndexOf('-') !== -1) {\r\n                        parentMenuItem = $(this.options.menuContainer).find('.' + parentClass + ' > a');\r\n                        parentMenuItem = parentMenuItem.length ? parentMenuItem : null;\r\n                    }\r\n                }\r\n\r\n                return parentMenuItem;\r\n            },\r\n\r\n            /**\r\n             * Returns category menu item.\r\n             *\r\n             * Tries to resolve category from url or from referrer as fallback and\r\n             * find menu item from navigation menu by category url.\r\n             *\r\n             * @return {Object|null}\r\n             * @private\r\n             */\r\n            _resolveCategoryMenuItem: function () {\r\n                var categoryUrl = this._resolveCategoryUrl(),\r\n                    menu = $(this.options.menuContainer),\r\n                    categoryMenuItem = null;\r\n\r\n                if (categoryUrl && menu.length) {\r\n                    categoryMenuItem = menu.find(\r\n                        this.options.categoryItemSelector +\r\n                        ' > a[href=\"' + categoryUrl + '\"]'\r\n                    );\r\n                }\r\n\r\n                return categoryMenuItem;\r\n            },\r\n\r\n            /**\r\n             * Returns category url.\r\n             *\r\n             * @return {String}\r\n             * @private\r\n             */\r\n            _resolveCategoryUrl: function () {\r\n                var categoryUrl;\r\n\r\n                if (this.options.useCategoryPathInUrl) {\r\n                    // In case category path is used in product url - resolve category url from current url.\r\n                    categoryUrl = window.location.href.split('?')[0];\r\n                    categoryUrl = categoryUrl.substring(0, categoryUrl.lastIndexOf('/')) +\r\n                        this.options.categoryUrlSuffix;\r\n                } else {\r\n                    // In other case - try to resolve it from referrer (without parameters).\r\n                    categoryUrl = document.referrer;\r\n\r\n                    if (categoryUrl.indexOf('?') > 0) {\r\n                        categoryUrl = categoryUrl.substr(0, categoryUrl.indexOf('?'));\r\n                    }\r\n                }\r\n\r\n                return categoryUrl;\r\n            }\r\n        });\r\n\r\n        return $.mage.breadcrumbs;\r\n    };\r\n});\r\n","Magento_Catalog/js/product/learn-more.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'Magento_Catalog/js/product/list/column-status-validator'\r\n], function (Column, columnStatusValidator) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        /**\r\n         * Depends on this option, \"Learn More\" link can be shown or hide. Depends on  backend configuration\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isAllowed: function () {\r\n            return columnStatusValidator.isValid(this.source(), 'learn_more', 'show_attributes');\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/name.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'Magento_Catalog/js/product/list/column-status-validator',\r\n    'escaper'\r\n], function (Column, columnStatusValidator, escaper) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            allowedTags: ['div', 'span', 'b', 'strong', 'i', 'em', 'u', 'a']\r\n        },\r\n\r\n        /**\r\n         * Depends on this option, product name can be shown or hide. Depends on  backend configuration\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isAllowed: function () {\r\n            return columnStatusValidator.isValid(this.source(), 'name', 'show_attributes');\r\n        },\r\n\r\n        /**\r\n         * Name column.\r\n         *\r\n         * @param {String} label\r\n         * @returns {String}\r\n         */\r\n        getNameUnsanitizedHtml: function (label) {\r\n            return escaper.escapeHtml(label, this.allowedTags);\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/provider-compared.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    './provider',\r\n    'Magento_Catalog/js/product/storage/storage-service',\r\n    'Magento_Customer/js/customer-data'\r\n], function (_, Provider, storage, customerData) {\r\n    'use strict';\r\n\r\n    return Provider.extend({\r\n\r\n        /**\r\n         * Ids update handler\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        idsHandler: function (data) {\r\n            this.productStorage.setIds(this.data.currency, this.data.store, this.dataFilter(data));\r\n        },\r\n\r\n        /**\r\n         * Filters data by provider\r\n         *\r\n         * @param {Object} data\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        dataFilter: function (data) {\r\n            var providerData = this.idsStorage.prepareData(customerData.get(this.identifiersConfig.provider)().items),\r\n                result = {},\r\n                productCurrentScope,\r\n                scopeId;\r\n\r\n            if (typeof this.data.productCurrentScope !== 'undefined' && window.checkout && window.checkout.baseUrl) {\r\n                productCurrentScope = this.data.productCurrentScope;\r\n                scopeId = productCurrentScope === 'store' ? window.checkout.storeId :\r\n                    productCurrentScope === 'group' ? window.checkout.storeGroupId :\r\n                        window.checkout.websiteId;\r\n                _.each(data, function (value, key) {\r\n                    if (!providerData[productCurrentScope + '-' + scopeId + '-' + key]) {\r\n                        result[key] = value;\r\n                    }\r\n                });\r\n            } else {\r\n                _.each(data, function (value, key) {\r\n                    if (!providerData[key]) {\r\n                        result[key] = value;\r\n                    }\r\n                });\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Filters data from product storage by ids\r\n         *\r\n         * @param {Object} data\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        filterData: function (data) {\r\n            var result = {},\r\n                i = 0,\r\n                ids = _.keys(this.dataFilter(this.ids())),\r\n                length = ids.length;\r\n\r\n            for (i; i < length; i++) {\r\n                if (ids[i] && data[ids[i]]) {\r\n                    result[ids[i]] = data[ids[i]];\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/provider.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    'mageUtils',\r\n    'uiElement',\r\n    'Magento_Catalog/js/product/storage/storage-service',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Catalog/js/product/view/product-ids-resolver'\r\n], function (_, $, utils, Element, storage, customerData, productResolver) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            identifiersConfig: {\r\n                namespace: ''\r\n            },\r\n            productStorageConfig: {\r\n                namespace: 'product_data_storage',\r\n                customerDataProvider: 'product_data_storage',\r\n                updateRequestConfig: {\r\n                    url: '',\r\n                    method: 'GET',\r\n                    dataType: 'json'\r\n                },\r\n                className: 'DataStorage'\r\n            },\r\n            ids: {},\r\n            listens: {\r\n                ids: 'idsHandler'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes provider component.\r\n         *\r\n         * @returns {Provider} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initIdsStorage();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls 'initObservable' of parent\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super();\r\n            this.observe('ids');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes ids storage.\r\n         *\r\n         * @returns {Provider} Chainable.\r\n         */\r\n        initIdsStorage: function () {\r\n            storage.onStorageInit(this.identifiersConfig.namespace, this.idsStorageHandler.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes ids storage handler.\r\n         *\r\n         * @param {Object} idsStorage\r\n         */\r\n        idsStorageHandler: function (idsStorage) {\r\n            this.idsStorage = idsStorage;\r\n            this.productStorage = storage.createStorage(this.productStorageConfig);\r\n            this.productStorage.data.subscribe(this.dataCollectionHandler.bind(this));\r\n\r\n            if (~~this.idsStorage.allowToSendRequest) {\r\n                customerData.reload([idsStorage.namespace]).done(this._resolveDataByIds.bind(this));\r\n            } else {\r\n                this._resolveDataByIds();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Callback, which load by ids from ids-storage product data\r\n         *\r\n         * @private\r\n         */\r\n        _resolveDataByIds: function () {\r\n            if (!window.checkout || !window.checkout.baseUrl) {\r\n                // We need data that the minicart provdes to determine storeId/websiteId\r\n                return;\r\n            }\r\n\r\n            this.initIdsListener();\r\n            this.idsMerger(\r\n                this.idsStorage.get(),\r\n                this.prepareDataFromCustomerData(customerData.get(this.identifiersConfig.namespace)())\r\n            );\r\n\r\n            if (!_.isEmpty(this.productStorage.data())) {\r\n                this.dataCollectionHandler(this.productStorage.data());\r\n            } else {\r\n                this.productStorage.setIds(this.data.currency, this.data.store, this.ids());\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Init ids storage listener.\r\n         */\r\n        initIdsListener: function () {\r\n            customerData.get(this.identifiersConfig.namespace).subscribe(function (data) {\r\n                this.idsMerger(this.prepareDataFromCustomerData(data));\r\n            }.bind(this));\r\n            this.idsStorage.data.subscribe(this.idsMerger.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Prepare data from customerData.\r\n         *\r\n         * @param {Object} data\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        prepareDataFromCustomerData: function (data) {\r\n            data = data.items ? data.items : data;\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Filter ids by their lifetime in order to show only hot ids :)\r\n         *\r\n         * @param {Object} ids\r\n         * @returns {Array}\r\n         */\r\n        filterIds: function (ids) {\r\n            var _ids = {},\r\n                currentTime = new Date().getTime() / 1000,\r\n                currentProductIds = productResolver($('#product_addtocart_form')),\r\n                productCurrentScope = this.data.productCurrentScope,\r\n                scopeId = productCurrentScope === 'store' ? window.checkout.storeId :\r\n                productCurrentScope === 'group' ? window.checkout.storeGroupId :\r\n                    window.checkout.websiteId;\r\n\r\n            _.each(ids, function (id, key) {\r\n                if (\r\n                    currentTime - ids[key]['added_at'] < ~~this.idsStorage.lifetime &&\r\n                    !_.contains(currentProductIds, ids[key]['product_id']) &&\r\n                    (!id.hasOwnProperty('scope_id') || ids[key]['scope_id'] === scopeId)\r\n                ) {\r\n                    _ids[id['product_id']] = id;\r\n\r\n                }\r\n            }, this);\r\n\r\n            return _ids;\r\n        },\r\n\r\n        /**\r\n         * Merges id from storage and customer data\r\n         *\r\n         * @param {Object} data\r\n         * @param {Object} optionalData\r\n         */\r\n        idsMerger: function (data, optionalData) {\r\n            if (data && optionalData) {\r\n                data = _.extend(data, optionalData);\r\n            }\r\n\r\n            if (!_.isEmpty(data)) {\r\n                this.ids(\r\n                    this.filterIds(_.extend(this.ids(), data))\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Ids update handler\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        idsHandler: function (data) {\r\n            this.productStorage.setIds(this.data.currency, this.data.store, data);\r\n        },\r\n\r\n        /**\r\n         * Process data\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        processData: function (data) {\r\n            var curData = utils.copy(this.data),\r\n                ids = this.ids();\r\n\r\n            delete data['data_id'];\r\n            data = _.values(data);\r\n\r\n            _.each(data, function (record, index) {\r\n                record._rowIndex = index;\r\n                record['added_at'] = ids[record.id]['added_at'];\r\n            }, this);\r\n\r\n            curData.items = data;\r\n            this.set('data', curData);\r\n        },\r\n\r\n        /**\r\n         * Product storage data handler\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        dataCollectionHandler: function (data) {\r\n            data = this.filterData(data);\r\n            this.processData(data);\r\n        },\r\n\r\n        /**\r\n         * Filters data from product storage by ids\r\n         *\r\n         * @param {Object} data\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        filterData: function (data) {\r\n            var result = {},\r\n                i = 0,\r\n                ids = _.keys(this.ids()),\r\n                length = ids.length;\r\n\r\n            for (i; i < length; i++) {\r\n                if (ids[i] && data[ids[i]]) {\r\n                    result[ids[i]] = data[ids[i]];\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/query-builder.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n        'underscore'\r\n    ], function (_) {\r\n        'use strict';\r\n\r\n        return {\r\n\r\n            /**\r\n             * Build query to get id\r\n             *\r\n             * @param {Object} data\r\n             */\r\n            buildQuery: function (data) {\r\n                var filters = [];\r\n\r\n                _.each(data, function (value, key) {\r\n                    filters.push({\r\n                        field: key,\r\n                        value: value,\r\n                        'condition_type': 'in'\r\n                    });\r\n                });\r\n\r\n                return {\r\n                    searchCriteria: {\r\n                        filterGroups: [\r\n                            {\r\n                                filters: filters\r\n                            }\r\n                        ]\r\n                    }\r\n                };\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Catalog/js/product/remaining-characters.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/translate',\r\n    'jquery-ui-modules/widget'\r\n], function ($, $t) {\r\n    'use strict';\r\n\r\n    $.widget('mage.remainingCharacters', {\r\n        options: {\r\n            remainingText: $t('remaining'),\r\n            tooManyText: $t('too many'),\r\n            errorClass: 'mage-error',\r\n            noDisplayClass: 'no-display'\r\n        },\r\n\r\n        /**\r\n         * Initializes custom option component\r\n         *\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.note = $(this.options.noteSelector);\r\n            this.counter = $(this.options.counterSelector);\r\n\r\n            this.updateCharacterCount();\r\n            this.element.on('change keyup paste', this.updateCharacterCount.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Updates counter message\r\n         */\r\n        updateCharacterCount: function () {\r\n            var length = this.element.val().length,\r\n                diff = this.options.maxLength - length;\r\n\r\n            this.counter.text(this._formatMessage(diff));\r\n            this.counter.toggleClass(this.options.noDisplayClass, length === 0);\r\n            this.note.toggleClass(this.options.errorClass, diff < 0);\r\n        },\r\n\r\n        /**\r\n         * Format remaining characters message\r\n         *\r\n         * @param {int} diff\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        _formatMessage: function (diff) {\r\n            var count = Math.abs(diff),\r\n                qualifier = diff < 0 ? this.options.tooManyText : this.options.remainingText;\r\n\r\n            return '(' + count + ' ' + qualifier + ')';\r\n        }\r\n    });\r\n\r\n    return $.mage.remainingCharacters;\r\n});\r\n","Magento_Catalog/js/product/uenc-processor.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([], function () {\r\n        'use strict';\r\n\r\n        /**\r\n         * Check data to JSON.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        function _isJSON(data) {\r\n            try {\r\n                JSON.parse(data);\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        /**\r\n         * Processes data.\r\n         *\r\n         * @param {Object} data\r\n         * @param {String} placeholder\r\n         * @param {String} uenc\r\n         *\r\n         * @returns {String}\r\n         */\r\n        function _stringProcessor(data, placeholder, uenc) {\r\n            if (data && ~data.indexOf(placeholder)) {\r\n                return data.replace(placeholder, uenc);\r\n            }\r\n\r\n            return data;\r\n        }\r\n\r\n        /**\r\n         * Processes data.\r\n         *\r\n         * @param {Object} data\r\n         * @param {String} placeholder\r\n         * @param {String} uenc\r\n         *\r\n         * @returns {String}\r\n         */\r\n        function _objectProcessor(data, placeholder, uenc) {\r\n            data = JSON.parse(data);\r\n\r\n            if (data.hasOwnProperty('action')) {\r\n                data.action = _stringProcessor(data.action, placeholder, uenc);\r\n            }\r\n\r\n            if (data.hasOwnProperty('data') && data.data.hasOwnProperty('uenc')) {\r\n                data.data.uenc = uenc;\r\n            }\r\n\r\n            return JSON.stringify(data);\r\n        }\r\n\r\n        /**\r\n         * Processes data.\r\n         *\r\n         * @param {Object} data\r\n         * @param {String} placeholder\r\n         *\r\n         * @returns {String}\r\n         */\r\n        return function (data, placeholder) {\r\n            var uenc = btoa(window.location.href).replace('+/=', '-_,');\r\n\r\n            placeholder = placeholder || encodeURI('%uenc%');\r\n\r\n            return _isJSON(data) ?\r\n                _objectProcessor(data, placeholder, uenc) :\r\n                _stringProcessor(data, placeholder, uenc);\r\n\r\n        };\r\n    }\r\n);\r\n","Magento_Catalog/js/product/list/column-status-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    return _.extend({\r\n        /**\r\n         * Check whether we can show column depends on server settings or not\r\n         *\r\n         * @param {Object} source\r\n         * @param {String} attributeCode\r\n         * @param {String} type\r\n         * @returns {Boolean}\r\n         */\r\n        isValid: function (source, attributeCode, type) {\r\n            var attributes;\r\n\r\n            if (!source[type]) {\r\n                return false;\r\n            }\r\n\r\n            attributes = source[type].split(',');\r\n\r\n            return _.contains(attributes, attributeCode);\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/list/listing.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'Magento_Ui/js/grid/listing'\r\n], function (ko, _, Listing) {\r\n    'use strict';\r\n\r\n    return Listing.extend({\r\n        defaults: {\r\n            additionalClasses: '',\r\n            filteredRows: {},\r\n            limit: 5,\r\n            listens: {\r\n                elems: 'filterRowsFromCache',\r\n                '${ $.provider }:data.items': 'filterRowsFromServer'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n            this.filteredRows = ko.observable();\r\n            this.initProductsLimit();\r\n            this.hideLoader();\r\n        },\r\n\r\n        /**\r\n         * Initialize product limit\r\n         * Product limit can be configured through Ui component.\r\n         * Product limit are present in widget form\r\n         *\r\n         * @returns {exports}\r\n         */\r\n        initProductsLimit: function () {\r\n            if (this.source['page_size']) {\r\n                this.limit = this.source['page_size'];\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .track({\r\n                    rows: []\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sort and filter rows, that are already in magento storage cache\r\n         *\r\n         * @return void\r\n         */\r\n        filterRowsFromCache: function () {\r\n            this._filterRows(this.rows);\r\n        },\r\n\r\n        /**\r\n         * Sort and filter rows, that are come from backend\r\n         *\r\n         * @param {Object} rows\r\n         */\r\n        filterRowsFromServer: function (rows) {\r\n            this._filterRows(rows);\r\n        },\r\n\r\n        /**\r\n         * Filter rows by limit and sort them\r\n         *\r\n         * @param {Array} rows\r\n         * @private\r\n         */\r\n        _filterRows: function (rows) {\r\n            this.filteredRows(_.sortBy(rows, 'added_at').reverse().slice(0, this.limit));\r\n        },\r\n\r\n        /**\r\n         * Can retrieve product url\r\n         *\r\n         * @param {Object} row\r\n         * @returns {String}\r\n         */\r\n        getUrl: function (row) {\r\n            return row.url;\r\n        },\r\n\r\n        /**\r\n         * Get product attribute by code.\r\n         *\r\n         * @param {String} code\r\n         * @return {Object}\r\n         */\r\n        getComponentByCode: function (code) {\r\n            var elems = this.elems() ? this.elems() : ko.getObservable(this, 'elems'),\r\n                component;\r\n\r\n            component = _.filter(elems, function (elem) {\r\n                return elem.index === code;\r\n            }, this).pop();\r\n\r\n            return component;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/list/toolbar.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * ProductListToolbarForm Widget - this widget is setting cookie and submitting form according to toolbar controls\r\n     */\r\n    $.widget('mage.productListToolbarForm', {\r\n\r\n        options: {\r\n            modeControl: '[data-role=\"mode-switcher\"]',\r\n            directionControl: '[data-role=\"direction-switcher\"]',\r\n            orderControl: '[data-role=\"sorter\"]',\r\n            limitControl: '[data-role=\"limiter\"]',\r\n            mode: 'product_list_mode',\r\n            direction: 'product_list_dir',\r\n            order: 'product_list_order',\r\n            limit: 'product_list_limit',\r\n            page: 'p',\r\n            modeDefault: 'grid',\r\n            directionDefault: 'asc',\r\n            orderDefault: 'position',\r\n            limitDefault: '9',\r\n            url: '',\r\n            formKey: '',\r\n            post: false\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this._bind(\r\n                $(this.options.modeControl, this.element),\r\n                this.options.mode,\r\n                this.options.modeDefault\r\n            );\r\n            this._bind(\r\n                $(this.options.directionControl, this.element),\r\n                this.options.direction,\r\n                this.options.directionDefault\r\n            );\r\n            this._bind(\r\n                $(this.options.orderControl, this.element),\r\n                this.options.order,\r\n                this.options.orderDefault\r\n            );\r\n            this._bind(\r\n                $(this.options.limitControl, this.element),\r\n                this.options.limit,\r\n                this.options.limitDefault\r\n            );\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _bind: function (element, paramName, defaultValue) {\r\n            if (element.is('select')) {\r\n                element.on('change', {\r\n                    paramName: paramName,\r\n                    'default': defaultValue\r\n                }, $.proxy(this._processSelect, this));\r\n            } else {\r\n                element.on('click', {\r\n                    paramName: paramName,\r\n                    'default': defaultValue\r\n                }, $.proxy(this._processLink, this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _processLink: function (event) {\r\n            event.preventDefault();\r\n            this.changeUrl(\r\n                event.data.paramName,\r\n                $(event.currentTarget).data('value'),\r\n                event.data.default\r\n            );\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _processSelect: function (event) {\r\n            this.changeUrl(\r\n                event.data.paramName,\r\n                event.currentTarget.options[event.currentTarget.selectedIndex].value,\r\n                event.data.default\r\n            );\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        getUrlParams: function () {\r\n            var decode = window.decodeURIComponent,\r\n                urlPaths = this.options.url.split('?'),\r\n                urlParams = urlPaths[1] ? urlPaths[1].split('&') : [],\r\n                params = {},\r\n                parameters, i;\r\n\r\n            for (i = 0; i < urlParams.length; i++) {\r\n                parameters = urlParams[i].split('=');\r\n                params[decode(parameters[0])] = parameters[1] !== undefined ?\r\n                    decode(parameters[1].replace(/\\+/g, '%20')) :\r\n                    '';\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        getCurrentLimit: function () {\r\n            return this.getUrlParams()[this.options.limit] || this.options.limitDefault;\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        getCurrentPage: function () {\r\n            return this.getUrlParams()[this.options.page] || 1;\r\n        },\r\n\r\n        /**\r\n         * @param {String} paramName\r\n         * @param {*} paramValue\r\n         * @param {*} defaultValue\r\n         */\r\n        changeUrl: function (paramName, paramValue, defaultValue) {\r\n            var urlPaths = this.options.url.split('?'),\r\n                baseUrl = urlPaths[0],\r\n                paramData = this.getUrlParams(),\r\n                currentPage = this.getCurrentPage(),\r\n                form, params, key, input, formKey, newPage;\r\n\r\n            if (currentPage > 1 && paramName === this.options.limit) {\r\n                newPage = Math.floor(this.getCurrentLimit() * (currentPage - 1) / paramValue) + 1;\r\n\r\n                if (newPage > 1) {\r\n                    paramData[this.options.page] = newPage;\r\n                } else {\r\n                    delete paramData[this.options.page];\r\n                }\r\n            }\r\n\r\n            paramData[paramName] = paramValue;\r\n\r\n            if (this.options.post) {\r\n                form = document.createElement('form');\r\n                params = [this.options.mode, this.options.direction, this.options.order, this.options.limit];\r\n\r\n                for (key in paramData) {\r\n                    if (params.indexOf(key) !== -1) { //eslint-disable-line max-depth\r\n                        input = document.createElement('input');\r\n                        input.name = key;\r\n                        input.value = paramData[key];\r\n                        form.appendChild(input);\r\n                        delete paramData[key];\r\n                    }\r\n                }\r\n                formKey = document.createElement('input');\r\n                formKey.name = 'form_key';\r\n                formKey.value = this.options.formKey;\r\n                form.appendChild(formKey);\r\n\r\n                paramData = $.param(paramData);\r\n                baseUrl += paramData.length ? '?' + paramData : '';\r\n\r\n                form.action = baseUrl;\r\n                form.method = 'POST';\r\n                document.body.appendChild(form);\r\n                form.submit();\r\n            } else {\r\n                if (paramValue == defaultValue) { //eslint-disable-line eqeqeq\r\n                    delete paramData[paramName];\r\n                }\r\n\r\n                paramData = $.param(paramData);\r\n                location.href = baseUrl + (paramData.length ? '?' + paramData : '');\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.productListToolbarForm;\r\n});\r\n","Magento_Catalog/js/product/list/columns/final-price.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    'mageUtils',\r\n    'uiCollection'\r\n], function (_, registry, utils, Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            label: false,\r\n            headerTmpl: 'ui/grid/columns/text',\r\n            showMinimalPrice: false,\r\n            showMaximumPrice: false,\r\n            useLinkForAsLowAs: false,\r\n            bodyTmpl: 'Magento_Catalog/product/final_price',\r\n            priceWrapperCssClasses: '',\r\n            priceWrapperAttr: {}\r\n        },\r\n\r\n        /**\r\n         * Get product final price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} final price html\r\n         */\r\n        getPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['final_price'];\r\n        },\r\n\r\n        /**\r\n         * UnsanitizedHtml version of getPrice.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} final price html\r\n         */\r\n        getPriceUnsanitizedHtml: function (row) {\r\n            return this.getPrice(row);\r\n        },\r\n\r\n        /**\r\n         * Get product regular price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} regular price html\r\n         */\r\n        getRegularPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['regular_price'];\r\n        },\r\n\r\n        /**\r\n         * UnsanitizedHtml version of getRegularPrice.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} regular price html\r\n         */\r\n        getRegularPriceUnsanitizedHtml: function (row) {\r\n            return this.getRegularPrice(row);\r\n        },\r\n\r\n        /**\r\n         * Check if product has a price range.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        hasPriceRange: function (row) {\r\n            return row['price_info']['max_regular_price'] !== row['price_info']['min_regular_price'];\r\n        },\r\n\r\n        /**\r\n         * Check if product has special price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} special price html\r\n         */\r\n        hasSpecialPrice: function (row) {\r\n            return row['price_info']['regular_price'] > row['price_info']['final_price'];\r\n        },\r\n\r\n        /**\r\n         * Check if product has minimal price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} minimal price html\r\n         */\r\n        isMinimalPrice: function (row) {\r\n            return row['price_info']['minimal_price'] < row['price_info']['final_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product minimal price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} minimal price html\r\n         */\r\n        getMinimalPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['minimal_price'];\r\n        },\r\n\r\n        /**\r\n         * UnsanitizedHtml version of getMinimalPrice.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} minimal price html\r\n         */\r\n        getMinimalPriceUnsanitizedHtml: function (row) {\r\n            return this.getMinimalPrice(row);\r\n        },\r\n\r\n        /**\r\n         * Check if product is salable.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        isSalable: function (row) {\r\n            return row['is_salable'];\r\n        },\r\n\r\n        /**\r\n         * Get product maximum price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} maximum price html\r\n         */\r\n        getMaxPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['max_price'];\r\n        },\r\n\r\n        /**\r\n         * UnsanitizedHtml version of getMaxPrice.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} maximum price html\r\n         */\r\n        getMaxPriceUnsanitizedHtml: function (row) {\r\n            return this.getMaxPrice(row);\r\n        },\r\n\r\n        /**\r\n         * Get product maximum regular price in case of price range and special price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} maximum regular price html\r\n         */\r\n        getMaxRegularPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['max_regular_price'];\r\n        },\r\n\r\n        /**\r\n         * UnsanitizedHtml version of getMaxRegularPrice.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} maximum regular price html\r\n         */\r\n        getMaxRegularPriceUnsanitizedHtml: function (row) {\r\n            return this.getMaxRegularPrice(row);\r\n        },\r\n\r\n        /**\r\n         * Get product minimal regular price in case of price range and special price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} minimal regular price html\r\n         */\r\n        getMinRegularPrice: function (row) {\r\n            return row['price_info']['formatted_prices']['min_regular_price'];\r\n        },\r\n\r\n        /**\r\n         * UnsanitizedHtml version of getMinRegularPrice.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} minimal regular price html\r\n         */\r\n        getMinRegularPriceUnsanitizedHtml: function (row) {\r\n            return this.getMinRegularPrice(row);\r\n        },\r\n\r\n        /**\r\n         * Get adjustments names and return as string.\r\n         *\r\n         * @return {String} adjustments classes\r\n         */\r\n        getAdjustmentCssClasses: function () {\r\n            return _.pluck(this.getAdjustments(), 'index').join(' ');\r\n        },\r\n\r\n        /**\r\n         * Get product minimal price as number.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number} minimal price amount\r\n         */\r\n        getMinimalPriceAmount: function (row) {\r\n            return row['price_info']['minimal_price'];\r\n        },\r\n\r\n        /**\r\n         * UnsanitizedHtml version of getMinimalPriceAmount\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number} minimal price amount\r\n         */\r\n        getMinimalPriceAmountUnsanitizedHtml: function (row) {\r\n            return this.getMinimalPriceAmount(row);\r\n        },\r\n\r\n        /**\r\n         * Get product minimal regular price as number in case of special price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number} minimal regular price amount\r\n         */\r\n        getMinimalRegularPriceAmount: function (row) {\r\n            return row['price_info']['min_regular_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product maximum price as number.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number} maximum price amount\r\n         */\r\n        getMaximumPriceAmount: function (row) {\r\n            return row['price_info']['max_price'];\r\n        },\r\n\r\n        /**\r\n         * Get product maximum regular price as number in case of special price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number} maximum regular price amount\r\n         */\r\n        getMaximumRegularPriceAmount: function (row) {\r\n            return row['price_info']['max_regular_price'];\r\n        },\r\n\r\n        /**\r\n         * Check if minimal regular price exist for product.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        showMinRegularPrice: function (row) {\r\n            return this.getMinimalPriceAmount(row) < this.getMinimalRegularPriceAmount(row);\r\n        },\r\n\r\n        /**\r\n         * Check if maximum regular price exist for product.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        showMaxRegularPrice: function (row) {\r\n            return this.getMaximumPriceAmount(row) < this.getMaximumRegularPriceAmount(row);\r\n        },\r\n\r\n        /**\r\n         * Get path to the columns' body template.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getBody: function () {\r\n            return this.bodyTmpl;\r\n        },\r\n\r\n        /**\r\n         * Get all price adjustments.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getAdjustments: function () {\r\n            var adjustments = this.elems();\r\n\r\n            _.each(adjustments, function (adjustment) {\r\n                adjustment.setPriceType(this.priceType);\r\n                adjustment.source = this.source;\r\n            }, this);\r\n\r\n            return adjustments;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/list/columns/image.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'Magento_Catalog/js/product/list/column-status-validator'\r\n], function (_, Element, columnStatusValidator) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_Catalog/product/list/columns/image',\r\n            imageCode: 'default',\r\n            image: {}\r\n        },\r\n\r\n        /**\r\n         * Find image by code in scope of images\r\n         *\r\n         * @param {Object} images\r\n         * @returns {*|T}\r\n         */\r\n        getImage: function (images) {\r\n            return _.filter(images, function (image) {\r\n                return this.imageCode === image.code;\r\n            }, this).pop();\r\n        },\r\n\r\n        /**\r\n         * Get image path.\r\n         *\r\n         * @param {Object} row\r\n         * @return {String}\r\n         */\r\n        getImageUrl: function (row) {\r\n            return this.getImage(row.images).url;\r\n        },\r\n\r\n        /**\r\n         * Get image box width.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number}\r\n         */\r\n        getWidth: function (row) {\r\n            return this.getImage(row.images).width;\r\n        },\r\n\r\n        /**\r\n         * Get image box height.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number}\r\n         */\r\n        getHeight: function (row) {\r\n            return this.getImage(row.images).height;\r\n        },\r\n\r\n        /**\r\n         * Get resized image width.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number}\r\n         */\r\n        getResizedImageWidth: function (row) {\r\n            return this.getImage(row.images)['resized_width'];\r\n        },\r\n\r\n        /**\r\n         * Get resized image height.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Number}\r\n         */\r\n        getResizedImageHeight: function (row) {\r\n            return this.getImage(row.images)['resized_height'];\r\n        },\r\n\r\n        /**\r\n         * Get image alt text.\r\n         *\r\n         * @param {Object} row\r\n         * @return {String}\r\n         */\r\n        getLabel: function (row) {\r\n            if (!this.imageExists(row)) {\r\n                return this._super();\r\n            }\r\n\r\n            return this.getImage(row.images).label;\r\n        },\r\n\r\n        /**\r\n         * Check if image exist.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        imageExists: function (row) {\r\n            return this.getImage(row.images) !== 'undefined';\r\n        },\r\n\r\n        /**\r\n         * Check if component must be shown.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        isAllowed: function () {\r\n            return columnStatusValidator.isValid(this.source(), 'image', 'show_attributes');\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/list/columns/price-box.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'uiRegistry',\r\n    'mageUtils',\r\n    'uiCollection',\r\n    'Magento_Catalog/js/product/list/column-status-validator',\r\n    'uiLayout'\r\n], function (ko, _, registry, utils, Collection, columnStatusValidator, layout) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            label: '',\r\n            hasSpecialPrice: false,\r\n            showMinimalPrice: false,\r\n            useLinkForAsLowAs: false,\r\n            visible: true,\r\n            headerTmpl: 'ui/grid/columns/text',\r\n            bodyTmpl: 'Magento_Catalog/product/price/price_box',\r\n            disableAction: false,\r\n            controlVisibility: true,\r\n            sortable: false,\r\n            sorting: false,\r\n            draggable: true,\r\n            fieldClass: {},\r\n            renders: {\r\n                default: {}\r\n            },\r\n            ignoreTmpls: {\r\n                fieldAction: true\r\n            },\r\n            statefull: {\r\n                visible: true,\r\n                sorting: true\r\n            },\r\n            imports: {\r\n                exportSorting: 'sorting'\r\n            },\r\n            listens: {\r\n                elems: ''\r\n            },\r\n            modules: {\r\n                source: '${ $.provider }'\r\n            },\r\n            pricesInit: {}\r\n        },\r\n\r\n        /**\r\n         * Sort prices api\r\n         *\r\n         * @returns {exports}\r\n         */\r\n        sort: function () {\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Check whether is allowed to render price or not\r\n         *\r\n         * @returns {*}\r\n         */\r\n        isAllowed: function () {\r\n            return columnStatusValidator.isValid(this.source(), 'price', 'show_attributes');\r\n        },\r\n\r\n        /**\r\n         * Retrieve array of prices, that should be rendered for specific product\r\n         *\r\n         * @param {Array} row\r\n         * @return {Array}\r\n         */\r\n        getPrices: function (row) {\r\n            var elems = this.elems() ? this.elems() : ko.getObservable(this, 'elems'),\r\n                result;\r\n\r\n            //we cant take type of product from row\r\n            this.initPrices(row);\r\n            result = _.filter(elems, function (elem) {\r\n                return elem.productType === row.type;\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Recursive Merging of objects\r\n         *\r\n         * @param {Array} target\r\n         * @param {Array} source\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        _deepObjectExtend: function (target, source) {\r\n            var _target = utils.copy(target);\r\n\r\n            _.each(source, function (value, key) {\r\n                if (_.keys(value).length && typeof _target[key] !== 'undefined') {\r\n                    _target[key] = this._deepObjectExtend(_target[key], value);\r\n                } else {\r\n                    _target[key] = value;\r\n                }\r\n            }, this);\r\n\r\n            return _target;\r\n        },\r\n\r\n        /**\r\n         * Init price type box, in cases when product type has custom component or bodyTmpl\r\n         *\r\n         * @param {String} productType\r\n         * @private\r\n         */\r\n        _initPriceWithCustomMetaData: function (productType) {\r\n            var price = this._deepObjectExtend(\r\n                this.renders.prices['default'],\r\n                this.renders.prices[productType]\r\n            );\r\n\r\n            price.name = productType + '.default';\r\n            price.parent = this.name;\r\n            price.source = this.source;\r\n            price.productType = productType;\r\n            layout([price]);\r\n        },\r\n\r\n        /**\r\n         * Init Prices by product type and add them to layout\r\n         *\r\n         * @param {Array} _priceData\r\n         * @param {String} productType\r\n         * @private\r\n         */\r\n        _initPricesForProductType: function (_priceData, productType) {\r\n            var prices = [];\r\n\r\n            this._setPriceNamesToPrices(_priceData, productType);\r\n            _.sortBy(_priceData, this._comparePrices);\r\n\r\n            _.each(_priceData, function (priceData) {\r\n                if (!priceData.component) {\r\n                    return;\r\n                }\r\n\r\n                priceData.parent = this.name;\r\n                priceData.provider = this.provider;\r\n                priceData.productType = productType;\r\n                priceData = utils.template(priceData, this);\r\n                prices.push(priceData);\r\n            }, this);\r\n\r\n            layout(prices);\r\n        },\r\n\r\n        /**\r\n         * Init dynamic price components\r\n         *\r\n         * @param {Array} row\r\n         * @returns {void}\r\n         */\r\n        initPrices: function (row) {\r\n            var _priceData = [],\r\n                productType = row.type,\r\n                defaultPrice = this.renders.prices['default'];\r\n\r\n            if (this.pricesInit[productType]) {\r\n                return true;\r\n            }\r\n\r\n            this.pricesInit[productType] = true;\r\n\r\n            if (this.renders.prices[productType] && this._needToApplyCustomTemplate(this.renders.prices[productType])) {\r\n                return this._initPriceWithCustomMetaData(productType);\r\n            }\r\n\r\n            if (this.renders.prices[productType] && this.renders.prices[productType].children) {\r\n                _priceData = this._deepObjectExtend(defaultPrice.children, this.renders.prices[productType].children);\r\n            } else {\r\n                _priceData = defaultPrice.children;\r\n            }\r\n\r\n            return this._initPricesForProductType(_priceData, productType);\r\n        },\r\n\r\n        /**\r\n         * Set name to all price components\r\n         *\r\n         * @param {Array} prices\r\n         * @param {String} productType\r\n         * @private\r\n         */\r\n        _setPriceNamesToPrices: function (prices, productType) {\r\n            _.each(prices, function (price, name) {\r\n                price.priceType = name;\r\n                price.name = name + '.' + productType;\r\n            });\r\n\r\n            return prices;\r\n        },\r\n\r\n        /**\r\n         * Sort callback to compare prices by sort order\r\n         *\r\n         * @param {Number} firstPrice\r\n         * @param {Number} secondPrice\r\n         * @returns {Number}\r\n         * @private\r\n         */\r\n        _comparePrices: function (firstPrice, secondPrice) {\r\n            if (firstPrice.sortOrder < secondPrice.sortOrder) {\r\n                return -1;\r\n            }\r\n\r\n            if (firstPrice.sortOrder > secondPrice.sortOrder) {\r\n                return 1;\r\n            }\r\n\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * Check whether metadata of product type prices was changed, and we should\r\n         * to apply custom template or custom component\r\n         *\r\n         * @param {Array} productData\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _needToApplyCustomTemplate: function (productData) {\r\n            return productData.bodyTmpl || productData.component;\r\n        },\r\n\r\n        /**\r\n         * Returns path to the columns' body template.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getBody: function () {\r\n            return this.bodyTmpl;\r\n        },\r\n\r\n        /**\r\n         * Get price label.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getLabel: function () {\r\n            return this.label;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/list/columns/pricetype-box.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'uiCollection'\r\n], function (ko, _, Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        /**\r\n         * Find from all price ui components, price with specific code, init source on it and set priceType\r\n         *\r\n         * @param {String} code\r\n         * @returns {*|T}\r\n         */\r\n        getPriceByCode: function (code) {\r\n            var elems = this.elems() ? this.elems() : ko.getObservable(this, 'elems'),\r\n                price;\r\n\r\n            price = _.filter(elems, function (elem) {\r\n                return elem.index.split('.').shift() === code;\r\n            }, this).pop();\r\n\r\n            price.source = this.source();\r\n            price.priceType = code;\r\n\r\n            return price;\r\n        },\r\n\r\n        /**\r\n         * Retrieve body template\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getBody: function () {\r\n            return this.bodyTmpl;\r\n        },\r\n\r\n        /**\r\n         * Check whether price has price range, depends on different options, that can be choose\r\n         *\r\n         * @param {Object} row\r\n         * @returns {Boolean}\r\n         */\r\n        hasPriceRange: function (row) {\r\n            return row['price_info']['max_regular_price'] !== row['price_info']['min_regular_price'];\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/storage/data-storage.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'ko',\r\n    'mageUtils',\r\n    'Magento_Catalog/js/product/query-builder',\r\n    'Magento_Customer/js/customer-data',\r\n    'jquery/jquery-storageapi'\r\n], function ($, _, ko, utils, queryBuilder, customerData) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Process data from API request\r\n     *\r\n     * @param {Object} data\r\n     * @returns {Object}\r\n     */\r\n    function getParsedDataFromServer(data) {\r\n        var result = {};\r\n\r\n        _.each(data.items, function (item) {\r\n                if (item.id) {\r\n                    result[item.id] = item;\r\n                }\r\n            }\r\n        );\r\n\r\n        return {\r\n            items: result\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Set data to localStorage with support check.\r\n     *\r\n     * @param {String} namespace\r\n     * @param {Object} data\r\n     */\r\n    function setLocalStorageItem(namespace, data) {\r\n        try {\r\n            window.localStorage.setItem(namespace, JSON.stringify(data));\r\n        } catch (e) {\r\n            console.warn('localStorage is unavailable - skipping local caching of product data');\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Class name\r\n         */\r\n        name: 'DataStorage',\r\n        request: {},\r\n        customerDataProvider: 'product_data_storage',\r\n\r\n        /**\r\n         * Initialize class\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initialize: function () {\r\n            if (!this.data) {\r\n                this.data = ko.observable({});\r\n            }\r\n\r\n            this.initLocalStorage()\r\n                .initCustomerDataReloadListener()\r\n                .cachesDataFromLocalStorage()\r\n                .initDataListener()\r\n                .initProvideStorage()\r\n                .initProviderListener();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize listener to customer data reload\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initCustomerDataReloadListener: function () {\r\n            $(document).on('customer-data-invalidate', this._flushProductStorage.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Flush product storage\r\n         *\r\n         * @private\r\n         * @return void\r\n         */\r\n        _flushProductStorage: function (event, sections) {\r\n            if (_.isEmpty(sections) || _.contains(sections, 'product_data_storage')) {\r\n                this.localStorage.removeAll();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initialize listener to data property\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initDataListener: function () {\r\n            this.data.subscribe(this.dataHandler.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize provider storage\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initProvideStorage: function () {\r\n            this.providerHandler(customerData.get(this.customerDataProvider)());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Handler to update \"data\" property.\r\n         * Sets data to localStorage\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        dataHandler: function (data) {\r\n            if (_.isEmpty(data)) {\r\n                this.localStorage.removeAll();\r\n            } else {\r\n                setLocalStorageItem(this.namespace, data);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handler to update data in provider.\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        providerHandler: function (data) {\r\n            var currentData = utils.copy(this.data()),\r\n                ids = _.keys(data.items);\r\n\r\n            if (data.items && ids.length) {\r\n                //we can extend only items\r\n                data = data.items;\r\n                this.data(_.extend(data, currentData));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sets data ids\r\n         *\r\n         * @param {String} currency\r\n         * @param {String} store\r\n         * @param {Object} ids\r\n         */\r\n        setIds: function (currency, store, ids) {\r\n            if (!this.hasInCache(currency, store, ids)) {\r\n                this.loadDataFromServer(currency, store, ids);\r\n            } else {\r\n                this.data.valueHasMutated();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets data from \"data\" property by identifiers\r\n         *\r\n         * @param {String} currency\r\n         * @param {String} store\r\n         * @param {Object} productIdentifiers\r\n         *\r\n         * @return {Object} data.\r\n         */\r\n        getDataByIdentifiers: function (currency, store, productIdentifiers) {\r\n            var data = {},\r\n                dataCollection = this.data(),\r\n                id;\r\n\r\n            for (id in productIdentifiers) {\r\n                if (productIdentifiers.hasOwnProperty(id)) {\r\n                    data[id] = dataCollection[id];\r\n                }\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Checks has cached data or not\r\n         *\r\n         * @param {String} currency\r\n         * @param {String} store\r\n         * @param {Object} ids\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        hasInCache: function (currency, store, ids) {\r\n            var data = this.data(),\r\n                id;\r\n\r\n            for (id in ids) {\r\n                if (!data.hasOwnProperty(id) ||\r\n                    data[id]['currency_code'] !== currency ||\r\n                    ~~data[id]['store_id'] !== ~~store\r\n                ) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Load data from server by ids\r\n         *\r\n         * @param {String} currency\r\n         * @param {String} store\r\n         * @param {Object} ids\r\n         *\r\n         * @return void\r\n         */\r\n        loadDataFromServer: function (currency, store, ids) {\r\n            var idsArray = _.keys(ids),\r\n                prepareAjaxParams = {\r\n                    'entity_id': idsArray.join(',')\r\n                };\r\n\r\n            if (this.request.sent && this.hasIdsInSentRequest(ids)) {\r\n                return;\r\n            }\r\n\r\n            this.request = {\r\n                sent: true,\r\n                data: ids\r\n            };\r\n\r\n            this.updateRequestConfig.data = queryBuilder.buildQuery(prepareAjaxParams);\r\n            this.updateRequestConfig.data['store_id'] = store;\r\n            this.updateRequestConfig.data['currency_code'] = currency;\r\n            $.ajax(this.updateRequestConfig).done(function (data) {\r\n                this.request = {};\r\n                this.providerHandler(getParsedDataFromServer(data));\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Each product page consist product cache data,\r\n         * this function prepare those data to appropriate view, and save it\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        addDataFromPageCache: function (data) {\r\n            this.providerHandler(getParsedDataFromServer(data));\r\n        },\r\n\r\n        /**\r\n         * @param {Object} ids\r\n         * @returns {Boolean}\r\n         */\r\n        hasIdsInSentRequest: function (ids) {\r\n            var sentDataIds,\r\n                currentDataIds;\r\n\r\n            if (this.request.data) {\r\n                sentDataIds = _.keys(this.request.data);\r\n                currentDataIds = _.keys(ids);\r\n\r\n                _.each(currentDataIds, function (id) {\r\n                    if (_.lastIndexOf(sentDataIds, id) === -1) {\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Initialize provider listener\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initProviderListener: function () {\r\n            customerData.get(this.customerDataProvider).subscribe(this.providerHandler.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Caches data from local storage to local scope\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        cachesDataFromLocalStorage: function () {\r\n            this.data(this.getDataFromLocalStorage());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Gets data from local storage by current namespace\r\n         *\r\n         * @return {Object}.\r\n         */\r\n        getDataFromLocalStorage: function () {\r\n            return this.localStorage.get();\r\n        },\r\n\r\n        /**\r\n         * Initialize localStorage\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initLocalStorage: function () {\r\n            this.localStorage = $.initNamespaceStorage(this.namespace).localStorage;\r\n\r\n            return this;\r\n        }\r\n    };\r\n});\r\n","Magento_Catalog/js/product/storage/ids-storage-compare.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'ko',\r\n    'mageUtils',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Catalog/js/product/storage/ids-storage'\r\n], function (_, ko, utils, customerData, idsStorage) {\r\n    'use strict';\r\n\r\n    return _.extend(utils.copy(idsStorage), {\r\n\r\n        /**\r\n         * Class name\r\n         */\r\n        name: 'IdsStorageCompare',\r\n\r\n        /**\r\n         * Initializes class\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initialize: function () {\r\n            if (!this.data) {\r\n                this.data = ko.observable({});\r\n            }\r\n\r\n            if (this.provider && window.checkout && window.checkout.baseUrl) {\r\n                this.providerDataHandler(customerData.get(this.provider)());\r\n                this.initProviderListener();\r\n            }\r\n\r\n            this.initLocalStorage()\r\n                .cachesDataFromLocalStorage()\r\n                .initDataListener();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes listener for external data provider\r\n         */\r\n        initProviderListener: function () {\r\n            customerData.get(this.provider).subscribe(this.providerDataHandler.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Initializes handler for external data provider update\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        providerDataHandler: function (data) {\r\n            data = data.items || data;\r\n            data = this.prepareData(data);\r\n\r\n            this.add(data);\r\n        },\r\n\r\n        /**\r\n         * Prepares data to correct interface\r\n         *\r\n         * @param {Object} data\r\n         *\r\n         * @returns {Object} data\r\n         */\r\n        prepareData: function (data) {\r\n            var result = {},\r\n                scopeId;\r\n\r\n            _.each(data, function (item) {\r\n                if (typeof item.productScope !== 'undefined') {\r\n                    scopeId = item.productScope === 'store' ? window.checkout.storeId :\r\n                        item.productScope === 'group' ? window.checkout.storeGroupId :\r\n                            window.checkout.websiteId;\r\n\r\n                    result[item.productScope + '-' + scopeId + '-' + item.id] = {\r\n                        'added_at': new Date().getTime() / 1000,\r\n                        'product_id': item.id,\r\n                        'scope_id': scopeId\r\n                    };\r\n                } else {\r\n                    result[item.id] = {\r\n                        'added_at': new Date().getTime() / 1000,\r\n                        'product_id': item.id\r\n                    };\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/product/storage/ids-storage.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'ko',\r\n    'mageUtils',\r\n    'jquery/jquery-storageapi'\r\n], function ($, _, ko, utils) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Set data to localStorage with support check.\r\n     *\r\n     * @param {String} namespace\r\n     * @param {Object} data\r\n     */\r\n    function setLocalStorageItem(namespace, data) {\r\n        try {\r\n            window.localStorage.setItem(namespace, JSON.stringify(data));\r\n        } catch (e) {\r\n            console.warn('localStorage is unavailable - skipping local caching of product data');\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Class name\r\n         */\r\n        name: 'IdsStorage',\r\n\r\n        /**\r\n         * Initializes class\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initialize: function () {\r\n            if (!this.data) {\r\n                this.data = ko.observable({});\r\n            }\r\n\r\n            this.initCustomerDataReloadListener()\r\n                .initLocalStorage()\r\n                .cachesDataFromLocalStorage()\r\n                .initDataListener();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Gets data from local storage by current namespace\r\n         *\r\n         * @return {Object}.\r\n         */\r\n        getDataFromLocalStorage: function () {\r\n            return this.localStorage.get();\r\n        },\r\n\r\n        /**\r\n         * Caches data from local storage to local scope\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        cachesDataFromLocalStorage: function () {\r\n            this.data(this.getDataFromLocalStorage());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize localStorage\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initLocalStorage: function () {\r\n            this.localStorage = $.initNamespaceStorage(this.namespace).localStorage;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes listener to \"data\" property\r\n         */\r\n        initDataListener: function () {\r\n            this.data.subscribe(this.internalDataHandler.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Initialize listener to customer data reload\r\n         *\r\n         * @return Chainable.\r\n         */\r\n        initCustomerDataReloadListener: function () {\r\n            $(document).on('customer-data-reload', function (event, sections) {\r\n                if ((_.isEmpty(sections) || _.contains(sections, this.namespace)) && ~~this.allowToSendRequest) {\r\n                    this.localStorage.removeAll();\r\n                    this.data();\r\n                }\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes handler to \"data\" property update\r\n         */\r\n        internalDataHandler: function (data) {\r\n            setLocalStorageItem(this.namespace, data);\r\n        },\r\n\r\n        /**\r\n         * Initializes handler to storage update\r\n         */\r\n        externalDataHandler: function (data) {\r\n            data = data.items ? data.items : data;\r\n\r\n            this.set(_.extend(utils.copy(this.data()), data));\r\n        }\r\n    };\r\n});\r\n\r\n","Magento_Catalog/js/product/storage/storage-service.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mageUtils',\r\n    'mage/translate',\r\n    'Magento_Catalog/js/product/storage/ids-storage',\r\n    'Magento_Catalog/js/product/storage/data-storage',\r\n    'Magento_Catalog/js/product/storage/ids-storage-compare'\r\n], function ($, _, utils, $t, IdsStorage, DataStore, IdsStorageCompare) {\r\n    'use strict';\r\n\r\n    return (function () {\r\n\r\n        var /**\r\n             * {Object} storages - list of storages\r\n             */\r\n            storages = {},\r\n\r\n            /**\r\n             * {Object} classes - list of classes\r\n             */\r\n            classes = {},\r\n\r\n            /**\r\n             * {Object} prototype - methods that will be added to all storage classes to prototype property.\r\n             */\r\n            prototype = {\r\n\r\n                /**\r\n                 * Sets data to storage\r\n                 *\r\n                 * @param {*} data\r\n                 */\r\n                set: function (data) {\r\n                    if (!utils.compare(data, this.data()).equal) {\r\n                        this.data(data);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Adds some data to current storage data\r\n                 *\r\n                 * @param {*} data\r\n                 */\r\n                add: function (data) {\r\n                    if (!_.isEmpty(data)) {\r\n                        this.data(_.extend(utils.copy(this.data()), data));\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Gets current storage data\r\n                 *\r\n                 * @returns {*} data\r\n                 */\r\n                get: function () {\r\n                    return this.data();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Required properties to storage\r\n             */\r\n            storagesInterface =  {\r\n                data: 'function',\r\n                initialize: 'function',\r\n                namespace: 'string'\r\n            },\r\n\r\n            /**\r\n             * Private service methods\r\n             */\r\n            _private = {\r\n\r\n                /**\r\n                 * Overrides class method and add ability use _super to call parent method\r\n                 *\r\n                 * @param {Object} extensionMethods\r\n                 * @param {Object} originInstance\r\n                 */\r\n                overrideClassMethods: function (extensionMethods, originInstance) {\r\n                    var methodsName = _.keys(extensionMethods),\r\n                        i = 0,\r\n                        length = methodsName.length;\r\n\r\n                    for (i; i < length; i++) {\r\n                        if (_.isFunction(originInstance[methodsName[i]])) {\r\n                            originInstance[methodsName[i]] = extensionMethods[methodsName[i]];\r\n                        }\r\n                    }\r\n\r\n                    return originInstance;\r\n                },\r\n\r\n                /**\r\n                 * Checks is storage implement interface\r\n                 *\r\n                 * @param {Object} classInstance\r\n                 *\r\n                 * @returns {Boolean}\r\n                 */\r\n                isImplementInterface: function (classInstance) {\r\n                    _.each(storagesInterface, function (key, value) {\r\n                        if (typeof classInstance[key] !== value) {\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Subscribers list\r\n             */\r\n            subsctibers = {};\r\n\r\n        (function () {\r\n            /**\r\n             * @param {Object} config\r\n             * @return void\r\n             */\r\n            classes[IdsStorage.name] = function (config) {\r\n                _.extend(this, IdsStorage, config);\r\n            };\r\n\r\n            /**\r\n             * @param {Object} config\r\n             * @return void\r\n             */\r\n            classes[IdsStorageCompare.name] = function (config) {\r\n                _.extend(this, IdsStorageCompare, config);\r\n            };\r\n\r\n            /**\r\n             * @param {Object} config\r\n             * @return void\r\n             */\r\n            classes[DataStore.name] = function (config) {\r\n                _.extend(this, DataStore, config);\r\n            };\r\n\r\n            _.each(classes, function (classItem) {\r\n                classItem.prototype = prototype;\r\n            });\r\n        })();\r\n\r\n        return {\r\n\r\n            /**\r\n             * Creates new storage or returns if storage with declared namespace exist\r\n             *\r\n             * @param {Object} config - storage config\r\n             * @throws {Error}\r\n             * @returns {Object} storage instance\r\n             */\r\n            createStorage: function (config) {\r\n                var instance,\r\n                    initialized;\r\n\r\n                if (storages[config.namespace]) {\r\n                    return storages[config.namespace];\r\n                }\r\n\r\n                instance = new classes[config.className](config);\r\n\r\n                if (_private.isImplementInterface(instance)) {\r\n                    initialized = storages[config.namespace] = instance.initialize();\r\n                    this.processSubscribers(initialized, config);\r\n\r\n                    return initialized;\r\n                }\r\n\r\n                throw new Error('Class ' + config.className + $t('does not implement Storage Interface'));\r\n            },\r\n\r\n            /**\r\n             * Process subscribers\r\n             *\r\n             * Differentiate subscribers by their namespaces: recently_viewed or recently_compared\r\n             * and process callbacks. Callbacks can be add through onStorageInit function\r\n             *\r\n             * @param {Object} initialized\r\n             * @param {Object} config\r\n             * @return void\r\n             */\r\n            processSubscribers: function (initialized, config) {\r\n                if (subsctibers[config.namespace]) {\r\n                    _.each(subsctibers[config.namespace], function (callback) {\r\n                        callback(initialized);\r\n                    });\r\n\r\n                    delete subsctibers[config.namespace];\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Listens storage creating by namespace\r\n             *\r\n             * @param {String} namespace\r\n             * @param {Function} callback\r\n             * @return void\r\n             */\r\n            onStorageInit: function (namespace, callback) {\r\n                if (storages[namespace]) {\r\n                    callback(storages[namespace]);\r\n                } else {\r\n                    subsctibers[namespace] ?\r\n                        subsctibers[namespace].push(callback) :\r\n                        subsctibers[namespace] = [callback];\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Gets storage by namespace\r\n             *\r\n             * @param {String} namespace\r\n             *\r\n             * @returns {Object} storage insance\r\n             */\r\n            getStorage: function (namespace) {\r\n                return storages[namespace];\r\n            }\r\n        };\r\n    })();\r\n});\r\n\r\n","Magento_Catalog/js/product/view/product-ids-resolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Catalog/js/product/view/product-ids'\r\n], function (_, productIds) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns id's of products in form.\r\n     *\r\n     * @param {jQuery} $form\r\n     * @return {Array}\r\n     */\r\n    return function ($form) {\r\n        var idSet = productIds(),\r\n            product = _.findWhere($form.serializeArray(), {\r\n            name: 'product'\r\n        });\r\n\r\n        if (!_.isUndefined(product)) {\r\n            idSet.push(product.value);\r\n        }\r\n\r\n        return _.uniq(idSet);\r\n    };\r\n});\r\n","Magento_Catalog/js/product/view/product-ids.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko'\r\n], function (ko) {\r\n    'use strict';\r\n\r\n    return ko.observableArray([]);\r\n});\r\n","Magento_Catalog/js/product/view/product-info-resolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Catalog/js/product/view/product-info'\r\n], function (_, productInfo) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns info about products in form.\r\n     *\r\n     * @param {jQuery} $form\r\n     * @return {Array}\r\n     */\r\n    return function ($form) {\r\n        var product = _.findWhere($form.serializeArray(), {\r\n                name: 'product'\r\n            });\r\n\r\n        if (!_.isUndefined(product)) {\r\n            productInfo().push(\r\n                {\r\n                    'id': product.value\r\n                }\r\n            );\r\n        }\r\n\r\n        return _.uniq(productInfo(), function (item) {\r\n            return item.id;\r\n        });\r\n    };\r\n});\r\n\r\n","Magento_Catalog/js/product/view/product-info.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko'\r\n], function (ko) {\r\n    'use strict';\r\n\r\n    return ko.observableArray([]);\r\n});\r\n","Magento_Catalog/js/product/view/provider.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiElement',\r\n    'Magento_Catalog/js/product/storage/storage-service'\r\n], function (_, Element, storage) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            identifiersConfig: {\r\n                namespace: 'recently_viewed_product'\r\n            },\r\n            productStorageConfig: {\r\n                namespace: 'product_data_storage',\r\n                updateRequestConfig: {\r\n                    method: 'GET',\r\n                    dataType: 'json'\r\n                },\r\n                className: 'DataStorage'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            if (window.checkout && window.checkout.baseUrl) {\r\n                this.initIdsStorage();\r\n            }\r\n\r\n            this.initDataStorage();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Init ids storage\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initIdsStorage: function () {\r\n            storage.onStorageInit(this.identifiersConfig.namespace, this.idsStorageHandler.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Init data storage\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initDataStorage: function () {\r\n            storage.onStorageInit(this.productStorageConfig.namespace, this.dataStorageHandler.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Init data storage handler\r\n         *\r\n         * @param {Object} dataStorage - storage instance\r\n         */\r\n        dataStorageHandler: function (dataStorage) {\r\n            this.productStorage = dataStorage;\r\n            this.productStorage.add(this.data.items);\r\n        },\r\n\r\n        /**\r\n         * Init ids storage handler\r\n         *\r\n         * @param {Object} idsStorage - storage instance\r\n         */\r\n        idsStorageHandler: function (idsStorage) {\r\n            this.idsStorage = idsStorage;\r\n            this.idsStorage.add(this.getIdentifiers());\r\n        },\r\n\r\n        /**\r\n         * Gets ids from items\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getIdentifiers: function () {\r\n            var result = {},\r\n                productCurrentScope = this.data.productCurrentScope,\r\n                scopeId = productCurrentScope === 'store' ? window.checkout.storeId :\r\n                    productCurrentScope === 'group' ? window.checkout.storeGroupId :\r\n                        window.checkout.websiteId;\r\n\r\n            _.each(this.data.items, function (item, key) {\r\n                result[productCurrentScope + '-' + scopeId + '-' + key] = {\r\n                    'added_at': new Date().getTime() / 1000,\r\n                    'product_id': key,\r\n                    'scope_id': scopeId\r\n                };\r\n            }, this);\r\n\r\n            return result;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/view/compare-products.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data',\r\n    'jquery',\r\n    'mage/mage',\r\n    'mage/decorate'\r\n], function (Component, customerData, $) {\r\n    'use strict';\r\n\r\n    var sidebarInitialized = false;\r\n\r\n    /**\r\n     * Initialize sidebar\r\n     */\r\n    function initSidebar() {\r\n        if (sidebarInitialized) {\r\n            return;\r\n        }\r\n\r\n        sidebarInitialized = true;\r\n        $('[data-role=compare-products-sidebar]').decorate('list', true);\r\n    }\r\n\r\n    return Component.extend({\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n            this.compareProducts = customerData.get('compare-products');\r\n\r\n            initSidebar();\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/js/view/image.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.template = window.checkout.imageTemplate || this.template;\r\n        }\r\n    });\r\n});\r\n","Magento_Catalog/product/view/validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'mage/validation/validation'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.validation', $.mage.validation, {\r\n        options: {\r\n            radioCheckboxClosest: 'ul, ol',\r\n\r\n            /**\r\n             * @param {*} error\r\n             * @param {HTMLElement} element\r\n             */\r\n            errorPlacement: function (error, element) {\r\n                var messageBox,\r\n                    dataValidate;\r\n\r\n                if ($(element).hasClass('datetime-picker')) {\r\n                    element = $(element).parent();\r\n\r\n                    if (element.parent().find('.mage-error').length) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                if (element.attr('data-errors-message-box')) {\r\n                    messageBox = $(element.attr('data-errors-message-box'));\r\n                    messageBox.html(error);\r\n\r\n                    return;\r\n                }\r\n\r\n                dataValidate = element.attr('data-validate');\r\n\r\n                if (dataValidate && dataValidate.indexOf('validate-one-checkbox-required-by-name') > 0) {\r\n                    error.appendTo('#links-advice-container');\r\n                } else if (element.is(':radio, :checkbox')) {\r\n                    element.closest(this.radioCheckboxClosest).after(error);\r\n                } else {\r\n                    element.after(error);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {HTMLElement} element\r\n             * @param {String} errorClass\r\n             */\r\n            highlight: function (element, errorClass) {\r\n                var dataValidate = $(element).attr('data-validate');\r\n\r\n                if (dataValidate && dataValidate.indexOf('validate-required-datetime') > 0) {\r\n                    $(element).parent().find('.datetime-picker').each(function () {\r\n                        $(this).removeClass(errorClass);\r\n\r\n                        if ($(this).val().length === 0) {\r\n                            $(this).addClass(errorClass);\r\n                        }\r\n                    });\r\n                } else if ($(element).is(':radio, :checkbox')) {\r\n                    $(element).closest(this.radioCheckboxClosest).addClass(errorClass);\r\n                } else {\r\n                    $(element).addClass(errorClass);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {HTMLElement} element\r\n             * @param {String} errorClass\r\n             */\r\n            unhighlight: function (element, errorClass) {\r\n                var dataValidate = $(element).attr('data-validate');\r\n\r\n                if (dataValidate && dataValidate.indexOf('validate-required-datetime') > 0) {\r\n                    $(element).parent().find('.datetime-picker').removeClass(errorClass);\r\n                } else if ($(element).is(':radio, :checkbox')) {\r\n                    $(element).closest(this.radioCheckboxClosest).removeClass(errorClass);\r\n                } else {\r\n                    $(element).removeClass(errorClass);\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.validation;\r\n});\r\n","Magento_CatalogSearch/js/search-terms-log.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mageUtils'\r\n], function ($, utils) {\r\n    'use strict';\r\n\r\n    return function (data) {\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: data.url,\r\n            data: {\r\n                'q': utils.getUrlParameters(window.location.href).q\r\n            }\r\n        });\r\n    };\r\n});\r\n","Magento_Checkout/js/checkout-data.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * Checkout adapter for customer data storage\r\n *\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/customer-data',\r\n    'mageUtils',\r\n    'jquery/jquery-storageapi'\r\n], function ($, storage, utils) {\r\n    'use strict';\r\n\r\n    var cacheKey = 'checkout-data',\r\n\r\n        /**\r\n         * @param {Object} data\r\n         */\r\n        saveData = function (data) {\r\n            storage.set(cacheKey, data);\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        initData = function () {\r\n            return {\r\n                'selectedShippingAddress': null, //Selected shipping address pulled from persistence storage\r\n                'shippingAddressFromData': null, //Shipping address pulled from persistence storage\r\n                'newCustomerShippingAddress': null, //Shipping address pulled from persistence storage for customer\r\n                'selectedShippingRate': null, //Shipping rate pulled from persistence storage\r\n                'selectedPaymentMethod': null, //Payment method pulled from persistence storage\r\n                'selectedBillingAddress': null, //Selected billing address pulled from persistence storage\r\n                'billingAddressFromData': null, //Billing address pulled from persistence storage\r\n                'newCustomerBillingAddress': null //Billing address pulled from persistence storage for new customer\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getData = function () {\r\n            var data = storage.get(cacheKey)();\r\n\r\n            if ($.isEmptyObject(data)) {\r\n                data = $.initNamespaceStorage('mage-cache-storage').localStorage.get(cacheKey);\r\n\r\n                if ($.isEmptyObject(data)) {\r\n                    data = initData();\r\n                    saveData(data);\r\n                }\r\n            }\r\n\r\n            return data;\r\n        };\r\n\r\n    return {\r\n        /**\r\n         * Setting the selected shipping address pulled from persistence storage\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        setSelectedShippingAddress: function (data) {\r\n            var obj = getData();\r\n\r\n            obj.selectedShippingAddress = data;\r\n            saveData(obj);\r\n        },\r\n\r\n        /**\r\n         * Pulling the selected shipping address from persistence storage\r\n         *\r\n         * @return {*}\r\n         */\r\n        getSelectedShippingAddress: function () {\r\n            return getData().selectedShippingAddress;\r\n        },\r\n\r\n        /**\r\n         * Setting the shipping address pulled from persistence storage\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        setShippingAddressFromData: function (data) {\r\n            var obj = getData();\r\n\r\n            obj.shippingAddressFromData = utils.filterFormData(data);\r\n            saveData(obj);\r\n        },\r\n\r\n        /**\r\n         * Pulling the shipping address from persistence storage\r\n         *\r\n         * @return {*}\r\n         */\r\n        getShippingAddressFromData: function () {\r\n            return getData().shippingAddressFromData;\r\n        },\r\n\r\n        /**\r\n         * Setting the shipping address pulled from persistence storage for new customer\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        setNewCustomerShippingAddress: function (data) {\r\n            var obj = getData();\r\n\r\n            obj.newCustomerShippingAddress = data;\r\n            saveData(obj);\r\n        },\r\n\r\n        /**\r\n         * Pulling the shipping address from persistence storage for new customer\r\n         *\r\n         * @return {*}\r\n         */\r\n        getNewCustomerShippingAddress: function () {\r\n            return getData().newCustomerShippingAddress;\r\n        },\r\n\r\n        /**\r\n         * Setting the selected shipping rate pulled from persistence storage\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        setSelectedShippingRate: function (data) {\r\n            var obj = getData();\r\n\r\n            obj.selectedShippingRate = data;\r\n            saveData(obj);\r\n        },\r\n\r\n        /**\r\n         * Pulling the selected shipping rate from local storage\r\n         *\r\n         * @return {*}\r\n         */\r\n        getSelectedShippingRate: function () {\r\n            return getData().selectedShippingRate;\r\n        },\r\n\r\n        /**\r\n         * Setting the selected payment method pulled from persistence storage\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        setSelectedPaymentMethod: function (data) {\r\n            var obj = getData();\r\n\r\n            obj.selectedPaymentMethod = data;\r\n            saveData(obj);\r\n        },\r\n\r\n        /**\r\n         * Pulling the payment method from persistence storage\r\n         *\r\n         * @return {*}\r\n         */\r\n        getSelectedPaymentMethod: function () {\r\n            return getData().selectedPaymentMethod;\r\n        },\r\n\r\n        /**\r\n         * Setting the selected billing address pulled from persistence storage\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        setSelectedBillingAddress: function (data) {\r\n            var obj = getData();\r\n\r\n            obj.selectedBillingAddress = data;\r\n            saveData(obj);\r\n        },\r\n\r\n        /**\r\n         * Pulling the selected billing address from persistence storage\r\n         *\r\n         * @return {*}\r\n         */\r\n        getSelectedBillingAddress: function () {\r\n            return getData().selectedBillingAddress;\r\n        },\r\n\r\n        /**\r\n         * Setting the billing address pulled from persistence storage\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        setBillingAddressFromData: function (data) {\r\n            var obj = getData();\r\n\r\n            obj.billingAddressFromData = utils.filterFormData(data);\r\n            saveData(obj);\r\n        },\r\n\r\n        /**\r\n         * Pulling the billing address from persistence storage\r\n         *\r\n         * @return {*}\r\n         */\r\n        getBillingAddressFromData: function () {\r\n            return getData().billingAddressFromData;\r\n        },\r\n\r\n        /**\r\n         * Setting the billing address pulled from persistence storage for new customer\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        setNewCustomerBillingAddress: function (data) {\r\n            var obj = getData();\r\n\r\n            obj.newCustomerBillingAddress = data;\r\n            saveData(obj);\r\n        },\r\n\r\n        /**\r\n         * Pulling the billing address from persistence storage for new customer\r\n         *\r\n         * @return {*}\r\n         */\r\n        getNewCustomerBillingAddress: function () {\r\n            return getData().newCustomerBillingAddress;\r\n        },\r\n\r\n        /**\r\n         * Pulling the email address from persistence storage\r\n         *\r\n         * @return {*}\r\n         */\r\n        getValidatedEmailValue: function () {\r\n            var obj = getData();\r\n\r\n            return obj.validatedEmailValue ? obj.validatedEmailValue : '';\r\n        },\r\n\r\n        /**\r\n         * Setting the email address pulled from persistence storage\r\n         *\r\n         * @param {String} email\r\n         */\r\n        setValidatedEmailValue: function (email) {\r\n            var obj = getData();\r\n\r\n            obj.validatedEmailValue = email;\r\n            saveData(obj);\r\n        },\r\n\r\n        /**\r\n         * Pulling the email input field value from persistence storage\r\n         *\r\n         * @return {*}\r\n         */\r\n        getInputFieldEmailValue: function () {\r\n            var obj = getData();\r\n\r\n            return obj.inputFieldEmailValue ? obj.inputFieldEmailValue : '';\r\n        },\r\n\r\n        /**\r\n         * Setting the email input field value pulled from persistence storage\r\n         *\r\n         * @param {String} email\r\n         */\r\n        setInputFieldEmailValue: function (email) {\r\n            var obj = getData();\r\n\r\n            obj.inputFieldEmailValue = email;\r\n            saveData(obj);\r\n        },\r\n\r\n        /**\r\n         * Pulling the checked email value from persistence storage\r\n         *\r\n         * @return {*}\r\n         */\r\n        getCheckedEmailValue: function () {\r\n            var obj = getData();\r\n\r\n            return obj.checkedEmailValue ? obj.checkedEmailValue : '';\r\n        },\r\n\r\n        /**\r\n         * Setting the checked email value pulled from persistence storage\r\n         *\r\n         * @param {String} email\r\n         */\r\n        setCheckedEmailValue: function (email) {\r\n            var obj = getData();\r\n\r\n            obj.checkedEmailValue = email;\r\n            saveData(obj);\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/checkout-loader.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'rjsResolver'\r\n], function (resolver) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Removes provided loader element from DOM.\r\n     *\r\n     * @param {HTMLElement} $loader - Loader DOM element.\r\n     */\r\n    function hideLoader($loader) {\r\n        $loader.parentNode.removeChild($loader);\r\n    }\r\n\r\n    /**\r\n     * Initializes assets loading process listener.\r\n     *\r\n     * @param {Object} config - Optional configuration\r\n     * @param {HTMLElement} $loader - Loader DOM element.\r\n     */\r\n    function init(config, $loader) {\r\n        resolver(hideLoader.bind(null, $loader));\r\n    }\r\n\r\n    return init;\r\n});\r\n","Magento_Checkout/js/discount-codes.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.discountCode', {\r\n        options: {\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this.couponCode = $(this.options.couponCodeSelector);\r\n            this.removeCoupon = $(this.options.removeCouponSelector);\r\n\r\n            $(this.options.applyButton).on('click', $.proxy(function () {\r\n                this.couponCode.attr('data-validate', '{required:true}');\r\n                this.removeCoupon.attr('value', '0');\r\n                $(this.element).validation().trigger('submit');\r\n            }, this));\r\n\r\n            $(this.options.cancelButton).on('click', $.proxy(function () {\r\n                this.couponCode.removeAttr('data-validate');\r\n                this.removeCoupon.attr('value', '1');\r\n                this.element.trigger('submit');\r\n            }, this));\r\n        }\r\n    });\r\n\r\n    return $.mage.discountCode;\r\n});\r\n","Magento_Checkout/js/empty-cart.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['Magento_Customer/js/customer-data'], function (customerData) {\r\n    'use strict';\r\n\r\n    return function () {\r\n        var cartData = customerData.get('cart');\r\n\r\n        customerData.getInitCustomerData().done(function () {\r\n            if (cartData().items && cartData().items.length !== 0) {\r\n                customerData.reload(['cart'], false);\r\n            }\r\n        });\r\n    };\r\n});\r\n","Magento_Checkout/js/proceed-to-checkout.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/model/authentication-popup',\r\n    'Magento_Customer/js/customer-data'\r\n], function ($, authenticationPopup, customerData) {\r\n    'use strict';\r\n\r\n    return function (config, element) {\r\n        $(element).on('click', function (event) {\r\n            var cart = customerData.get('cart'),\r\n                customer = customerData.get('customer');\r\n\r\n            event.preventDefault();\r\n\r\n            if (!customer().firstname && cart().isGuestCheckoutAllowed === false) {\r\n                authenticationPopup.showModal();\r\n\r\n                return false;\r\n            }\r\n            $(element).attr('disabled', true);\r\n            location.href = config.checkoutUrl;\r\n        });\r\n\r\n    };\r\n});\r\n","Magento_Checkout/js/region-updater.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'underscore',\r\n    'jquery-ui-modules/widget',\r\n    'mage/validation'\r\n], function ($, mageTemplate, _) {\r\n    'use strict';\r\n\r\n    $.widget('mage.regionUpdater', {\r\n        options: {\r\n            regionTemplate:\r\n                '<option value=\"<%- data.value %>\" <% if (data.isSelected) { %>selected=\"selected\"<% } %>>' +\r\n                    '<%- data.title %>' +\r\n                '</option>',\r\n            isRegionRequired: true,\r\n            isZipRequired: true,\r\n            isCountryRequired: true,\r\n            currentRegion: null,\r\n            isMultipleCountriesAllowed: true\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._initCountryElement();\r\n\r\n            this.currentRegionOption = this.options.currentRegion;\r\n            this.regionTmpl = mageTemplate(this.options.regionTemplate);\r\n\r\n            this._updateRegion(this.element.find('option:selected').val());\r\n\r\n            $(this.options.regionListId).on('change', $.proxy(function (e) {\r\n                this.setOption = false;\r\n                this.currentRegionOption = $(e.target).val();\r\n            }, this));\r\n\r\n            $(this.options.regionInputId).on('focusout', $.proxy(function () {\r\n                this.setOption = true;\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @private\r\n         */\r\n        _initCountryElement: function () {\r\n\r\n            if (this.options.isMultipleCountriesAllowed) {\r\n                this.element.parents('div.field').show();\r\n                this.element.on('change', $.proxy(function (e) {\r\n                    // clear region inputs on country change\r\n                    $(this.options.regionListId).val('');\r\n                    $(this.options.regionInputId).val('');\r\n                    this._updateRegion($(e.target).val());\r\n                }, this));\r\n\r\n                if (this.options.isCountryRequired) {\r\n                    this.element.addClass('required-entry');\r\n                    this.element.parents('div.field').addClass('required');\r\n                }\r\n            } else {\r\n                this.element.parents('div.field').hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Remove options from dropdown list\r\n         *\r\n         * @param {Object} selectElement - jQuery object for dropdown list\r\n         * @private\r\n         */\r\n        _removeSelectOptions: function (selectElement) {\r\n            selectElement.find('option').each(function (index) {\r\n                if (index) {\r\n                    $(this).remove();\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Render dropdown list\r\n         * @param {Object} selectElement - jQuery object for dropdown list\r\n         * @param {String} key - region code\r\n         * @param {Object} value - region object\r\n         * @private\r\n         */\r\n        _renderSelectOption: function (selectElement, key, value) {\r\n            selectElement.append($.proxy(function () {\r\n                var name = value.name.replace(/[!\"#$%&'()*+,.\\/:;<=>?@[\\\\\\]^`{|}~]/g, '\\\\$&'),\r\n                    tmplData,\r\n                    tmpl;\r\n\r\n                if (value.code && $(name).is('span')) {\r\n                    key = value.code;\r\n                    value.name = $(name).text();\r\n                }\r\n\r\n                tmplData = {\r\n                    value: key,\r\n                    title: value.name,\r\n                    isSelected: false\r\n                };\r\n\r\n                if (this.options.defaultRegion === key) {\r\n                    tmplData.isSelected = true;\r\n                }\r\n\r\n                tmpl = this.regionTmpl({\r\n                    data: tmplData\r\n                });\r\n\r\n                return $(tmpl);\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Takes clearError callback function as first option\r\n         * If no form is passed as option, look up the closest form and call clearError method.\r\n         * @private\r\n         */\r\n        _clearError: function () {\r\n            var args = ['clearError', this.options.regionListId, this.options.regionInputId, this.options.postcodeId];\r\n\r\n            if (this.options.clearError && typeof this.options.clearError === 'function') {\r\n                this.options.clearError.call(this);\r\n            } else {\r\n                if (!this.options.form) {\r\n                    this.options.form = this.element.closest('form').length ? $(this.element.closest('form')[0]) : null;\r\n                }\r\n\r\n                this.options.form = $(this.options.form);\r\n\r\n                this.options.form && this.options.form.data('validator') &&\r\n                    this.options.form.validation.apply(this.options.form, _.compact(args));\r\n\r\n                // Clean up errors on region & zip fix\r\n                $(this.options.regionInputId).removeClass('mage-error').parent().find('.mage-error').remove();\r\n                $(this.options.regionListId).removeClass('mage-error').parent().find('.mage-error').remove();\r\n                $(this.options.postcodeId).removeClass('mage-error').parent().find('.mage-error').remove();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update dropdown list based on the country selected\r\n         *\r\n         * @param {String} country - 2 uppercase letter for country code\r\n         * @private\r\n         */\r\n        _updateRegion: function (country) {\r\n            // Clear validation error messages\r\n            var regionList = $(this.options.regionListId),\r\n                regionInput = $(this.options.regionInputId),\r\n                postcode = $(this.options.postcodeId),\r\n                label = regionList.parent().siblings('label'),\r\n                container = regionList.parents('div.field'),\r\n                regionsEntries,\r\n                regionId,\r\n                regionData;\r\n\r\n            this._clearError();\r\n            this._checkRegionRequired(country);\r\n\r\n            // Populate state/province dropdown list if available or use input box\r\n            if (this.options.regionJson[country]) {\r\n                this._removeSelectOptions(regionList);\r\n                regionsEntries = _.pairs(this.options.regionJson[country]);\r\n                regionsEntries.sort(function (a, b) {\r\n                    return a[1].name > b[1].name ? 1 : -1;\r\n                });\r\n                $.each(regionsEntries, $.proxy(function (key, value) {\r\n                    regionId = value[0];\r\n                    regionData = value[1];\r\n                    this._renderSelectOption(regionList, regionId, regionData);\r\n                }, this));\r\n\r\n                if (this.currentRegionOption) {\r\n                    regionList.val(this.currentRegionOption);\r\n                }\r\n\r\n                if (this.setOption) {\r\n                    regionList.find('option').filter(function () {\r\n                        return this.text === regionInput.val();\r\n                    }).attr('selected', true);\r\n                }\r\n\r\n                if (this.options.isRegionRequired) {\r\n                    regionList.addClass('required-entry').prop('disabled', false);\r\n                    container.addClass('required').show();\r\n                } else {\r\n                    regionList.removeClass('required-entry validate-select').removeAttr('data-validate');\r\n                    container.removeClass('required');\r\n\r\n                    if (!this.options.optionalRegionAllowed) { //eslint-disable-line max-depth\r\n                        regionList.hide();\r\n                        container.hide();\r\n                    } else {\r\n                        regionList.prop('disabled', false).show();\r\n                    }\r\n                }\r\n\r\n                regionList.show();\r\n                regionInput.hide();\r\n                label.attr('for', regionList.attr('id'));\r\n            } else {\r\n                this._removeSelectOptions(regionList);\r\n\r\n                if (this.options.isRegionRequired) {\r\n                    regionInput.addClass('required-entry').prop('disabled', false);\r\n                    container.addClass('required').show();\r\n                } else {\r\n                    if (!this.options.optionalRegionAllowed) { //eslint-disable-line max-depth\r\n                        regionInput.attr('disabled', 'disabled');\r\n                        container.hide();\r\n                    }\r\n                    container.removeClass('required');\r\n                    regionInput.removeClass('required-entry');\r\n                }\r\n\r\n                regionList.removeClass('required-entry').prop('disabled', 'disabled').hide();\r\n                regionInput.show();\r\n                label.attr('for', regionInput.attr('id'));\r\n            }\r\n\r\n            // If country is in optionalzip list, make postcode input not required\r\n            if (this.options.isZipRequired) {\r\n                $.inArray(country, this.options.countriesWithOptionalZip) >= 0 ?\r\n                    postcode.removeClass('required-entry').closest('.field').removeClass('required') :\r\n                    postcode.addClass('required-entry').closest('.field').addClass('required');\r\n            }\r\n\r\n            // Add defaultvalue attribute to state/province select element\r\n            regionList.attr('defaultvalue', this.options.defaultRegion);\r\n            this.options.form.find('[type=\"submit\"]').prop('disabled', false).show();\r\n        },\r\n\r\n        /**\r\n         * Check if the selected country has a mandatory region selection\r\n         *\r\n         * @param {String} country - Code of the country - 2 uppercase letter for country code\r\n         * @private\r\n         */\r\n        _checkRegionRequired: function (country) {\r\n            var self = this;\r\n\r\n            this.options.isRegionRequired = false;\r\n            $.each(this.options.regionJson.config['regions_required'], function (index, elem) {\r\n                if (elem === country) {\r\n                    self.options.isRegionRequired = true;\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.regionUpdater;\r\n});\r\n","Magento_Checkout/js/shopping-cart.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'jquery-ui-modules/widget',\r\n    'mage/translate'\r\n], function ($, confirm) {\r\n    'use strict';\r\n\r\n    $.widget('mage.shoppingCart', {\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            var items, i, reload;\r\n\r\n            $(this.options.emptyCartButton).on('click', $.proxy(function () {\r\n                this._confirmClearCart();\r\n            }, this));\r\n            items = $.find('[data-role=\"cart-item-qty\"]');\r\n\r\n            for (i = 0; i < items.length; i++) {\r\n                $(items[i]).on('keypress', $.proxy(function (event) { //eslint-disable-line no-loop-func\r\n                    var keyCode = event.keyCode ? event.keyCode : event.which;\r\n\r\n                    if (keyCode == 13) { //eslint-disable-line eqeqeq\r\n                        $(this.options.emptyCartButton).attr('name', 'update_cart_action_temp');\r\n                        $(this.options.updateCartActionContainer)\r\n                            .attr('name', 'update_cart_action').attr('value', 'update_qty');\r\n\r\n                    }\r\n                }, this));\r\n            }\r\n            $(this.options.continueShoppingButton).on('click', $.proxy(function () {\r\n                location.href = this.options.continueShoppingUrl;\r\n            }, this));\r\n\r\n            $(document).on('ajax:removeFromCart', $.proxy(function () {\r\n                reload = true;\r\n                $('div.block.block-minicart').on('dropdowndialogclose', $.proxy(function () {\r\n                    if (reload === true) {\r\n                        location.reload();\r\n                        reload = false;\r\n                    }\r\n                    $('div.block.block-minicart').off('dropdowndialogclose');\r\n                }));\r\n            }, this));\r\n            $(document).on('ajax:updateItemQty', $.proxy(function () {\r\n                reload = true;\r\n                $('div.block.block-minicart').on('dropdowndialogclose', $.proxy(function () {\r\n                    if (reload === true) {\r\n                        location.reload();\r\n                        reload = false;\r\n                    }\r\n                    $('div.block.block-minicart').off('dropdowndialogclose');\r\n                }));\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Display confirmation modal for clearing the cart\r\n         * @private\r\n         */\r\n        _confirmClearCart: function () {\r\n            var self = this;\r\n\r\n            confirm({\r\n                content: $.mage.__('Are you sure you want to remove all items from your shopping cart?'),\r\n                actions: {\r\n                    /**\r\n                     * Confirmation modal handler to execute clear cart action\r\n                     */\r\n                    confirm: function () {\r\n                        self.clearCart();\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Prepares the form and submit to clear the cart\r\n         * @public\r\n         */\r\n        clearCart: function () {\r\n            $(this.options.emptyCartButton).attr('name', 'update_cart_action_temp');\r\n            $(this.options.updateCartActionContainer)\r\n                .attr('name', 'update_cart_action').attr('value', 'empty_cart');\r\n\r\n            if ($(this.options.emptyCartButton).parents('form').length > 0) {\r\n                $(this.options.emptyCartButton).parents('form').trigger('submit');\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.shoppingCart;\r\n});\r\n","Magento_Checkout/js/sidebar.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/model/authentication-popup',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Ui/js/modal/alert',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'underscore',\r\n    'jquery-ui-modules/widget',\r\n    'mage/decorate',\r\n    'mage/collapsible',\r\n    'mage/cookies',\r\n    'jquery-ui-modules/effect-fade'\r\n], function ($, authenticationPopup, customerData, alert, confirm, _) {\r\n    'use strict';\r\n\r\n    $.widget('mage.sidebar', {\r\n        options: {\r\n            isRecursive: true,\r\n            minicart: {\r\n                maxItemsVisible: 3\r\n            }\r\n        },\r\n        scrollHeight: 0,\r\n        shoppingCartUrl: window.checkout.shoppingCartUrl,\r\n\r\n        /**\r\n         * Create sidebar.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._initContent();\r\n        },\r\n\r\n        /**\r\n         * Update sidebar block.\r\n         */\r\n        update: function () {\r\n            $(this.options.targetElement).trigger('contentUpdated');\r\n            this._calcHeight();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _initContent: function () {\r\n            var self = this,\r\n                events = {};\r\n\r\n            this.element.decorate('list', this.options.isRecursive);\r\n\r\n            /**\r\n             * @param {jQuery.Event} event\r\n             */\r\n            events['click ' + this.options.button.close] = function (event) {\r\n                event.stopPropagation();\r\n                $(self.options.targetElement).dropdownDialog('close');\r\n            };\r\n            events['click ' + this.options.button.checkout] = $.proxy(function () {\r\n                var cart = customerData.get('cart'),\r\n                    customer = customerData.get('customer'),\r\n                    element = $(this.options.button.checkout);\r\n\r\n                if (!customer().firstname && cart().isGuestCheckoutAllowed === false) {\r\n                    // set URL for redirect on successful login/registration. It's postprocessed on backend.\r\n                    $.cookie('login_redirect', this.options.url.checkout);\r\n\r\n                    if (this.options.url.isRedirectRequired) {\r\n                        element.prop('disabled', true);\r\n                        location.href = this.options.url.loginUrl;\r\n                    } else {\r\n                        authenticationPopup.showModal();\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n                element.prop('disabled', true);\r\n                location.href = this.options.url.checkout;\r\n            }, this);\r\n\r\n            /**\r\n             * @param {jQuery.Event} event\r\n             */\r\n            events['click ' + this.options.button.remove] =  function (event) {\r\n                event.stopPropagation();\r\n                confirm({\r\n                    content: self.options.confirmMessage,\r\n                    actions: {\r\n                        /** @inheritdoc */\r\n                        confirm: function () {\r\n                            self._removeItem($(event.currentTarget));\r\n                        },\r\n\r\n                        /** @inheritdoc */\r\n                        always: function (e) {\r\n                            e.stopImmediatePropagation();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n\r\n            /**\r\n             * @param {jQuery.Event} event\r\n             */\r\n            events['keyup ' + this.options.item.qty] = function (event) {\r\n                self._showItemButton($(event.target));\r\n            };\r\n\r\n            /**\r\n             * @param {jQuery.Event} event\r\n             */\r\n            events['change ' + this.options.item.qty] = function (event) {\r\n                self._showItemButton($(event.target));\r\n            };\r\n\r\n            /**\r\n             * @param {jQuery.Event} event\r\n             */\r\n            events['click ' + this.options.item.button] = function (event) {\r\n                event.stopPropagation();\r\n                self._updateItemQty($(event.currentTarget));\r\n            };\r\n\r\n            /**\r\n             * @param {jQuery.Event} event\r\n             */\r\n            events['focusout ' + this.options.item.qty] = function (event) {\r\n                self._validateQty($(event.currentTarget));\r\n            };\r\n\r\n            this._on(this.element, events);\r\n            this._calcHeight();\r\n        },\r\n\r\n        /**\r\n         * @param {HTMLElement} elem\r\n         * @private\r\n         */\r\n        _showItemButton: function (elem) {\r\n            var itemId = elem.data('cart-item'),\r\n                itemQty = elem.data('item-qty');\r\n\r\n            if (this._isValidQty(itemQty, elem.val())) {\r\n                $('#update-cart-item-' + itemId).show('fade', 300);\r\n            } else if (elem.val() == 0) { //eslint-disable-line eqeqeq\r\n                this._hideItemButton(elem);\r\n            } else {\r\n                this._hideItemButton(elem);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {*} origin - origin qty. 'data-item-qty' attribute.\r\n         * @param {*} changed - new qty.\r\n         * @returns {Boolean}\r\n         * @private\r\n         */\r\n        _isValidQty: function (origin, changed) {\r\n            return origin != changed && //eslint-disable-line eqeqeq\r\n                changed.length > 0 &&\r\n                changed - 0 == changed && //eslint-disable-line eqeqeq\r\n                changed - 0 > 0;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} elem\r\n         * @private\r\n         */\r\n        _validateQty: function (elem) {\r\n            var itemQty = elem.data('item-qty');\r\n\r\n            if (!this._isValidQty(itemQty, elem.val())) {\r\n                elem.val(itemQty);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {HTMLElement} elem\r\n         * @private\r\n         */\r\n        _hideItemButton: function (elem) {\r\n            var itemId = elem.data('cart-item');\r\n\r\n            $('#update-cart-item-' + itemId).hide('fade', 300);\r\n        },\r\n\r\n        /**\r\n         * @param {HTMLElement} elem\r\n         * @private\r\n         */\r\n        _updateItemQty: function (elem) {\r\n            var itemId = elem.data('cart-item');\r\n\r\n            this._ajax(this.options.url.update, {\r\n                'item_id': itemId,\r\n                'item_qty': $('#cart-item-' + itemId + '-qty').val()\r\n            }, elem, this._updateItemQtyAfter);\r\n        },\r\n\r\n        /**\r\n         * Update content after update qty\r\n         *\r\n         * @param {HTMLElement} elem\r\n         */\r\n        _updateItemQtyAfter: function (elem) {\r\n            var productData = this._getProductById(Number(elem.data('cart-item')));\r\n\r\n            if (!_.isUndefined(productData)) {\r\n                $(document).trigger('ajax:updateCartItemQty');\r\n\r\n                if (window.location.href === this.shoppingCartUrl) {\r\n                    window.location.reload(false);\r\n                }\r\n            }\r\n            this._hideItemButton(elem);\r\n        },\r\n\r\n        /**\r\n         * @param {HTMLElement} elem\r\n         * @private\r\n         */\r\n        _removeItem: function (elem) {\r\n            var itemId = elem.data('cart-item');\r\n\r\n            this._ajax(this.options.url.remove, {\r\n                'item_id': itemId\r\n            }, elem, this._removeItemAfter);\r\n        },\r\n\r\n        /**\r\n         * Update content after item remove\r\n         *\r\n         * @param {Object} elem\r\n         * @private\r\n         */\r\n        _removeItemAfter: function (elem) {\r\n            var productData = this._getProductById(Number(elem.data('cart-item')));\r\n\r\n            if (!_.isUndefined(productData)) {\r\n                $(document).trigger('ajax:removeFromCart', {\r\n                    productIds: [productData['product_id']],\r\n                    productInfo: [\r\n                        {\r\n                            'id': productData['product_id']\r\n                        }\r\n                    ]\r\n                });\r\n\r\n                if (window.location.href.indexOf(this.shoppingCartUrl) === 0) {\r\n                    window.location.reload();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Retrieves product data by Id.\r\n         *\r\n         * @param {Number} productId - product Id\r\n         * @returns {Object|undefined}\r\n         * @private\r\n         */\r\n        _getProductById: function (productId) {\r\n            return _.find(customerData.get('cart')().items, function (item) {\r\n                return productId === Number(item['item_id']);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {String} url - ajax url\r\n         * @param {Object} data - post data for ajax call\r\n         * @param {Object} elem - element that initiated the event\r\n         * @param {Function} callback - callback method to execute after AJAX success\r\n         */\r\n        _ajax: function (url, data, elem, callback) {\r\n            $.extend(data, {\r\n                'form_key': $.mage.cookies.get('form_key')\r\n            });\r\n\r\n            $.ajax({\r\n                url: url,\r\n                data: data,\r\n                type: 'post',\r\n                dataType: 'json',\r\n                context: this,\r\n\r\n                /** @inheritdoc */\r\n                beforeSend: function () {\r\n                    elem.attr('disabled', 'disabled');\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                complete: function () {\r\n                    elem.attr('disabled', null);\r\n                }\r\n            })\r\n                .done(function (response) {\r\n                    var msg;\r\n\r\n                    if (response.success) {\r\n                        callback.call(this, elem, response);\r\n                    } else {\r\n                        msg = response['error_message'];\r\n\r\n                        if (msg) {\r\n                            alert({\r\n                                content: msg\r\n                            });\r\n                        }\r\n                    }\r\n                })\r\n                .fail(function (error) {\r\n                    console.log(JSON.stringify(error));\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Calculate height of minicart list\r\n         *\r\n         * @private\r\n         */\r\n        _calcHeight: function () {\r\n            var self = this,\r\n                height = 0,\r\n                counter = this.options.minicart.maxItemsVisible,\r\n                target = $(this.options.minicart.list),\r\n                outerHeight;\r\n\r\n            self.scrollHeight = 0;\r\n            target.children().each(function () {\r\n\r\n                if ($(this).find('.options').length > 0) {\r\n                    $(this).collapsible();\r\n                }\r\n                outerHeight = $(this).outerHeight(true);\r\n\r\n                if (counter-- > 0) {\r\n                    height += outerHeight;\r\n                }\r\n                self.scrollHeight += outerHeight;\r\n            });\r\n\r\n            target.parent().height(height);\r\n        }\r\n    });\r\n\r\n    return $.mage.sidebar;\r\n});\r\n","Magento_Checkout/js/action/create-billing-address.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Checkout/js/model/address-converter'\r\n], function (addressConverter) {\r\n    'use strict';\r\n\r\n    return function (addressData) {\r\n        var address = addressConverter.formAddressDataToQuoteAddress(addressData);\r\n\r\n        /**\r\n         * Returns new customer billing address type.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        address.getType = function () {\r\n            return 'new-customer-billing-address';\r\n        };\r\n\r\n        return address;\r\n    };\r\n});\r\n","Magento_Checkout/js/action/create-shipping-address.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Customer/js/model/address-list',\r\n    'Magento_Checkout/js/model/address-converter'\r\n], function (addressList, addressConverter) {\r\n    'use strict';\r\n\r\n    return function (addressData) {\r\n        var address = addressConverter.formAddressDataToQuoteAddress(addressData),\r\n            isAddressUpdated = addressList().some(function (currentAddress, index, addresses) {\r\n                if (currentAddress.getKey() == address.getKey()) { //eslint-disable-line eqeqeq\r\n                    addresses[index] = address;\r\n\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n        if (!isAddressUpdated) {\r\n            addressList.push(address);\r\n        } else {\r\n            addressList.valueHasMutated();\r\n        }\r\n\r\n        return address;\r\n    };\r\n});\r\n","Magento_Checkout/js/action/get-payment-information.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/url-builder',\r\n    'mage/storage',\r\n    'Magento_Checkout/js/model/error-processor',\r\n    'Magento_Customer/js/model/customer',\r\n    'Magento_Checkout/js/model/payment/method-converter',\r\n    'Magento_Checkout/js/model/payment-service'\r\n], function ($, quote, urlBuilder, storage, errorProcessor, customer, methodConverter, paymentService) {\r\n    'use strict';\r\n\r\n    return function (deferred, messageContainer) {\r\n        var serviceUrl;\r\n\r\n        deferred = deferred || $.Deferred();\r\n\r\n        /**\r\n         * Checkout for guest and registered customer.\r\n         */\r\n        if (!customer.isLoggedIn()) {\r\n            serviceUrl = urlBuilder.createUrl('/guest-carts/:cartId/payment-information', {\r\n                cartId: quote.getQuoteId()\r\n            });\r\n        } else {\r\n            serviceUrl = urlBuilder.createUrl('/carts/mine/payment-information', {});\r\n        }\r\n\r\n        return storage.get(\r\n            serviceUrl, false\r\n        ).done(function (response) {\r\n            quote.setTotals(response.totals);\r\n            paymentService.setPaymentMethods(methodConverter(response['payment_methods']));\r\n            deferred.resolve();\r\n        }).fail(function (response) {\r\n            errorProcessor.process(response, messageContainer);\r\n            deferred.reject();\r\n        });\r\n    };\r\n});\r\n","Magento_Checkout/js/action/get-totals.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    '../model/quote',\r\n    'Magento_Checkout/js/model/resource-url-manager',\r\n    'Magento_Checkout/js/model/error-processor',\r\n    'mage/storage',\r\n    'Magento_Checkout/js/model/totals'\r\n], function ($, quote, resourceUrlManager, errorProcessor, storage, totals) {\r\n    'use strict';\r\n\r\n    return function (callbacks, deferred) {\r\n        deferred = deferred || $.Deferred();\r\n        totals.isLoading(true);\r\n\r\n        return storage.get(\r\n            resourceUrlManager.getUrlForCartTotals(quote),\r\n            false\r\n        ).done(function (response) {\r\n            var proceed = true;\r\n\r\n            totals.isLoading(false);\r\n\r\n            if (callbacks.length > 0) {\r\n                $.each(callbacks, function (index, callback) {\r\n                    proceed = proceed && callback();\r\n                });\r\n            }\r\n\r\n            if (proceed) {\r\n                quote.setTotals(response);\r\n                deferred.resolve();\r\n            }\r\n        }).fail(function (response) {\r\n            totals.isLoading(false);\r\n            deferred.reject();\r\n            errorProcessor.process(response);\r\n        }).always(function () {\r\n            totals.isLoading(false);\r\n        });\r\n    };\r\n});\r\n","Magento_Checkout/js/action/place-order.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/url-builder',\r\n    'Magento_Customer/js/model/customer',\r\n    'Magento_Checkout/js/model/place-order'\r\n], function (quote, urlBuilder, customer, placeOrderService) {\r\n    'use strict';\r\n\r\n    return function (paymentData, messageContainer) {\r\n        var serviceUrl, payload;\r\n\r\n        payload = {\r\n            cartId: quote.getQuoteId(),\r\n            billingAddress: quote.billingAddress(),\r\n            paymentMethod: paymentData\r\n        };\r\n\r\n        if (customer.isLoggedIn()) {\r\n            serviceUrl = urlBuilder.createUrl('/carts/mine/payment-information', {});\r\n        } else {\r\n            serviceUrl = urlBuilder.createUrl('/guest-carts/:quoteId/payment-information', {\r\n                quoteId: quote.getQuoteId()\r\n            });\r\n            payload.email = quote.guestEmail;\r\n        }\r\n\r\n        return placeOrderService(serviceUrl, payload, messageContainer);\r\n    };\r\n});\r\n","Magento_Checkout/js/action/recollect-shipping-rates.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/action/select-shipping-address',\r\n    'Magento_Checkout/js/model/shipping-rate-registry'\r\n], function (quote, selectShippingAddress, rateRegistry) {\r\n    'use strict';\r\n\r\n    return function () {\r\n        var shippingAddress = null;\r\n\r\n        if (!quote.isVirtual()) {\r\n            shippingAddress = quote.shippingAddress();\r\n\r\n            rateRegistry.set(shippingAddress.getCacheKey(), null);\r\n            selectShippingAddress(shippingAddress);\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/action/redirect-on-success.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine(\r\n    [\r\n        'mage/url',\r\n        'Magento_Checkout/js/model/full-screen-loader'\r\n    ],\r\n    function (url, fullScreenLoader) {\r\n        'use strict';\r\n\r\n        return {\r\n            redirectUrl: window.checkoutConfig.defaultSuccessPageUrl,\r\n\r\n            /**\r\n             * Provide redirect to page\r\n             */\r\n            execute: function () {\r\n                fullScreenLoader.startLoader();\r\n                window.location.replace(url.build(this.redirectUrl));\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/action/select-billing-address.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    '../model/quote'\r\n], function ($, quote) {\r\n    'use strict';\r\n\r\n    return function (billingAddress) {\r\n        var address = null;\r\n\r\n        if (quote.shippingAddress() && billingAddress.getCacheKey() == //eslint-disable-line eqeqeq\r\n            quote.shippingAddress().getCacheKey()\r\n        ) {\r\n            address = $.extend(true, {}, billingAddress);\r\n            address.saveInAddressBook = null;\r\n        } else {\r\n            address = billingAddress;\r\n        }\r\n        quote.billingAddress(address);\r\n    };\r\n});\r\n","Magento_Checkout/js/action/select-payment-method.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Checkout/js/model/quote'\r\n], function (quote) {\r\n    'use strict';\r\n\r\n    return function (paymentMethod) {\r\n        if (paymentMethod) {\r\n            paymentMethod.__disableTmpl = {\r\n                title: true\r\n            };\r\n        }\r\n        quote.paymentMethod(paymentMethod);\r\n    };\r\n});\r\n","Magento_Checkout/js/action/select-shipping-address.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Checkout/js/model/quote'\r\n], function (quote) {\r\n    'use strict';\r\n\r\n    return function (shippingAddress) {\r\n        quote.shippingAddress(shippingAddress);\r\n    };\r\n});\r\n","Magento_Checkout/js/action/select-shipping-method.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    '../model/quote'\r\n], function (quote) {\r\n    'use strict';\r\n\r\n    return function (shippingMethod) {\r\n        quote.shippingMethod(shippingMethod);\r\n    };\r\n});\r\n","Magento_Checkout/js/action/set-billing-address.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/url-builder',\r\n        'mage/storage',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'Magento_Customer/js/model/customer',\r\n        'Magento_Checkout/js/model/full-screen-loader',\r\n        'Magento_Checkout/js/action/get-payment-information'\r\n    ],\r\n    function ($,\r\n              quote,\r\n              urlBuilder,\r\n              storage,\r\n              errorProcessor,\r\n              customer,\r\n              fullScreenLoader,\r\n              getPaymentInformationAction\r\n    ) {\r\n        'use strict';\r\n\r\n        return function (messageContainer) {\r\n            var serviceUrl,\r\n                payload;\r\n\r\n            /**\r\n             * Checkout for guest and registered customer.\r\n             */\r\n            if (!customer.isLoggedIn()) {\r\n                serviceUrl = urlBuilder.createUrl('/guest-carts/:cartId/billing-address', {\r\n                    cartId: quote.getQuoteId()\r\n                });\r\n                payload = {\r\n                    cartId: quote.getQuoteId(),\r\n                    address: quote.billingAddress()\r\n                };\r\n            } else {\r\n                serviceUrl = urlBuilder.createUrl('/carts/mine/billing-address', {});\r\n                payload = {\r\n                    cartId: quote.getQuoteId(),\r\n                    address: quote.billingAddress()\r\n                };\r\n            }\r\n\r\n            fullScreenLoader.startLoader();\r\n\r\n            return storage.post(\r\n                serviceUrl, JSON.stringify(payload)\r\n            ).done(\r\n                function () {\r\n                    var deferred = $.Deferred();\r\n\r\n                    getPaymentInformationAction(deferred);\r\n                    $.when(deferred).done(function () {\r\n                        fullScreenLoader.stopLoader();\r\n                    });\r\n                }\r\n            ).fail(\r\n                function (response) {\r\n                    errorProcessor.process(response, messageContainer);\r\n                    fullScreenLoader.stopLoader();\r\n                }\r\n            );\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/action/set-payment-information-extended.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/url-builder',\r\n    'mage/storage',\r\n    'Magento_Checkout/js/model/error-processor',\r\n    'Magento_Customer/js/model/customer',\r\n    'Magento_Checkout/js/action/get-totals',\r\n    'Magento_Checkout/js/model/full-screen-loader',\r\n    'underscore',\r\n    'Magento_Checkout/js/model/payment/place-order-hooks'\r\n], function (quote, urlBuilder, storage, errorProcessor, customer, getTotalsAction, fullScreenLoader, _, hooks) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Filter template data.\r\n     *\r\n     * @param {Object|Array} data\r\n     */\r\n    var filterTemplateData = function (data) {\r\n        return _.each(data, function (value, key, list) {\r\n            if (_.isArray(value) || _.isObject(value)) {\r\n                list[key] = filterTemplateData(value);\r\n            }\r\n\r\n            if (key === '__disableTmpl' || key === 'title') {\r\n                delete list[key];\r\n            }\r\n        });\r\n    };\r\n\r\n    return function (messageContainer, paymentData, skipBilling) {\r\n        var serviceUrl,\r\n            payload,\r\n            headers = {};\r\n\r\n        paymentData = filterTemplateData(paymentData);\r\n        skipBilling = skipBilling || false;\r\n        payload = {\r\n            cartId: quote.getQuoteId(),\r\n            paymentMethod: paymentData\r\n        };\r\n\r\n        /**\r\n         * Checkout for guest and registered customer.\r\n         */\r\n        if (!customer.isLoggedIn()) {\r\n            serviceUrl = urlBuilder.createUrl('/guest-carts/:cartId/set-payment-information', {\r\n                cartId: quote.getQuoteId()\r\n            });\r\n            payload.email = quote.guestEmail;\r\n        } else {\r\n            serviceUrl = urlBuilder.createUrl('/carts/mine/set-payment-information', {});\r\n        }\r\n\r\n        if (skipBilling === false) {\r\n            payload.billingAddress = quote.billingAddress();\r\n        }\r\n\r\n        fullScreenLoader.startLoader();\r\n\r\n        _.each(hooks.requestModifiers, function (modifier) {\r\n            modifier(headers, payload);\r\n        });\r\n\r\n        return storage.post(\r\n            serviceUrl, JSON.stringify(payload), true, 'application/json', headers\r\n        ).fail(\r\n            function (response) {\r\n                errorProcessor.process(response, messageContainer);\r\n            }\r\n        ).always(\r\n            function () {\r\n                fullScreenLoader.stopLoader();\r\n                _.each(hooks.afterRequestListeners, function (listener) {\r\n                    listener();\r\n                });\r\n            }\r\n        );\r\n    };\r\n});\r\n","Magento_Checkout/js/action/set-payment-information.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Checkout/js/action/set-payment-information-extended'\r\n\r\n], function (setPaymentInformationExtended) {\r\n    'use strict';\r\n\r\n    return function (messageContainer, paymentData) {\r\n\r\n        return setPaymentInformationExtended(messageContainer, paymentData, false);\r\n    };\r\n});\r\n","Magento_Checkout/js/action/set-shipping-information.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    '../model/quote',\r\n    'Magento_Checkout/js/model/shipping-save-processor'\r\n], function (quote, shippingSaveProcessor) {\r\n    'use strict';\r\n\r\n    return function () {\r\n        return shippingSaveProcessor.saveShippingInformation(quote.shippingAddress().getType());\r\n    };\r\n});\r\n","Magento_Checkout/js/action/update-shopping-cart.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'mage/validation'\r\n], function (alert, $) {\r\n    'use strict';\r\n\r\n    $.widget('mage.updateShoppingCart', {\r\n        options: {\r\n            validationURL: '',\r\n            eventName: 'updateCartItemQty',\r\n            updateCartActionContainer: ''\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this._on(this.element, {\r\n                'submit': this.onSubmit\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Prevents default submit action and calls form validator.\r\n         *\r\n         * @param {Event} event\r\n         * @return {Boolean}\r\n         */\r\n        onSubmit: function (event) {\r\n            var action = this.element.find(this.options.updateCartActionContainer).val();\r\n\r\n            if (!this.options.validationURL || action === 'empty_cart') {\r\n                return true;\r\n            }\r\n\r\n            if (this.isValid()) {\r\n                event.preventDefault();\r\n                this.validateItems(this.options.validationURL, this.element.serialize());\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Validates requested form.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        isValid: function () {\r\n            return this.element.validation() && this.element.validation('isValid');\r\n        },\r\n\r\n        /**\r\n         * Validates updated shopping cart data.\r\n         *\r\n         * @param {String} url - request url\r\n         * @param {Object} data - post data for ajax call\r\n         */\r\n        validateItems: function (url, data) {\r\n            $.extend(data, {\r\n                'form_key': $.mage.cookies.get('form_key')\r\n            });\r\n\r\n            $.ajax({\r\n                url: url,\r\n                data: data,\r\n                type: 'post',\r\n                dataType: 'json',\r\n                context: this,\r\n\r\n                /** @inheritdoc */\r\n                beforeSend: function () {\r\n                    $(document.body).trigger('processStart');\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                complete: function () {\r\n                    $(document.body).trigger('processStop');\r\n                }\r\n            })\r\n            .done(function (response) {\r\n                if (response.success) {\r\n                    this.onSuccess();\r\n                } else {\r\n                    this.onError(response);\r\n                }\r\n            })\r\n            .fail(function () {\r\n                this.submitForm();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Form validation succeed.\r\n         */\r\n        onSuccess: function () {\r\n            $(document).trigger('ajax:' + this.options.eventName);\r\n            this.submitForm();\r\n        },\r\n\r\n        /**\r\n         * Form validation failed.\r\n         */\r\n        onError: function (response) {\r\n            var that = this,\r\n                elm,\r\n                responseData = JSON.parse(response['error_message']);\r\n\r\n            if (response['error_message']) {\r\n                try {\r\n                    $.each(responseData, function (index, data) {\r\n\r\n                        if (data.itemId !== undefined) {\r\n                            elm = $('#cart-' + data.itemId + '-qty');\r\n                            elm.val(elm.attr('data-item-qty'));\r\n                        }\r\n                        response['error_message'] = data.error;\r\n                    });\r\n                } catch (e) {}\r\n                alert({\r\n                    content: response['error_message'],\r\n                    actions: {\r\n                        /** @inheritdoc */\r\n                        always: function () {\r\n                            that.submitForm();\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                this.submitForm();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Real submit of validated form.\r\n         */\r\n        submitForm: function () {\r\n            this.element\r\n                .off('submit', this.onSubmit)\r\n                .on('submit', function () {\r\n                    $(document.body).trigger('processStart');\r\n                })\r\n                .trigger('submit');\r\n        }\r\n    });\r\n\r\n    return $.mage.updateShoppingCart;\r\n});\r\n","Magento_Checkout/js/model/address-converter.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Checkout/js/model/new-customer-address',\r\n    'Magento_Customer/js/customer-data',\r\n    'mage/utils/objects',\r\n    'underscore'\r\n], function ($, address, customerData, mageUtils, _) {\r\n    'use strict';\r\n\r\n    var countryData = customerData.get('directory-data');\r\n\r\n    return {\r\n        /**\r\n         * Convert address form data to Address object\r\n         *\r\n         * @param {Object} formData\r\n         * @returns {Object}\r\n         */\r\n        formAddressDataToQuoteAddress: function (formData) {\r\n            // clone address form data to new object\r\n            var addressData = $.extend(true, {}, formData),\r\n                region,\r\n                regionName = addressData.region,\r\n                customAttributes;\r\n\r\n            if (mageUtils.isObject(addressData.street)) {\r\n                addressData.street = this.objectToArray(addressData.street);\r\n            }\r\n\r\n            addressData.region = {\r\n                'region_id': addressData['region_id'],\r\n                'region_code': addressData['region_code'],\r\n                region: regionName\r\n            };\r\n\r\n            if (addressData['region_id'] &&\r\n                countryData()[addressData['country_id']] &&\r\n                countryData()[addressData['country_id']].regions\r\n            ) {\r\n                region = countryData()[addressData['country_id']].regions[addressData['region_id']];\r\n\r\n                if (region) {\r\n                    addressData.region['region_id'] = addressData['region_id'];\r\n                    addressData.region['region_code'] = region.code;\r\n                    addressData.region.region = region.name;\r\n                }\r\n            } else if (\r\n                !addressData['region_id'] &&\r\n                countryData()[addressData['country_id']] &&\r\n                countryData()[addressData['country_id']].regions\r\n            ) {\r\n                addressData.region['region_code'] = '';\r\n                addressData.region.region = '';\r\n            }\r\n            delete addressData['region_id'];\r\n\r\n            if (addressData['custom_attributes']) {\r\n                addressData['custom_attributes'] = _.map(\r\n                    addressData['custom_attributes'],\r\n                    function (value, key) {\r\n                        customAttributes = {\r\n                            'attribute_code': key,\r\n                            'value': value\r\n                        };\r\n\r\n                        if (typeof value === 'boolean') {\r\n                            customAttributes = {\r\n                                'attribute_code': key,\r\n                                'value': value,\r\n                                'label': value === true ? 'Yes' : 'No'\r\n                            };\r\n                        }\r\n\r\n                        return customAttributes;\r\n                    }\r\n                );\r\n            }\r\n\r\n            return address(addressData);\r\n        },\r\n\r\n        /**\r\n         * Convert Address object to address form data.\r\n         *\r\n         * @param {Object} addrs\r\n         * @returns {Object}\r\n         */\r\n        quoteAddressToFormAddressData: function (addrs) {\r\n            var self = this,\r\n                output = {},\r\n                streetObject,\r\n                customAttributesObject;\r\n\r\n            $.each(addrs, function (key) {\r\n                if (addrs.hasOwnProperty(key) && typeof addrs[key] !== 'function') {\r\n                    output[self.toUnderscore(key)] = addrs[key];\r\n                }\r\n            });\r\n\r\n            if (Array.isArray(addrs.street)) {\r\n                streetObject = {};\r\n                addrs.street.forEach(function (value, index) {\r\n                    streetObject[index] = value;\r\n                });\r\n                output.street = streetObject;\r\n            }\r\n\r\n            //jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n            if (Array.isArray(addrs.customAttributes)) {\r\n                customAttributesObject = {};\r\n                addrs.customAttributes.forEach(function (value) {\r\n                    customAttributesObject[value.attribute_code] = value.value;\r\n                });\r\n                output.custom_attributes = customAttributesObject;\r\n            }\r\n            //jscs:enable requireCamelCaseOrUpperCaseIdentifiers\r\n\r\n            return output;\r\n        },\r\n\r\n        /**\r\n         * @param {String} string\r\n         */\r\n        toUnderscore: function (string) {\r\n            return string.replace(/([A-Z])/g, function ($1) {\r\n                return '_' + $1.toLowerCase();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {Object} formProviderData\r\n         * @param {String} formIndex\r\n         * @return {Object}\r\n         */\r\n        formDataProviderToFlatData: function (formProviderData, formIndex) {\r\n            var addressData = {};\r\n\r\n            $.each(formProviderData, function (path, value) {\r\n                var pathComponents = path.split('.'),\r\n                    dataObject = {};\r\n\r\n                pathComponents.splice(pathComponents.indexOf(formIndex), 1);\r\n                pathComponents.reverse();\r\n                $.each(pathComponents, function (index, pathPart) {\r\n                    var parent = {};\r\n\r\n                    if (index == 0) { //eslint-disable-line eqeqeq\r\n                        dataObject[pathPart] = value;\r\n                    } else {\r\n                        parent[pathPart] = dataObject;\r\n                        dataObject = parent;\r\n                    }\r\n                });\r\n                $.extend(true, addressData, dataObject);\r\n            });\r\n\r\n            return addressData;\r\n        },\r\n\r\n        /**\r\n         * Convert object to array\r\n         * @param {Object} object\r\n         * @returns {Array}\r\n         */\r\n        objectToArray: function (object) {\r\n            var convertedArray = [];\r\n\r\n            $.each(object, function (key) {\r\n                return typeof object[key] === 'string' ? convertedArray.push(object[key]) : false;\r\n            });\r\n\r\n            return convertedArray.slice(0);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} addrs\r\n         * @return {*|Object}\r\n         */\r\n        addressToEstimationAddress: function (addrs) {\r\n            var self = this,\r\n                estimatedAddressData = {};\r\n\r\n            $.each(addrs, function (key) {\r\n                estimatedAddressData[self.toUnderscore(key)] = addrs[key];\r\n            });\r\n\r\n            return this.formAddressDataToQuoteAddress(estimatedAddressData);\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/authentication-messages.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'Magento_Ui/js/model/messages'\r\n], function (ko, Messages) {\r\n    'use strict';\r\n\r\n    return new Messages();\r\n});\r\n","Magento_Checkout/js/model/billing-address-postcode-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n           'jquery',\r\n           'Magento_Checkout/js/model/postcode-validator',\r\n           'mage/translate',\r\n           'uiRegistry'\r\n       ], function (\r\n    $,\r\n    postcodeValidator,\r\n    $t,\r\n    uiRegistry\r\n) {\r\n    'use strict';\r\n\r\n    var postcodeElementName = 'postcode';\r\n\r\n    return {\r\n        validateZipCodeTimeout: 0,\r\n        validateDelay: 2000,\r\n\r\n        /**\r\n         * Perform postponed binding for fieldset elements\r\n         *\r\n         * @param {String} formPath\r\n         */\r\n        initFields: function (formPath) {\r\n            var self = this;\r\n\r\n            uiRegistry.async(formPath + '.' + postcodeElementName)(self.bindHandler.bind(self));\r\n        },\r\n\r\n        /**\r\n         * @param {Object} element\r\n         * @param {Number} delay\r\n         */\r\n        bindHandler: function (element, delay) {\r\n            var self = this;\r\n\r\n            delay = typeof delay === 'undefined' ? self.validateDelay : delay;\r\n\r\n            element.on('value', function () {\r\n                clearTimeout(self.validateZipCodeTimeout);\r\n                self.validateZipCodeTimeout = setTimeout(function () {\r\n                    self.postcodeValidation(element);\r\n                }, delay);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {Object} postcodeElement\r\n         * @return {*}\r\n         */\r\n        postcodeValidation: function (postcodeElement) {\r\n            var countryId = $('select[name=\"country_id\"]:visible').val(),\r\n                validationResult,\r\n                warnMessage;\r\n\r\n            if (postcodeElement == null || postcodeElement.value() == null) {\r\n                return true;\r\n            }\r\n\r\n            postcodeElement.warn(null);\r\n            validationResult = postcodeValidator.validate(postcodeElement.value(), countryId);\r\n\r\n            if (!validationResult) {\r\n                warnMessage = $t('Provided Zip/Postal Code seems to be invalid.');\r\n\r\n                if (postcodeValidator.validatedPostCodeExample.length) {\r\n                    warnMessage += $t(' Example: ') + postcodeValidator.validatedPostCodeExample.join('; ') + '. ';\r\n                }\r\n                warnMessage += $t('If you believe it is the right one you can ignore this notice.');\r\n                postcodeElement.warn(warnMessage);\r\n            }\r\n\r\n            return validationResult;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/checkout-data-resolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * Checkout adapter for customer data storage\r\n */\r\ndefine([\r\n    'Magento_Customer/js/model/address-list',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/checkout-data',\r\n    'Magento_Checkout/js/action/create-shipping-address',\r\n    'Magento_Checkout/js/action/select-shipping-address',\r\n    'Magento_Checkout/js/action/select-shipping-method',\r\n    'Magento_Checkout/js/model/payment-service',\r\n    'Magento_Checkout/js/action/select-payment-method',\r\n    'Magento_Checkout/js/model/address-converter',\r\n    'Magento_Checkout/js/action/select-billing-address',\r\n    'Magento_Checkout/js/action/create-billing-address',\r\n    'underscore'\r\n], function (\r\n    addressList,\r\n    quote,\r\n    checkoutData,\r\n    createShippingAddress,\r\n    selectShippingAddress,\r\n    selectShippingMethodAction,\r\n    paymentService,\r\n    selectPaymentMethodAction,\r\n    addressConverter,\r\n    selectBillingAddress,\r\n    createBillingAddress,\r\n    _\r\n) {\r\n    'use strict';\r\n\r\n    var isBillingAddressResolvedFromBackend = false;\r\n\r\n    return {\r\n\r\n        /**\r\n         * Resolve estimation address. Used local storage\r\n         */\r\n        resolveEstimationAddress: function () {\r\n            var address;\r\n\r\n            if (quote.isVirtual()) {\r\n                if (checkoutData.getBillingAddressFromData()) {\r\n                    address = addressConverter.formAddressDataToQuoteAddress(\r\n                        checkoutData.getBillingAddressFromData()\r\n                    );\r\n                    selectBillingAddress(address);\r\n                } else {\r\n                    this.resolveBillingAddress();\r\n                }\r\n            } else if (checkoutData.getShippingAddressFromData()) {\r\n                address = addressConverter.formAddressDataToQuoteAddress(checkoutData.getShippingAddressFromData());\r\n                selectShippingAddress(address);\r\n            } else {\r\n                this.resolveShippingAddress();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Resolve shipping address. Used local storage\r\n         */\r\n        resolveShippingAddress: function () {\r\n            var newCustomerShippingAddress;\r\n\r\n            if (!checkoutData.getShippingAddressFromData() &&\r\n                window.checkoutConfig.shippingAddressFromData\r\n            ) {\r\n                checkoutData.setShippingAddressFromData(window.checkoutConfig.shippingAddressFromData);\r\n            }\r\n\r\n            newCustomerShippingAddress = checkoutData.getNewCustomerShippingAddress();\r\n\r\n            if (newCustomerShippingAddress) {\r\n                createShippingAddress(newCustomerShippingAddress);\r\n            }\r\n            this.applyShippingAddress();\r\n        },\r\n\r\n        /**\r\n         * Apply resolved estimated address to quote\r\n         *\r\n         * @param {Object} isEstimatedAddress\r\n         */\r\n        applyShippingAddress: function (isEstimatedAddress) {\r\n            var address,\r\n                shippingAddress,\r\n                isConvertAddress;\r\n\r\n            if (addressList().length === 0) {\r\n                address = addressConverter.formAddressDataToQuoteAddress(\r\n                    checkoutData.getShippingAddressFromData()\r\n                );\r\n                selectShippingAddress(address);\r\n            }\r\n            shippingAddress = quote.shippingAddress();\r\n            isConvertAddress = isEstimatedAddress || false;\r\n\r\n            if (!shippingAddress) {\r\n                shippingAddress = this.getShippingAddressFromCustomerAddressList();\r\n\r\n                if (shippingAddress) {\r\n                    selectShippingAddress(\r\n                        isConvertAddress ?\r\n                            addressConverter.addressToEstimationAddress(shippingAddress)\r\n                            : shippingAddress\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {Object} ratesData\r\n         */\r\n        resolveShippingRates: function (ratesData) {\r\n            var selectedShippingRate = checkoutData.getSelectedShippingRate(),\r\n                availableRate = false;\r\n\r\n            if (ratesData.length === 1 && !quote.shippingMethod()) {\r\n                //set shipping rate if we have only one available shipping rate\r\n                selectShippingMethodAction(ratesData[0]);\r\n\r\n                return;\r\n            }\r\n\r\n            if (quote.shippingMethod()) {\r\n                availableRate = _.find(ratesData, function (rate) {\r\n                    return rate['carrier_code'] == quote.shippingMethod()['carrier_code'] && //eslint-disable-line\r\n                        rate['method_code'] == quote.shippingMethod()['method_code']; //eslint-disable-line eqeqeq\r\n                });\r\n            }\r\n\r\n            if (!availableRate && selectedShippingRate) {\r\n                availableRate = _.find(ratesData, function (rate) {\r\n                    return rate['carrier_code'] + '_' + rate['method_code'] === selectedShippingRate;\r\n                });\r\n            }\r\n\r\n            if (!availableRate && window.checkoutConfig.selectedShippingMethod) {\r\n                availableRate = _.find(ratesData, function (rate) {\r\n                    var selectedShippingMethod = window.checkoutConfig.selectedShippingMethod;\r\n\r\n                    return rate['carrier_code'] == selectedShippingMethod['carrier_code'] && //eslint-disable-line\r\n                        rate['method_code'] == selectedShippingMethod['method_code']; //eslint-disable-line eqeqeq\r\n                });\r\n            }\r\n\r\n            //Unset selected shipping method if not available\r\n            if (!availableRate) {\r\n                selectShippingMethodAction(null);\r\n            } else {\r\n                selectShippingMethodAction(availableRate);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Resolve payment method. Used local storage\r\n         */\r\n        resolvePaymentMethod: function () {\r\n            var availablePaymentMethods = paymentService.getAvailablePaymentMethods(),\r\n                selectedPaymentMethod = checkoutData.getSelectedPaymentMethod();\r\n\r\n            if (selectedPaymentMethod) {\r\n                availablePaymentMethods.some(function (payment) {\r\n                    if (payment.method == selectedPaymentMethod) { //eslint-disable-line eqeqeq\r\n                        selectPaymentMethodAction(payment);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Resolve billing address. Used local storage\r\n         */\r\n        resolveBillingAddress: function () {\r\n            var selectedBillingAddress,\r\n                newCustomerBillingAddressData;\r\n\r\n            selectedBillingAddress = checkoutData.getSelectedBillingAddress();\r\n            newCustomerBillingAddressData = checkoutData.getNewCustomerBillingAddress();\r\n\r\n            if (selectedBillingAddress) {\r\n                if (selectedBillingAddress === 'new-customer-billing-address' && newCustomerBillingAddressData) {\r\n                    selectBillingAddress(createBillingAddress(newCustomerBillingAddressData));\r\n                } else {\r\n                    addressList.some(function (address) {\r\n                        if (selectedBillingAddress === address.getKey()) {\r\n                            selectBillingAddress(address);\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                this.applyBillingAddress();\r\n            }\r\n\r\n            if (!isBillingAddressResolvedFromBackend &&\r\n                !checkoutData.getBillingAddressFromData() &&\r\n                !_.isEmpty(window.checkoutConfig.billingAddressFromData) &&\r\n                !quote.billingAddress()\r\n            ) {\r\n                if (window.checkoutConfig.isBillingAddressFromDataValid === true) {\r\n                    selectBillingAddress(createBillingAddress(window.checkoutConfig.billingAddressFromData));\r\n                } else {\r\n                    checkoutData.setBillingAddressFromData(window.checkoutConfig.billingAddressFromData);\r\n                }\r\n                isBillingAddressResolvedFromBackend = true;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Apply resolved billing address to quote\r\n         */\r\n        applyBillingAddress: function () {\r\n            var shippingAddress,\r\n                isBillingAddressInitialized;\r\n\r\n            if (quote.billingAddress()) {\r\n                selectBillingAddress(quote.billingAddress());\r\n\r\n                return;\r\n            }\r\n\r\n            if (quote.isVirtual() || !quote.billingAddress()) {\r\n                isBillingAddressInitialized = addressList.some(function (addrs) {\r\n                    if (addrs.isDefaultBilling()) {\r\n                        selectBillingAddress(addrs);\r\n\r\n                        return true;\r\n                    }\r\n\r\n                    return false;\r\n                });\r\n            }\r\n\r\n            shippingAddress = quote.shippingAddress();\r\n\r\n            if (!isBillingAddressInitialized &&\r\n                shippingAddress &&\r\n                shippingAddress.canUseForBilling() &&\r\n                (shippingAddress.isDefaultShipping() || !quote.isVirtual())\r\n            ) {\r\n                //set billing address same as shipping by default if it is not empty\r\n                selectBillingAddress(quote.shippingAddress());\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get shipping address from address list\r\n         *\r\n         * @return {Object|null}\r\n         */\r\n        getShippingAddressFromCustomerAddressList: function () {\r\n            var shippingAddress = _.find(\r\n                    addressList(),\r\n                    function (address) {\r\n                        return checkoutData.getSelectedShippingAddress() == address.getKey() //eslint-disable-line\r\n                    }\r\n                );\r\n\r\n            if (!shippingAddress) {\r\n                shippingAddress = _.find(\r\n                    addressList(),\r\n                    function (address) {\r\n                        return address.isDefaultShipping();\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (!shippingAddress && addressList().length === 1) {\r\n                shippingAddress = addressList()[0];\r\n            }\r\n\r\n            return shippingAddress;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/customer-email-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/model/customer',\r\n    'mage/validation'\r\n], function ($, customer) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * Validate checkout agreements\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function () {\r\n            var emailValidationResult = customer.isLoggedIn(),\r\n                loginFormSelector = 'form[data-role=email-with-possible-login]';\r\n\r\n            if (!customer.isLoggedIn()) {\r\n                $(loginFormSelector).validation();\r\n                emailValidationResult = Boolean($(loginFormSelector + ' input[name=username]').valid());\r\n            }\r\n\r\n            return emailValidationResult;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/default-post-code-resolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * Define necessity of using default post code value\r\n     */\r\n    var useDefaultPostCode;\r\n\r\n    return {\r\n        /**\r\n         * Resolve default post code\r\n         *\r\n         * @returns {String|null}\r\n         */\r\n        resolve: function () {\r\n            return useDefaultPostCode ?  window.checkoutConfig.defaultPostcode : null;\r\n        },\r\n\r\n        /**\r\n         * Set state to useDefaultPostCode variable\r\n         *\r\n         * @param {Boolean} shouldUseDefaultPostCode\r\n         * @returns {underscore}\r\n         */\r\n        setUseDefaultPostCode: function (shouldUseDefaultPostCode) {\r\n            useDefaultPostCode = shouldUseDefaultPostCode;\r\n\r\n            return this;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/default-validation-rules.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getRules: function () {\r\n            return {\r\n                'country_id': {\r\n                    'required': true\r\n                }\r\n            };\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/default-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mageUtils',\r\n    './default-validation-rules',\r\n    'mage/translate'\r\n], function ($, utils, validationRules, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        validationErrors: [],\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {Boolean}\r\n         */\r\n        validate: function (address) {\r\n            var self = this;\r\n\r\n            this.validationErrors = [];\r\n            $.each(validationRules.getRules(), function (field, rule) {\r\n                var message;\r\n\r\n                if (rule.required && utils.isEmpty(address[field])) {\r\n                    message = $t('Field ') + field + $t(' is required.');\r\n\r\n                    self.validationErrors.push(message);\r\n                }\r\n            });\r\n\r\n            return !this.validationErrors.length;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/error-processor.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'mage/url',\r\n    'Magento_Ui/js/model/messageList',\r\n    'mage/translate'\r\n], function (url, globalMessageList, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @param {Object} response\r\n         * @param {Object} messageContainer\r\n         */\r\n        process: function (response, messageContainer) {\r\n            var error;\r\n\r\n            messageContainer = messageContainer || globalMessageList;\r\n\r\n            if (response.status == 401) { //eslint-disable-line eqeqeq\r\n                window.location.replace(url.build('customer/account/login/'));\r\n            } else {\r\n                try {\r\n                    error = JSON.parse(response.responseText);\r\n                } catch (exception) {\r\n                    error = {\r\n                        message: $t('Something went wrong with your request. Please try again later.')\r\n                    };\r\n                }\r\n                messageContainer.addErrorMessage(error);\r\n            }\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/full-screen-loader.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'rjsResolver'\r\n], function ($, resolver) {\r\n    'use strict';\r\n\r\n    var containerId = '#checkout';\r\n\r\n    return {\r\n\r\n        /**\r\n         * Start full page loader action\r\n         */\r\n        startLoader: function () {\r\n            $(containerId).trigger('processStart');\r\n        },\r\n\r\n        /**\r\n         * Stop full page loader action\r\n         *\r\n         * @param {Boolean} [forceStop]\r\n         */\r\n        stopLoader: function (forceStop) {\r\n            var $elem = $(containerId),\r\n                stop = $elem.trigger.bind($elem, 'processStop'); //eslint-disable-line jquery-no-bind-unbind\r\n\r\n            forceStop ? stop() : resolver(stop);\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/new-customer-address.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Checkout/js/model/default-post-code-resolver'\r\n], function (_, DefaultPostCodeResolver) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {Object} addressData\r\n     * Returns new address object\r\n     */\r\n    return function (addressData) {\r\n        var identifier = Date.now(),\r\n            countryId = addressData['country_id'] || addressData.countryId || window.checkoutConfig.defaultCountryId,\r\n            regionId;\r\n\r\n        if (addressData.region && addressData.region['region_id']) {\r\n            regionId = addressData.region['region_id'];\r\n        } else if (!addressData['region_id']) {\r\n            regionId = undefined;\r\n        } else if (\r\n            /* eslint-disable */\r\n            addressData['country_id'] && addressData['country_id'] == window.checkoutConfig.defaultCountryId ||\r\n            !addressData['country_id'] && countryId == window.checkoutConfig.defaultCountryId\r\n            /* eslint-enable */\r\n        ) {\r\n            regionId = window.checkoutConfig.defaultRegionId || undefined;\r\n        }\r\n\r\n        return {\r\n            email: addressData.email,\r\n            countryId: countryId,\r\n            regionId: regionId || addressData.regionId,\r\n            regionCode: addressData.region ? addressData.region['region_code'] : null,\r\n            region: addressData.region ? addressData.region.region : null,\r\n            customerId: addressData['customer_id'] || addressData.customerId,\r\n            street: addressData.street ? _.compact(addressData.street) : addressData.street,\r\n            company: addressData.company,\r\n            telephone: addressData.telephone,\r\n            fax: addressData.fax,\r\n            postcode: addressData.postcode ? addressData.postcode : DefaultPostCodeResolver.resolve(),\r\n            city: addressData.city,\r\n            firstname: addressData.firstname,\r\n            lastname: addressData.lastname,\r\n            middlename: addressData.middlename,\r\n            prefix: addressData.prefix,\r\n            suffix: addressData.suffix,\r\n            vatId: addressData['vat_id'],\r\n            saveInAddressBook: addressData['save_in_address_book'],\r\n            customAttributes: addressData['custom_attributes'],\r\n            extensionAttributes: addressData['extension_attributes'],\r\n\r\n            /**\r\n             * @return {*}\r\n             */\r\n            isDefaultShipping: function () {\r\n                return addressData['default_shipping'];\r\n            },\r\n\r\n            /**\r\n             * @return {*}\r\n             */\r\n            isDefaultBilling: function () {\r\n                return addressData['default_billing'];\r\n            },\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getType: function () {\r\n                return 'new-customer-address';\r\n            },\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getKey: function () {\r\n                return this.getType();\r\n            },\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getCacheKey: function () {\r\n                return this.getType() + identifier;\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            isEditable: function () {\r\n                return true;\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            canUseForBilling: function () {\r\n                return true;\r\n            }\r\n        };\r\n    };\r\n});\r\n","Magento_Checkout/js/model/payment-service.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/payment/method-list',\r\n    'Magento_Checkout/js/action/select-payment-method'\r\n], function (_, quote, methodList, selectPaymentMethod) {\r\n    'use strict';\r\n\r\n    /**\r\n    * Free method filter\r\n    * @param {Object} paymentMethod\r\n    * @return {Boolean}\r\n    */\r\n    var isFreePaymentMethod = function (paymentMethod) {\r\n            return paymentMethod.method === 'free';\r\n        },\r\n\r\n        /**\r\n         * Grabs the grand total from quote\r\n         * @return {Number}\r\n         */\r\n        getGrandTotal = function () {\r\n            return quote.totals()['grand_total'];\r\n        };\r\n\r\n    return {\r\n        isFreeAvailable: false,\r\n\r\n        /**\r\n         * Populate the list of payment methods\r\n         * @param {Array} methods\r\n         */\r\n        setPaymentMethods: function (methods) {\r\n            var freeMethod,\r\n                filteredMethods,\r\n                methodIsAvailable,\r\n                methodNames;\r\n\r\n            freeMethod = _.find(methods, isFreePaymentMethod);\r\n            this.isFreeAvailable = !!freeMethod;\r\n\r\n            if (freeMethod && getGrandTotal() <= 0) {\r\n                methods.splice(0, methods.length, freeMethod);\r\n                selectPaymentMethod(freeMethod);\r\n            }\r\n\r\n            filteredMethods = _.without(methods, freeMethod);\r\n\r\n            if (filteredMethods.length === 1) {\r\n                selectPaymentMethod(filteredMethods[0]);\r\n            } else if (quote.paymentMethod()) {\r\n                methodIsAvailable = methods.some(function (item) {\r\n                    return item.method === quote.paymentMethod().method;\r\n                });\r\n                //Unset selected payment method if not available\r\n                if (!methodIsAvailable) {\r\n                    selectPaymentMethod(null);\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Overwrite methods with existing methods to preserve ko array references.\r\n             * This prevent ko from re-rendering those methods.\r\n             */\r\n            methodNames = _.pluck(methods, 'method');\r\n            _.map(methodList(), function (existingMethod) {\r\n                var existingMethodIndex = methodNames.indexOf(existingMethod.method);\r\n\r\n                if (existingMethodIndex !== -1) {\r\n                    methods[existingMethodIndex] = existingMethod;\r\n                }\r\n            });\r\n\r\n            methodList(methods);\r\n        },\r\n\r\n        /**\r\n         * Get the list of available payment methods.\r\n         * @return {Array}\r\n         */\r\n        getAvailablePaymentMethods: function () {\r\n            var allMethods = methodList().slice(),\r\n                grandTotalOverZero = getGrandTotal() > 0;\r\n\r\n            if (!this.isFreeAvailable) {\r\n                return allMethods;\r\n            }\r\n\r\n            if (grandTotalOverZero) {\r\n                return _.reject(allMethods, isFreePaymentMethod);\r\n            }\r\n\r\n            return _.filter(allMethods, isFreePaymentMethod);\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/place-order.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * @api\r\n */\r\ndefine(\r\n    [\r\n        'mage/storage',\r\n        'Magento_Checkout/js/model/error-processor',\r\n        'Magento_Checkout/js/model/full-screen-loader',\r\n        'Magento_Customer/js/customer-data',\r\n        'Magento_Checkout/js/model/payment/place-order-hooks',\r\n        'underscore'\r\n    ],\r\n    function (storage, errorProcessor, fullScreenLoader, customerData, hooks, _) {\r\n        'use strict';\r\n\r\n        return function (serviceUrl, payload, messageContainer) {\r\n            var headers = {};\r\n\r\n            fullScreenLoader.startLoader();\r\n            _.each(hooks.requestModifiers, function (modifier) {\r\n                modifier(headers, payload);\r\n            });\r\n\r\n            return storage.post(\r\n                serviceUrl, JSON.stringify(payload), true, 'application/json', headers\r\n            ).fail(\r\n                function (response) {\r\n                    errorProcessor.process(response, messageContainer);\r\n                }\r\n            ).done(\r\n                function (response) {\r\n                    var clearData = {\r\n                        'selectedShippingAddress': null,\r\n                        'shippingAddressFromData': null,\r\n                        'newCustomerShippingAddress': null,\r\n                        'selectedShippingRate': null,\r\n                        'selectedPaymentMethod': null,\r\n                        'selectedBillingAddress': null,\r\n                        'billingAddressFromData': null,\r\n                        'newCustomerBillingAddress': null\r\n                    };\r\n\r\n                    if (response.responseType !== 'error') {\r\n                        customerData.set('checkout-data', clearData);\r\n                    }\r\n                }\r\n            ).always(\r\n                function () {\r\n                    fullScreenLoader.stopLoader();\r\n                    _.each(hooks.afterRequestListeners, function (listener) {\r\n                        listener();\r\n                    });\r\n                }\r\n            );\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/postcode-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'mageUtils'\r\n], function (utils) {\r\n    'use strict';\r\n\r\n    return {\r\n        validatedPostCodeExample: [],\r\n\r\n        /**\r\n         * @param {*} postCode\r\n         * @param {*} countryId\r\n         * @param {Array} postCodesPatterns\r\n         * @return {Boolean}\r\n         */\r\n        validate: function (postCode, countryId, postCodesPatterns) {\r\n            var pattern, regex,\r\n                patterns = postCodesPatterns ? postCodesPatterns[countryId] :\r\n                    window.checkoutConfig.postCodes[countryId];\r\n\r\n            this.validatedPostCodeExample = [];\r\n\r\n            if (!utils.isEmpty(postCode) && !utils.isEmpty(patterns)) {\r\n                for (pattern in patterns) {\r\n                    if (patterns.hasOwnProperty(pattern)) { //eslint-disable-line max-depth\r\n                        this.validatedPostCodeExample.push(patterns[pattern].example);\r\n                        regex = new RegExp(patterns[pattern].pattern);\r\n\r\n                        if (regex.test(postCode)) { //eslint-disable-line max-depth\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/quote.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'domReady!'\r\n], function (ko, _) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Get totals data from the extension attributes.\r\n     * @param {*} data\r\n     * @returns {*}\r\n     */\r\n    var proceedTotalsData = function (data) {\r\n            if (_.isObject(data) && _.isObject(data['extension_attributes'])) {\r\n                _.each(data['extension_attributes'], function (element, index) {\r\n                    data[index] = element;\r\n                });\r\n            }\r\n\r\n            return data;\r\n        },\r\n        billingAddress = ko.observable(null),\r\n        shippingAddress = ko.observable(null),\r\n        shippingMethod = ko.observable(null),\r\n        paymentMethod = ko.observable(null),\r\n        quoteData = window.checkoutConfig.quoteData,\r\n        basePriceFormat = window.checkoutConfig.basePriceFormat,\r\n        priceFormat = window.checkoutConfig.priceFormat,\r\n        storeCode = window.checkoutConfig.storeCode,\r\n        totalsData = proceedTotalsData(window.checkoutConfig.totalsData),\r\n        totals = ko.observable(totalsData),\r\n        collectedTotals = ko.observable({});\r\n\r\n    return {\r\n        totals: totals,\r\n        shippingAddress: shippingAddress,\r\n        shippingMethod: shippingMethod,\r\n        billingAddress: billingAddress,\r\n        paymentMethod: paymentMethod,\r\n        guestEmail: null,\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getQuoteId: function () {\r\n            return quoteData['entity_id'];\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isVirtual: function () {\r\n            return !!Number(quoteData['is_virtual']);\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getPriceFormat: function () {\r\n            return priceFormat;\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getBasePriceFormat: function () {\r\n            return basePriceFormat;\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getItems: function () {\r\n            return window.checkoutConfig.quoteItemData;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @return {*}\r\n         */\r\n        getTotals: function () {\r\n            return totals;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} data\r\n         */\r\n        setTotals: function (data) {\r\n            data = proceedTotalsData(data);\r\n            totals(data);\r\n            this.setCollectedTotals('subtotal_with_discount', parseFloat(data['subtotal_with_discount']));\r\n        },\r\n\r\n        /**\r\n         * @param {*} paymentMethodCode\r\n         */\r\n        setPaymentMethod: function (paymentMethodCode) {\r\n            paymentMethod(paymentMethodCode);\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getPaymentMethod: function () {\r\n            return paymentMethod;\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getStoreCode: function () {\r\n            return storeCode;\r\n        },\r\n\r\n        /**\r\n         * @param {String} code\r\n         * @param {*} value\r\n         */\r\n        setCollectedTotals: function (code, value) {\r\n            var colTotals = collectedTotals();\r\n\r\n            colTotals[code] = value;\r\n            collectedTotals(colTotals);\r\n        },\r\n\r\n        /**\r\n         * @return {Number}\r\n         */\r\n        getCalculatedTotal: function () {\r\n            var total = 0.; //eslint-disable-line no-floating-decimal\r\n\r\n            _.each(collectedTotals(), function (value) {\r\n                total += value;\r\n            });\r\n\r\n            return total;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/resource-url-manager.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Customer/js/model/customer',\r\n    'Magento_Checkout/js/model/url-builder',\r\n    'mageUtils'\r\n], function (customer, urlBuilder, utils) {\r\n        'use strict';\r\n\r\n        return {\r\n            /**\r\n             * @param {Object} quote\r\n             * @return {*}\r\n             */\r\n            getUrlForTotalsEstimationForNewAddress: function (quote) {\r\n                var params = this.getCheckoutMethod() == 'guest' ? //eslint-disable-line eqeqeq\r\n                        {\r\n                            cartId: quote.getQuoteId()\r\n                        } : {},\r\n                    urls = {\r\n                        'guest': '/guest-carts/:cartId/totals-information',\r\n                        'customer': '/carts/mine/totals-information'\r\n                    };\r\n\r\n                return this.getUrl(urls, params);\r\n            },\r\n\r\n            /**\r\n             * @param {Object} quote\r\n             * @return {*}\r\n             */\r\n            getUrlForEstimationShippingMethodsForNewAddress: function (quote) {\r\n                var params = this.getCheckoutMethod() == 'guest' ? //eslint-disable-line eqeqeq\r\n                        {\r\n                            quoteId: quote.getQuoteId()\r\n                        } : {},\r\n                    urls = {\r\n                        'guest': '/guest-carts/:quoteId/estimate-shipping-methods',\r\n                        'customer': '/carts/mine/estimate-shipping-methods'\r\n                    };\r\n\r\n                return this.getUrl(urls, params);\r\n            },\r\n\r\n            /**\r\n             * @param {Object} quote\r\n             * @return {*}\r\n             */\r\n            getUrlForEstimationShippingMethodsByAddressId: function (quote) {\r\n                var params = this.getCheckoutMethod() == 'guest' ? //eslint-disable-line eqeqeq\r\n                        {\r\n                            quoteId: quote.getQuoteId()\r\n                        } : {},\r\n                    urls = {\r\n                        'default': '/carts/mine/estimate-shipping-methods-by-address-id'\r\n                    };\r\n\r\n                return this.getUrl(urls, params);\r\n            },\r\n\r\n            /**\r\n             * @param {String} couponCode\r\n             * @param {String} quoteId\r\n             * @return {*}\r\n             */\r\n            getApplyCouponUrl: function (couponCode, quoteId) {\r\n                var params = this.getCheckoutMethod() == 'guest' ? //eslint-disable-line eqeqeq\r\n                        {\r\n                            quoteId: quoteId\r\n                        } : {},\r\n                    urls = {\r\n                        'guest': '/guest-carts/' + quoteId + '/coupons/' + encodeURIComponent(couponCode),\r\n                        'customer': '/carts/mine/coupons/' + encodeURIComponent(couponCode)\r\n                    };\r\n\r\n                return this.getUrl(urls, params);\r\n            },\r\n\r\n            /**\r\n             * @param {String} quoteId\r\n             * @return {*}\r\n             */\r\n            getCancelCouponUrl: function (quoteId) {\r\n                var params = this.getCheckoutMethod() == 'guest' ? //eslint-disable-line eqeqeq\r\n                        {\r\n                            quoteId: quoteId\r\n                        } : {},\r\n                    urls = {\r\n                        'guest': '/guest-carts/' + quoteId + '/coupons/',\r\n                        'customer': '/carts/mine/coupons/'\r\n                    };\r\n\r\n                return this.getUrl(urls, params);\r\n            },\r\n\r\n            /**\r\n             * @param {Object} quote\r\n             * @return {*}\r\n             */\r\n            getUrlForCartTotals: function (quote) {\r\n                var params = this.getCheckoutMethod() == 'guest' ? //eslint-disable-line eqeqeq\r\n                        {\r\n                            quoteId: quote.getQuoteId()\r\n                        } : {},\r\n                    urls = {\r\n                        'guest': '/guest-carts/:quoteId/totals',\r\n                        'customer': '/carts/mine/totals'\r\n                    };\r\n\r\n                return this.getUrl(urls, params);\r\n            },\r\n\r\n            /**\r\n             * @param {Object} quote\r\n             * @return {*}\r\n             */\r\n            getUrlForSetShippingInformation: function (quote) {\r\n                var params = this.getCheckoutMethod() == 'guest' ? //eslint-disable-line eqeqeq\r\n                        {\r\n                            cartId: quote.getQuoteId()\r\n                        } : {},\r\n                    urls = {\r\n                        'guest': '/guest-carts/:cartId/shipping-information',\r\n                        'customer': '/carts/mine/shipping-information'\r\n                    };\r\n\r\n                return this.getUrl(urls, params);\r\n            },\r\n\r\n            /**\r\n             * Get url for service.\r\n             *\r\n             * @param {*} urls\r\n             * @param {*} urlParams\r\n             * @return {String|*}\r\n             */\r\n            getUrl: function (urls, urlParams) {\r\n                var url;\r\n\r\n                if (utils.isEmpty(urls)) {\r\n                    return 'Provided service call does not exist.';\r\n                }\r\n\r\n                if (!utils.isEmpty(urls['default'])) {\r\n                    url = urls['default'];\r\n                } else {\r\n                    url = urls[this.getCheckoutMethod()];\r\n                }\r\n\r\n                return urlBuilder.createUrl(url, urlParams);\r\n            },\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getCheckoutMethod: function () {\r\n                return customer.isLoggedIn() ? 'customer' : 'guest';\r\n            }\r\n        };\r\n    }\r\n);\r\n","Magento_Checkout/js/model/shipping-rate-registry.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    var cache = [];\r\n\r\n    return {\r\n        /**\r\n         * @param {String} addressKey\r\n         * @return {*}\r\n         */\r\n        get: function (addressKey) {\r\n            if (cache[addressKey]) {\r\n                return cache[addressKey];\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * @param {String} addressKey\r\n         * @param {*} data\r\n         */\r\n        set: function (addressKey, data) {\r\n            cache[addressKey] = data;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/shipping-rate-service.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/shipping-rate-processor/new-address',\r\n    'Magento_Checkout/js/model/shipping-rate-processor/customer-address'\r\n], function (quote, defaultProcessor, customerAddressProcessor) {\r\n    'use strict';\r\n\r\n    var processors = {};\r\n\r\n    processors.default =  defaultProcessor;\r\n    processors['customer-address'] = customerAddressProcessor;\r\n\r\n    quote.shippingAddress.subscribe(function () {\r\n        var type = quote.shippingAddress().getType();\r\n\r\n        if (processors[type]) {\r\n            processors[type].getRates(quote.shippingAddress());\r\n        } else {\r\n            processors.default.getRates(quote.shippingAddress());\r\n        }\r\n    });\r\n\r\n    return {\r\n        /**\r\n         * @param {String} type\r\n         * @param {*} processor\r\n         */\r\n        registerProcessor: function (type, processor) {\r\n            processors[type] = processor;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/shipping-rates-validation-rules.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine(['jquery'], function ($) {\r\n    'use strict';\r\n\r\n    var ratesRules = {},\r\n        checkoutConfig = window.checkoutConfig;\r\n\r\n    return {\r\n        /**\r\n         * @param {String} carrier\r\n         * @param {Object} rules\r\n         */\r\n        registerRules: function (carrier, rules) {\r\n            if (checkoutConfig.activeCarriers.indexOf(carrier) !== -1) {\r\n                ratesRules[carrier] = rules.getRules();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getRules: function () {\r\n            return ratesRules;\r\n        },\r\n\r\n        /**\r\n         * @return {Array}\r\n         */\r\n        getObservableFields: function () {\r\n            var self = this,\r\n                observableFields = [];\r\n\r\n            $.each(self.getRules(), function (carrier, fields) {\r\n                $.each(fields, function (field) {\r\n                    if (observableFields.indexOf(field) === -1) {\r\n                        observableFields.push(field);\r\n                    }\r\n                });\r\n            });\r\n\r\n            return observableFields;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/shipping-rates-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    './shipping-rates-validation-rules',\r\n    '../model/address-converter',\r\n    '../action/select-shipping-address',\r\n    './postcode-validator',\r\n    './default-validator',\r\n    'mage/translate',\r\n    'uiRegistry',\r\n    'Magento_Checkout/js/model/shipping-address/form-popup-state',\r\n    'Magento_Checkout/js/model/quote'\r\n], function (\r\n    $,\r\n    ko,\r\n    shippingRatesValidationRules,\r\n    addressConverter,\r\n    selectShippingAddress,\r\n    postcodeValidator,\r\n    defaultValidator,\r\n    $t,\r\n    uiRegistry,\r\n    formPopUpState\r\n) {\r\n    'use strict';\r\n\r\n    var checkoutConfig = window.checkoutConfig,\r\n        validators = [],\r\n        observedElements = [],\r\n        postcodeElements = [],\r\n        postcodeElementName = 'postcode';\r\n\r\n    validators.push(defaultValidator);\r\n\r\n    return {\r\n        validateAddressTimeout: 0,\r\n        validateZipCodeTimeout: 0,\r\n        validateDelay: 2000,\r\n\r\n        /**\r\n         * @param {String} carrier\r\n         * @param {Object} validator\r\n         */\r\n        registerValidator: function (carrier, validator) {\r\n            if (checkoutConfig.activeCarriers.indexOf(carrier) !== -1) {\r\n                validators.push(validator);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {Boolean}\r\n         */\r\n        validateAddressData: function (address) {\r\n            return validators.some(function (validator) {\r\n                return validator.validate(address);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Perform postponed binding for fieldset elements\r\n         *\r\n         * @param {String} formPath\r\n         */\r\n        initFields: function (formPath) {\r\n            var self = this,\r\n                elements = shippingRatesValidationRules.getObservableFields();\r\n\r\n            if ($.inArray(postcodeElementName, elements) === -1) {\r\n                // Add postcode field to observables if not exist for zip code validation support\r\n                elements.push(postcodeElementName);\r\n            }\r\n\r\n            $.each(elements, function (index, field) {\r\n                uiRegistry.async(formPath + '.' + field)(self.doElementBinding.bind(self));\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Bind shipping rates request to form element\r\n         *\r\n         * @param {Object} element\r\n         * @param {Boolean} force\r\n         * @param {Number} delay\r\n         */\r\n        doElementBinding: function (element, force, delay) {\r\n            var observableFields = shippingRatesValidationRules.getObservableFields();\r\n\r\n            if (element && (observableFields.indexOf(element.index) !== -1 || force)) {\r\n                if (element.index !== postcodeElementName) {\r\n                    this.bindHandler(element, delay);\r\n                }\r\n            }\r\n\r\n            if (element.index === postcodeElementName) {\r\n                this.bindHandler(element, delay);\r\n                postcodeElements.push(element);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {*} elements\r\n         * @param {Boolean} force\r\n         * @param {Number} delay\r\n         */\r\n        bindChangeHandlers: function (elements, force, delay) {\r\n            var self = this;\r\n\r\n            $.each(elements, function (index, elem) {\r\n                self.doElementBinding(elem, force, delay);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {Object} element\r\n         * @param {Number} delay\r\n         */\r\n        bindHandler: function (element, delay) {\r\n            var self = this;\r\n\r\n            delay = typeof delay === 'undefined' ? self.validateDelay : delay;\r\n\r\n            if (element.component.indexOf('/group') !== -1) {\r\n                $.each(element.elems(), function (index, elem) {\r\n                    self.bindHandler(elem);\r\n                });\r\n            } else {\r\n                element.on('value', function () {\r\n                    clearTimeout(self.validateZipCodeTimeout);\r\n                    self.validateZipCodeTimeout = setTimeout(function () {\r\n                        if (element.index === postcodeElementName) {\r\n                            self.postcodeValidation(element);\r\n                        } else {\r\n                            $.each(postcodeElements, function (index, elem) {\r\n                                self.postcodeValidation(elem);\r\n                            });\r\n                        }\r\n                    }, delay);\r\n\r\n                    if (!formPopUpState.isVisible()) {\r\n                        clearTimeout(self.validateAddressTimeout);\r\n                        self.validateAddressTimeout = setTimeout(function () {\r\n                            self.validateFields();\r\n                        }, delay);\r\n                    }\r\n                });\r\n                observedElements.push(element);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        postcodeValidation: function (postcodeElement) {\r\n            var countryId = $('select[name=\"country_id\"]:visible').val(),\r\n                validationResult,\r\n                warnMessage;\r\n\r\n            if (postcodeElement == null || postcodeElement.value() == null) {\r\n                return true;\r\n            }\r\n\r\n            postcodeElement.warn(null);\r\n            validationResult = postcodeValidator.validate(postcodeElement.value(), countryId);\r\n\r\n            if (!validationResult) {\r\n                warnMessage = $t('Provided Zip/Postal Code seems to be invalid.');\r\n\r\n                if (postcodeValidator.validatedPostCodeExample.length) {\r\n                    warnMessage += $t(' Example: ') + postcodeValidator.validatedPostCodeExample.join('; ') + '. ';\r\n                }\r\n                warnMessage += $t('If you believe it is the right one you can ignore this notice.');\r\n                postcodeElement.warn(warnMessage);\r\n            }\r\n\r\n            return validationResult;\r\n        },\r\n\r\n        /**\r\n         * Convert form data to quote address and validate fields for shipping rates\r\n         */\r\n        validateFields: function () {\r\n            var addressFlat = addressConverter.formDataProviderToFlatData(\r\n                this.collectObservedData(),\r\n                'shippingAddress'\r\n                ),\r\n                address;\r\n\r\n            if (this.validateAddressData(addressFlat)) {\r\n                addressFlat = uiRegistry.get('checkoutProvider').shippingAddress;\r\n                address = addressConverter.formAddressDataToQuoteAddress(addressFlat);\r\n                selectShippingAddress(address);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Collect observed fields data to object\r\n         *\r\n         * @returns {*}\r\n         */\r\n        collectObservedData: function () {\r\n            var observedValues = {};\r\n\r\n            $.each(observedElements, function (index, field) {\r\n                observedValues[field.dataScope] = field.value();\r\n            });\r\n\r\n            return observedValues;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/shipping-save-processor.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Checkout/js/model/shipping-save-processor/default'\r\n], function (defaultProcessor) {\r\n    'use strict';\r\n\r\n    var processors = {};\r\n\r\n    processors['default'] =  defaultProcessor;\r\n\r\n    return {\r\n        /**\r\n         * @param {String} type\r\n         * @param {*} processor\r\n         */\r\n        registerProcessor: function (type, processor) {\r\n            processors[type] = processor;\r\n        },\r\n\r\n        /**\r\n         * @param {String} type\r\n         * @return {Array}\r\n         */\r\n        saveShippingInformation: function (type) {\r\n            var rates = [];\r\n\r\n            if (processors[type]) {\r\n                rates = processors[type].saveShippingInformation();\r\n            } else {\r\n                rates = processors['default'].saveShippingInformation();\r\n            }\r\n\r\n            return rates;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/shipping-service.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'Magento_Checkout/js/model/checkout-data-resolver'\r\n], function (ko, checkoutDataResolver) {\r\n    'use strict';\r\n\r\n    var shippingRates = ko.observableArray([]);\r\n\r\n    return {\r\n        isLoading: ko.observable(false),\r\n\r\n        /**\r\n         * Set shipping rates\r\n         *\r\n         * @param {*} ratesData\r\n         */\r\n        setShippingRates: function (ratesData) {\r\n            shippingRates(ratesData);\r\n            shippingRates.valueHasMutated();\r\n            checkoutDataResolver.resolveShippingRates(ratesData);\r\n        },\r\n\r\n        /**\r\n         * Get shipping rates\r\n         *\r\n         * @returns {*}\r\n         */\r\n        getShippingRates: function () {\r\n            return shippingRates;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/sidebar.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        popUp: false,\r\n\r\n        /**\r\n         * @param {Object} popUp\r\n         */\r\n        setPopup: function (popUp) {\r\n            this.popUp = popUp;\r\n        },\r\n\r\n        /**\r\n         * Show popup.\r\n         */\r\n        show: function () {\r\n            if (this.popUp) {\r\n                this.popUp.modal('openModal');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide popup.\r\n         */\r\n        hide: function () {\r\n            if (this.popUp) {\r\n                this.popUp.modal('closeModal');\r\n            }\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/step-navigator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'ko'\r\n], function ($, ko) {\r\n    'use strict';\r\n\r\n    var steps = ko.observableArray();\r\n\r\n    return {\r\n        steps: steps,\r\n        stepCodes: [],\r\n        validCodes: [],\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        handleHash: function () {\r\n            var hashString = window.location.hash.replace('#', ''),\r\n                isRequestedStepVisible;\r\n\r\n            if (hashString === '') {\r\n                return false;\r\n            }\r\n\r\n            if ($.inArray(hashString, this.validCodes) === -1) {\r\n                window.location.href = window.checkoutConfig.pageNotFoundUrl;\r\n\r\n                return false;\r\n            }\r\n\r\n            isRequestedStepVisible = steps.sort(this.sortItems).some(function (element) {\r\n                return (element.code == hashString || element.alias == hashString) && element.isVisible(); //eslint-disable-line\r\n            });\r\n\r\n            //if requested step is visible, then we don't need to load step data from server\r\n            if (isRequestedStepVisible) {\r\n                return false;\r\n            }\r\n\r\n            steps().sort(this.sortItems).forEach(function (element) {\r\n                if (element.code == hashString || element.alias == hashString) { //eslint-disable-line eqeqeq\r\n                    element.navigate(element);\r\n                } else {\r\n                    element.isVisible(false);\r\n                }\r\n\r\n            });\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * @param {String} code\r\n         * @param {*} alias\r\n         * @param {*} title\r\n         * @param {Function} isVisible\r\n         * @param {*} navigate\r\n         * @param {*} sortOrder\r\n         */\r\n        registerStep: function (code, alias, title, isVisible, navigate, sortOrder) {\r\n            var hash, active;\r\n\r\n            if ($.inArray(code, this.validCodes) !== -1) {\r\n                throw new DOMException('Step code [' + code + '] already registered in step navigator');\r\n            }\r\n\r\n            if (alias != null) {\r\n                if ($.inArray(alias, this.validCodes) !== -1) {\r\n                    throw new DOMException('Step code [' + alias + '] already registered in step navigator');\r\n                }\r\n                this.validCodes.push(alias);\r\n            }\r\n            this.validCodes.push(code);\r\n            steps.push({\r\n                code: code,\r\n                alias: alias != null ? alias : code,\r\n                title: title,\r\n                isVisible: isVisible,\r\n                navigate: navigate,\r\n                sortOrder: sortOrder\r\n            });\r\n            active = this.getActiveItemIndex();\r\n            steps.each(function (elem, index) {\r\n                if (active !== index) {\r\n                    elem.isVisible(false);\r\n                }\r\n            });\r\n            this.stepCodes.push(code);\r\n            hash = window.location.hash.replace('#', '');\r\n\r\n            if (hash != '' && hash != code) { //eslint-disable-line eqeqeq\r\n                //Force hiding of not active step\r\n                isVisible(false);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {Object} itemOne\r\n         * @param {Object} itemTwo\r\n         * @return {Number}\r\n         */\r\n        sortItems: function (itemOne, itemTwo) {\r\n            return itemOne.sortOrder > itemTwo.sortOrder ? 1 : -1;\r\n        },\r\n\r\n        /**\r\n         * @return {Number}\r\n         */\r\n        getActiveItemIndex: function () {\r\n            var activeIndex = 0;\r\n\r\n            steps().sort(this.sortItems).some(function (element, index) {\r\n                if (element.isVisible()) {\r\n                    activeIndex = index;\r\n\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n            return activeIndex;\r\n        },\r\n\r\n        /**\r\n         * @param {*} code\r\n         * @return {Boolean}\r\n         */\r\n        isProcessed: function (code) {\r\n            var activeItemIndex = this.getActiveItemIndex(),\r\n                sortedItems = steps().sort(this.sortItems),\r\n                requestedItemIndex = -1;\r\n\r\n            sortedItems.forEach(function (element, index) {\r\n                if (element.code == code) { //eslint-disable-line eqeqeq\r\n                    requestedItemIndex = index;\r\n                }\r\n            });\r\n\r\n            return activeItemIndex > requestedItemIndex;\r\n        },\r\n\r\n        /**\r\n         * @param {*} code\r\n         * @param {*} scrollToElementId\r\n         */\r\n        navigateTo: function (code, scrollToElementId) {\r\n            var sortedItems = steps().sort(this.sortItems),\r\n                bodyElem = $('body');\r\n\r\n            scrollToElementId = scrollToElementId || null;\r\n\r\n            if (!this.isProcessed(code)) {\r\n                return;\r\n            }\r\n            sortedItems.forEach(function (element) {\r\n                if (element.code == code) { //eslint-disable-line eqeqeq\r\n                    element.isVisible(true);\r\n                    bodyElem.animate({\r\n                        scrollTop: $('#' + code).offset().top\r\n                    }, 0, function () {\r\n                        window.location = window.checkoutConfig.checkoutUrl + '#' + code;\r\n                    });\r\n\r\n                    if (scrollToElementId && $('#' + scrollToElementId).length) {\r\n                        bodyElem.animate({\r\n                            scrollTop: $('#' + scrollToElementId).offset().top\r\n                        }, 0);\r\n                    }\r\n                } else {\r\n                    element.isVisible(false);\r\n                }\r\n\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Sets window location hash.\r\n         *\r\n         * @param {String} hash\r\n         */\r\n        setHash: function (hash) {\r\n            window.location.hash = hash;\r\n        },\r\n\r\n        /**\r\n         * Next step.\r\n         */\r\n        next: function () {\r\n            var activeIndex = 0,\r\n                code;\r\n\r\n            steps().sort(this.sortItems).forEach(function (element, index) {\r\n                if (element.isVisible()) {\r\n                    element.isVisible(false);\r\n                    activeIndex = index;\r\n                }\r\n            });\r\n\r\n            if (steps().length > activeIndex + 1) {\r\n                code = steps()[activeIndex + 1].code;\r\n                steps()[activeIndex + 1].isVisible(true);\r\n                this.setHash(code);\r\n                document.body.scrollTop = document.documentElement.scrollTop = 0;\r\n            }\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/totals.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Customer/js/customer-data'\r\n], function (ko, quote, customerData) {\r\n    'use strict';\r\n\r\n    var quoteItems = ko.observable(quote.totals().items),\r\n        cartData = customerData.get('cart'),\r\n        quoteSubtotal = parseFloat(quote.totals().subtotal),\r\n        subtotalAmount = parseFloat(cartData().subtotalAmount);\r\n\r\n    quote.totals.subscribe(function (newValue) {\r\n        quoteItems(newValue.items);\r\n    });\r\n\r\n    if (!isNaN(subtotalAmount) && quoteSubtotal !== subtotalAmount) {\r\n        customerData.reload(['cart'], false);\r\n    }\r\n\r\n    return {\r\n        totals: quote.totals,\r\n        isLoading: ko.observable(false),\r\n\r\n        /**\r\n         * @return {Function}\r\n         */\r\n        getItems: function () {\r\n            return quoteItems;\r\n        },\r\n\r\n        /**\r\n         * @param {*} code\r\n         * @return {*}\r\n         */\r\n        getSegment: function (code) {\r\n            var i, total;\r\n\r\n            if (!this.totals()) {\r\n                return null;\r\n            }\r\n\r\n            for (i in this.totals()['total_segments']) { //eslint-disable-line guard-for-in\r\n                total = this.totals()['total_segments'][i];\r\n\r\n                if (total.code == code) { //eslint-disable-line eqeqeq\r\n                    return total;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/url-builder.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['jquery'], function ($) {\r\n    'use strict';\r\n\r\n    return {\r\n        method: 'rest',\r\n        storeCode: window.checkoutConfig.storeCode,\r\n        version: 'V1',\r\n        serviceUrl: ':method/:storeCode/:version',\r\n\r\n        /**\r\n         * @param {String} url\r\n         * @param {Object} params\r\n         * @return {*}\r\n         */\r\n        createUrl: function (url, params) {\r\n            var completeUrl = this.serviceUrl + url;\r\n\r\n            return this.bindParams(completeUrl, params);\r\n        },\r\n\r\n        /**\r\n         * @param {String} url\r\n         * @param {Object} params\r\n         * @return {*}\r\n         */\r\n        bindParams: function (url, params) {\r\n            var urlParts;\r\n\r\n            params.method = this.method;\r\n            params.storeCode = this.storeCode;\r\n            params.version = this.version;\r\n\r\n            urlParts = url.split('/');\r\n            urlParts = urlParts.filter(Boolean);\r\n\r\n            $.each(urlParts, function (key, part) {\r\n                part = part.replace(':', '');\r\n\r\n                if (params[part] != undefined) { //eslint-disable-line eqeqeq\r\n                    urlParts[key] = params[part];\r\n                }\r\n            });\r\n\r\n            return urlParts.join('/');\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/cart/cache.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * Cart adapter for customer data storage.\r\n * It stores cart data in customer data(localStorage) without saving on server.\r\n * Adapter is created for shipping rates and totals data caching. It eliminates unneeded calculations requests.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Customer/js/customer-data',\r\n    'mageUtils'\r\n], function (_, storage, utils) {\r\n    'use strict';\r\n\r\n    var cacheKey = 'cart-data',\r\n        cartData = {\r\n            totals: null,\r\n            address: null,\r\n            cartVersion: null,\r\n            shippingMethodCode: null,\r\n            shippingCarrierCode: null,\r\n            rates: null\r\n        },\r\n\r\n        /**\r\n         * Set data to local storage.\r\n         *\r\n         * @param {Object} checkoutData\r\n         */\r\n        setData = function (checkoutData) {\r\n            storage.set(cacheKey, checkoutData);\r\n        },\r\n\r\n        /**\r\n         * Get data from local storage.\r\n         *\r\n         * @param {String} [key]\r\n         * @returns {*}\r\n         */\r\n        getData = function (key) {\r\n            var data = key ? storage.get(cacheKey)()[key] : storage.get(cacheKey)();\r\n\r\n            if (_.isEmpty(storage.get(cacheKey)())) {\r\n                setData(utils.copy(cartData));\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Build method name base on name, prefix and suffix.\r\n         *\r\n         * @param {String} name\r\n         * @param {String} prefix\r\n         * @param {String} suffix\r\n         * @return {String}\r\n         */\r\n        getMethodName = function (name, prefix, suffix) {\r\n            prefix = prefix || '';\r\n            suffix = suffix || '';\r\n\r\n            return prefix + name.charAt(0).toUpperCase() + name.slice(1) + suffix;\r\n        };\r\n\r\n    /**\r\n     * Provides get/set/isChanged/clear methods for work with cart data.\r\n     * Can be customized via mixin functionality.\r\n     */\r\n    return {\r\n        cartData: cartData,\r\n\r\n        /**\r\n         * Array of required address fields\r\n         */\r\n        requiredFields: ['countryId', 'region', 'regionId', 'postcode'],\r\n\r\n        /**\r\n         * Get data from customer data.\r\n         * Concatenate provided key with method name and call method if it exist or makes get by key.\r\n         *\r\n         * @param {String} key\r\n         * @return {*}\r\n         */\r\n        get: function (key) {\r\n            var methodName = getMethodName(key, '_get');\r\n\r\n            if (key === cacheKey) {\r\n                return getData();\r\n            }\r\n\r\n            if (this[methodName]) {\r\n                return this[methodName]();\r\n            }\r\n\r\n            return getData(key);\r\n        },\r\n\r\n        /**\r\n         * Set data to customer data.\r\n         * Concatenate provided key with method name and call method if it exist or makes set by key.\r\n         * @example _setCustomAddress method will be called, if it exists.\r\n         *  set('address', customAddressValue)\r\n         * @example Will set value by provided key.\r\n         *  set('rates', ratesToCompare)\r\n         *\r\n         * @param {String} key\r\n         * @param {*} value\r\n         */\r\n        set: function (key, value) {\r\n            var methodName = getMethodName(key, '_set'),\r\n                obj;\r\n\r\n            if (key === cacheKey) {\r\n                _.each(value, function (val, k) {\r\n                    this.set(k, val);\r\n                }, this);\r\n\r\n                return;\r\n            }\r\n\r\n            if (this[methodName]) {\r\n                this[methodName](value);\r\n            } else {\r\n                obj = getData();\r\n                obj[key] = value;\r\n                setData(obj);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clear data in cache.\r\n         * Concatenate provided key with method name and call method if it exist or clear by key.\r\n         * @example _clearCustomAddress method will be called, if it exist.\r\n         *  clear('customAddress')\r\n         * @example Will clear data by provided key.\r\n         *  clear('rates')\r\n         *\r\n         * @param {String} key\r\n         */\r\n        clear: function (key) {\r\n            var methodName = getMethodName(key, '_clear');\r\n\r\n            if (key === cacheKey) {\r\n                setData(this.cartData);\r\n\r\n                return;\r\n            }\r\n\r\n            if (this[methodName]) {\r\n                this[methodName]();\r\n            } else {\r\n                this.set(key, null);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if provided data has difference with cached data.\r\n         * Concatenate provided key with method name and call method if it exist or makes strict equality.\r\n         * @example Will call existing _isAddressChanged.\r\n         *  isChanged('address', addressToCompare)\r\n         * @example Will get data by provided key and make strict equality with provided value.\r\n         *  isChanged('rates', ratesToCompare)\r\n         *\r\n         * @param {String} key\r\n         * @param {*} value\r\n         * @return {Boolean}\r\n         */\r\n        isChanged: function (key, value) {\r\n            var methodName = getMethodName(key, '_is', 'Changed');\r\n\r\n            if (this[methodName]) {\r\n                return this[methodName](value);\r\n            }\r\n\r\n            return this.get(key) !== value;\r\n        },\r\n\r\n        /**\r\n         * Compare cached address with provided.\r\n         * Custom method for check object equality.\r\n         *\r\n         * @param {Object} address\r\n         * @returns {Boolean}\r\n         */\r\n        _isAddressChanged: function (address) {\r\n            return JSON.stringify(_.pick(this.get('address'), this.requiredFields)) !==\r\n                JSON.stringify(_.pick(address, this.requiredFields));\r\n        },\r\n\r\n        /**\r\n         * Compare cached subtotal with provided.\r\n         * Custom method for check object equality.\r\n         *\r\n         * @param {float} subtotal\r\n         * @returns {Boolean}\r\n         */\r\n        _isSubtotalChanged: function (subtotal) {\r\n            var cached = parseFloat(this.get('totals').subtotal);\r\n\r\n            return subtotal !== cached;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/cart/estimate-service.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/shipping-rate-processor/new-address',\r\n    'Magento_Checkout/js/model/cart/totals-processor/default',\r\n    'Magento_Checkout/js/model/shipping-service',\r\n    'Magento_Checkout/js/model/cart/cache',\r\n    'Magento_Customer/js/customer-data'\r\n], function (quote, defaultProcessor, totalsDefaultProvider, shippingService, cartCache, customerData) {\r\n    'use strict';\r\n\r\n    var rateProcessors = {},\r\n        totalsProcessors = {},\r\n\r\n        /**\r\n         * Estimate totals for shipping address and update shipping rates.\r\n         */\r\n        estimateTotalsAndUpdateRates = function () {\r\n            var type = quote.shippingAddress().getType();\r\n\r\n            if (\r\n                quote.isVirtual() ||\r\n                window.checkoutConfig.activeCarriers && window.checkoutConfig.activeCarriers.length === 0\r\n            ) {\r\n                // update totals block when estimated address was set\r\n                totalsProcessors['default'] = totalsDefaultProvider;\r\n                totalsProcessors[type] ?\r\n                    totalsProcessors[type].estimateTotals(quote.shippingAddress()) :\r\n                    totalsProcessors['default'].estimateTotals(quote.shippingAddress());\r\n            } else {\r\n                // check if user data not changed -> load rates from cache\r\n                if (!cartCache.isChanged('address', quote.shippingAddress()) &&\r\n                    !cartCache.isChanged('cartVersion', customerData.get('cart')()['data_id']) &&\r\n                    cartCache.get('rates')\r\n                ) {\r\n                    shippingService.setShippingRates(cartCache.get('rates'));\r\n\r\n                    return;\r\n                }\r\n\r\n                // update rates list when estimated address was set\r\n                rateProcessors['default'] = defaultProcessor;\r\n                rateProcessors[type] ?\r\n                    rateProcessors[type].getRates(quote.shippingAddress()) :\r\n                    rateProcessors['default'].getRates(quote.shippingAddress());\r\n\r\n                // save rates to cache after load\r\n                shippingService.getShippingRates().subscribe(function (rates) {\r\n                    cartCache.set('rates', rates);\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Estimate totals for shipping address.\r\n         */\r\n        estimateTotalsShipping = function () {\r\n            totalsDefaultProvider.estimateTotals(quote.shippingAddress());\r\n        },\r\n\r\n        /**\r\n         * Estimate totals for billing address.\r\n         */\r\n        estimateTotalsBilling = function () {\r\n            var type = quote.billingAddress().getType();\r\n\r\n            if (quote.isVirtual()) {\r\n                // update totals block when estimated address was set\r\n                totalsProcessors['default'] = totalsDefaultProvider;\r\n                totalsProcessors[type] ?\r\n                    totalsProcessors[type].estimateTotals(quote.billingAddress()) :\r\n                    totalsProcessors['default'].estimateTotals(quote.billingAddress());\r\n            }\r\n        };\r\n\r\n    quote.shippingAddress.subscribe(estimateTotalsAndUpdateRates);\r\n    quote.shippingMethod.subscribe(estimateTotalsShipping);\r\n    quote.billingAddress.subscribe(estimateTotalsBilling);\r\n});\r\n","Magento_Checkout/js/model/cart/totals-processor/default.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'Magento_Checkout/js/model/resource-url-manager',\r\n    'Magento_Checkout/js/model/quote',\r\n    'mage/storage',\r\n    'Magento_Checkout/js/model/totals',\r\n    'Magento_Checkout/js/model/error-processor',\r\n    'Magento_Checkout/js/model/cart/cache',\r\n    'Magento_Customer/js/customer-data'\r\n], function (_, resourceUrlManager, quote, storage, totalsService, errorProcessor, cartCache, customerData) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Load data from server.\r\n     *\r\n     * @param {Object} address\r\n     */\r\n    var loadFromServer = function (address) {\r\n        var serviceUrl,\r\n            payload;\r\n\r\n        // Start loader for totals block\r\n        totalsService.isLoading(true);\r\n        serviceUrl = resourceUrlManager.getUrlForTotalsEstimationForNewAddress(quote);\r\n        payload = {\r\n            addressInformation: {\r\n                address: _.pick(address, cartCache.requiredFields)\r\n            }\r\n        };\r\n\r\n        if (quote.shippingMethod() && quote.shippingMethod()['method_code']) {\r\n            payload.addressInformation['shipping_method_code'] = quote.shippingMethod()['method_code'];\r\n            payload.addressInformation['shipping_carrier_code'] = quote.shippingMethod()['carrier_code'];\r\n        }\r\n\r\n        return storage.post(\r\n            serviceUrl, JSON.stringify(payload), false\r\n        ).done(function (result) {\r\n            var data = {\r\n                totals: result,\r\n                address: address,\r\n                cartVersion: customerData.get('cart')()['data_id'],\r\n                shippingMethodCode: null,\r\n                shippingCarrierCode: null\r\n            };\r\n\r\n            if (quote.shippingMethod() && quote.shippingMethod()['method_code']) {\r\n                data.shippingMethodCode = quote.shippingMethod()['method_code'];\r\n                data.shippingCarrierCode = quote.shippingMethod()['carrier_code'];\r\n            }\r\n\r\n            quote.setTotals(result);\r\n            cartCache.set('cart-data', data);\r\n        }).fail(function (response) {\r\n            errorProcessor.process(response);\r\n        }).always(function () {\r\n            // Stop loader for totals block\r\n            totalsService.isLoading(false);\r\n        });\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * Array of required address fields.\r\n         * @property {Array.String} requiredFields\r\n         * @deprecated Use cart cache.\r\n         */\r\n        requiredFields: cartCache.requiredFields,\r\n\r\n        /**\r\n         * Get shipping rates for specified address.\r\n         * @param {Object} address\r\n         */\r\n        estimateTotals: function (address) {\r\n            var data = {\r\n                shippingMethodCode: null,\r\n                shippingCarrierCode: null\r\n            };\r\n\r\n            if (quote.shippingMethod() && quote.shippingMethod()['method_code']) {\r\n                data.shippingMethodCode = quote.shippingMethod()['method_code'];\r\n                data.shippingCarrierCode = quote.shippingMethod()['carrier_code'];\r\n            }\r\n\r\n            return loadFromServer(address);\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/payment/additional-validators.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    var validators = [];\r\n\r\n    return {\r\n        /**\r\n         * Register unique validator\r\n         *\r\n         * @param {*} validator\r\n         */\r\n        registerValidator: function (validator) {\r\n            validators.push(validator);\r\n        },\r\n\r\n        /**\r\n         * Returns array of registered validators\r\n         *\r\n         * @returns {Array}\r\n         */\r\n        getValidators: function () {\r\n            return validators;\r\n        },\r\n\r\n        /**\r\n         * Process validators\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function (hideError) {\r\n            var validationResult = true;\r\n\r\n            hideError = hideError || false;\r\n\r\n            if (validators.length <= 0) {\r\n                return validationResult;\r\n            }\r\n\r\n            validators.forEach(function (item) {\r\n                if (item.validate(hideError) == false) { //eslint-disable-line eqeqeq\r\n                    validationResult = false;\r\n\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return validationResult;\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/payment/method-converter.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    return function (methods) {\r\n        _.each(methods, function (method) {\r\n            if (method.hasOwnProperty('code')) {\r\n                method.method = method.code;\r\n                delete method.code;\r\n            }\r\n        });\r\n\r\n        return methods;\r\n    };\r\n});\r\n","Magento_Checkout/js/model/payment/method-group.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n        'uiElement',\r\n        'mage/translate'\r\n], function (Element, $t) {\r\n    'use strict';\r\n\r\n    var DEFAULT_GROUP_ALIAS = 'default';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            alias: DEFAULT_GROUP_ALIAS,\r\n            title: $t('Payment Method'),\r\n            sortOrder: 100,\r\n            displayArea: 'payment-methods-items-${ $.alias }'\r\n        },\r\n\r\n        /**\r\n         * Checks if group instance is default\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isDefault: function () {\r\n            return this.alias === DEFAULT_GROUP_ALIAS;\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/model/payment/method-list.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko'\r\n], function (ko) {\r\n    'use strict';\r\n\r\n    return ko.observableArray([]);\r\n});\r\n","Magento_Checkout/js/model/payment/place-order-hooks.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        requestModifiers: [],\r\n        afterRequestListeners: []\r\n    };\r\n});\r\n","Magento_Checkout/js/model/payment/renderer-list.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko'\r\n], function (ko) {\r\n    'use strict';\r\n\r\n    return ko.observableArray([]);\r\n});\r\n","Magento_Checkout/js/model/shipping-address/form-popup-state.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko'\r\n], function (ko) {\r\n    'use strict';\r\n\r\n    return {\r\n        isVisible: ko.observable(false)\r\n    };\r\n});\r\n","Magento_Checkout/js/model/shipping-rate-processor/customer-address.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/model/resource-url-manager',\r\n    'Magento_Checkout/js/model/quote',\r\n    'mage/storage',\r\n    'Magento_Checkout/js/model/shipping-service',\r\n    'Magento_Checkout/js/model/shipping-rate-registry',\r\n    'Magento_Checkout/js/model/error-processor'\r\n], function (resourceUrlManager, quote, storage, shippingService, rateRegistry, errorProcessor) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @param {Object} address\r\n         */\r\n        getRates: function (address) {\r\n            var cache;\r\n\r\n            shippingService.isLoading(true);\r\n            cache = rateRegistry.get(address.getKey());\r\n\r\n            if (cache) {\r\n                shippingService.setShippingRates(cache);\r\n                shippingService.isLoading(false);\r\n            } else {\r\n                storage.post(\r\n                    resourceUrlManager.getUrlForEstimationShippingMethodsByAddressId(),\r\n                    JSON.stringify({\r\n                        addressId: address.customerAddressId\r\n                    }),\r\n                    false\r\n                ).done(function (result) {\r\n                    rateRegistry.set(address.getKey(), result);\r\n                    shippingService.setShippingRates(result);\r\n                }).fail(function (response) {\r\n                    shippingService.setShippingRates([]);\r\n                    errorProcessor.process(response);\r\n                }).always(function () {\r\n                    shippingService.isLoading(false);\r\n                }\r\n                );\r\n            }\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/shipping-rate-processor/new-address.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Checkout/js/model/resource-url-manager',\r\n    'Magento_Checkout/js/model/quote',\r\n    'mage/storage',\r\n    'Magento_Checkout/js/model/shipping-service',\r\n    'Magento_Checkout/js/model/shipping-rate-registry',\r\n    'Magento_Checkout/js/model/error-processor'\r\n], function (resourceUrlManager, quote, storage, shippingService, rateRegistry, errorProcessor) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * Get shipping rates for specified address.\r\n         * @param {Object} address\r\n         */\r\n        getRates: function (address) {\r\n            var cache, serviceUrl, payload;\r\n\r\n            shippingService.isLoading(true);\r\n            cache = rateRegistry.get(address.getCacheKey());\r\n            serviceUrl = resourceUrlManager.getUrlForEstimationShippingMethodsForNewAddress(quote);\r\n            payload = JSON.stringify({\r\n                    address: {\r\n                        'street': address.street,\r\n                        'city': address.city,\r\n                        'region_id': address.regionId,\r\n                        'region': address.region,\r\n                        'country_id': address.countryId,\r\n                        'postcode': address.postcode,\r\n                        'email': address.email,\r\n                        'customer_id': address.customerId,\r\n                        'firstname': address.firstname,\r\n                        'lastname': address.lastname,\r\n                        'middlename': address.middlename,\r\n                        'prefix': address.prefix,\r\n                        'suffix': address.suffix,\r\n                        'vat_id': address.vatId,\r\n                        'company': address.company,\r\n                        'telephone': address.telephone,\r\n                        'fax': address.fax,\r\n                        'custom_attributes': address.customAttributes,\r\n                        'save_in_address_book': address.saveInAddressBook\r\n                    }\r\n                }\r\n            );\r\n\r\n            if (cache) {\r\n                shippingService.setShippingRates(cache);\r\n                shippingService.isLoading(false);\r\n            } else {\r\n                storage.post(\r\n                    serviceUrl, payload, false\r\n                ).done(function (result) {\r\n                    rateRegistry.set(address.getCacheKey(), result);\r\n                    shippingService.setShippingRates(result);\r\n                }).fail(function (response) {\r\n                    shippingService.setShippingRates([]);\r\n                    errorProcessor.process(response);\r\n                }).always(function () {\r\n                    shippingService.isLoading(false);\r\n                });\r\n            }\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/shipping-save-processor/default.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/resource-url-manager',\r\n    'mage/storage',\r\n    'Magento_Checkout/js/model/payment-service',\r\n    'Magento_Checkout/js/model/payment/method-converter',\r\n    'Magento_Checkout/js/model/error-processor',\r\n    'Magento_Checkout/js/model/full-screen-loader',\r\n    'Magento_Checkout/js/action/select-billing-address',\r\n    'Magento_Checkout/js/model/shipping-save-processor/payload-extender'\r\n], function (\r\n    ko,\r\n    quote,\r\n    resourceUrlManager,\r\n    storage,\r\n    paymentService,\r\n    methodConverter,\r\n    errorProcessor,\r\n    fullScreenLoader,\r\n    selectBillingAddressAction,\r\n    payloadExtender\r\n) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @return {jQuery.Deferred}\r\n         */\r\n        saveShippingInformation: function () {\r\n            var payload;\r\n\r\n            if (!quote.billingAddress() && quote.shippingAddress().canUseForBilling()) {\r\n                selectBillingAddressAction(quote.shippingAddress());\r\n            }\r\n\r\n            payload = {\r\n                addressInformation: {\r\n                    'shipping_address': quote.shippingAddress(),\r\n                    'billing_address': quote.billingAddress(),\r\n                    'shipping_method_code': quote.shippingMethod()['method_code'],\r\n                    'shipping_carrier_code': quote.shippingMethod()['carrier_code']\r\n                }\r\n            };\r\n\r\n            payloadExtender(payload);\r\n\r\n            fullScreenLoader.startLoader();\r\n\r\n            return storage.post(\r\n                resourceUrlManager.getUrlForSetShippingInformation(quote),\r\n                JSON.stringify(payload)\r\n            ).done(\r\n                function (response) {\r\n                    quote.setTotals(response.totals);\r\n                    paymentService.setPaymentMethods(methodConverter(response['payment_methods']));\r\n                    fullScreenLoader.stopLoader();\r\n                }\r\n            ).fail(\r\n                function (response) {\r\n                    errorProcessor.process(response);\r\n                    fullScreenLoader.stopLoader();\r\n                }\r\n            );\r\n        }\r\n    };\r\n});\r\n","Magento_Checkout/js/model/shipping-save-processor/payload-extender.js":"define([], function () {\r\n    'use strict';\r\n\r\n    return function (payload) {\r\n        payload.addressInformation['extension_attributes'] = {};\r\n\r\n        return payload;\r\n    };\r\n});\r\n","Magento_Checkout/js/view/authentication-messages.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/view/messages',\r\n    'Magento_Checkout/js/model/authentication-messages'\r\n], function (Component, messageContainer) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /** @inheritdoc */\r\n        initialize: function (config) {\r\n            return this._super(config, messageContainer);\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/authentication.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/form/form',\r\n    'Magento_Customer/js/action/login',\r\n    'Magento_Customer/js/model/customer',\r\n    'mage/validation',\r\n    'Magento_Checkout/js/model/authentication-messages',\r\n    'Magento_Checkout/js/model/full-screen-loader'\r\n], function ($, Component, loginAction, customer, validation, messageContainer, fullScreenLoader) {\r\n    'use strict';\r\n\r\n    var checkoutConfig = window.checkoutConfig;\r\n\r\n    return Component.extend({\r\n        isGuestCheckoutAllowed: checkoutConfig.isGuestCheckoutAllowed,\r\n        isCustomerLoginRequired: checkoutConfig.isCustomerLoginRequired,\r\n        registerUrl: checkoutConfig.registerUrl,\r\n        forgotPasswordUrl: checkoutConfig.forgotPasswordUrl,\r\n        autocomplete: checkoutConfig.autocomplete,\r\n        defaults: {\r\n            template: 'Magento_Checkout/authentication'\r\n        },\r\n\r\n        /**\r\n         * Is login form enabled for current customer.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        isActive: function () {\r\n            return !customer.isLoggedIn();\r\n        },\r\n\r\n        /**\r\n         * Provide login action.\r\n         *\r\n         * @param {HTMLElement} loginForm\r\n         */\r\n        login: function (loginForm) {\r\n            var loginData = {},\r\n                formDataArray = $(loginForm).serializeArray();\r\n\r\n            formDataArray.forEach(function (entry) {\r\n                loginData[entry.name] = entry.value;\r\n            });\r\n\r\n            if ($(loginForm).validation() &&\r\n                $(loginForm).validation('isValid')\r\n            ) {\r\n                fullScreenLoader.startLoader();\r\n                loginAction(loginData, checkoutConfig.checkoutUrl, undefined, messageContainer).always(function () {\r\n                    fullScreenLoader.stopLoader();\r\n                });\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/billing-address.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'Magento_Ui/js/form/form',\r\n    'Magento_Customer/js/model/customer',\r\n    'Magento_Customer/js/model/address-list',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/action/create-billing-address',\r\n    'Magento_Checkout/js/action/select-billing-address',\r\n    'Magento_Checkout/js/checkout-data',\r\n    'Magento_Checkout/js/model/checkout-data-resolver',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Checkout/js/action/set-billing-address',\r\n    'Magento_Ui/js/model/messageList',\r\n    'mage/translate',\r\n    'Magento_Checkout/js/model/billing-address-postcode-validator',\r\n    'Magento_Checkout/js/model/address-converter'\r\n],\r\nfunction (\r\n    ko,\r\n    _,\r\n    Component,\r\n    customer,\r\n    addressList,\r\n    quote,\r\n    createBillingAddress,\r\n    selectBillingAddress,\r\n    checkoutData,\r\n    checkoutDataResolver,\r\n    customerData,\r\n    setBillingAddressAction,\r\n    globalMessageList,\r\n    $t,\r\n    billingAddressPostcodeValidator,\r\n    addressConverter\r\n) {\r\n    'use strict';\r\n\r\n    var lastSelectedBillingAddress = null,\r\n        addressUpadated = false,\r\n        addressEdited = false,\r\n        countryData = customerData.get('directory-data'),\r\n        addressOptions = addressList().filter(function (address) {\r\n            return address.getType() === 'customer-address';\r\n        });\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/billing-address',\r\n            actionsTemplate: 'Magento_Checkout/billing-address/actions',\r\n            formTemplate: 'Magento_Checkout/billing-address/form',\r\n            detailsTemplate: 'Magento_Checkout/billing-address/details',\r\n            links: {\r\n                isAddressFormVisible: '${$.billingAddressListProvider}:isNewAddressSelected'\r\n            }\r\n        },\r\n        currentBillingAddress: quote.billingAddress,\r\n        customerHasAddresses: addressOptions.length > 0,\r\n\r\n        /**\r\n         * Init component\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            quote.paymentMethod.subscribe(function () {\r\n                checkoutDataResolver.resolveBillingAddress();\r\n            }, this);\r\n            billingAddressPostcodeValidator.initFields(this.get('name') + '.form-fields');\r\n        },\r\n\r\n        /**\r\n         * @return {exports.initObservable}\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe({\r\n                    selectedAddress: null,\r\n                    isAddressDetailsVisible: quote.billingAddress() != null,\r\n                    isAddressFormVisible: !customer.isLoggedIn() || !addressOptions.length,\r\n                    isAddressSameAsShipping: false,\r\n                    saveInAddressBook: 1\r\n                });\r\n\r\n            quote.billingAddress.subscribe(function (newAddress) {\r\n                if (quote.isVirtual()) {\r\n                    this.isAddressSameAsShipping(false);\r\n                } else {\r\n                    this.isAddressSameAsShipping(\r\n                        newAddress != null &&\r\n                        newAddress.getCacheKey() == quote.shippingAddress().getCacheKey() //eslint-disable-line eqeqeq\r\n                    );\r\n                }\r\n\r\n                if (newAddress != null && newAddress.saveInAddressBook !== undefined) {\r\n                    this.saveInAddressBook(newAddress.saveInAddressBook);\r\n                } else {\r\n                    this.saveInAddressBook(1);\r\n                }\r\n                this.isAddressDetailsVisible(true);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        canUseShippingAddress: ko.computed(function () {\r\n            return !quote.isVirtual() && quote.shippingAddress() && quote.shippingAddress().canUseForBilling();\r\n        }),\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {*}\r\n         */\r\n        addressOptionsText: function (address) {\r\n            return address.getAddressInline();\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        useShippingAddress: function () {\r\n            if (this.isAddressSameAsShipping()) {\r\n                selectBillingAddress(quote.shippingAddress());\r\n\r\n                this.updateAddresses();\r\n                this.isAddressDetailsVisible(true);\r\n            } else {\r\n                lastSelectedBillingAddress = quote.billingAddress();\r\n                quote.billingAddress(null);\r\n                this.isAddressDetailsVisible(false);\r\n            }\r\n            checkoutData.setSelectedBillingAddress(null);\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Update address action\r\n         */\r\n        updateAddress: function () {\r\n            var addressData, newBillingAddress;\r\n\r\n            addressUpadated = true;\r\n\r\n            if (this.selectedAddress() && !this.isAddressFormVisible()) {\r\n                selectBillingAddress(this.selectedAddress());\r\n                checkoutData.setSelectedBillingAddress(this.selectedAddress().getKey());\r\n            } else {\r\n                this.source.set('params.invalid', false);\r\n                this.source.trigger(this.dataScopePrefix + '.data.validate');\r\n\r\n                if (this.source.get(this.dataScopePrefix + '.custom_attributes')) {\r\n                    this.source.trigger(this.dataScopePrefix + '.custom_attributes.data.validate');\r\n                }\r\n\r\n                if (!this.source.get('params.invalid')) {\r\n                    addressData = this.source.get(this.dataScopePrefix);\r\n\r\n                    if (customer.isLoggedIn() && !this.customerHasAddresses) { //eslint-disable-line max-depth\r\n                        this.saveInAddressBook(1);\r\n                    }\r\n                    addressData['save_in_address_book'] = this.saveInAddressBook() ? 1 : 0;\r\n                    newBillingAddress = createBillingAddress(addressData);\r\n                    // New address must be selected as a billing address\r\n                    selectBillingAddress(newBillingAddress);\r\n                    checkoutData.setSelectedBillingAddress(newBillingAddress.getKey());\r\n                    checkoutData.setNewCustomerBillingAddress(addressData);\r\n                }\r\n            }\r\n            setBillingAddressAction(globalMessageList);\r\n            this.updateAddresses();\r\n        },\r\n\r\n        /**\r\n         * Edit address action\r\n         */\r\n        editAddress: function () {\r\n            addressUpadated = false;\r\n            addressEdited = true;\r\n            lastSelectedBillingAddress = quote.billingAddress();\r\n            quote.billingAddress(null);\r\n            this.isAddressDetailsVisible(false);\r\n        },\r\n\r\n        /**\r\n         * Cancel address edit action\r\n         */\r\n        cancelAddressEdit: function () {\r\n            addressUpadated = true;\r\n            this.restoreBillingAddress();\r\n\r\n            if (quote.billingAddress()) {\r\n                // restore 'Same As Shipping' checkbox state\r\n                this.isAddressSameAsShipping(\r\n                    quote.billingAddress() != null &&\r\n                        quote.billingAddress().getCacheKey() == quote.shippingAddress().getCacheKey() && //eslint-disable-line\r\n                        !quote.isVirtual()\r\n                );\r\n                this.isAddressDetailsVisible(true);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Manage cancel button visibility\r\n         */\r\n        canUseCancelBillingAddress: ko.computed(function () {\r\n            return quote.billingAddress() || lastSelectedBillingAddress;\r\n        }),\r\n\r\n        /**\r\n         * Check if Billing Address Changes should be canceled\r\n         */\r\n        needCancelBillingAddressChanges: function () {\r\n            if (addressEdited && !addressUpadated) {\r\n                this.cancelAddressEdit();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Restore billing address\r\n         */\r\n        restoreBillingAddress: function () {\r\n            var lastBillingAddress;\r\n\r\n            if (lastSelectedBillingAddress != null) {\r\n                selectBillingAddress(lastSelectedBillingAddress);\r\n                lastBillingAddress = addressConverter.quoteAddressToFormAddressData(lastSelectedBillingAddress);\r\n\r\n                checkoutData.setNewCustomerBillingAddress(lastBillingAddress);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {Number} countryId\r\n         * @return {*}\r\n         */\r\n        getCountryName: function (countryId) {\r\n            return countryData()[countryId] != undefined ? countryData()[countryId].name : ''; //eslint-disable-line\r\n        },\r\n\r\n        /**\r\n         * Trigger action to update shipping and billing addresses\r\n         */\r\n        updateAddresses: function () {\r\n            if (window.checkoutConfig.reloadOnBillingAddress ||\r\n                !window.checkoutConfig.displayBillingOnPaymentMethod\r\n            ) {\r\n                setBillingAddressAction(globalMessageList);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get code\r\n         * @param {Object} parent\r\n         * @returns {String}\r\n         */\r\n        getCode: function (parent) {\r\n            return _.isFunction(parent.getCode) ? parent.getCode() : 'shared';\r\n        },\r\n\r\n        /**\r\n         * Get customer attribute label\r\n         *\r\n         * @param {*} attribute\r\n         * @returns {*}\r\n         */\r\n        getCustomAttributeLabel: function (attribute) {\r\n            var label;\r\n\r\n            if (typeof attribute === 'string') {\r\n                return attribute;\r\n            }\r\n\r\n            if (attribute.label) {\r\n                return attribute.label;\r\n            }\r\n\r\n            if (_.isArray(attribute.value)) {\r\n                label = _.map(attribute.value, function (value) {\r\n                    return this.getCustomAttributeOptionLabel(attribute['attribute_code'], value) || value;\r\n                }, this).join(', ');\r\n            } else if (typeof attribute.value === 'object') {\r\n                label = _.map(Object.values(attribute.value)).join(', ');\r\n            } else {\r\n                label = this.getCustomAttributeOptionLabel(attribute['attribute_code'], attribute.value);\r\n            }\r\n\r\n            return label || attribute.value;\r\n        },\r\n\r\n        /**\r\n         * Get option label for given attribute code and option ID\r\n         *\r\n         * @param {String} attributeCode\r\n         * @param {String} value\r\n         * @returns {String|null}\r\n         */\r\n        getCustomAttributeOptionLabel: function (attributeCode, value) {\r\n            var option,\r\n                label,\r\n                options = this.source.get('customAttributes') || {};\r\n\r\n            if (options[attributeCode]) {\r\n                option = _.findWhere(options[attributeCode], {\r\n                    value: value\r\n                });\r\n\r\n                if (option) {\r\n                    label = option.label;\r\n                }\r\n            } else if (value.file !== null) {\r\n                label = value.file;\r\n            }\r\n\r\n            return label;\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/cart-item-renderer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /**\r\n         * Prepare the product name value to be rendered as HTML\r\n         *\r\n         * @param {String} productName\r\n         * @return {String}\r\n         */\r\n        getProductNameUnsanitizedHtml: function (productName) {\r\n            // product name has already escaped on backend\r\n            return productName;\r\n        },\r\n\r\n        /**\r\n         * Prepare the given option value to be rendered as HTML\r\n         *\r\n         * @param {String} optionValue\r\n         * @return {String}\r\n         */\r\n        getOptionValueUnsanitizedHtml: function (optionValue) {\r\n            // option value has already escaped on backend\r\n            return optionValue;\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/estimation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Catalog/js/price-utils',\r\n    'Magento_Checkout/js/model/totals',\r\n    'Magento_Checkout/js/model/sidebar'\r\n], function (Component, quote, priceUtils, totals, sidebarModel) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        isLoading: totals.isLoading,\r\n\r\n        /**\r\n         * @return {Number}\r\n         */\r\n        getQuantity: function () {\r\n            if (totals.totals()) {\r\n                return parseFloat(totals.totals()['items_qty']);\r\n            }\r\n\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * @return {Number}\r\n         */\r\n        getPureValue: function () {\r\n            if (totals.totals()) {\r\n                return parseFloat(totals.getSegment('grand_total').value);\r\n            }\r\n\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * Show sidebar.\r\n         */\r\n        showSidebar: function () {\r\n            sidebarModel.show();\r\n        },\r\n\r\n        /**\r\n         * @param {*} price\r\n         * @return {*|String}\r\n         */\r\n        getFormattedPrice: function (price) {\r\n            return priceUtils.formatPrice(price, quote.getPriceFormat());\r\n        },\r\n\r\n        /**\r\n         * @return {*|String}\r\n         */\r\n        getValue: function () {\r\n            return this.getFormattedPrice(this.getPureValue());\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/minicart.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data',\r\n    'jquery',\r\n    'ko',\r\n    'underscore',\r\n    'sidebar',\r\n    'mage/translate',\r\n    'mage/dropdown'\r\n], function (Component, customerData, $, ko, _) {\r\n    'use strict';\r\n\r\n    var sidebarInitialized = false,\r\n        addToCartCalls = 0,\r\n        miniCart;\r\n\r\n    miniCart = $('[data-block=\\'minicart\\']');\r\n\r\n    /**\r\n     * @return {Boolean}\r\n     */\r\n    function initSidebar() {\r\n        if (miniCart.data('mageSidebar')) {\r\n            miniCart.sidebar('update');\r\n        }\r\n\r\n        if (!$('[data-role=product-item]').length) {\r\n            return false;\r\n        }\r\n        miniCart.trigger('contentUpdated');\r\n\r\n        if (sidebarInitialized) {\r\n            return false;\r\n        }\r\n        sidebarInitialized = true;\r\n        miniCart.sidebar({\r\n            'targetElement': 'div.block.block-minicart',\r\n            'url': {\r\n                'checkout': window.checkout.checkoutUrl,\r\n                'update': window.checkout.updateItemQtyUrl,\r\n                'remove': window.checkout.removeItemUrl,\r\n                'loginUrl': window.checkout.customerLoginUrl,\r\n                'isRedirectRequired': window.checkout.isRedirectRequired\r\n            },\r\n            'button': {\r\n                'checkout': '#top-cart-btn-checkout',\r\n                'remove': '#mini-cart a.action.delete',\r\n                'close': '#btn-minicart-close'\r\n            },\r\n            'showcart': {\r\n                'parent': 'span.counter',\r\n                'qty': 'span.counter-number',\r\n                'label': 'span.counter-label'\r\n            },\r\n            'minicart': {\r\n                'list': '#mini-cart',\r\n                'content': '#minicart-content-wrapper',\r\n                'qty': 'div.items-total',\r\n                'subtotal': 'div.subtotal span.price',\r\n                'maxItemsVisible': window.checkout.minicartMaxItemsVisible\r\n            },\r\n            'item': {\r\n                'qty': ':input.cart-item-qty',\r\n                'button': ':button.update-cart-item'\r\n            },\r\n            'confirmMessage': $.mage.__('Are you sure you would like to remove this item from the shopping cart?')\r\n        });\r\n    }\r\n\r\n    miniCart.on('dropdowndialogopen', function () {\r\n        initSidebar();\r\n    });\r\n\r\n    return Component.extend({\r\n        shoppingCartUrl: window.checkout.shoppingCartUrl,\r\n        maxItemsToDisplay: window.checkout.maxItemsToDisplay,\r\n        cart: {},\r\n\r\n        // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n        /**\r\n         * @override\r\n         */\r\n        initialize: function () {\r\n            var self = this,\r\n                cartData = customerData.get('cart');\r\n\r\n            this.update(cartData());\r\n            cartData.subscribe(function (updatedCart) {\r\n                addToCartCalls--;\r\n                this.isLoading(addToCartCalls > 0);\r\n                sidebarInitialized = false;\r\n                this.update(updatedCart);\r\n                initSidebar();\r\n            }, this);\r\n            $('[data-block=\"minicart\"]').on('contentLoading', function () {\r\n                addToCartCalls++;\r\n                self.isLoading(true);\r\n            });\r\n\r\n            if (\r\n                cartData().website_id !== window.checkout.websiteId && cartData().website_id !== undefined ||\r\n                cartData().storeId !== window.checkout.storeId && cartData().storeId !== undefined\r\n            ) {\r\n                customerData.reload(['cart'], false);\r\n            }\r\n\r\n            return this._super();\r\n        },\r\n        //jscs:enable requireCamelCaseOrUpperCaseIdentifiers\r\n\r\n        isLoading: ko.observable(false),\r\n        initSidebar: initSidebar,\r\n\r\n        /**\r\n         * Close mini shopping cart.\r\n         */\r\n        closeMinicart: function () {\r\n            $('[data-block=\"minicart\"]').find('[data-role=\"dropdownDialog\"]').dropdownDialog('close');\r\n        },\r\n\r\n        /**\r\n         * @param {String} productType\r\n         * @return {*|String}\r\n         */\r\n        getItemRenderer: function (productType) {\r\n            return this.itemRenderer[productType] || 'defaultRenderer';\r\n        },\r\n\r\n        /**\r\n         * Update mini shopping cart content.\r\n         *\r\n         * @param {Object} updatedCart\r\n         * @returns void\r\n         */\r\n        update: function (updatedCart) {\r\n            _.each(updatedCart, function (value, key) {\r\n                if (!this.cart.hasOwnProperty(key)) {\r\n                    this.cart[key] = ko.observable();\r\n                }\r\n                this.cart[key](value);\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Get cart param by name.\r\n         *\r\n         * @param {String} name\r\n         * @returns {*}\r\n         */\r\n        getCartParamUnsanitizedHtml: function (name) {\r\n            if (!_.isUndefined(name)) {\r\n                if (!this.cart.hasOwnProperty(name)) {\r\n                    this.cart[name] = ko.observable();\r\n                }\r\n            }\r\n\r\n            return this.cart[name]();\r\n        },\r\n\r\n        /**\r\n         * @deprecated please use getCartParamUnsanitizedHtml.\r\n         * @param {String} name\r\n         * @returns {*}\r\n         */\r\n        getCartParam: function (name) {\r\n            return this.getCartParamUnsanitizedHtml(name);\r\n        },\r\n\r\n        /**\r\n         * Returns array of cart items, limited by 'maxItemsToDisplay' setting\r\n         * @returns []\r\n         */\r\n        getCartItems: function () {\r\n            var items = this.getCartParamUnsanitizedHtml('items') || [];\r\n\r\n            items = items.slice(parseInt(-this.maxItemsToDisplay, 10));\r\n\r\n            return items;\r\n        },\r\n\r\n        /**\r\n         * Returns count of cart line items\r\n         * @returns {Number}\r\n         */\r\n        getCartLineItemsCount: function () {\r\n            var items = this.getCartParamUnsanitizedHtml('items') || [];\r\n\r\n            return parseInt(items.length, 10);\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/payment.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'uiComponent',\r\n    'ko',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/step-navigator',\r\n    'Magento_Checkout/js/model/payment-service',\r\n    'Magento_Checkout/js/model/payment/method-converter',\r\n    'Magento_Checkout/js/action/get-payment-information',\r\n    'Magento_Checkout/js/model/checkout-data-resolver',\r\n    'mage/translate'\r\n], function (\r\n    $,\r\n    _,\r\n    Component,\r\n    ko,\r\n    quote,\r\n    stepNavigator,\r\n    paymentService,\r\n    methodConverter,\r\n    getPaymentInformation,\r\n    checkoutDataResolver,\r\n    $t\r\n) {\r\n    'use strict';\r\n\r\n    /** Set payment methods to collection */\r\n    paymentService.setPaymentMethods(methodConverter(window.checkoutConfig.paymentMethods));\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/payment',\r\n            activeMethod: ''\r\n        },\r\n        isVisible: ko.observable(quote.isVirtual()),\r\n        quoteIsVirtual: quote.isVirtual(),\r\n        isPaymentMethodsAvailable: ko.computed(function () {\r\n            return paymentService.getAvailablePaymentMethods().length > 0;\r\n        }),\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n            checkoutDataResolver.resolvePaymentMethod();\r\n            stepNavigator.registerStep(\r\n                'payment',\r\n                null,\r\n                $t('Review & Payments'),\r\n                this.isVisible,\r\n                _.bind(this.navigate, this),\r\n                this.sortOrder\r\n            );\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Navigate method.\r\n         */\r\n        navigate: function () {\r\n            var self = this;\r\n\r\n            if (!self.hasShippingMethod()) {\r\n                this.isVisible(false);\r\n                stepNavigator.setHash('shipping');\r\n            } else {\r\n                getPaymentInformation().done(function () {\r\n                    self.isVisible(true);\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        hasShippingMethod: function () {\r\n            return window.checkoutConfig.selectedShippingMethod !== null;\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getFormKey: function () {\r\n            return window.checkoutConfig.formKey;\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/progress-bar.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'ko',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/step-navigator',\r\n    'Magento_Checkout/js/view/billing-address'\r\n], function ($, _, ko, Component, stepNavigator, billingAddress) {\r\n    'use strict';\r\n\r\n    var steps = stepNavigator.steps;\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/progress-bar',\r\n            visible: true\r\n        },\r\n        steps: steps,\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            var stepsValue;\r\n\r\n            this._super();\r\n            window.addEventListener('hashchange', _.bind(stepNavigator.handleHash, stepNavigator));\r\n\r\n            if (!window.location.hash) {\r\n                stepsValue = stepNavigator.steps();\r\n\r\n                if (stepsValue.length) {\r\n                    stepNavigator.setHash(stepsValue.sort(stepNavigator.sortItems)[0].code);\r\n                }\r\n            }\r\n\r\n            stepNavigator.handleHash();\r\n        },\r\n\r\n        /**\r\n         * @param {*} itemOne\r\n         * @param {*} itemTwo\r\n         * @return {*|Number}\r\n         */\r\n        sortItems: function (itemOne, itemTwo) {\r\n            return stepNavigator.sortItems(itemOne, itemTwo);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} step\r\n         */\r\n        navigateTo: function (step) {\r\n            if (step.code === 'shipping') {\r\n                billingAddress().needCancelBillingAddressChanges();\r\n            }\r\n            stepNavigator.navigateTo(step.code);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {*|Boolean}\r\n         */\r\n        isProcessed: function (item) {\r\n            return stepNavigator.isProcessed(item.code);\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/registration.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Ui/js/model/messageList'\r\n], function ($, Component, messageList) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/registration',\r\n            accountCreated: false,\r\n            creationStarted: false,\r\n            isFormVisible: true\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('accountCreated')\r\n                .observe('isFormVisible')\r\n                .observe('creationStarted');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getEmailAddress: function () {\r\n            return this.email;\r\n        },\r\n\r\n        /**\r\n         * @return String\r\n         */\r\n        getUrl: function () {\r\n            return this.registrationUrl;\r\n        },\r\n\r\n        /**\r\n         * Create new user account.\r\n         *\r\n         * @deprecated\r\n         */\r\n        createAccount: function () {\r\n            this.creationStarted(true);\r\n            $.post(\r\n                this.registrationUrl\r\n            ).done(\r\n                function (response) {\r\n\r\n                    if (response.errors == false) { //eslint-disable-line eqeqeq\r\n                        this.accountCreated(true);\r\n                    } else {\r\n                        messageList.addErrorMessage(response);\r\n                    }\r\n                    this.isFormVisible(false);\r\n                }.bind(this)\r\n            ).fail(\r\n                function (response) {\r\n                    this.accountCreated(false);\r\n                    this.isFormVisible(false);\r\n                    messageList.addErrorMessage(response);\r\n                }.bind(this)\r\n            );\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/shipping-information.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/step-navigator',\r\n    'Magento_Checkout/js/model/sidebar'\r\n], function ($, Component, quote, stepNavigator, sidebarModel) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/shipping-information'\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isVisible: function () {\r\n            return !quote.isVirtual() && stepNavigator.isProcessed('shipping');\r\n        },\r\n\r\n        /**\r\n         * @return {String}\r\n         */\r\n        getShippingMethodTitle: function () {\r\n            var shippingMethod = quote.shippingMethod(),\r\n                shippingMethodTitle = '';\r\n\r\n            if (!shippingMethod) {\r\n                return '';\r\n            }\r\n\r\n            shippingMethodTitle = shippingMethod['carrier_title'];\r\n\r\n            if (typeof shippingMethod['method_title'] !== 'undefined') {\r\n                shippingMethodTitle += ' - ' + shippingMethod['method_title'];\r\n            }\r\n\r\n            return shippingMethodTitle;\r\n        },\r\n\r\n        /**\r\n         * Back step.\r\n         */\r\n        back: function () {\r\n            sidebarModel.hide();\r\n            stepNavigator.navigateTo('shipping');\r\n        },\r\n\r\n        /**\r\n         * Back to shipping method.\r\n         */\r\n        backToShippingMethod: function () {\r\n            sidebarModel.hide();\r\n            stepNavigator.navigateTo('shipping', 'opc-shipping_method');\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/shipping.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'Magento_Ui/js/form/form',\r\n    'ko',\r\n    'Magento_Customer/js/model/customer',\r\n    'Magento_Customer/js/model/address-list',\r\n    'Magento_Checkout/js/model/address-converter',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/action/create-shipping-address',\r\n    'Magento_Checkout/js/action/select-shipping-address',\r\n    'Magento_Checkout/js/model/shipping-rates-validator',\r\n    'Magento_Checkout/js/model/shipping-address/form-popup-state',\r\n    'Magento_Checkout/js/model/shipping-service',\r\n    'Magento_Checkout/js/action/select-shipping-method',\r\n    'Magento_Checkout/js/model/shipping-rate-registry',\r\n    'Magento_Checkout/js/action/set-shipping-information',\r\n    'Magento_Checkout/js/model/step-navigator',\r\n    'Magento_Ui/js/modal/modal',\r\n    'Magento_Checkout/js/model/checkout-data-resolver',\r\n    'Magento_Checkout/js/checkout-data',\r\n    'uiRegistry',\r\n    'mage/translate',\r\n    'Magento_Checkout/js/model/shipping-rate-service'\r\n], function (\r\n    $,\r\n    _,\r\n    Component,\r\n    ko,\r\n    customer,\r\n    addressList,\r\n    addressConverter,\r\n    quote,\r\n    createShippingAddress,\r\n    selectShippingAddress,\r\n    shippingRatesValidator,\r\n    formPopUpState,\r\n    shippingService,\r\n    selectShippingMethodAction,\r\n    rateRegistry,\r\n    setShippingInformationAction,\r\n    stepNavigator,\r\n    modal,\r\n    checkoutDataResolver,\r\n    checkoutData,\r\n    registry,\r\n    $t\r\n) {\r\n    'use strict';\r\n\r\n    var popUp = null;\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/shipping',\r\n            shippingFormTemplate: 'Magento_Checkout/shipping-address/form',\r\n            shippingMethodListTemplate: 'Magento_Checkout/shipping-address/shipping-method-list',\r\n            shippingMethodItemTemplate: 'Magento_Checkout/shipping-address/shipping-method-item',\r\n            imports: {\r\n                countryOptions: '${ $.parentName }.shippingAddress.shipping-address-fieldset.country_id:indexedOptions'\r\n            }\r\n        },\r\n        visible: ko.observable(!quote.isVirtual()),\r\n        errorValidationMessage: ko.observable(false),\r\n        isCustomerLoggedIn: customer.isLoggedIn,\r\n        isFormPopUpVisible: formPopUpState.isVisible,\r\n        isFormInline: addressList().length === 0,\r\n        isNewAddressAdded: ko.observable(false),\r\n        saveInAddressBook: 1,\r\n        quoteIsVirtual: quote.isVirtual(),\r\n\r\n        /**\r\n         * @return {exports}\r\n         */\r\n        initialize: function () {\r\n            var self = this,\r\n                hasNewAddress,\r\n                fieldsetName = 'checkout.steps.shipping-step.shippingAddress.shipping-address-fieldset';\r\n\r\n            this._super();\r\n\r\n            if (!quote.isVirtual()) {\r\n                stepNavigator.registerStep(\r\n                    'shipping',\r\n                    '',\r\n                    $t('Shipping'),\r\n                    this.visible, _.bind(this.navigate, this),\r\n                    this.sortOrder\r\n                );\r\n            }\r\n            checkoutDataResolver.resolveShippingAddress();\r\n\r\n            hasNewAddress = addressList.some(function (address) {\r\n                return address.getType() == 'new-customer-address'; //eslint-disable-line eqeqeq\r\n            });\r\n\r\n            this.isNewAddressAdded(hasNewAddress);\r\n\r\n            this.isFormPopUpVisible.subscribe(function (value) {\r\n                if (value) {\r\n                    self.getPopUp().openModal();\r\n                }\r\n            });\r\n\r\n            quote.shippingMethod.subscribe(function () {\r\n                self.errorValidationMessage(false);\r\n            });\r\n\r\n            registry.async('checkoutProvider')(function (checkoutProvider) {\r\n                var shippingAddressData = checkoutData.getShippingAddressFromData();\r\n\r\n                if (shippingAddressData) {\r\n                    checkoutProvider.set(\r\n                        'shippingAddress',\r\n                        $.extend(true, {}, checkoutProvider.get('shippingAddress'), shippingAddressData)\r\n                    );\r\n                }\r\n                checkoutProvider.on('shippingAddress', function (shippingAddrsData, changes) {\r\n                    var isStreetAddressDeleted, isStreetAddressNotEmpty;\r\n\r\n                    /**\r\n                     * In last modifying operation street address was deleted.\r\n                     * @return {Boolean}\r\n                     */\r\n                    isStreetAddressDeleted = function () {\r\n                        var change;\r\n\r\n                        if (!changes || changes.length === 0) {\r\n                            return false;\r\n                        }\r\n\r\n                        change = changes.pop();\r\n\r\n                        if (_.isUndefined(change.value) || _.isUndefined(change.oldValue)) {\r\n                            return false;\r\n                        }\r\n\r\n                        if (!change.path.startsWith('shippingAddress.street')) {\r\n                            return false;\r\n                        }\r\n\r\n                        return change.value.length === 0 && change.oldValue.length > 0;\r\n                    };\r\n\r\n                    isStreetAddressNotEmpty = shippingAddrsData.street && !_.isEmpty(shippingAddrsData.street[0]);\r\n\r\n                    if (isStreetAddressNotEmpty || isStreetAddressDeleted()) {\r\n                        checkoutData.setShippingAddressFromData(shippingAddrsData);\r\n                    }\r\n                });\r\n                shippingRatesValidator.initFields(fieldsetName);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Navigator change hash handler.\r\n         *\r\n         * @param {Object} step - navigation step\r\n         */\r\n        navigate: function (step) {\r\n            step && step.isVisible(true);\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getPopUp: function () {\r\n            var self = this,\r\n                buttons;\r\n\r\n            if (!popUp) {\r\n                buttons = this.popUpForm.options.buttons;\r\n                this.popUpForm.options.buttons = [\r\n                    {\r\n                        text: buttons.save.text ? buttons.save.text : $t('Save Address'),\r\n                        class: buttons.save.class ? buttons.save.class : 'action primary action-save-address',\r\n                        click: self.saveNewAddress.bind(self)\r\n                    },\r\n                    {\r\n                        text: buttons.cancel.text ? buttons.cancel.text : $t('Cancel'),\r\n                        class: buttons.cancel.class ? buttons.cancel.class : 'action secondary action-hide-popup',\r\n\r\n                        /** @inheritdoc */\r\n                        click: this.onClosePopUp.bind(this)\r\n                    }\r\n                ];\r\n\r\n                /** @inheritdoc */\r\n                this.popUpForm.options.closed = function () {\r\n                    self.isFormPopUpVisible(false);\r\n                };\r\n\r\n                this.popUpForm.options.modalCloseBtnHandler = this.onClosePopUp.bind(this);\r\n                this.popUpForm.options.keyEventHandlers = {\r\n                    escapeKey: this.onClosePopUp.bind(this)\r\n                };\r\n\r\n                /** @inheritdoc */\r\n                this.popUpForm.options.opened = function () {\r\n                    // Store temporary address for revert action in case when user click cancel action\r\n                    self.temporaryAddress = $.extend(true, {}, checkoutData.getShippingAddressFromData());\r\n                };\r\n                popUp = modal(this.popUpForm.options, $(this.popUpForm.element));\r\n            }\r\n\r\n            return popUp;\r\n        },\r\n\r\n        /**\r\n         * Revert address and close modal.\r\n         */\r\n        onClosePopUp: function () {\r\n            checkoutData.setShippingAddressFromData($.extend(true, {}, this.temporaryAddress));\r\n            this.getPopUp().closeModal();\r\n        },\r\n\r\n        /**\r\n         * Show address form popup\r\n         */\r\n        showFormPopUp: function () {\r\n            this.isFormPopUpVisible(true);\r\n        },\r\n\r\n        /**\r\n         * Save new shipping address\r\n         */\r\n        saveNewAddress: function () {\r\n            var addressData,\r\n                newShippingAddress;\r\n\r\n            this.source.set('params.invalid', false);\r\n            this.triggerShippingDataValidateEvent();\r\n\r\n            if (!this.source.get('params.invalid')) {\r\n                addressData = this.source.get('shippingAddress');\r\n                // if user clicked the checkbox, its value is true or false. Need to convert.\r\n                addressData['save_in_address_book'] = this.saveInAddressBook ? 1 : 0;\r\n\r\n                // New address must be selected as a shipping address\r\n                newShippingAddress = createShippingAddress(addressData);\r\n                selectShippingAddress(newShippingAddress);\r\n                checkoutData.setSelectedShippingAddress(newShippingAddress.getKey());\r\n                checkoutData.setNewCustomerShippingAddress($.extend(true, {}, addressData));\r\n                this.getPopUp().closeModal();\r\n                this.isNewAddressAdded(true);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Shipping Method View\r\n         */\r\n        rates: shippingService.getShippingRates(),\r\n        isLoading: shippingService.isLoading,\r\n        isSelected: ko.computed(function () {\r\n            return quote.shippingMethod() ?\r\n                quote.shippingMethod()['carrier_code'] + '_' + quote.shippingMethod()['method_code'] :\r\n                null;\r\n        }),\r\n\r\n        /**\r\n         * @param {Object} shippingMethod\r\n         * @return {Boolean}\r\n         */\r\n        selectShippingMethod: function (shippingMethod) {\r\n            selectShippingMethodAction(shippingMethod);\r\n            checkoutData.setSelectedShippingRate(shippingMethod['carrier_code'] + '_' + shippingMethod['method_code']);\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Set shipping information handler\r\n         */\r\n        setShippingInformation: function () {\r\n            if (this.validateShippingInformation()) {\r\n                quote.billingAddress(null);\r\n                checkoutDataResolver.resolveBillingAddress();\r\n                registry.async('checkoutProvider')(function (checkoutProvider) {\r\n                    var shippingAddressData = checkoutData.getShippingAddressFromData();\r\n\r\n                    if (shippingAddressData) {\r\n                        checkoutProvider.set(\r\n                            'shippingAddress',\r\n                            $.extend(true, {}, checkoutProvider.get('shippingAddress'), shippingAddressData)\r\n                        );\r\n                    }\r\n                });\r\n                setShippingInformationAction().done(\r\n                    function () {\r\n                        stepNavigator.next();\r\n                    }\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        validateShippingInformation: function () {\r\n            var shippingAddress,\r\n                addressData,\r\n                loginFormSelector = 'form[data-role=email-with-possible-login]',\r\n                emailValidationResult = customer.isLoggedIn(),\r\n                field,\r\n                option = _.isObject(this.countryOptions) && this.countryOptions[quote.shippingAddress().countryId],\r\n                messageContainer = registry.get('checkout.errors').messageContainer;\r\n\r\n            if (!quote.shippingMethod()) {\r\n                this.errorValidationMessage(\r\n                    $t('The shipping method is missing. Select the shipping method and try again.')\r\n                );\r\n\r\n                return false;\r\n            }\r\n\r\n            if (!customer.isLoggedIn()) {\r\n                $(loginFormSelector).validation();\r\n                emailValidationResult = Boolean($(loginFormSelector + ' input[name=username]').valid());\r\n            }\r\n\r\n            if (this.isFormInline) {\r\n                this.source.set('params.invalid', false);\r\n                this.triggerShippingDataValidateEvent();\r\n\r\n                if (!quote.shippingMethod()['method_code']) {\r\n                    this.errorValidationMessage(\r\n                        $t('The shipping method is missing. Select the shipping method and try again.')\r\n                    );\r\n                }\r\n\r\n                if (emailValidationResult &&\r\n                    this.source.get('params.invalid') ||\r\n                    !quote.shippingMethod()['method_code'] ||\r\n                    !quote.shippingMethod()['carrier_code']\r\n                ) {\r\n                    this.focusInvalid();\r\n\r\n                    return false;\r\n                }\r\n\r\n                shippingAddress = quote.shippingAddress();\r\n                addressData = addressConverter.formAddressDataToQuoteAddress(\r\n                    this.source.get('shippingAddress')\r\n                );\r\n\r\n                //Copy form data to quote shipping address object\r\n                for (field in addressData) {\r\n                    if (addressData.hasOwnProperty(field) &&  //eslint-disable-line max-depth\r\n                        shippingAddress.hasOwnProperty(field) &&\r\n                        typeof addressData[field] != 'function' &&\r\n                        _.isEqual(shippingAddress[field], addressData[field])\r\n                    ) {\r\n                        shippingAddress[field] = addressData[field];\r\n                    } else if (typeof addressData[field] != 'function' &&\r\n                        !_.isEqual(shippingAddress[field], addressData[field])) {\r\n                        shippingAddress = addressData;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (customer.isLoggedIn()) {\r\n                    shippingAddress['save_in_address_book'] = 1;\r\n                }\r\n                selectShippingAddress(shippingAddress);\r\n            } else if (customer.isLoggedIn() &&\r\n                option &&\r\n                option['is_region_required'] &&\r\n                !quote.shippingAddress().region\r\n            ) {\r\n                messageContainer.addErrorMessage({\r\n                    message: $t('Please specify a regionId in shipping address.')\r\n                });\r\n\r\n                return false;\r\n            }\r\n\r\n            if (!emailValidationResult) {\r\n                $(loginFormSelector + ' input[name=username]').trigger('focus');\r\n\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Trigger Shipping data Validate Event.\r\n         */\r\n        triggerShippingDataValidateEvent: function () {\r\n            this.source.trigger('shippingAddress.data.validate');\r\n\r\n            if (this.source.get('shippingAddress.custom_attributes')) {\r\n                this.source.trigger('shippingAddress.custom_attributes.data.validate');\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/sidebar.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'ko',\r\n    'jquery',\r\n    'Magento_Checkout/js/model/sidebar'\r\n], function (Component, ko, $, sidebarModel) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /**\r\n         * @param {HTMLElement} element\r\n         */\r\n        setModalElement: function (element) {\r\n            sidebarModel.setPopup($(element));\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/summary.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/totals'\r\n], function (Component, totals) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        isLoading: totals.isLoading\r\n    });\r\n});\r\n","Magento_Checkout/js/view/billing-address/list.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/model/address-list',\r\n    'mage/translate',\r\n    'Magento_Customer/js/model/customer'\r\n], function (Component, addressList, $t, customer) {\r\n    'use strict';\r\n\r\n    var newAddressOption = {\r\n            /**\r\n             * Get new address label\r\n             * @returns {String}\r\n             */\r\n            getAddressInline: function () {\r\n                return $t('New Address');\r\n            },\r\n            customerAddressId: null\r\n        },\r\n        addressOptions = addressList().filter(function (address) {\r\n            return address.getType() === 'customer-address';\r\n        }),\r\n        addressDefaultIndex = addressOptions.findIndex(function (address) {\r\n            return address.isDefaultBilling();\r\n        });\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/billing-address',\r\n            selectedAddress: null,\r\n            isNewAddressSelected: false,\r\n            addressOptions: addressOptions,\r\n            exports: {\r\n                selectedAddress: '${ $.parentName }:selectedAddress'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n            this.addressOptions.push(newAddressOption);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @return {exports.initObservable}\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('selectedAddress isNewAddressSelected')\r\n                .observe({\r\n                    isNewAddressSelected: !customer.isLoggedIn() || !addressOptions.length,\r\n                    selectedAddress: this.addressOptions[addressDefaultIndex]\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {*}\r\n         */\r\n        addressOptionsText: function (address) {\r\n            return address.getAddressInline();\r\n        },\r\n\r\n        /**\r\n         * @param {Object} address\r\n         */\r\n        onAddressChange: function (address) {\r\n            this.isNewAddressSelected(address === newAddressOption);\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/cart/shipping-estimation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Ui/js/form/form',\r\n        'Magento_Checkout/js/action/select-shipping-address',\r\n        'Magento_Checkout/js/model/address-converter',\r\n        'Magento_Checkout/js/model/cart/estimate-service',\r\n        'Magento_Checkout/js/checkout-data',\r\n        'Magento_Checkout/js/model/shipping-rates-validator',\r\n        'uiRegistry',\r\n        'Magento_Checkout/js/model/quote',\r\n        'Magento_Checkout/js/model/checkout-data-resolver',\r\n        'Magento_Checkout/js/model/shipping-service',\r\n        'mage/validation'\r\n    ],\r\n    function (\r\n        $,\r\n        Component,\r\n        selectShippingAddress,\r\n        addressConverter,\r\n        estimateService,\r\n        checkoutData,\r\n        shippingRatesValidator,\r\n        registry,\r\n        quote,\r\n        checkoutDataResolver,\r\n        shippingService\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Checkout/cart/shipping-estimation'\r\n            },\r\n            isVirtual: quote.isVirtual(),\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            initialize: function () {\r\n                this._super();\r\n\r\n                // Prevent shipping methods showing none available whilst we resolve\r\n                shippingService.isLoading(true);\r\n\r\n                registry.async('checkoutProvider')(function (checkoutProvider) {\r\n                    var address, estimatedAddress;\r\n\r\n                    shippingService.isLoading(false);\r\n\r\n                    checkoutDataResolver.resolveEstimationAddress();\r\n                    address = quote.isVirtual() ? quote.billingAddress() : quote.shippingAddress();\r\n\r\n                    if (!address && quote.isVirtual()) {\r\n                        address = addressConverter.formAddressDataToQuoteAddress(\r\n                            checkoutData.getSelectedBillingAddress()\r\n                        );\r\n                    }\r\n\r\n                    if (address) {\r\n                        estimatedAddress = address.isEditable() ?\r\n                            addressConverter.quoteAddressToFormAddressData(address) :\r\n                            {\r\n                                // only the following fields must be used by estimation form data provider\r\n                                'country_id': address.countryId,\r\n                                region: address.region,\r\n                                'region_id': address.regionId,\r\n                                postcode: address.postcode\r\n                            };\r\n                        checkoutProvider.set(\r\n                            'shippingAddress',\r\n                            $.extend({}, checkoutProvider.get('shippingAddress'), estimatedAddress)\r\n                        );\r\n                    }\r\n\r\n                    if (!quote.isVirtual()) {\r\n                        checkoutProvider.on('shippingAddress', function (shippingAddressData) {\r\n                            //jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n                            if (quote.shippingAddress().countryId !== shippingAddressData.country_id ||\r\n                                (shippingAddressData.postcode || shippingAddressData.region_id)\r\n                            ) {\r\n                                checkoutData.setShippingAddressFromData(shippingAddressData);\r\n                            }\r\n                            //jscs:enable requireCamelCaseOrUpperCaseIdentifiers\r\n                        });\r\n                    } else {\r\n                        checkoutProvider.on('shippingAddress', function (shippingAddressData) {\r\n                            checkoutData.setBillingAddressFromData(shippingAddressData);\r\n                        });\r\n                    }\r\n                });\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            initElement: function (element) {\r\n                this._super();\r\n\r\n                if (element.index === 'address-fieldsets') {\r\n                    shippingRatesValidator.bindChangeHandlers(element.elems(), true, 500);\r\n                    element.elems.subscribe(function (elems) {\r\n                        shippingRatesValidator.doElementBinding(elems[elems.length - 1], true, 500);\r\n                    });\r\n                }\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Returns shipping rates for address\r\n             * @returns void\r\n             */\r\n            getEstimationInfo: function () {\r\n                var addressData = null;\r\n\r\n                this.source.set('params.invalid', false);\r\n                this.source.trigger('shippingAddress.data.validate');\r\n\r\n                if (!this.source.get('params.invalid')) {\r\n                    addressData = this.source.get('shippingAddress');\r\n                    selectShippingAddress(addressConverter.formAddressDataToQuoteAddress(addressData));\r\n                }\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Checkout/js/view/cart/shipping-rates.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/shipping-service',\r\n    'Magento_Catalog/js/price-utils',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/action/select-shipping-method',\r\n    'Magento_Checkout/js/checkout-data'\r\n], function (ko, _, Component, shippingService, priceUtils, quote, selectShippingMethodAction, checkoutData) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/cart/shipping-rates'\r\n        },\r\n        isVisible: ko.observable(!quote.isVirtual()),\r\n        isLoading: shippingService.isLoading,\r\n        shippingRates: shippingService.getShippingRates(),\r\n        shippingRateGroups: ko.observableArray([]),\r\n        selectedShippingMethod: ko.computed(function () {\r\n            return quote.shippingMethod() ?\r\n                quote.shippingMethod()['carrier_code'] + '_' + quote.shippingMethod()['method_code'] :\r\n                null;\r\n        }),\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        initObservable: function () {\r\n            var self = this;\r\n\r\n            this._super();\r\n\r\n            this.shippingRates.subscribe(function (rates) {\r\n                self.shippingRateGroups([]);\r\n                _.each(rates, function (rate) {\r\n                    var carrierTitle = rate['carrier_title'];\r\n\r\n                    if (self.shippingRateGroups.indexOf(carrierTitle) === -1) {\r\n                        self.shippingRateGroups.push(carrierTitle);\r\n                    }\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Get shipping rates for specific group based on title.\r\n         * @returns Array\r\n         */\r\n        getRatesForGroup: function (shippingRateGroupTitle) {\r\n            return _.filter(this.shippingRates(), function (rate) {\r\n                return shippingRateGroupTitle === rate['carrier_title'];\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Format shipping price.\r\n         * @returns {String}\r\n         */\r\n        getFormattedPrice: function (price) {\r\n            return priceUtils.formatPrice(price, quote.getPriceFormat());\r\n        },\r\n\r\n        /**\r\n         * Set shipping method.\r\n         * @param {String} methodData\r\n         * @returns bool\r\n         */\r\n        selectShippingMethod: function (methodData) {\r\n            selectShippingMethodAction(methodData);\r\n            checkoutData.setSelectedShippingRate(methodData['carrier_code'] + '_' + methodData['method_code']);\r\n\r\n            return true;\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/cart/totals.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/totals',\r\n    'Magento_Checkout/js/model/shipping-service'\r\n], function ($, Component, totalsService, shippingService) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        isLoading: totalsService.isLoading,\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            totalsService.totals.subscribe(function () {\r\n                $(window).trigger('resize');\r\n            });\r\n            shippingService.getShippingRates().subscribe(function () {\r\n                $(window).trigger('resize');\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/cart/totals/shipping.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/view/summary/shipping',\r\n    'Magento_Checkout/js/model/quote'\r\n], function (Component, quote) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        isCalculated: function () {\r\n            return !!quote.shippingMethod();\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/checkout/placeOrderCaptcha.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Captcha/js/view/checkout/defaultCaptcha',\r\n    'Magento_Captcha/js/model/captchaList',\r\n    'underscore',\r\n    'Magento_Checkout/js/model/payment/place-order-hooks'\r\n],\r\nfunction (defaultCaptcha, captchaList, _, placeOrderHooks) {\r\n    'use strict';\r\n\r\n    return defaultCaptcha.extend({\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            var self = this,\r\n                currentCaptcha;\r\n\r\n            this._super();\r\n            currentCaptcha = captchaList.getCaptchaByFormId(this.formId);\r\n\r\n            if (currentCaptcha != null) {\r\n                currentCaptcha.setIsVisible(true);\r\n                this.setCurrentCaptcha(currentCaptcha);\r\n                placeOrderHooks.requestModifiers.push(function (headers) {\r\n                    if (self.isRequired()) {\r\n                        headers['X-Captcha'] = self.captchaValue()();\r\n                    }\r\n                });\r\n                placeOrderHooks.afterRequestListeners.push(function () {\r\n                    self.refresh();\r\n                });\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/checkout/minicart/subtotal/totals.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data'\r\n], function (ko, Component, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        displaySubtotal: ko.observable(true),\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.cart = customerData.get('cart');\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/configure/product-customer-data.js":"require([\r\n    'jquery',\r\n    'Magento_Customer/js/customer-data',\r\n    'underscore',\r\n    'domReady!'\r\n], function ($, customerData, _) {\r\n    'use strict';\r\n\r\n    var selectors = {\r\n        qtySelector: '#product_addtocart_form [name=\"qty\"]',\r\n        productIdSelector: '#product_addtocart_form [name=\"product\"]',\r\n        itemIdSelector: '#product_addtocart_form [name=\"item\"]'\r\n    },\r\n    cartData = customerData.get('cart'),\r\n    productId = $(selectors.productIdSelector).val(),\r\n    itemId = $(selectors.itemIdSelector).val(),\r\n    productQty,\r\n    productQtyInput,\r\n\r\n    /**\r\n    * Updates product's qty input value according to actual data\r\n    */\r\n    updateQty = function () {\r\n\r\n        if (productQty || productQty === 0) {\r\n            productQtyInput = productQtyInput || $(selectors.qtySelector);\r\n\r\n            if (productQtyInput && productQty.toString() !== productQtyInput.val()) {\r\n                productQtyInput.val(productQty);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n    * Sets productQty according to cart data from customer-data\r\n    *\r\n    * @param {Object} data - cart data from customer-data\r\n    */\r\n    setProductQty = function (data) {\r\n        var product;\r\n\r\n        if (!(data && data.items && data.items.length && productId)) {\r\n            return;\r\n        }\r\n        product = _.find(data.items, function (item) {\r\n            if (item['item_id'] === itemId) {\r\n                return item['product_id'] === productId ||\r\n                    item['item_id'] === productId;\r\n            }\r\n        });\r\n\r\n        if (!product) {\r\n            return;\r\n        }\r\n        productQty = product.qty;\r\n    };\r\n\r\n    cartData.subscribe(function (updateCartData) {\r\n        setProductQty(updateCartData);\r\n        updateQty();\r\n    });\r\n\r\n    setProductQty(cartData());\r\n    updateQty();\r\n});\r\n","Magento_Checkout/js/view/form/element/email.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'uiComponent',\r\n    'ko',\r\n    'Magento_Customer/js/model/customer',\r\n    'Magento_Customer/js/action/check-email-availability',\r\n    'Magento_Customer/js/action/login',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/checkout-data',\r\n    'Magento_Checkout/js/model/full-screen-loader',\r\n    'mage/validation'\r\n], function ($, Component, ko, customer, checkEmailAvailability, loginAction, quote, checkoutData, fullScreenLoader) {\r\n    'use strict';\r\n\r\n    var validatedEmail;\r\n\r\n    if (!checkoutData.getValidatedEmailValue() &&\r\n        window.checkoutConfig.validatedEmailValue\r\n    ) {\r\n        checkoutData.setInputFieldEmailValue(window.checkoutConfig.validatedEmailValue);\r\n        checkoutData.setValidatedEmailValue(window.checkoutConfig.validatedEmailValue);\r\n    }\r\n\r\n    validatedEmail = checkoutData.getValidatedEmailValue();\r\n\r\n    if (validatedEmail && !customer.isLoggedIn()) {\r\n        quote.guestEmail = validatedEmail;\r\n    }\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/form/element/email',\r\n            email: checkoutData.getInputFieldEmailValue(),\r\n            emailFocused: false,\r\n            isLoading: false,\r\n            isPasswordVisible: false,\r\n            listens: {\r\n                email: 'emailHasChanged',\r\n                emailFocused: 'validateEmail'\r\n            },\r\n            ignoreTmpls: {\r\n                email: true\r\n            }\r\n        },\r\n        checkDelay: 2000,\r\n        checkRequest: null,\r\n        isEmailCheckComplete: null,\r\n        isCustomerLoggedIn: customer.isLoggedIn,\r\n        forgotPasswordUrl: window.checkoutConfig.forgotPasswordUrl,\r\n        emailCheckTimeout: 0,\r\n\r\n        /**\r\n         * Initializes regular properties of instance.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            this.isPasswordVisible = this.resolveInitialPasswordVisibility();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties of instance\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe(['email', 'emailFocused', 'isLoading', 'isPasswordVisible']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Callback on changing email property\r\n         */\r\n        emailHasChanged: function () {\r\n            var self = this;\r\n\r\n            clearTimeout(this.emailCheckTimeout);\r\n\r\n            if (self.validateEmail()) {\r\n                quote.guestEmail = self.email();\r\n                checkoutData.setValidatedEmailValue(self.email());\r\n            }\r\n            this.emailCheckTimeout = setTimeout(function () {\r\n                if (self.validateEmail()) {\r\n                    self.checkEmailAvailability();\r\n                } else {\r\n                    self.isPasswordVisible(false);\r\n                }\r\n            }, self.checkDelay);\r\n\r\n            checkoutData.setInputFieldEmailValue(self.email());\r\n        },\r\n\r\n        /**\r\n         * Check email existing.\r\n         */\r\n        checkEmailAvailability: function () {\r\n            this.validateRequest();\r\n            this.isEmailCheckComplete = $.Deferred();\r\n            this.isLoading(true);\r\n            this.checkRequest = checkEmailAvailability(this.isEmailCheckComplete, this.email());\r\n\r\n            $.when(this.isEmailCheckComplete).done(function () {\r\n                this.isPasswordVisible(false);\r\n                checkoutData.setCheckedEmailValue('');\r\n            }.bind(this)).fail(function () {\r\n                this.isPasswordVisible(true);\r\n                checkoutData.setCheckedEmailValue(this.email());\r\n            }.bind(this)).always(function () {\r\n                this.isLoading(false);\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * If request has been sent -> abort it.\r\n         * ReadyStates for request aborting:\r\n         * 1 - The request has been set up\r\n         * 2 - The request has been sent\r\n         * 3 - The request is in process\r\n         */\r\n        validateRequest: function () {\r\n            if (this.checkRequest != null && $.inArray(this.checkRequest.readyState, [1, 2, 3])) {\r\n                this.checkRequest.abort();\r\n                this.checkRequest = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Local email validation.\r\n         *\r\n         * @param {Boolean} focused - input focus.\r\n         * @returns {Boolean} - validation result.\r\n         */\r\n        validateEmail: function (focused) {\r\n            var loginFormSelector = 'form[data-role=email-with-possible-login]',\r\n                usernameSelector = loginFormSelector + ' input[name=username]',\r\n                loginForm = $(loginFormSelector),\r\n                validator,\r\n                valid;\r\n\r\n            loginForm.validation();\r\n\r\n            if (focused === false && !!this.email()) {\r\n                valid = !!$(usernameSelector).valid();\r\n\r\n                if (valid) {\r\n                    $(usernameSelector).removeAttr('aria-invalid aria-describedby');\r\n                }\r\n\r\n                return valid;\r\n            }\r\n\r\n            if (loginForm.is(':visible')) {\r\n                validator = loginForm.validate();\r\n\r\n                return validator.check(usernameSelector);\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Log in form submitting callback.\r\n         *\r\n         * @param {HTMLElement} loginForm - form element.\r\n         */\r\n        login: function (loginForm) {\r\n            var loginData = {},\r\n                formDataArray = $(loginForm).serializeArray();\r\n\r\n            formDataArray.forEach(function (entry) {\r\n                loginData[entry.name] = entry.value;\r\n            });\r\n\r\n            if (this.isPasswordVisible() && $(loginForm).validation() && $(loginForm).validation('isValid')) {\r\n                fullScreenLoader.startLoader();\r\n                loginAction(loginData).always(function () {\r\n                    fullScreenLoader.stopLoader();\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Resolves an initial state of a login form.\r\n         *\r\n         * @returns {Boolean} - initial visibility state.\r\n         */\r\n        resolveInitialPasswordVisibility: function () {\r\n            if (checkoutData.getInputFieldEmailValue() !== '' && checkoutData.getCheckedEmailValue() !== '') {\r\n                return true;\r\n            }\r\n\r\n            if (checkoutData.getInputFieldEmailValue() !== '') {\r\n                return checkoutData.getInputFieldEmailValue() === checkoutData.getCheckedEmailValue();\r\n            }\r\n\r\n            return false;\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/payment/default.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/action/place-order',\r\n    'Magento_Checkout/js/action/select-payment-method',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Customer/js/model/customer',\r\n    'Magento_Checkout/js/model/payment-service',\r\n    'Magento_Checkout/js/checkout-data',\r\n    'Magento_Checkout/js/model/checkout-data-resolver',\r\n    'uiRegistry',\r\n    'Magento_Checkout/js/model/payment/additional-validators',\r\n    'Magento_Ui/js/model/messages',\r\n    'uiLayout',\r\n    'Magento_Checkout/js/action/redirect-on-success'\r\n], function (\r\n    ko,\r\n    $,\r\n    Component,\r\n    placeOrderAction,\r\n    selectPaymentMethodAction,\r\n    quote,\r\n    customer,\r\n    paymentService,\r\n    checkoutData,\r\n    checkoutDataResolver,\r\n    registry,\r\n    additionalValidators,\r\n    Messages,\r\n    layout,\r\n    redirectOnSuccessAction\r\n) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        redirectAfterPlaceOrder: true,\r\n        isPlaceOrderActionAllowed: ko.observable(quote.billingAddress() != null),\r\n\r\n        /**\r\n         * After place order callback\r\n         */\r\n        afterPlaceOrder: function () {\r\n            // Override this function and put after place order logic here\r\n        },\r\n\r\n        /**\r\n         * Initialize view.\r\n         *\r\n         * @return {exports}\r\n         */\r\n        initialize: function () {\r\n            var billingAddressCode,\r\n                billingAddressData,\r\n                defaultAddressData;\r\n\r\n            this._super().initChildren();\r\n            quote.billingAddress.subscribe(function (address) {\r\n                this.isPlaceOrderActionAllowed(address !== null);\r\n            }, this);\r\n            checkoutDataResolver.resolveBillingAddress();\r\n\r\n            billingAddressCode = 'billingAddress' + this.getCode();\r\n            registry.async('checkoutProvider')(function (checkoutProvider) {\r\n                defaultAddressData = checkoutProvider.get(billingAddressCode);\r\n\r\n                if (defaultAddressData === undefined) {\r\n                    // Skip if payment does not have a billing address form\r\n                    return;\r\n                }\r\n                billingAddressData = checkoutData.getBillingAddressFromData();\r\n\r\n                if (billingAddressData) {\r\n                    checkoutProvider.set(\r\n                        billingAddressCode,\r\n                        $.extend(true, {}, defaultAddressData, billingAddressData)\r\n                    );\r\n                }\r\n                checkoutProvider.on(billingAddressCode, function (providerBillingAddressData) {\r\n                    checkoutData.setBillingAddressFromData(providerBillingAddressData);\r\n                }, billingAddressCode);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize child elements\r\n         *\r\n         * @returns {Component} Chainable.\r\n         */\r\n        initChildren: function () {\r\n            this.messageContainer = new Messages();\r\n            this.createMessagesComponent();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Create child message renderer component\r\n         *\r\n         * @returns {Component} Chainable.\r\n         */\r\n        createMessagesComponent: function () {\r\n\r\n            var messagesComponent = {\r\n                parent: this.name,\r\n                name: this.name + '.messages',\r\n                displayArea: 'messages',\r\n                component: 'Magento_Ui/js/view/messages',\r\n                config: {\r\n                    messageContainer: this.messageContainer\r\n                }\r\n            };\r\n\r\n            layout([messagesComponent]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Place order.\r\n         */\r\n        placeOrder: function (data, event) {\r\n            var self = this;\r\n\r\n            if (event) {\r\n                event.preventDefault();\r\n            }\r\n\r\n            if (this.validate() &&\r\n                additionalValidators.validate() &&\r\n                this.isPlaceOrderActionAllowed() === true\r\n            ) {\r\n                this.isPlaceOrderActionAllowed(false);\r\n\r\n                this.getPlaceOrderDeferredObject()\r\n                    .done(\r\n                        function () {\r\n                            self.afterPlaceOrder();\r\n\r\n                            if (self.redirectAfterPlaceOrder) {\r\n                                redirectOnSuccessAction.execute();\r\n                            }\r\n                        }\r\n                    ).always(\r\n                        function () {\r\n                            self.isPlaceOrderActionAllowed(true);\r\n                        }\r\n                    );\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getPlaceOrderDeferredObject: function () {\r\n            return $.when(\r\n                placeOrderAction(this.getData(), this.messageContainer)\r\n            );\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        selectPaymentMethod: function () {\r\n            selectPaymentMethodAction(this.getData());\r\n            checkoutData.setSelectedPaymentMethod(this.item.method);\r\n\r\n            return true;\r\n        },\r\n\r\n        isChecked: ko.computed(function () {\r\n            return quote.paymentMethod() ? quote.paymentMethod().method : null;\r\n        }),\r\n\r\n        isRadioButtonVisible: ko.computed(function () {\r\n            return paymentService.getAvailablePaymentMethods().length !== 1;\r\n        }),\r\n\r\n        /**\r\n         * Get payment method data\r\n         */\r\n        getData: function () {\r\n            return {\r\n                'method': this.item.method,\r\n                'po_number': null,\r\n                'additional_data': null\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Get payment method type.\r\n         */\r\n        getTitle: function () {\r\n            return this.item.title;\r\n        },\r\n\r\n        /**\r\n         * Get payment method code.\r\n         */\r\n        getCode: function () {\r\n            return this.item.method;\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        validate: function () {\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * @return {String}\r\n         */\r\n        getBillingAddressFormName: function () {\r\n            return 'billing-address-form-' + this.item.method;\r\n        },\r\n\r\n        /**\r\n         * Dispose billing address subscriptions\r\n         */\r\n        disposeSubscriptions: function () {\r\n            // dispose all active subscriptions\r\n            var billingAddressCode = 'billingAddress' + this.getCode();\r\n\r\n            registry.async('checkoutProvider')(function (checkoutProvider) {\r\n                checkoutProvider.off(billingAddressCode);\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/payment/email-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(\r\n    [\r\n        'uiComponent',\r\n        'Magento_Checkout/js/model/payment/additional-validators',\r\n        'Magento_Checkout/js/model/customer-email-validator'\r\n    ],\r\n    function (Component, additionalValidators, agreementValidator) {\r\n        'use strict';\r\n\r\n        additionalValidators.registerValidator(agreementValidator);\r\n\r\n        return Component.extend({});\r\n    }\r\n);\r\n","Magento_Checkout/js/view/payment/list.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'ko',\r\n    'mageUtils',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/payment/method-list',\r\n    'Magento_Checkout/js/model/payment/renderer-list',\r\n    'uiLayout',\r\n    'Magento_Checkout/js/model/checkout-data-resolver',\r\n    'mage/translate',\r\n    'uiRegistry'\r\n], function (_, ko, utils, Component, paymentMethods, rendererList, layout, checkoutDataResolver, $t, registry) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/payment-methods/list',\r\n            visible: paymentMethods().length > 0,\r\n            configDefaultGroup: {\r\n                name: 'methodGroup',\r\n                component: 'Magento_Checkout/js/model/payment/method-group'\r\n            },\r\n            paymentGroupsList: [],\r\n            defaultGroupTitle: $t('Select a new payment method')\r\n        },\r\n\r\n        /**\r\n         * Initialize view.\r\n         *\r\n         * @returns {Component} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super().initDefaulGroup().initChildren();\r\n            paymentMethods.subscribe(\r\n                function (changes) {\r\n                    checkoutDataResolver.resolvePaymentMethod();\r\n                    //remove renderer for \"deleted\" payment methods\r\n                    _.each(changes, function (change) {\r\n                        if (change.status === 'deleted') {\r\n                            this.removeRenderer(change.value.method);\r\n                        }\r\n                    }, this);\r\n                    //add renderer for \"added\" payment methods\r\n                    _.each(changes, function (change) {\r\n                        if (change.status === 'added') {\r\n                            this.createRenderer(change.value);\r\n                        }\r\n                    }, this);\r\n                }, this, 'arrayChange');\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super().\r\n                observe(['paymentGroupsList']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates default group\r\n         *\r\n         * @returns {Component} Chainable.\r\n         */\r\n        initDefaulGroup: function () {\r\n            layout([\r\n                this.configDefaultGroup\r\n            ]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Create renders for child payment methods.\r\n         *\r\n         * @returns {Component} Chainable.\r\n         */\r\n        initChildren: function () {\r\n            var self = this;\r\n\r\n            _.each(paymentMethods(), function (paymentMethodData) {\r\n                self.createRenderer(paymentMethodData);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @returns\r\n         */\r\n        createComponent: function (payment) {\r\n            var rendererTemplate,\r\n                rendererComponent,\r\n                templateData;\r\n\r\n            templateData = {\r\n                parentName: this.name,\r\n                name: payment.name\r\n            };\r\n            rendererTemplate = {\r\n                parent: '${ $.$data.parentName }',\r\n                name: '${ $.$data.name }',\r\n                displayArea: payment.displayArea,\r\n                component: payment.component\r\n            };\r\n            rendererComponent = utils.template(rendererTemplate, templateData);\r\n            utils.extend(rendererComponent, {\r\n                item: payment.item,\r\n                config: payment.config\r\n            });\r\n\r\n            return rendererComponent;\r\n        },\r\n\r\n        /**\r\n         * Create renderer.\r\n         *\r\n         * @param {Object} paymentMethodData\r\n         */\r\n        createRenderer: function (paymentMethodData) {\r\n            var isRendererForMethod = false,\r\n                currentGroup;\r\n\r\n            registry.get(this.configDefaultGroup.name, function (defaultGroup) {\r\n                _.each(rendererList(), function (renderer) {\r\n\r\n                    if (renderer.hasOwnProperty('typeComparatorCallback') &&\r\n                        typeof renderer.typeComparatorCallback == 'function'\r\n                    ) {\r\n                        isRendererForMethod = renderer.typeComparatorCallback(renderer.type, paymentMethodData.method);\r\n                    } else {\r\n                        isRendererForMethod = renderer.type === paymentMethodData.method;\r\n                    }\r\n\r\n                    if (isRendererForMethod) {\r\n                        currentGroup = renderer.group ? renderer.group : defaultGroup;\r\n\r\n                        this.collectPaymentGroups(currentGroup);\r\n\r\n                        layout([\r\n                            this.createComponent(\r\n                                {\r\n                                    config: renderer.config,\r\n                                    component: renderer.component,\r\n                                    name: renderer.type,\r\n                                    method: paymentMethodData.method,\r\n                                    item: paymentMethodData,\r\n                                    displayArea: currentGroup.displayArea\r\n                                }\r\n                            )]);\r\n                    }\r\n                }.bind(this));\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Collects unique groups of available payment methods\r\n         *\r\n         * @param {Object} group\r\n         */\r\n        collectPaymentGroups: function (group) {\r\n            var groupsList = this.paymentGroupsList(),\r\n                isGroupExists = _.some(groupsList, function (existsGroup) {\r\n                    return existsGroup.alias === group.alias;\r\n                });\r\n\r\n            if (!isGroupExists) {\r\n                groupsList.push(group);\r\n                groupsList = _.sortBy(groupsList, function (existsGroup) {\r\n                    return existsGroup.sortOrder;\r\n                });\r\n                this.paymentGroupsList(groupsList);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns payment group title\r\n         *\r\n         * @param {Object} group\r\n         * @returns {String}\r\n         */\r\n        getGroupTitle: function (group) {\r\n            var title = group().title;\r\n\r\n            if (group().isDefault() && this.paymentGroupsList().length > 1) {\r\n                title = this.defaultGroupTitle;\r\n            }\r\n\r\n            return title;\r\n        },\r\n\r\n        /**\r\n         * Checks if at least one payment method available\r\n         *\r\n         * @returns {String}\r\n         */\r\n        isPaymentMethodsAvailable: function () {\r\n            return _.some(this.paymentGroupsList(), function (group) {\r\n                return this.regionHasElements(group.displayArea);\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Remove view renderer.\r\n         *\r\n         * @param {String} paymentMethodCode\r\n         */\r\n        removeRenderer: function (paymentMethodCode) {\r\n            var items;\r\n\r\n            _.each(this.paymentGroupsList(), function (group) {\r\n                items = this.getRegion(group.displayArea);\r\n\r\n                _.find(items(), function (value) {\r\n                    if (value.item.method.indexOf(paymentMethodCode) === 0) {\r\n                        value.disposeSubscriptions();\r\n                        value.destroy();\r\n                    }\r\n                });\r\n            }, this);\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/shipping-address/list.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'ko',\r\n    'mageUtils',\r\n    'uiComponent',\r\n    'uiLayout',\r\n    'Magento_Customer/js/model/address-list'\r\n], function (_, ko, utils, Component, layout, addressList) {\r\n    'use strict';\r\n\r\n    var defaultRendererTemplate = {\r\n        parent: '${ $.$data.parentName }',\r\n        name: '${ $.$data.name }',\r\n        component: 'Magento_Checkout/js/view/shipping-address/address-renderer/default',\r\n        provider: 'checkoutProvider'\r\n    };\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/shipping-address/list',\r\n            visible: addressList().length > 0,\r\n            rendererTemplates: []\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super()\r\n                .initChildren();\r\n\r\n            addressList.subscribe(function (changes) {\r\n                    var self = this;\r\n\r\n                    changes.forEach(function (change) {\r\n                        if (change.status === 'added') {\r\n                            self.createRendererComponent(change.value, change.index);\r\n                        }\r\n                    });\r\n                },\r\n                this,\r\n                'arrayChange'\r\n            );\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initConfig: function () {\r\n            this._super();\r\n            // the list of child components that are responsible for address rendering\r\n            this.rendererComponents = [];\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initChildren: function () {\r\n            _.each(addressList(), this.createRendererComponent, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Create new component that will render given address in the address list\r\n         *\r\n         * @param {Object} address\r\n         * @param {*} index\r\n         */\r\n        createRendererComponent: function (address, index) {\r\n            var rendererTemplate, templateData, rendererComponent;\r\n\r\n            if (index in this.rendererComponents) {\r\n                this.rendererComponents[index].address(address);\r\n            } else {\r\n                // rendererTemplates are provided via layout\r\n                rendererTemplate = address.getType() != undefined && this.rendererTemplates[address.getType()] != undefined ? //eslint-disable-line\r\n                    utils.extend({}, defaultRendererTemplate, this.rendererTemplates[address.getType()]) :\r\n                    defaultRendererTemplate;\r\n                templateData = {\r\n                    parentName: this.name,\r\n                    name: index\r\n                };\r\n                rendererComponent = utils.template(rendererTemplate, templateData);\r\n                utils.extend(rendererComponent, {\r\n                    address: ko.observable(address)\r\n                });\r\n                layout([rendererComponent]);\r\n                this.rendererComponents[index] = rendererComponent;\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/shipping-address/address-renderer/default.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'uiComponent',\r\n    'underscore',\r\n    'Magento_Checkout/js/action/select-shipping-address',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/shipping-address/form-popup-state',\r\n    'Magento_Checkout/js/checkout-data',\r\n    'Magento_Customer/js/customer-data'\r\n], function ($, ko, Component, _, selectShippingAddressAction, quote, formPopUpState, checkoutData, customerData) {\r\n    'use strict';\r\n\r\n    var countryData = customerData.get('directory-data');\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/shipping-address/address-renderer/default'\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super();\r\n            this.isSelected = ko.computed(function () {\r\n                var isSelected = false,\r\n                    shippingAddress = quote.shippingAddress();\r\n\r\n                if (shippingAddress) {\r\n                    isSelected = shippingAddress.getKey() == this.address().getKey(); //eslint-disable-line eqeqeq\r\n                }\r\n\r\n                return isSelected;\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @param {String} countryId\r\n         * @return {String}\r\n         */\r\n        getCountryName: function (countryId) {\r\n            return countryData()[countryId] != undefined ? countryData()[countryId].name : ''; //eslint-disable-line\r\n        },\r\n\r\n        /**\r\n         * Get customer attribute label\r\n         *\r\n         * @param {*} attribute\r\n         * @returns {*}\r\n         */\r\n        getCustomAttributeLabel: function (attribute) {\r\n            var label;\r\n\r\n            if (typeof attribute === 'string') {\r\n                return attribute;\r\n            }\r\n\r\n            if (attribute.label) {\r\n                return attribute.label;\r\n            }\r\n\r\n            if (_.isArray(attribute.value)) {\r\n                label = _.map(attribute.value, function (value) {\r\n                    return this.getCustomAttributeOptionLabel(attribute['attribute_code'], value) || value;\r\n                }, this).join(', ');\r\n            } else if (typeof attribute.value === 'object') {\r\n                label = _.map(Object.values(attribute.value)).join(', ');\r\n            } else {\r\n                label = this.getCustomAttributeOptionLabel(attribute['attribute_code'], attribute.value);\r\n            }\r\n\r\n            return label || attribute.value;\r\n        },\r\n\r\n        /**\r\n         * Get option label for given attribute code and option ID\r\n         *\r\n         * @param {String} attributeCode\r\n         * @param {String} value\r\n         * @returns {String|null}\r\n         */\r\n        getCustomAttributeOptionLabel: function (attributeCode, value) {\r\n            var option,\r\n                label,\r\n                options = this.source.get('customAttributes') || {};\r\n\r\n            if (options[attributeCode]) {\r\n                option = _.findWhere(options[attributeCode], {\r\n                    value: value\r\n                });\r\n\r\n                if (option) {\r\n                    label = option.label;\r\n                }\r\n            } else if (value.file !== null) {\r\n                label = value.file;\r\n            }\r\n\r\n            return label;\r\n        },\r\n\r\n        /** Set selected customer shipping address  */\r\n        selectAddress: function () {\r\n            selectShippingAddressAction(this.address());\r\n            checkoutData.setSelectedShippingAddress(this.address().getKey());\r\n        },\r\n\r\n        /**\r\n         * Edit address.\r\n         */\r\n        editAddress: function () {\r\n            formPopUpState.isVisible(true);\r\n            this.showPopup();\r\n\r\n        },\r\n\r\n        /**\r\n         * Show popup.\r\n         */\r\n        showPopup: function () {\r\n            $('[data-open-modal=\"opc-new-shipping-address\"]').trigger('click');\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/shipping-information/list.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'mageUtils',\r\n    'uiComponent',\r\n    'uiLayout',\r\n    'Magento_Checkout/js/model/quote'\r\n], function ($, ko, utils, Component, layout, quote) {\r\n    'use strict';\r\n\r\n    var defaultRendererTemplate = {\r\n        parent: '${ $.$data.parentName }',\r\n        name: '${ $.$data.name }',\r\n        component: 'Magento_Checkout/js/view/shipping-information/address-renderer/default',\r\n        provider: 'checkoutProvider'\r\n    };\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/shipping-information/list',\r\n            rendererTemplates: {}\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            var self = this;\r\n\r\n            this._super()\r\n                .initChildren();\r\n\r\n            quote.shippingAddress.subscribe(function (address) {\r\n                self.createRendererComponent(address);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initConfig: function () {\r\n            this._super();\r\n            // the list of child components that are responsible for address rendering\r\n            this.rendererComponents = {};\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initChildren: function () {\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Create new component that will render given address in the address list\r\n         *\r\n         * @param {Object} address\r\n         */\r\n        createRendererComponent: function (address) {\r\n            var rendererTemplate, templateData, rendererComponent;\r\n\r\n            $.each(this.rendererComponents, function (index, component) {\r\n                component.visible(false);\r\n            });\r\n\r\n            if (this.rendererComponents[address.getType()]) {\r\n                this.rendererComponents[address.getType()].address(address);\r\n                this.rendererComponents[address.getType()].visible(true);\r\n            } else {\r\n                // rendererTemplates are provided via layout\r\n                rendererTemplate = address.getType() != undefined && this.rendererTemplates[address.getType()] != undefined ? //eslint-disable-line\r\n                    utils.extend({}, defaultRendererTemplate, this.rendererTemplates[address.getType()]) :\r\n                    defaultRendererTemplate;\r\n                templateData = {\r\n                    parentName: this.name,\r\n                    name: address.getType()\r\n                };\r\n\r\n                rendererComponent = utils.template(rendererTemplate, templateData);\r\n                utils.extend(\r\n                    rendererComponent,\r\n                    {\r\n                        address: ko.observable(address),\r\n                        visible: ko.observable(true)\r\n                    }\r\n                );\r\n                layout([rendererComponent]);\r\n                this.rendererComponents[address.getType()] = rendererComponent;\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/shipping-information/address-renderer/default.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'underscore',\r\n    'Magento_Customer/js/customer-data'\r\n], function (Component, _, customerData) {\r\n    'use strict';\r\n\r\n    var countryData = customerData.get('directory-data');\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/shipping-information/address-renderer/default'\r\n        },\r\n\r\n        /**\r\n         * @param {*} countryId\r\n         * @return {String}\r\n         */\r\n        getCountryName: function (countryId) {\r\n            return countryData()[countryId] != undefined ? countryData()[countryId].name : ''; //eslint-disable-line\r\n        },\r\n\r\n        /**\r\n         * Get customer attribute label\r\n         *\r\n         * @param {*} attribute\r\n         * @returns {*}\r\n         */\r\n        getCustomAttributeLabel: function (attribute) {\r\n            var label;\r\n\r\n            if (typeof attribute === 'string') {\r\n                return attribute;\r\n            }\r\n\r\n            if (attribute.label) {\r\n                return attribute.label;\r\n            }\r\n\r\n            if (_.isArray(attribute.value)) {\r\n                label = _.map(attribute.value, function (value) {\r\n                    return this.getCustomAttributeOptionLabel(attribute['attribute_code'], value) || value;\r\n                }, this).join(', ');\r\n            } else if (typeof attribute.value === 'object') {\r\n                label = _.map(Object.values(attribute.value)).join(', ');\r\n            } else {\r\n                label = this.getCustomAttributeOptionLabel(attribute['attribute_code'], attribute.value);\r\n            }\r\n\r\n            return label || attribute.value;\r\n        },\r\n\r\n        /**\r\n         * Get option label for given attribute code and option ID\r\n         *\r\n         * @param {String} attributeCode\r\n         * @param {String} value\r\n         * @returns {String|null}\r\n         */\r\n        getCustomAttributeOptionLabel: function (attributeCode, value) {\r\n            var option,\r\n                label,\r\n                options = this.source.get('customAttributes') || {};\r\n\r\n            if (options[attributeCode]) {\r\n                option = _.findWhere(options[attributeCode], {\r\n                    value: value\r\n                });\r\n\r\n                if (option) {\r\n                    label = option.label;\r\n                }\r\n            } else if (value.file !== null) {\r\n                label = value.file;\r\n            }\r\n\r\n            return label;\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/summary/abstract-total.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Catalog/js/price-utils',\r\n    'Magento_Checkout/js/model/totals',\r\n    'Magento_Checkout/js/model/step-navigator'\r\n], function (Component, quote, priceUtils, totals, stepNavigator) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /**\r\n         * @param {*} price\r\n         * @return {*|String}\r\n         */\r\n        getFormattedPrice: function (price) {\r\n            return priceUtils.formatPrice(price, quote.getPriceFormat());\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getTotals: function () {\r\n            return totals.totals();\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        isFullMode: function () {\r\n            if (!this.getTotals()) {\r\n                return false;\r\n            }\r\n\r\n            return stepNavigator.isProcessed('shipping');\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/summary/cart-items.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'Magento_Checkout/js/model/totals',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/step-navigator',\r\n    'Magento_Checkout/js/model/quote'\r\n], function (ko, totals, Component, stepNavigator, quote) {\r\n    'use strict';\r\n\r\n    var useQty = window.checkoutConfig.useQty;\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/summary/cart-items'\r\n        },\r\n        totals: totals.totals(),\r\n        items: ko.observable([]),\r\n        maxCartItemsToDisplay: window.checkoutConfig.maxCartItemsToDisplay,\r\n        cartUrl: window.checkoutConfig.cartUrl,\r\n\r\n        /**\r\n         * @deprecated Please use observable property (this.items())\r\n         */\r\n        getItems: totals.getItems(),\r\n\r\n        /**\r\n         * Returns cart items qty\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        getItemsQty: function () {\r\n            return parseFloat(this.totals['items_qty']);\r\n        },\r\n\r\n        /**\r\n         * Returns count of cart line items\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        getCartLineItemsCount: function () {\r\n            return parseInt(totals.getItems()().length, 10);\r\n        },\r\n\r\n        /**\r\n         * Returns shopping cart items summary (includes config settings)\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        getCartSummaryItemsCount: function () {\r\n            return useQty ? this.getItemsQty() : this.getCartLineItemsCount();\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            // Set initial items to observable field\r\n            this.setItems(totals.getItems()());\r\n            // Subscribe for items data changes and refresh items in view\r\n            totals.getItems().subscribe(function (items) {\r\n                this.setItems(items);\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Set items to observable field\r\n         *\r\n         * @param {Object} items\r\n         */\r\n        setItems: function (items) {\r\n            if (items && items.length > 0) {\r\n                items = items.slice(parseInt(-this.maxCartItemsToDisplay, 10));\r\n            }\r\n            this.items(items);\r\n        },\r\n\r\n        /**\r\n         * Returns bool value for items block state (expanded or not)\r\n         *\r\n         * @returns {*|Boolean}\r\n         */\r\n        isItemsBlockExpanded: function () {\r\n            return quote.isVirtual() || stepNavigator.isProcessed('shipping');\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/summary/grand-total.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/view/summary/abstract-total',\r\n    'Magento_Checkout/js/model/quote'\r\n], function (Component, quote) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/summary/grand-total'\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        isDisplayed: function () {\r\n            return this.isFullMode();\r\n        },\r\n\r\n        /**\r\n         * Get pure value.\r\n         */\r\n        getPureValue: function () {\r\n            var totals = quote.getTotals()();\r\n\r\n            if (totals) {\r\n                return totals['grand_total'];\r\n            }\r\n\r\n            return quote['grand_total'];\r\n        },\r\n\r\n        /**\r\n         * @return {*|String}\r\n         */\r\n        getValue: function () {\r\n            return this.getFormattedPrice(this.getPureValue());\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/summary/shipping.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'Magento_Checkout/js/view/summary/abstract-total',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_SalesRule/js/view/summary/discount'\r\n], function ($, _, Component, quote, discountView) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/summary/shipping'\r\n        },\r\n        quoteIsVirtual: quote.isVirtual(),\r\n        totals: quote.getTotals(),\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getShippingMethodTitle: function () {\r\n            var shippingMethod,\r\n                shippingMethodTitle = '';\r\n\r\n            if (!this.isCalculated()) {\r\n                return '';\r\n            }\r\n            shippingMethod = quote.shippingMethod();\r\n\r\n            if (!_.isArray(shippingMethod) && !_.isObject(shippingMethod)) {\r\n                return '';\r\n            }\r\n\r\n            if (typeof shippingMethod['method_title'] !== 'undefined') {\r\n                shippingMethodTitle = ' - ' + shippingMethod['method_title'];\r\n            }\r\n\r\n            return shippingMethodTitle ?\r\n                shippingMethod['carrier_title'] + shippingMethodTitle :\r\n                shippingMethod['carrier_title'];\r\n        },\r\n\r\n        /**\r\n         * @return {*|Boolean}\r\n         */\r\n        isCalculated: function () {\r\n            return this.totals() && this.isFullMode() && quote.shippingMethod() != null; //eslint-disable-line eqeqeq\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getValue: function () {\r\n            var price;\r\n\r\n            if (!this.isCalculated()) {\r\n                return this.notCalculatedMessage;\r\n            }\r\n            price =  this.totals()['shipping_amount'];\r\n\r\n            return this.getFormattedPrice(price);\r\n        },\r\n\r\n        /**\r\n         * If is set coupon code, but there wasn't displayed discount view.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        haveToShowCoupon: function () {\r\n            var couponCode = this.totals()['coupon_code'];\r\n\r\n            if (typeof couponCode === 'undefined') {\r\n                couponCode = false;\r\n            }\r\n\r\n            return couponCode && !discountView().isDisplayed();\r\n        },\r\n\r\n        /**\r\n         * Returns coupon code description.\r\n         *\r\n         * @return {String}\r\n         */\r\n        getCouponDescription: function () {\r\n            if (!this.haveToShowCoupon()) {\r\n                return '';\r\n            }\r\n\r\n            return '(' + this.totals()['coupon_code'] + ')';\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/summary/subtotal.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/view/summary/abstract-total',\r\n    'Magento_Checkout/js/model/quote'\r\n], function (Component, quote) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/summary/subtotal'\r\n        },\r\n\r\n        /**\r\n         * Get pure value.\r\n         *\r\n         * @return {*}\r\n         */\r\n        getPureValue: function () {\r\n            var totals = quote.getTotals()();\r\n\r\n            if (totals) {\r\n                return totals.subtotal;\r\n            }\r\n\r\n            return quote.subtotal;\r\n        },\r\n\r\n        /**\r\n         * @return {*|String}\r\n         */\r\n        getValue: function () {\r\n            return this.getFormattedPrice(this.getPureValue());\r\n        }\r\n\r\n    });\r\n});\r\n","Magento_Checkout/js/view/summary/totals.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/view/summary/abstract-total'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /**\r\n         * @return {*}\r\n         */\r\n        isDisplayed: function () {\r\n            return this.isFullMode();\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/summary/item/details.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'escaper'\r\n], function (Component, escaper) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/summary/item/details',\r\n            allowedTags: ['b', 'strong', 'i', 'em', 'u']\r\n        },\r\n\r\n        /**\r\n         * @param {Object} quoteItem\r\n         * @return {String}\r\n         */\r\n        getNameUnsanitizedHtml: function (quoteItem) {\r\n            var txt = document.createElement('textarea');\r\n\r\n            txt.innerHTML = quoteItem.name;\r\n\r\n            return escaper.escapeHtml(txt.value, this.allowedTags);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} quoteItem\r\n         * @return {String}Magento_Checkout/js/region-updater\r\n         */\r\n        getValue: function (quoteItem) {\r\n            return quoteItem.name;\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/summary/item/details/message.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['uiComponent'], function (Component) {\r\n    'use strict';\r\n\r\n    var quoteMessages = window.checkoutConfig.quoteMessages;\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/summary/item/details/message'\r\n        },\r\n        displayArea: 'item_message',\r\n        quoteMessages: quoteMessages,\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {null}\r\n         */\r\n        getMessage: function (item) {\r\n            if (this.quoteMessages[item['item_id']]) {\r\n                return this.quoteMessages[item['item_id']];\r\n            }\r\n\r\n            return null;\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/summary/item/details/subtotal.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/view/summary/abstract-total'\r\n], function (viewModel) {\r\n    'use strict';\r\n\r\n    return viewModel.extend({\r\n        defaults: {\r\n            displayArea: 'after_details',\r\n            template: 'Magento_Checkout/summary/item/details/subtotal'\r\n        },\r\n\r\n        /**\r\n         * @param {Object} quoteItem\r\n         * @return {*|String}\r\n         */\r\n        getValue: function (quoteItem) {\r\n            return this.getFormattedPrice(quoteItem['row_total']);\r\n        }\r\n    });\r\n});\r\n","Magento_Checkout/js/view/summary/item/details/thumbnail.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['uiComponent'], function (Component) {\r\n    'use strict';\r\n\r\n    var imageData = window.checkoutConfig.imageData;\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Checkout/summary/item/details/thumbnail'\r\n        },\r\n        displayArea: 'before_details',\r\n        imageData: imageData,\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Array}\r\n         */\r\n        getImageItem: function (item) {\r\n            if (this.imageData[item['item_id']]) {\r\n                return this.imageData[item['item_id']];\r\n            }\r\n\r\n            return [];\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {null}\r\n         */\r\n        getSrc: function (item) {\r\n            if (this.imageData[item['item_id']]) {\r\n                return this.imageData[item['item_id']].src;\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {null}\r\n         */\r\n        getWidth: function (item) {\r\n            if (this.imageData[item['item_id']]) {\r\n                return this.imageData[item['item_id']].width;\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {null}\r\n         */\r\n        getHeight: function (item) {\r\n            if (this.imageData[item['item_id']]) {\r\n                return this.imageData[item['item_id']].height;\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {null}\r\n         */\r\n        getAlt: function (item) {\r\n            if (this.imageData[item['item_id']]) {\r\n                return this.imageData[item['item_id']].alt;\r\n            }\r\n\r\n            return null;\r\n        }\r\n    });\r\n});\r\n","Magento_CheckoutAgreements/js/model/agreement-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/validation'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var checkoutConfig = window.checkoutConfig,\r\n        agreementsConfig = checkoutConfig ? checkoutConfig.checkoutAgreements : {},\r\n        agreementsInputPath = '.payment-method._active div.checkout-agreements input';\r\n\r\n    return {\r\n        /**\r\n         * Validate checkout agreements\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function (hideError) {\r\n            var isValid = true;\r\n\r\n            if (!agreementsConfig.isEnabled || $(agreementsInputPath).length === 0) {\r\n                return true;\r\n            }\r\n\r\n            $(agreementsInputPath).each(function (index, element) {\r\n                if (!$.validator.validateSingleElement(element, {\r\n                    errorElement: 'div',\r\n                    hideError: hideError || false\r\n                })) {\r\n                    isValid = false;\r\n                }\r\n            });\r\n\r\n            return isValid;\r\n        }\r\n    };\r\n});\r\n","Magento_CheckoutAgreements/js/model/agreements-assigner.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/*global alert*/\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var agreementsConfig = window.checkoutConfig.checkoutAgreements;\r\n\r\n    /** Override default place order action and add agreement_ids to request */\r\n    return function (paymentData) {\r\n        var agreementForm,\r\n            agreementData,\r\n            agreementIds;\r\n\r\n        if (!agreementsConfig.isEnabled) {\r\n            return;\r\n        }\r\n\r\n        agreementForm = $('.payment-method._active div[data-role=checkout-agreements] input');\r\n        agreementData = agreementForm.serializeArray();\r\n        agreementIds = [];\r\n\r\n        agreementData.forEach(function (item) {\r\n            agreementIds.push(item.value);\r\n        });\r\n\r\n        if (paymentData['extension_attributes'] === undefined) {\r\n            paymentData['extension_attributes'] = {};\r\n        }\r\n\r\n        paymentData['extension_attributes']['agreement_ids'] = agreementIds;\r\n    };\r\n});\r\n","Magento_CheckoutAgreements/js/model/agreements-modal.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/modal',\r\n    'mage/translate'\r\n], function ($, modal, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        modalWindow: null,\r\n\r\n        /**\r\n         * Create popUp window for provided element.\r\n         *\r\n         * @param {HTMLElement} element\r\n         */\r\n        createModal: function (element) {\r\n            var options;\r\n\r\n            this.modalWindow = element;\r\n            options = {\r\n                'type': 'popup',\r\n                'modalClass': 'agreements-modal',\r\n                'responsive': true,\r\n                'innerScroll': true,\r\n                'trigger': '.show-modal',\r\n                'buttons': [\r\n                    {\r\n                        text: $t('Close'),\r\n                        class: 'action secondary action-hide-popup',\r\n\r\n                        /** @inheritdoc */\r\n                        click: function () {\r\n                            this.closeModal();\r\n                        }\r\n                    }\r\n                ]\r\n            };\r\n            modal(options, $(this.modalWindow));\r\n        },\r\n\r\n        /** Show login popup window */\r\n        showModal: function () {\r\n            $(this.modalWindow).modal('openModal');\r\n        }\r\n    };\r\n});\r\n","Magento_CheckoutAgreements/js/model/place-order-mixin.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/utils/wrapper',\r\n    'Magento_CheckoutAgreements/js/model/agreements-assigner'\r\n], function ($, wrapper, agreementsAssigner) {\r\n    'use strict';\r\n\r\n    return function (placeOrderAction) {\r\n\r\n        /** Override default place order action and add agreement_ids to request */\r\n        return wrapper.wrap(placeOrderAction, function (originalAction, paymentData, messageContainer) {\r\n            agreementsAssigner(paymentData);\r\n\r\n            return originalAction(paymentData, messageContainer);\r\n        });\r\n    };\r\n});\r\n","Magento_CheckoutAgreements/js/model/set-payment-information-mixin.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*global alert*/\r\ndefine([\r\n    'jquery',\r\n    'mage/utils/wrapper',\r\n    'Magento_CheckoutAgreements/js/model/agreements-assigner'\r\n], function ($, wrapper, agreementsAssigner) {\r\n    'use strict';\r\n\r\n    return function (placeOrderAction) {\r\n\r\n        /** Override place-order-mixin for set-payment-information action as they differs only by method signature */\r\n        return wrapper.wrap(placeOrderAction, function (originalAction, messageContainer, paymentData) {\r\n            agreementsAssigner(paymentData);\r\n\r\n            return originalAction(messageContainer, paymentData);\r\n        });\r\n    };\r\n});\r\n","Magento_CheckoutAgreements/js/view/agreement-validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/payment/additional-validators',\r\n    'Magento_CheckoutAgreements/js/model/agreement-validator'\r\n], function (Component, additionalValidators, agreementValidator) {\r\n    'use strict';\r\n\r\n    additionalValidators.registerValidator(agreementValidator);\r\n\r\n    return Component.extend({});\r\n});\r\n","Magento_CheckoutAgreements/js/view/checkout-agreements.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_CheckoutAgreements/js/model/agreements-modal'\r\n], function (ko, $, Component, agreementsModal) {\r\n    'use strict';\r\n\r\n    var checkoutConfig = window.checkoutConfig,\r\n        agreementManualMode = 1,\r\n        agreementsConfig = checkoutConfig ? checkoutConfig.checkoutAgreements : {};\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_CheckoutAgreements/checkout/checkout-agreements'\r\n        },\r\n        isVisible: agreementsConfig.isEnabled,\r\n        agreements: agreementsConfig.agreements,\r\n        modalTitle: ko.observable(null),\r\n        modalContent: ko.observable(null),\r\n        contentHeight: ko.observable(null),\r\n        modalWindow: null,\r\n\r\n        /**\r\n         * Checks if agreement required\r\n         *\r\n         * @param {Object} element\r\n         */\r\n        isAgreementRequired: function (element) {\r\n            return element.mode == agreementManualMode; //eslint-disable-line eqeqeq\r\n        },\r\n\r\n        /**\r\n         * Show agreement content in modal\r\n         *\r\n         * @param {Object} element\r\n         */\r\n        showContent: function (element) {\r\n            this.modalTitle(element.checkboxText);\r\n            this.modalContent(element.content);\r\n            this.contentHeight(element.contentHeight ? element.contentHeight : 'auto');\r\n            agreementsModal.showModal();\r\n        },\r\n\r\n        /**\r\n         * build a unique id for the term checkbox\r\n         *\r\n         * @param {Object} context - the ko context\r\n         * @param {Number} agreementId\r\n         */\r\n        getCheckboxId: function (context, agreementId) {\r\n            var paymentMethodName = '',\r\n                paymentMethodRenderer = context.$parents[1];\r\n\r\n            // corresponding payment method fetched from parent context\r\n            if (paymentMethodRenderer) {\r\n                // item looks like this: {title: \"Check / Money order\", method: \"checkmo\"}\r\n                paymentMethodName = paymentMethodRenderer.item ?\r\n                  paymentMethodRenderer.item.method : '';\r\n            }\r\n\r\n            return 'agreement_' + paymentMethodName + '_' + agreementId;\r\n        },\r\n\r\n        /**\r\n         * Init modal window for rendered element\r\n         *\r\n         * @param {Object} element\r\n         */\r\n        initModal: function (element) {\r\n            agreementsModal.createModal(element);\r\n        }\r\n    });\r\n});\r\n","Magento_ConfigurableProduct/js/catalog-add-to-cart-mixin.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    'Magento_ConfigurableProduct/js/product/view/product-info-resolver'\r\n], function (_, $, productInfoResolver) {\r\n    'use strict';\r\n\r\n    return function (widget) {\r\n\r\n        $.widget('mage.catalogAddToCart', widget, {\r\n            /**\r\n             * @param {jQuery} form\r\n             */\r\n            ajaxSubmit: function (form) {\r\n                var isConfigurable = !!_.find(form.serializeArray(), function (item) {\r\n                    return item.name.indexOf('super_attribute') !== -1;\r\n                });\r\n\r\n                if (isConfigurable) {\r\n                    this.options.productInfoResolver = productInfoResolver;\r\n                }\r\n\r\n                return this._super(form);\r\n            }\r\n        });\r\n\r\n        return $.mage.catalogAddToCart;\r\n    };\r\n});\r\n","Magento_ConfigurableProduct/js/catalog-add-to-cart.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\nrequire([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Add selected configurable attributes to redirect url\r\n     *\r\n     * @see Magento_Catalog/js/catalog-add-to-cart\r\n     */\r\n    $('body').on('catalogCategoryAddToCartRedirect', function (event, data) {\r\n        $(data.form).find('select[name*=\"super\"]').each(function (index, item) {\r\n            data.redirectParameters.push(item.config.id + '=' + $(item).val());\r\n        });\r\n    });\r\n});\r\n","Magento_ConfigurableProduct/js/configurable-customer-data.js":"require([\r\n    'jquery',\r\n    'Magento_ConfigurableProduct/js/options-updater'\r\n], function ($, Updater) {\r\n    'use strict';\r\n\r\n    var selectors = {\r\n            formSelector: '#product_addtocart_form'\r\n        },\r\n        configurableWidgetName = 'mageConfigurable',\r\n        widgetInitEvent = 'configurable.initialized',\r\n\r\n    /**\r\n    * Sets all configurable attribute's selected values\r\n    */\r\n    updateConfigurableOptions = function () {\r\n        var configurableWidget = $(selectors.formSelector).data(configurableWidgetName);\r\n\r\n        if (!configurableWidget) {\r\n            return;\r\n        }\r\n        configurableWidget.options.values = this.productOptions || {};\r\n        configurableWidget._configureForValues();\r\n    },\r\n    updater = new Updater(widgetInitEvent, updateConfigurableOptions);\r\n\r\n    updater.listen();\r\n});\r\n","Magento_ConfigurableProduct/js/configurable.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'mage/translate',\r\n    'priceUtils',\r\n    'priceBox',\r\n    'jquery-ui-modules/widget',\r\n    'jquery/jquery.parsequery',\r\n    'fotoramaVideoEvents'\r\n], function ($, _, mageTemplate, $t, priceUtils) {\r\n    'use strict';\r\n\r\n    $.widget('mage.configurable', {\r\n        options: {\r\n            superSelector: '.super-attribute-select',\r\n            selectSimpleProduct: '[name=\"selected_configurable_option\"]',\r\n            priceHolderSelector: '.price-box',\r\n            spConfig: {},\r\n            state: {},\r\n            priceFormat: {},\r\n            optionTemplate: '<%- data.label %>' +\r\n            '<% if (typeof data.finalPrice.value !== \"undefined\") { %>' +\r\n            ' <%- data.finalPrice.formatted %>' +\r\n            '<% } %>',\r\n            mediaGallerySelector: '[data-gallery-role=gallery-placeholder]',\r\n            mediaGalleryInitial: null,\r\n            slyOldPriceSelector: '.sly-old-price',\r\n            normalPriceLabelSelector: '.product-info-main .normal-price .price-label',\r\n\r\n            /**\r\n             * Defines the mechanism of how images of a gallery should be\r\n             * updated when user switches between configurations of a product.\r\n             *\r\n             * As for now value of this option can be either 'replace' or 'prepend'.\r\n             *\r\n             * @type {String}\r\n             */\r\n            gallerySwitchStrategy: 'replace',\r\n            tierPriceTemplateSelector: '#tier-prices-template',\r\n            tierPriceBlockSelector: '[data-role=\"tier-price-block\"]',\r\n            tierPriceTemplate: '',\r\n            selectorProduct: '.product-info-main',\r\n            selectorProductPrice: '[data-role=priceBox]'\r\n        },\r\n\r\n        /**\r\n         * Creates widget\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            // Initial setting of various option values\r\n            this._initializeOptions();\r\n\r\n            // Override defaults with URL query parameters and/or inputs values\r\n            this._overrideDefaults();\r\n\r\n            // Change events to check select reloads\r\n            this._setupChangeEvents();\r\n\r\n            // Fill state\r\n            this._fillState();\r\n\r\n            // Setup child and prev/next settings\r\n            this._setChildSettings();\r\n\r\n            // Setup/configure values to inputs\r\n            this._configureForValues();\r\n\r\n            $(this.element).trigger('configurable.initialized');\r\n        },\r\n\r\n        /**\r\n         * Initialize tax configuration, initial settings, and options values.\r\n         * @private\r\n         */\r\n        _initializeOptions: function () {\r\n            var options = this.options,\r\n                gallery = $(options.mediaGallerySelector),\r\n                priceBoxOptions = $(this.options.priceHolderSelector).priceBox('option').priceConfig || null;\r\n\r\n            if (priceBoxOptions && priceBoxOptions.optionTemplate) {\r\n                options.optionTemplate = priceBoxOptions.optionTemplate;\r\n            }\r\n\r\n            if (priceBoxOptions && priceBoxOptions.priceFormat) {\r\n                options.priceFormat = priceBoxOptions.priceFormat;\r\n            }\r\n            options.optionTemplate = mageTemplate(options.optionTemplate);\r\n            options.tierPriceTemplate = $(this.options.tierPriceTemplateSelector).html();\r\n\r\n            options.settings = options.spConfig.containerId ?\r\n                $(options.spConfig.containerId).find(options.superSelector) :\r\n                $(options.superSelector);\r\n\r\n            options.values = options.spConfig.defaultValues || {};\r\n            options.parentImage = $('[data-role=base-image-container] img').attr('src');\r\n\r\n            this.inputSimpleProduct = this.element.find(options.selectSimpleProduct);\r\n\r\n            gallery.data('gallery') ?\r\n                this._onGalleryLoaded(gallery) :\r\n                gallery.on('gallery:loaded', this._onGalleryLoaded.bind(this, gallery));\r\n\r\n        },\r\n\r\n        /**\r\n         * Override default options values settings with either URL query parameters or\r\n         * initialized inputs values.\r\n         * @private\r\n         */\r\n        _overrideDefaults: function () {\r\n            var hashIndex = window.location.href.indexOf('#');\r\n\r\n            if (hashIndex !== -1) {\r\n                this._parseQueryParams(window.location.href.substr(hashIndex + 1));\r\n            }\r\n\r\n            if (this.options.spConfig.inputsInitialized) {\r\n                this._setValuesByAttribute();\r\n            }\r\n\r\n            this._setInitialOptionsLabels();\r\n        },\r\n\r\n        /**\r\n         * Parse query parameters from a query string and set options values based on the\r\n         * key value pairs of the parameters.\r\n         * @param {*} queryString - URL query string containing query parameters.\r\n         * @private\r\n         */\r\n        _parseQueryParams: function (queryString) {\r\n            var queryParams = $.parseQuery({\r\n                query: queryString\r\n            });\r\n\r\n            $.each(queryParams, $.proxy(function (key, value) {\r\n                if (this.options.spConfig.attributes[key] !== undefined &&\r\n                    _.find(this.options.spConfig.attributes[key].options, function (element) {\r\n                        return element.id === value;\r\n                    })) {\r\n                    this.options.values[key] = value;\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Override default options values with values based on each element's attribute\r\n         * identifier.\r\n         * @private\r\n         */\r\n        _setValuesByAttribute: function () {\r\n            this.options.values = {};\r\n            $.each(this.options.settings, $.proxy(function (index, element) {\r\n                var attributeId;\r\n\r\n                if (element.value) {\r\n                    attributeId = element.id.replace(/[a-z]*/, '');\r\n\r\n                    if (this.options.spConfig.attributes[attributeId] !== undefined &&\r\n                        _.find(this.options.spConfig.attributes[attributeId].options, function (optionElement) {\r\n                            return optionElement.id === element.value;\r\n                        })) {\r\n                        this.options.values[attributeId] = element.value;\r\n                    }\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Set additional field with initial label to be used when switching between options with different prices.\r\n         * @private\r\n         */\r\n        _setInitialOptionsLabels: function () {\r\n            $.each(this.options.spConfig.attributes, $.proxy(function (index, element) {\r\n                $.each(element.options, $.proxy(function (optIndex, optElement) {\r\n                    this.options.spConfig.attributes[index].options[optIndex].initialLabel = optElement.label;\r\n                }, this));\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Set up .on('change') events for each option element to configure the option.\r\n         * @private\r\n         */\r\n        _setupChangeEvents: function () {\r\n            $.each(this.options.settings, $.proxy(function (index, element) {\r\n                $(element).on('change', this, this._configure);\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Iterate through the option settings and set each option's element configuration,\r\n         * attribute identifier. Set the state based on the attribute identifier.\r\n         * @private\r\n         */\r\n        _fillState: function () {\r\n            $.each(this.options.settings, $.proxy(function (index, element) {\r\n                var attributeId = element.id.replace(/[a-z]*/, '');\r\n\r\n                if (attributeId && this.options.spConfig.attributes[attributeId]) {\r\n                    element.config = this.options.spConfig.attributes[attributeId];\r\n                    element.attributeId = attributeId;\r\n                    this.options.state[attributeId] = false;\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Set each option's child settings, and next/prev option setting. Fill (initialize)\r\n         * an option's list of selections as needed or disable an option's setting.\r\n         * @private\r\n         */\r\n        _setChildSettings: function () {\r\n            var childSettings = [],\r\n                settings = this.options.settings,\r\n                index = settings.length,\r\n                option;\r\n\r\n            while (index--) {\r\n                option = settings[index];\r\n\r\n                if (index) {\r\n                    option.disabled = true;\r\n                } else {\r\n                    this._fillSelect(option);\r\n                }\r\n\r\n                _.extend(option, {\r\n                    childSettings: childSettings.slice(),\r\n                    prevSetting: settings[index - 1],\r\n                    nextSetting: settings[index + 1]\r\n                });\r\n\r\n                childSettings.push(option);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Setup for all configurable option settings. Set the value of the option and configure\r\n         * the option, which sets its state, and initializes the option's choices, etc.\r\n         * @private\r\n         */\r\n        _configureForValues: function () {\r\n            if (this.options.values) {\r\n                this.options.settings.each($.proxy(function (index, element) {\r\n                    var attributeId = element.attributeId;\r\n\r\n                    element.value = this.options.values[attributeId] || '';\r\n                    this._configureElement(element);\r\n                }, this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Event handler for configuring an option.\r\n         * @private\r\n         * @param {Object} event - Event triggered to configure an option.\r\n         */\r\n        _configure: function (event) {\r\n            event.data._configureElement(this);\r\n        },\r\n\r\n        /**\r\n         * Configure an option, initializing it's state and enabling related options, which\r\n         * populates the related option's selection and resets child option selections.\r\n         * @private\r\n         * @param {*} element - The element associated with a configurable option.\r\n         */\r\n        _configureElement: function (element) {\r\n            this.simpleProduct = this._getSimpleProductId(element);\r\n\r\n            if (element.value) {\r\n                this.options.state[element.config.id] = element.value;\r\n\r\n                if (element.nextSetting) {\r\n                    element.nextSetting.disabled = false;\r\n                    this._fillSelect(element.nextSetting);\r\n                    this._resetChildren(element.nextSetting);\r\n                } else {\r\n                    if (!!document.documentMode) { //eslint-disable-line\r\n                        this.inputSimpleProduct.val(element.options[element.selectedIndex].config.allowedProducts[0]);\r\n                    } else {\r\n                        this.inputSimpleProduct.val(element.selectedOptions[0].config.allowedProducts[0]);\r\n                    }\r\n                }\r\n            } else {\r\n                this._resetChildren(element);\r\n            }\r\n\r\n            this._reloadPrice();\r\n            this._displayRegularPriceBlock(this.simpleProduct);\r\n            this._displayTierPriceBlock(this.simpleProduct);\r\n            this._displayNormalPriceLabel();\r\n            this._changeProductImage();\r\n        },\r\n\r\n        /**\r\n         * Change displayed product image according to chosen options of configurable product\r\n         *\r\n         * @private\r\n         */\r\n        _changeProductImage: function () {\r\n            var images,\r\n                initialImages = this.options.mediaGalleryInitial,\r\n                gallery = $(this.options.mediaGallerySelector).data('gallery');\r\n\r\n            if (_.isUndefined(gallery)) {\r\n                $(this.options.mediaGallerySelector).on('gallery:loaded', function () {\r\n                    this._changeProductImage();\r\n                }.bind(this));\r\n\r\n                return;\r\n            }\r\n\r\n            images = this.options.spConfig.images[this.simpleProduct];\r\n\r\n            if (images) {\r\n                images = this._sortImages(images);\r\n\r\n                if (this.options.gallerySwitchStrategy === 'prepend') {\r\n                    images = images.concat(initialImages);\r\n                }\r\n\r\n                images = $.extend(true, [], images);\r\n                images = this._setImageIndex(images);\r\n\r\n                gallery.updateData(images);\r\n                this._addFotoramaVideoEvents(false);\r\n            } else {\r\n                gallery.updateData(initialImages);\r\n                this._addFotoramaVideoEvents(true);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add video events\r\n         *\r\n         * @param {Boolean} isInitial\r\n         * @private\r\n         */\r\n        _addFotoramaVideoEvents: function (isInitial) {\r\n            if (_.isUndefined($.mage.AddFotoramaVideoEvents)) {\r\n                return;\r\n            }\r\n\r\n            if (isInitial) {\r\n                $(this.options.mediaGallerySelector).AddFotoramaVideoEvents();\r\n\r\n                return;\r\n            }\r\n\r\n            $(this.options.mediaGallerySelector).AddFotoramaVideoEvents({\r\n                selectedOption: this.simpleProduct,\r\n                dataMergeStrategy: this.options.gallerySwitchStrategy\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Sorting images array\r\n         *\r\n         * @private\r\n         */\r\n        _sortImages: function (images) {\r\n            return _.sortBy(images, function (image) {\r\n                return image.position;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set correct indexes for image set.\r\n         *\r\n         * @param {Array} images\r\n         * @private\r\n         */\r\n        _setImageIndex: function (images) {\r\n            var length = images.length,\r\n                i;\r\n\r\n            for (i = 0; length > i; i++) {\r\n                images[i].i = i + 1;\r\n            }\r\n\r\n            return images;\r\n        },\r\n\r\n        /**\r\n         * For a given option element, reset all of its selectable options. Clear any selected\r\n         * index, disable the option choice, and reset the option's state if necessary.\r\n         * @private\r\n         * @param {*} element - The element associated with a configurable option.\r\n         */\r\n        _resetChildren: function (element) {\r\n            if (element.childSettings) {\r\n                _.each(element.childSettings, function (set) {\r\n                    set.selectedIndex = 0;\r\n                    set.disabled = true;\r\n                });\r\n\r\n                if (element.config) {\r\n                    this.options.state[element.config.id] = false;\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Populates an option's selectable choices.\r\n         * @private\r\n         * @param {*} element - Element associated with a configurable option.\r\n         */\r\n        _fillSelect: function (element) {\r\n            var attributeId = element.id.replace(/[a-z]*/, ''),\r\n                options = this._getAttributeOptions(attributeId),\r\n                prevConfig,\r\n                index = 1,\r\n                allowedProducts,\r\n                allowedProductsByOption,\r\n                allowedProductsAll,\r\n                i,\r\n                j,\r\n                finalPrice = parseFloat(this.options.spConfig.prices.finalPrice.amount),\r\n                optionFinalPrice,\r\n                optionPriceDiff,\r\n                optionPrices = this.options.spConfig.optionPrices,\r\n                allowedOptions = [],\r\n                indexKey,\r\n                allowedProductMinPrice,\r\n                allowedProductsAllMinPrice,\r\n                canDisplayOutOfStockProducts = false,\r\n                filteredSalableProducts;\r\n\r\n            this._clearSelect(element);\r\n            element.options[0] = new Option('', '');\r\n            element.options[0].innerHTML = this.options.spConfig.chooseText;\r\n            prevConfig = false;\r\n\r\n            if (element.prevSetting) {\r\n                prevConfig = element.prevSetting.options[element.prevSetting.selectedIndex];\r\n            }\r\n\r\n            if (options) {\r\n                for (indexKey in this.options.spConfig.index) {\r\n                    /* eslint-disable max-depth */\r\n                    if (this.options.spConfig.index.hasOwnProperty(indexKey)) {\r\n                        allowedOptions = allowedOptions.concat(_.values(this.options.spConfig.index[indexKey]));\r\n                    }\r\n                }\r\n\r\n                if (prevConfig) {\r\n                    allowedProductsByOption = {};\r\n                    allowedProductsAll = [];\r\n\r\n                    for (i = 0; i < options.length; i++) {\r\n                        /* eslint-disable max-depth */\r\n                        for (j = 0; j < options[i].products.length; j++) {\r\n                            // prevConfig.config can be undefined\r\n                            if (prevConfig.config &&\r\n                                prevConfig.config.allowedProducts &&\r\n                                prevConfig.config.allowedProducts.indexOf(options[i].products[j]) > -1) {\r\n                                if (!allowedProductsByOption[i]) {\r\n                                    allowedProductsByOption[i] = [];\r\n                                }\r\n                                allowedProductsByOption[i].push(options[i].products[j]);\r\n                                allowedProductsAll.push(options[i].products[j]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (typeof allowedProductsAll[0] !== 'undefined' &&\r\n                        typeof optionPrices[allowedProductsAll[0]] !== 'undefined') {\r\n                        allowedProductsAllMinPrice = this._getAllowedProductWithMinPrice(allowedProductsAll);\r\n                        finalPrice = parseFloat(optionPrices[allowedProductsAllMinPrice].finalPrice.amount);\r\n                    }\r\n                }\r\n\r\n                for (i = 0; i < options.length; i++) {\r\n                    if (prevConfig && typeof allowedProductsByOption[i] === 'undefined') {\r\n                        continue; //jscs:ignore disallowKeywords\r\n                    }\r\n\r\n                    allowedProducts = prevConfig ? allowedProductsByOption[i] : options[i].products.slice(0);\r\n                    optionPriceDiff = 0;\r\n\r\n                    if (typeof allowedProducts[0] !== 'undefined' &&\r\n                        typeof optionPrices[allowedProducts[0]] !== 'undefined') {\r\n                        allowedProductMinPrice = this._getAllowedProductWithMinPrice(allowedProducts);\r\n                        optionFinalPrice = parseFloat(optionPrices[allowedProductMinPrice].finalPrice.amount);\r\n                        optionPriceDiff = optionFinalPrice - finalPrice;\r\n                        options[i].label = options[i].initialLabel;\r\n\r\n                        if (optionPriceDiff !== 0) {\r\n                            options[i].label += ' ' + priceUtils.formatPrice(\r\n                                optionPriceDiff,\r\n                                this.options.priceFormat,\r\n                                true\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    if (allowedProducts.length > 0 || _.include(allowedOptions, options[i].id)) {\r\n                        options[i].allowedProducts = allowedProducts;\r\n                        element.options[index] = new Option(this._getOptionLabel(options[i]), options[i].id);\r\n\r\n                        if (this.options.spConfig.canDisplayShowOutOfStockStatus) {\r\n                            filteredSalableProducts = $(this.options.spConfig.salable[attributeId][options[i].id]).\r\n                            filter(options[i].allowedProducts);\r\n                            canDisplayOutOfStockProducts = filteredSalableProducts.length === 0;\r\n                        }\r\n\r\n                        if (typeof options[i].price !== 'undefined') {\r\n                            element.options[index].setAttribute('price', options[i].price);\r\n                        }\r\n\r\n                        if (allowedProducts.length === 0 || canDisplayOutOfStockProducts) {\r\n                            element.options[index].disabled = true;\r\n                        }\r\n\r\n                        element.options[index].config = options[i];\r\n                        index++;\r\n                    }\r\n\r\n                    /* eslint-enable max-depth */\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Generate the label associated with a configurable option. This includes the option's\r\n         * label or value and the option's price.\r\n         * @private\r\n         * @param {*} option - A single choice among a group of choices for a configurable option.\r\n         * @return {String} The option label with option value and price (e.g. Black +1.99)\r\n         */\r\n        _getOptionLabel: function (option) {\r\n            return option.label;\r\n        },\r\n\r\n        /**\r\n         * Removes an option's selections.\r\n         * @private\r\n         * @param {*} element - The element associated with a configurable option.\r\n         */\r\n        _clearSelect: function (element) {\r\n            var i;\r\n\r\n            for (i = element.options.length - 1; i >= 0; i--) {\r\n                element.remove(i);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Retrieve the attribute options associated with a specific attribute Id.\r\n         * @private\r\n         * @param {Number} attributeId - The id of the attribute whose configurable options are sought.\r\n         * @return {Object} Object containing the attribute options.\r\n         */\r\n        _getAttributeOptions: function (attributeId) {\r\n            if (this.options.spConfig.attributes[attributeId]) {\r\n                return this.options.spConfig.attributes[attributeId].options;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reload the price of the configurable product incorporating the prices of all of the\r\n         * configurable product's option selections.\r\n         */\r\n        _reloadPrice: function () {\r\n            $(this.options.priceHolderSelector).trigger('updatePrice', this._getPrices());\r\n        },\r\n\r\n        /**\r\n         * Get product various prices\r\n         * @returns {{}}\r\n         * @private\r\n         */\r\n        _getPrices: function () {\r\n            var prices = {},\r\n                elements = _.toArray(this.options.settings),\r\n                allowedProduct;\r\n\r\n            _.each(elements, function (element) {\r\n                var selected = element.options[element.selectedIndex],\r\n                    config = selected && selected.config,\r\n                    priceValue = this._calculatePrice({});\r\n\r\n                if (config && config.allowedProducts.length === 1) {\r\n                    priceValue = this._calculatePrice(config);\r\n                } else if (element.value) {\r\n                    allowedProduct = this._getAllowedProductWithMinPrice(config.allowedProducts);\r\n                    priceValue = this._calculatePrice({\r\n                        'allowedProducts': [\r\n                            allowedProduct\r\n                        ]\r\n                    });\r\n                }\r\n\r\n                if (!_.isEmpty(priceValue)) {\r\n                    prices.prices = priceValue;\r\n                }\r\n            }, this);\r\n\r\n            return prices;\r\n        },\r\n\r\n        /**\r\n         * Get product with minimum price from selected options.\r\n         *\r\n         * @param {Array} allowedProducts\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        _getAllowedProductWithMinPrice: function (allowedProducts) {\r\n            var optionPrices = this.options.spConfig.optionPrices,\r\n                product = {},\r\n                optionMinPrice, optionFinalPrice;\r\n\r\n            _.each(allowedProducts, function (allowedProduct) {\r\n                optionFinalPrice = parseFloat(optionPrices[allowedProduct].finalPrice.amount);\r\n\r\n                if (_.isEmpty(product) || optionFinalPrice < optionMinPrice) {\r\n                    optionMinPrice = optionFinalPrice;\r\n                    product = allowedProduct;\r\n                }\r\n            }, this);\r\n\r\n            return product;\r\n        },\r\n\r\n        /**\r\n         * Returns prices for configured products\r\n         *\r\n         * @param {*} config - Products configuration\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _calculatePrice: function (config) {\r\n            var displayPrices = $(this.options.priceHolderSelector).priceBox('option').prices,\r\n                newPrices = this.options.spConfig.optionPrices[_.first(config.allowedProducts)] || {};\r\n\r\n            _.each(displayPrices, function (price, code) {\r\n                displayPrices[code].amount = newPrices[code] ? newPrices[code].amount - displayPrices[code].amount : 0;\r\n            });\r\n\r\n            return displayPrices;\r\n        },\r\n\r\n        /**\r\n         * Returns Simple product Id\r\n         *  depending on current selected option.\r\n         *\r\n         * @private\r\n         * @param {HTMLElement} element\r\n         * @returns {String|undefined}\r\n         */\r\n        _getSimpleProductId: function (element) {\r\n            // TODO: Rewrite algorithm. It should return ID of\r\n            //        simple product based on selected options.\r\n            var allOptions = element.config.options,\r\n                value = element.value,\r\n                config;\r\n\r\n            config = _.filter(allOptions, function (option) {\r\n                return option.id === value;\r\n            });\r\n            config = _.first(config);\r\n\r\n            return _.isEmpty(config) ?\r\n                undefined :\r\n                _.first(config.allowedProducts);\r\n\r\n        },\r\n\r\n        /**\r\n         * Show or hide regular price block\r\n         *\r\n         * @param {*} optionId\r\n         * @private\r\n         */\r\n        _displayRegularPriceBlock: function (optionId) {\r\n            var shouldBeShown = true,\r\n                $priceBox = this.element.parents(this.options.selectorProduct)\r\n                    .find(this.options.selectorProductPrice);\r\n\r\n            _.each(this.options.settings, function (element) {\r\n                if (element.value === '') {\r\n                    shouldBeShown = false;\r\n                }\r\n            });\r\n\r\n            if (shouldBeShown &&\r\n                this.options.spConfig.optionPrices[optionId].oldPrice.amount !==\r\n                this.options.spConfig.optionPrices[optionId].finalPrice.amount\r\n            ) {\r\n                $(this.options.slyOldPriceSelector).show();\r\n            } else {\r\n                $(this.options.slyOldPriceSelector).hide();\r\n            }\r\n\r\n            $(document).trigger('updateMsrpPriceBlock',\r\n                [\r\n                    optionId,\r\n                    this.options.spConfig.optionPrices,\r\n                    $priceBox\r\n                ]\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Show or hide normal price label\r\n         *\r\n         * @private\r\n         */\r\n        _displayNormalPriceLabel: function () {\r\n            var shouldBeShown = false;\r\n\r\n            _.each(this.options.settings, function (element) {\r\n                if (element.value === '') {\r\n                    shouldBeShown = true;\r\n                }\r\n            });\r\n\r\n            if (shouldBeShown) {\r\n                $(this.options.normalPriceLabelSelector).show();\r\n            } else {\r\n                $(this.options.normalPriceLabelSelector).hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Callback which fired after gallery gets initialized.\r\n         *\r\n         * @param {HTMLElement} element - DOM element associated with gallery.\r\n         */\r\n        _onGalleryLoaded: function (element) {\r\n            var galleryObject = element.data('gallery');\r\n\r\n            this.options.mediaGalleryInitial = galleryObject.returnCurrentImages();\r\n        },\r\n\r\n        /**\r\n         * Show or hide tier price block\r\n         *\r\n         * @param {*} optionId\r\n         * @private\r\n         */\r\n        _displayTierPriceBlock: function (optionId) {\r\n            var tierPrices = typeof optionId != 'undefined' && this.options.spConfig.optionPrices[optionId].tierPrices;\r\n\r\n            if (_.isArray(tierPrices) && tierPrices.length > 0) {\r\n\r\n                if (this.options.tierPriceTemplate) {\r\n                    $(this.options.tierPriceBlockSelector).html(\r\n                        mageTemplate(this.options.tierPriceTemplate, {\r\n                            'tierPrices': tierPrices,\r\n                            '$t': $t,\r\n                            'currencyFormat': this.options.spConfig.currencyFormat,\r\n                            'priceUtils': priceUtils\r\n                        })\r\n                    ).show();\r\n                }\r\n            } else {\r\n                $(this.options.tierPriceBlockSelector).hide();\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.configurable;\r\n});\r\n","Magento_ConfigurableProduct/js/options-updater.js":"define([\r\n    'jquery',\r\n    'underscore',\r\n    'Magento_Customer/js/customer-data'\r\n], function ($, _, customerData) {\r\n    'use strict';\r\n\r\n    var selectors = {\r\n        formSelector: '#product_addtocart_form',\r\n        productIdSelector: '#product_addtocart_form [name=\"product\"]',\r\n        itemIdSelector: '#product_addtocart_form [name=\"item\"]'\r\n    },\r\n    cartData = customerData.get('cart'),\r\n    productId = $(selectors.productIdSelector).val(),\r\n    itemId = $(selectors.itemIdSelector).val(),\r\n\r\n    /**\r\n    * set productOptions according to cart data from customer-data\r\n    *\r\n    * @param {Object} data - cart data from customer-data\r\n    * @returns {Boolean} - whether the new options differ from previous\r\n    */\r\n    setProductOptions = function (data) {\r\n        var changedProductOptions;\r\n\r\n        if (!(data && data.items && data.items.length && productId)) {\r\n            return false;\r\n        }\r\n        changedProductOptions = _.find(data.items, function (item) {\r\n            if (item['item_id'] === itemId) {\r\n                return item['product_id'] === productId;\r\n            }\r\n        });\r\n        changedProductOptions = changedProductOptions && changedProductOptions.options &&\r\n            changedProductOptions.options.reduce(function (obj, val) {\r\n                obj[val['option_id']] = val['option_value'];\r\n\r\n                return obj;\r\n            }, {});\r\n\r\n        if (JSON.stringify(this.productOptions || {}) === JSON.stringify(changedProductOptions || {})) {\r\n            return false;\r\n        }\r\n\r\n        this.productOptions = changedProductOptions;\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n    * Listens to update of cart data or options initialization and update selected option according to customer data\r\n    *\r\n    */\r\n    listen = function () {\r\n        cartData.subscribe(function (updateCartData) {\r\n            if (this.setProductOptions(updateCartData)) {\r\n                this.updateOptions();\r\n            }\r\n        }.bind(this));\r\n        $(selectors.formSelector).on(this.eventName, function () {\r\n            this.setProductOptions(cartData());\r\n            this.updateOptions();\r\n        }.bind(this));\r\n    },\r\n\r\n    /**\r\n    * Updater constructor function\r\n    *\r\n    */\r\n    Updater = function (eventName, updateOptionsCallback) {\r\n        if (this instanceof Updater) {\r\n            this.eventName = eventName;\r\n            this.updateOptions = updateOptionsCallback;\r\n            this.productOptions = {};\r\n        }\r\n    };\r\n\r\n    Updater.prototype.setProductOptions = setProductOptions;\r\n    Updater.prototype.listen = listen;\r\n\r\n    return Updater;\r\n});\r\n","Magento_ConfigurableProduct/js/product/view/product-info-resolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Catalog/js/product/view/product-info'\r\n], function (_, productInfo) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns info about configurable products in form.\r\n     *\r\n     * @param {jQuery} $form\r\n     * @return {Array}\r\n     */\r\n    return function ($form) {\r\n        var optionValues = [],\r\n            product = _.findWhere($form.serializeArray(), {\r\n                name: 'product'\r\n            }),\r\n            productId;\r\n\r\n        if (!_.isUndefined(product)) {\r\n            productId = product.value;\r\n            _.each($form.serializeArray(), function (item) {\r\n                if (item.name.indexOf('super_attribute') !== -1) {\r\n                    optionValues.push(item.value);\r\n                }\r\n            });\r\n            optionValues.sort();\r\n            productInfo().push(\r\n                {\r\n                    'id': productId,\r\n                    'optionValues': optionValues\r\n                }\r\n            );\r\n        }\r\n\r\n        return _.uniq(productInfo(), function (item) {\r\n            var optionValuesStr = item.optionValues ? item.optionValues.join() : '';\r\n\r\n            return item.id + optionValuesStr;\r\n        });\r\n    };\r\n});\r\n\r\n","Magento_Cookie/js/jquery.storageapi.extended.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery/jquery.cookie',\r\n    'jquery/jquery.storageapi.min'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     *\r\n     * @param {Object} storage\r\n     * @private\r\n     */\r\n    function _extend(storage) {\r\n        var cookiesConfig = window.cookiesConfig || {};\r\n\r\n        $.extend(storage, {\r\n            _secure: !!cookiesConfig.secure,\r\n            _samesite: cookiesConfig.samesite ? cookiesConfig.samesite : 'lax',\r\n\r\n            /**\r\n             * Set value under name\r\n             * @param {String} name\r\n             * @param {String} value\r\n             * @param {Object} [options]\r\n             */\r\n            setItem: function (name, value, options) {\r\n                var _default = {\r\n                    expires: this._expires,\r\n                    path: this._path,\r\n                    domain: this._domain,\r\n                    secure: this._secure,\r\n                    samesite: this._samesite\r\n                };\r\n\r\n                $.cookie(this._prefix + name, value, $.extend(_default, options || {}));\r\n            },\r\n\r\n            /**\r\n             * Set default options\r\n             * @param {Object} c\r\n             * @returns {storage}\r\n             */\r\n            setConf: function (c) {\r\n                if (c.path) {\r\n                    this._path = c.path;\r\n                }\r\n\r\n                if (c.domain) {\r\n                    this._domain = c.domain;\r\n                }\r\n\r\n                if (c.expires) {\r\n                    this._expires = c.expires;\r\n                }\r\n\r\n                if (typeof c.secure !== 'undefined') {\r\n                    this._secure = c.secure;\r\n                }\r\n\r\n                if (typeof c.samesite !== 'undefined') {\r\n                    this._samesite = c.samesite;\r\n                }\r\n\r\n                return this;\r\n            }\r\n        });\r\n    }\r\n\r\n    if (window.cookieStorage) {\r\n        _extend(window.cookieStorage);\r\n    }\r\n});\r\n","Magento_Cookie/js/notices.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'mage/cookies'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.cookieNotices', {\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            if ($.mage.cookies.get(this.options.cookieName)) {\r\n                this.element.hide();\r\n            } else {\r\n                this.element.show();\r\n            }\r\n            $(this.options.cookieAllowButtonSelector).on('click', $.proxy(function () {\r\n                var cookieExpires = new Date(new Date().getTime() + this.options.cookieLifetime * 1000);\r\n\r\n                $.mage.cookies.set(this.options.cookieName, JSON.stringify(this.options.cookieValue), {\r\n                    expires: cookieExpires\r\n                });\r\n\r\n                if ($.mage.cookies.get(this.options.cookieName)) {\r\n                    this.element.hide();\r\n                    $(document).trigger('user:allowed:save:cookie');\r\n                } else {\r\n                    window.location.href = this.options.noCookiesUrl;\r\n                }\r\n            }, this));\r\n        }\r\n    });\r\n\r\n    return $.mage.cookieNotices;\r\n});\r\n","Magento_Cookie/js/require-cookie.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery-ui-modules/widget',\r\n    'mage/mage',\r\n    'mage/translate'\r\n], function ($, alert) {\r\n    'use strict';\r\n\r\n    $.widget('mage.requireCookie', {\r\n        options: {\r\n            event: 'click',\r\n            noCookieUrl: 'enable-cookies',\r\n            triggers: ['.action.login', '.action.submit'],\r\n            isRedirectCmsPage: true\r\n        },\r\n\r\n        /**\r\n         * Constructor\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * This method binds elements found in this widget.\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            var events = {};\r\n\r\n            $.each(this.options.triggers, function (index, value) {\r\n                events['click ' + value] = '_checkCookie';\r\n            });\r\n            this._on(events);\r\n        },\r\n\r\n        /**\r\n         * This method set the url for the redirect.\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _checkCookie: function (event) {\r\n            if (navigator.cookieEnabled) {\r\n                return;\r\n            }\r\n\r\n            event.preventDefault();\r\n\r\n            if (this.options.isRedirectCmsPage) {\r\n                window.location = this.options.noCookieUrl;\r\n            } else {\r\n                alert({\r\n                    content: $.mage.__('Cookies are disabled in your browser.')\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.requireCookie;\r\n});\r\n","Magento_Customer/js/address.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'jquery-ui-modules/widget',\r\n    'mage/translate'\r\n], function ($, confirm) {\r\n    'use strict';\r\n\r\n    $.widget('mage.address', {\r\n        /**\r\n         * Options common to all instances of this widget.\r\n         * @type {Object}\r\n         */\r\n        options: {\r\n            deleteConfirmMessage: $.mage.__('Are you sure you want to delete this address?')\r\n        },\r\n\r\n        /**\r\n         * Bind event handlers for adding and deleting addresses.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var options         = this.options,\r\n                addAddress      = options.addAddress,\r\n                deleteAddress   = options.deleteAddress;\r\n\r\n            if (addAddress) {\r\n                $(document).on('click', addAddress, this._addAddress.bind(this));\r\n            }\r\n\r\n            if (deleteAddress) {\r\n                $(document).on('click', deleteAddress, this._deleteAddress.bind(this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add a new address.\r\n         * @private\r\n         */\r\n        _addAddress: function () {\r\n            window.location = this.options.addAddressLocation;\r\n        },\r\n\r\n        /**\r\n         * Delete the address whose id is specified in a data attribute after confirmation from the user.\r\n         * @private\r\n         * @param {jQuery.Event} e\r\n         * @return {Boolean}\r\n         */\r\n        _deleteAddress: function (e) {\r\n            var self = this;\r\n\r\n            confirm({\r\n                content: this.options.deleteConfirmMessage,\r\n                actions: {\r\n\r\n                    /** @inheritdoc */\r\n                    confirm: function () {\r\n                        if (typeof $(e.target).parent().data('address') !== 'undefined') {\r\n                            window.location = self.options.deleteUrlPrefix + $(e.target).parent().data('address') +\r\n                                '/form_key/' + $.mage.cookies.get('form_key');\r\n                        } else {\r\n                            window.location = self.options.deleteUrlPrefix + $(e.target).data('address') +\r\n                                '/form_key/' + $.mage.cookies.get('form_key');\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return $.mage.address;\r\n});\r\n","Magento_Customer/js/addressValidation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mageUtils',\r\n    'mage/translate',\r\n    'Magento_Checkout/js/model/postcode-validator',\r\n    'jquery-ui-modules/widget',\r\n    'validation'\r\n], function ($, __, utils, $t, postCodeValidator) {\r\n    'use strict';\r\n\r\n    $.widget('mage.addressValidation', {\r\n        options: {\r\n            selectors: {\r\n                button: '[data-action=save-address]',\r\n                zip: '#zip',\r\n                country: 'select[name=\"country_id\"]:visible'\r\n            }\r\n        },\r\n\r\n        zipInput: null,\r\n        countrySelect: null,\r\n\r\n        /**\r\n         * Validation creation\r\n         *\r\n         * @protected\r\n         */\r\n        _create: function () {\r\n            var button = $(this.options.selectors.button, this.element);\r\n\r\n            this.zipInput = $(this.options.selectors.zip, this.element);\r\n            this.countrySelect = $(this.options.selectors.country, this.element);\r\n\r\n            this.element.validation({\r\n\r\n                /**\r\n                 * Submit Handler\r\n                 * @param {Element} form - address form\r\n                 */\r\n                submitHandler: function (form) {\r\n\r\n                    button.attr('disabled', true);\r\n                    form.submit();\r\n                }\r\n            });\r\n\r\n            this._addPostCodeValidation();\r\n        },\r\n\r\n        /**\r\n         * Add postcode validation\r\n         *\r\n         * @protected\r\n         */\r\n        _addPostCodeValidation: function () {\r\n            var self = this;\r\n\r\n            this.zipInput.on('keyup', __.debounce(function (event) {\r\n                    var valid = self._validatePostCode(event.target.value);\r\n\r\n                    self._renderValidationResult(valid);\r\n                }, 500)\r\n            );\r\n\r\n            this.countrySelect.on('change', function () {\r\n                var valid = self._validatePostCode(self.zipInput.val());\r\n\r\n                self._renderValidationResult(valid);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Validate post code value.\r\n         *\r\n         * @protected\r\n         * @param {String} postCode - post code\r\n         * @return {Boolean} Whether is post code valid\r\n         */\r\n        _validatePostCode: function (postCode) {\r\n            var countryId = this.countrySelect.val();\r\n\r\n            if (postCode === null) {\r\n                return true;\r\n            }\r\n\r\n            return postCodeValidator.validate(postCode, countryId, this.options.postCodes);\r\n        },\r\n\r\n        /**\r\n         * Renders warning messages for invalid post code.\r\n         *\r\n         * @protected\r\n         * @param {Boolean} valid\r\n         */\r\n        _renderValidationResult: function (valid) {\r\n            var warnMessage,\r\n                alertDiv = this.zipInput.next();\r\n\r\n            if (!valid) {\r\n                warnMessage = $t('Provided Zip/Postal Code seems to be invalid.');\r\n\r\n                if (postCodeValidator.validatedPostCodeExample.length) {\r\n                    warnMessage += $t(' Example: ') + postCodeValidator.validatedPostCodeExample.join('; ') + '. ';\r\n                }\r\n                warnMessage += $t('If you believe it is the right one you can ignore this notice.');\r\n            }\r\n\r\n            alertDiv.children(':first').text(warnMessage);\r\n\r\n            if (valid) {\r\n                alertDiv.hide();\r\n            } else {\r\n                alertDiv.show();\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.addressValidation;\r\n});\r\n","Magento_Customer/js/block-submit-on-send.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/mage'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (config) {\r\n        var dataForm = $('#' + config.formId);\r\n\r\n        dataForm.on('submit', function () {\r\n            $(this).find(':submit').attr('disabled', 'disabled');\r\n\r\n            if (this.isValid === false) {\r\n                $(this).find(':submit').prop('disabled', false);\r\n            }\r\n            this.isValid = true;\r\n        });\r\n        dataForm.on('invalid-form.validate', function () {\r\n            $(this).find(':submit').prop('disabled', false);\r\n            this.isValid = false;\r\n        });\r\n    };\r\n});\r\n","Magento_Customer/js/change-email-password.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.changeEmailPassword', {\r\n        options: {\r\n            changeEmailSelector: '[data-role=change-email]',\r\n            changePasswordSelector: '[data-role=change-password]',\r\n            mainContainerSelector: '[data-container=change-email-password]',\r\n            titleSelector: '[data-title=change-email-password]',\r\n            emailContainerSelector: '[data-container=change-email]',\r\n            newPasswordContainerSelector: '[data-container=new-password]',\r\n            confirmPasswordContainerSelector: '[data-container=confirm-password]',\r\n            currentPasswordSelector: '[data-input=current-password]',\r\n            emailSelector: '[data-input=change-email]',\r\n            newPasswordSelector: '[data-input=new-password]',\r\n            confirmPasswordSelector: '[data-input=confirm-password]'\r\n        },\r\n\r\n        /**\r\n         * Create widget\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('change', $.proxy(function () {\r\n                this._checkChoice();\r\n            }, this));\r\n\r\n            this._checkChoice();\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * Event binding, will monitor change, keyup and paste events.\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            this._on($(this.options.emailSelector), {\r\n                'change': this._updatePasswordFieldWithEmailValue,\r\n                'keyup': this._updatePasswordFieldWithEmailValue,\r\n                'paste': this._updatePasswordFieldWithEmailValue\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Check choice\r\n         * @private\r\n         */\r\n        _checkChoice: function () {\r\n            if ($(this.options.changeEmailSelector).is(':checked') &&\r\n                $(this.options.changePasswordSelector).is(':checked')) {\r\n                this._showAll();\r\n            } else if ($(this.options.changeEmailSelector).is(':checked')) {\r\n                this._showEmail();\r\n            } else if ($(this.options.changePasswordSelector).is(':checked')) {\r\n                this._showPassword();\r\n            } else {\r\n                this._hideAll();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show email and password input fields\r\n         * @private\r\n         */\r\n        _showAll: function () {\r\n            $(this.options.titleSelector).html(this.options.titleChangeEmailAndPassword);\r\n\r\n            $(this.options.mainContainerSelector).show();\r\n            $(this.options.emailContainerSelector).show();\r\n            $(this.options.newPasswordContainerSelector).show();\r\n            $(this.options.confirmPasswordContainerSelector).show();\r\n\r\n            $(this.options.currentPasswordSelector).attr('data-validate', '{required:true}').prop('disabled', false);\r\n            $(this.options.emailSelector).attr('data-validate', '{required:true}').prop('disabled', false);\r\n            this._updatePasswordFieldWithEmailValue();\r\n            $(this.options.confirmPasswordSelector).attr(\r\n                'data-validate',\r\n                '{required:true, equalTo:\"' + this.options.newPasswordSelector + '\"}'\r\n            ).prop('disabled', false);\r\n        },\r\n\r\n        /**\r\n         * Hide email and password input fields\r\n         * @private\r\n         */\r\n        _hideAll: function () {\r\n            $(this.options.mainContainerSelector).hide();\r\n            $(this.options.emailContainerSelector).hide();\r\n            $(this.options.newPasswordContainerSelector).hide();\r\n            $(this.options.confirmPasswordContainerSelector).hide();\r\n\r\n            $(this.options.currentPasswordSelector).removeAttr('data-validate').prop('disabled', true);\r\n            $(this.options.emailSelector).removeAttr('data-validate').prop('disabled', true);\r\n            $(this.options.newPasswordSelector).removeAttr('data-validate').prop('disabled', true);\r\n            $(this.options.confirmPasswordSelector).removeAttr('data-validate').prop('disabled', true);\r\n        },\r\n\r\n        /**\r\n         * Show email input fields\r\n         * @private\r\n         */\r\n        _showEmail: function () {\r\n            this._showAll();\r\n            $(this.options.titleSelector).html(this.options.titleChangeEmail);\r\n\r\n            $(this.options.newPasswordContainerSelector).hide();\r\n            $(this.options.confirmPasswordContainerSelector).hide();\r\n\r\n            $(this.options.newPasswordSelector).removeAttr('data-validate').prop('disabled', true);\r\n            $(this.options.confirmPasswordSelector).removeAttr('data-validate').prop('disabled', true);\r\n        },\r\n\r\n        /**\r\n         * Show password input fields\r\n         * @private\r\n         */\r\n        _showPassword: function () {\r\n            this._showAll();\r\n            $(this.options.titleSelector).html(this.options.titleChangePassword);\r\n\r\n            $(this.options.emailContainerSelector).hide();\r\n\r\n            $(this.options.emailSelector).removeAttr('data-validate').prop('disabled', true);\r\n        },\r\n\r\n        /**\r\n         * Update password validation rules with email input field value\r\n         * @private\r\n         */\r\n        _updatePasswordFieldWithEmailValue: function () {\r\n            $(this.options.newPasswordSelector).attr(\r\n                'data-validate',\r\n                '{required:true, ' +\r\n                '\\'validate-customer-password\\':true, ' +\r\n                '\\'password-not-equal-to-user-name\\':\\'' + $(this.options.emailSelector).val() + '\\'}'\r\n            ).prop('disabled', false);\r\n        }\r\n    });\r\n\r\n    return $.mage.changeEmailPassword;\r\n});\r\n","Magento_Customer/js/checkout-balance.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.checkoutBalance', {\r\n        /**\r\n         * Initialize store credit events\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.eventData = {\r\n                price: this.options.balance,\r\n                totalPrice: 0\r\n            };\r\n            this.element.on('change', $.proxy(function (e) {\r\n                if ($(e.target).is(':checked')) {\r\n                    this.eventData.price = -1 * this.options.balance;\r\n                } else {\r\n                    if (this.options.amountSubstracted) { //eslint-disable-line no-lonely-if\r\n                        this.eventData.price = parseFloat(this.options.usedAmount);\r\n                        this.options.amountSubstracted = false;\r\n                    } else {\r\n                        this.eventData.price = parseFloat(this.options.balance);\r\n                    }\r\n                }\r\n                this.element.trigger('updateCheckoutPrice', this.eventData);\r\n            }, this));\r\n        }\r\n    });\r\n\r\n    return $.mage.checkoutBalance;\r\n});\r\n","Magento_Customer/js/customer-data.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'ko',\r\n    'Magento_Customer/js/section-config',\r\n    'mage/url',\r\n    'mage/storage',\r\n    'jquery/jquery-storageapi'\r\n], function ($, _, ko, sectionConfig, url) {\r\n    'use strict';\r\n\r\n    var options = {\r\n            cookieLifeTime: 86400 //1 day by default\r\n        },\r\n        storage,\r\n        storageInvalidation,\r\n        invalidateCacheBySessionTimeOut,\r\n        invalidateCacheByCloseCookieSession,\r\n        dataProvider,\r\n        buffer,\r\n        customerData,\r\n        deferred = $.Deferred();\r\n\r\n    url.setBaseUrl(window.BASE_URL);\r\n    options.sectionLoadUrl = url.build('customer/section/load');\r\n\r\n    /**\r\n     * Storage initialization\r\n     */\r\n    function initStorage() {\r\n        $.cookieStorage.setConf({\r\n            path: '/',\r\n            expires: new Date(Date.now() + parseInt(options.cookieLifeTime, 10) * 1000),\r\n            samesite: 'lax'\r\n        });\r\n        storage = $.initNamespaceStorage('mage-cache-storage').localStorage;\r\n        storageInvalidation = $.initNamespaceStorage('mage-cache-storage-section-invalidation').localStorage;\r\n    }\r\n\r\n    // Initialize storage with default parameters to prevent JS errors while component still not initialized\r\n    initStorage();\r\n\r\n    /**\r\n     * @param {Object} invalidateOptions\r\n     */\r\n    invalidateCacheBySessionTimeOut = function (invalidateOptions) {\r\n        var date;\r\n\r\n        if (new Date($.localStorage.get('mage-cache-timeout')) < new Date()) {\r\n            storage.removeAll();\r\n        }\r\n        date = new Date(Date.now() + parseInt(invalidateOptions.cookieLifeTime, 10) * 1000);\r\n        $.localStorage.set('mage-cache-timeout', date);\r\n    };\r\n\r\n    /**\r\n     * Invalidate Cache By Close Cookie Session\r\n     */\r\n    invalidateCacheByCloseCookieSession = function () {\r\n        if (!$.cookieStorage.isSet('mage-cache-sessid')) {\r\n            $.cookieStorage.set('mage-cache-sessid', true);\r\n            storage.removeAll();\r\n        }\r\n    };\r\n\r\n    dataProvider = {\r\n\r\n        /**\r\n         * @param {Object} sectionNames\r\n         * @return {Object}\r\n         */\r\n        getFromStorage: function (sectionNames) {\r\n            var result = {};\r\n\r\n            _.each(sectionNames, function (sectionName) {\r\n                result[sectionName] = storage.get(sectionName);\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} sectionNames\r\n         * @param {Boolean} forceNewSectionTimestamp\r\n         * @return {*}\r\n         */\r\n        getFromServer: function (sectionNames, forceNewSectionTimestamp) {\r\n            var parameters;\r\n\r\n            sectionNames = sectionConfig.filterClientSideSections(sectionNames);\r\n            parameters = _.isArray(sectionNames) && sectionNames.indexOf('*') < 0 ? {\r\n                sections: sectionNames.join(',')\r\n            } : [];\r\n            parameters['force_new_section_timestamp'] = forceNewSectionTimestamp;\r\n\r\n            return $.getJSON(options.sectionLoadUrl, parameters).fail(function (jqXHR) {\r\n                throw new Error(jqXHR);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {Function} target\r\n     * @param {String} sectionName\r\n     * @return {*}\r\n     */\r\n    ko.extenders.disposableCustomerData = function (target, sectionName) {\r\n        var sectionDataIds, newSectionDataIds = {};\r\n\r\n        target.subscribe(function () {\r\n            setTimeout(function () {\r\n                storage.remove(sectionName);\r\n                sectionDataIds = $.cookieStorage.get('section_data_ids') || {};\r\n                _.each(sectionDataIds, function (data, name) {\r\n                    if (name !== sectionName) {\r\n                        newSectionDataIds[name] = data;\r\n                    }\r\n                });\r\n                $.cookieStorage.set('section_data_ids', newSectionDataIds);\r\n            }, 3000);\r\n        });\r\n\r\n        return target;\r\n    };\r\n\r\n    buffer = {\r\n        data: {},\r\n\r\n        /**\r\n         * @param {String} sectionName\r\n         */\r\n        bind: function (sectionName) {\r\n            this.data[sectionName] = ko.observable({});\r\n        },\r\n\r\n        /**\r\n         * @param {String} sectionName\r\n         * @return {Object}\r\n         */\r\n        get: function (sectionName) {\r\n            if (!this.data[sectionName]) {\r\n                this.bind(sectionName);\r\n            }\r\n\r\n            return this.data[sectionName];\r\n        },\r\n\r\n        /**\r\n         * @return {Array}\r\n         */\r\n        keys: function () {\r\n            return _.keys(this.data);\r\n        },\r\n\r\n        /**\r\n         * @param {String} sectionName\r\n         * @param {Object} sectionData\r\n         */\r\n        notify: function (sectionName, sectionData) {\r\n            if (!this.data[sectionName]) {\r\n                this.bind(sectionName);\r\n            }\r\n            this.data[sectionName](sectionData);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} sections\r\n         */\r\n        update: function (sections) {\r\n            var sectionId = 0,\r\n                sectionDataIds = $.cookieStorage.get('section_data_ids') || {};\r\n\r\n            _.each(sections, function (sectionData, sectionName) {\r\n                sectionId = sectionData['data_id'];\r\n                sectionDataIds[sectionName] = sectionId;\r\n                storage.set(sectionName, sectionData);\r\n                storageInvalidation.remove(sectionName);\r\n                buffer.notify(sectionName, sectionData);\r\n            });\r\n            $.cookieStorage.set('section_data_ids', sectionDataIds);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} sections\r\n         */\r\n        remove: function (sections) {\r\n            _.each(sections, function (sectionName) {\r\n                storage.remove(sectionName);\r\n\r\n                if (!sectionConfig.isClientSideSection(sectionName)) {\r\n                    storageInvalidation.set(sectionName, true);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    customerData = {\r\n\r\n        /**\r\n         * Customer data initialization\r\n         */\r\n        init: function () {\r\n            var expiredSectionNames = this.getExpiredSectionNames();\r\n\r\n            if (expiredSectionNames.length > 0) {\r\n                _.each(dataProvider.getFromStorage(storage.keys()), function (sectionData, sectionName) {\r\n                    buffer.notify(sectionName, sectionData);\r\n                });\r\n                this.reload(expiredSectionNames, false);\r\n            } else {\r\n                _.each(dataProvider.getFromStorage(storage.keys()), function (sectionData, sectionName) {\r\n                    buffer.notify(sectionName, sectionData);\r\n                });\r\n\r\n                if (!_.isEmpty(storageInvalidation.keys())) {\r\n                    this.reload(storageInvalidation.keys(), false);\r\n                }\r\n            }\r\n\r\n            if (!_.isEmpty($.cookieStorage.get('section_data_clean'))) {\r\n                this.reload(sectionConfig.getSectionNames(), true);\r\n                $.cookieStorage.set('section_data_clean', '');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Storage init\r\n         */\r\n        initStorage: initStorage,\r\n\r\n        /**\r\n         * Retrieve the list of sections that has expired since last page reload.\r\n         *\r\n         * Sections can expire due to lifetime constraints or due to inconsistent storage information\r\n         * (validated by cookie data).\r\n         *\r\n         * @return {Array}\r\n         */\r\n        getExpiredSectionNames: function () {\r\n            var expiredSectionNames = [],\r\n                cookieSectionTimestamps = $.cookieStorage.get('section_data_ids') || {},\r\n                sectionLifetime = options.expirableSectionLifetime * 60,\r\n                currentTimestamp = Math.floor(Date.now() / 1000),\r\n                sectionData;\r\n\r\n            // process sections that can expire due to lifetime constraints\r\n            _.each(options.expirableSectionNames, function (sectionName) {\r\n                sectionData = storage.get(sectionName);\r\n\r\n                if (typeof sectionData === 'object' && sectionData['data_id'] + sectionLifetime <= currentTimestamp) {\r\n                    expiredSectionNames.push(sectionName);\r\n                }\r\n            });\r\n\r\n            // process sections that can expire due to storage information inconsistency\r\n            _.each(cookieSectionTimestamps, function (cookieSectionTimestamp, sectionName) {\r\n                sectionData = storage.get(sectionName);\r\n\r\n                if (typeof sectionData === 'undefined' ||\r\n                    typeof sectionData === 'object' &&\r\n                    cookieSectionTimestamp !== sectionData['data_id']\r\n                ) {\r\n                    expiredSectionNames.push(sectionName);\r\n                }\r\n            });\r\n\r\n            //remove expired section names of previously installed/enable modules\r\n            expiredSectionNames = _.intersection(expiredSectionNames, sectionConfig.getSectionNames());\r\n\r\n            return _.uniq(expiredSectionNames);\r\n        },\r\n\r\n        /**\r\n         * Check if some sections have to be reloaded.\r\n         *\r\n         * @deprecated Use getExpiredSectionNames instead.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        needReload: function () {\r\n            var expiredSectionNames = this.getExpiredSectionNames();\r\n\r\n            return expiredSectionNames.length > 0;\r\n        },\r\n\r\n        /**\r\n         * Retrieve the list of expired keys.\r\n         *\r\n         * @deprecated Use getExpiredSectionNames instead.\r\n         *\r\n         * @return {Array}\r\n         */\r\n        getExpiredKeys: function () {\r\n            return this.getExpiredSectionNames();\r\n        },\r\n\r\n        /**\r\n         * @param {String} sectionName\r\n         * @return {*}\r\n         */\r\n        get: function (sectionName) {\r\n            return buffer.get(sectionName);\r\n        },\r\n\r\n        /**\r\n         * @param {String} sectionName\r\n         * @param {Object} sectionData\r\n         */\r\n        set: function (sectionName, sectionData) {\r\n            var data = {};\r\n\r\n            data[sectionName] = sectionData;\r\n            buffer.update(data);\r\n        },\r\n\r\n        /**\r\n         * Avoid using this function directly 'cause of possible performance drawbacks.\r\n         * Each customer section reload brings new non-cached ajax request.\r\n         *\r\n         * @param {Array} sectionNames\r\n         * @param {Boolean} forceNewSectionTimestamp\r\n         * @return {*}\r\n         */\r\n        reload: function (sectionNames, forceNewSectionTimestamp) {\r\n            return dataProvider.getFromServer(sectionNames, forceNewSectionTimestamp).done(function (sections) {\r\n                $(document).trigger('customer-data-reload', [sectionNames]);\r\n                buffer.update(sections);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {Array} sectionNames\r\n         */\r\n        invalidate: function (sectionNames) {\r\n            var sectionDataIds,\r\n                sectionsNamesForInvalidation;\r\n\r\n            sectionsNamesForInvalidation = _.contains(sectionNames, '*') ? sectionConfig.getSectionNames() :\r\n                sectionNames;\r\n\r\n            $(document).trigger('customer-data-invalidate', [sectionsNamesForInvalidation]);\r\n            buffer.remove(sectionsNamesForInvalidation);\r\n            sectionDataIds = $.cookieStorage.get('section_data_ids') || {};\r\n\r\n            // Invalidate section in cookie (increase version of section with 1000)\r\n            _.each(sectionsNamesForInvalidation, function (sectionName) {\r\n                if (!sectionConfig.isClientSideSection(sectionName)) {\r\n                    sectionDataIds[sectionName] += 1000;\r\n                }\r\n            });\r\n            $.cookieStorage.set('section_data_ids', sectionDataIds);\r\n        },\r\n\r\n        /**\r\n         * Checks if customer data is initialized.\r\n         *\r\n         * @returns {jQuery.Deferred}\r\n         */\r\n        getInitCustomerData: function () {\r\n            return deferred.promise();\r\n        },\r\n\r\n        /**\r\n         * Reload sections on ajax complete\r\n         *\r\n         * @param {Object} jsonResponse\r\n         * @param {Object} settings\r\n         */\r\n        onAjaxComplete: function (jsonResponse, settings) {\r\n            var sections,\r\n                redirects;\r\n\r\n            if (settings.type.match(/post|put|delete/i)) {\r\n                sections = sectionConfig.getAffectedSections(settings.url);\r\n\r\n                if (sections && sections.length) {\r\n                    this.invalidate(sections);\r\n                    redirects = ['redirect', 'backUrl'];\r\n\r\n                    if (_.isObject(jsonResponse) && !_.isEmpty(_.pick(jsonResponse, redirects))) { //eslint-disable-line\r\n                        return;\r\n                    }\r\n                    this.reload(sections, true);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {Object} settings\r\n         * @constructor\r\n         */\r\n        'Magento_Customer/js/customer-data': function (settings) {\r\n            options = settings;\r\n\r\n            // re-init storage with a new settings\r\n            customerData.initStorage();\r\n\r\n            invalidateCacheBySessionTimeOut(settings);\r\n            invalidateCacheByCloseCookieSession();\r\n            customerData.init();\r\n            deferred.resolve();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Events listener\r\n     */\r\n    $(document).on('ajaxComplete', function (event, xhr, settings) {\r\n        customerData.onAjaxComplete(xhr.responseJSON, settings);\r\n    });\r\n\r\n    /**\r\n     * Events listener\r\n     */\r\n    $(document).on('submit', function (event) {\r\n        var sections;\r\n\r\n        if (event.target.method.match(/post|put|delete/i)) {\r\n            sections = sectionConfig.getAffectedSections(event.target.action);\r\n\r\n            if (sections) {\r\n                customerData.invalidate(sections);\r\n            }\r\n        }\r\n    });\r\n\r\n    return customerData;\r\n});\r\n","Magento_Customer/js/invalidation-processor.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiElement',\r\n    'Magento_Customer/js/customer-data'\r\n], function (_, Element, customerData) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        /**\r\n         * Initialize object\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.process(customerData);\r\n        },\r\n\r\n        /**\r\n         * Process all rules in loop, each rule can invalidate some sections in customer data\r\n         *\r\n         * @param {Object} customerDataObject\r\n         */\r\n        process: function (customerDataObject) {\r\n            _.each(this.invalidationRules, function (rule, ruleName) {\r\n                _.each(rule, function (ruleArgs, rulePath) {\r\n                    require([rulePath], function (Rule) {\r\n                        var currentRule = new Rule(ruleArgs);\r\n\r\n                        if (!_.isFunction(currentRule.process)) {\r\n                            throw new Error('Rule ' + ruleName + ' should implement invalidationProcessor interface');\r\n                        }\r\n                        currentRule.process(customerDataObject);\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/logout-redirect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/mage'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (data) {\r\n        $($.mage.redirect(data.url, 'assign', 5000));\r\n    };\r\n});\r\n","Magento_Customer/js/password-strength-indicator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/zxcvbn',\r\n    'mage/translate',\r\n    'mage/validation'\r\n], function ($, zxcvbn, $t) {\r\n    'use strict';\r\n\r\n    $.widget('mage.passwordStrengthIndicator', {\r\n        options: {\r\n            cache: {},\r\n            passwordSelector: '[type=password]',\r\n            passwordStrengthMeterSelector: '[data-role=password-strength-meter]',\r\n            passwordStrengthMeterLabelSelector: '[data-role=password-strength-meter-label]',\r\n            formSelector: 'form',\r\n            emailSelector: 'input[type=\"email\"]'\r\n        },\r\n\r\n        /**\r\n         * Widget initialization\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.options.cache.input = $(this.options.passwordSelector, this.element);\r\n            this.options.cache.meter = $(this.options.passwordStrengthMeterSelector, this.element);\r\n            this.options.cache.label = $(this.options.passwordStrengthMeterLabelSelector, this.element);\r\n\r\n            // We need to look outside the module for backward compatibility, since someone can already use the module.\r\n            // @todo Narrow this selector in 2.3 so it doesn't accidentally finds the email field from the\r\n            // newsletter email field or any other \"email\" field.\r\n            this.options.cache.email = $(this.options.formSelector).find(this.options.emailSelector);\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * Event binding, will monitor change, keyup and paste events.\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            this._on(this.options.cache.input, {\r\n                'change': this._calculateStrength,\r\n                'keyup': this._calculateStrength,\r\n                'paste': this._calculateStrength\r\n            });\r\n\r\n            if (this.options.cache.email.length) {\r\n                this._on(this.options.cache.email, {\r\n                    'change': this._calculateStrength,\r\n                    'keyup': this._calculateStrength,\r\n                    'paste': this._calculateStrength\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Calculate password strength\r\n         * @private\r\n         */\r\n        _calculateStrength: function () {\r\n            var password = this._getPassword(),\r\n                isEmpty = password.length === 0,\r\n                zxcvbnScore,\r\n                displayScore,\r\n                isValid;\r\n\r\n            // Display score is based on combination of whether password is empty, valid, and zxcvbn strength\r\n            if (isEmpty) {\r\n                displayScore = 0;\r\n            } else {\r\n                this.options.cache.input.rules('add', {\r\n                    'password-not-equal-to-user-name': this.options.cache.email.val()\r\n                });\r\n\r\n                // We should only perform this check in case there is an email field on screen\r\n                if (this.options.cache.email.length &&\r\n                    password.toLowerCase() === this.options.cache.email.val().toLowerCase()) {\r\n                    displayScore = 1;\r\n                } else {\r\n                    isValid = $.validator.validateSingleElement(this.options.cache.input);\r\n                    zxcvbnScore = zxcvbn(password).score;\r\n                    displayScore = isValid && zxcvbnScore > 0 ? zxcvbnScore : 1;\r\n                }\r\n            }\r\n\r\n            // Update label\r\n            this._displayStrength(displayScore);\r\n        },\r\n\r\n        /**\r\n         * Display strength\r\n         * @param {Number} displayScore\r\n         * @private\r\n         */\r\n        _displayStrength: function (displayScore) {\r\n            var strengthLabel = '',\r\n                className;\r\n\r\n            switch (displayScore) {\r\n                case 0:\r\n                    strengthLabel = $t('No Password');\r\n                    className = 'password-none';\r\n                    break;\r\n\r\n                case 1:\r\n                    strengthLabel = $t('Weak');\r\n                    className = 'password-weak';\r\n                    break;\r\n\r\n                case 2:\r\n                    strengthLabel = $t('Medium');\r\n                    className = 'password-medium';\r\n                    break;\r\n\r\n                case 3:\r\n                    strengthLabel = $t('Strong');\r\n                    className = 'password-strong';\r\n                    break;\r\n\r\n                case 4:\r\n                    strengthLabel = $t('Very Strong');\r\n                    className = 'password-very-strong';\r\n                    break;\r\n            }\r\n\r\n            this.options.cache.meter\r\n                .removeClass()\r\n                .addClass(className);\r\n            this.options.cache.label.text(strengthLabel);\r\n        },\r\n\r\n        /**\r\n         * Get password value\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _getPassword: function () {\r\n            return this.options.cache.input.val();\r\n        }\r\n    });\r\n\r\n    return $.mage.passwordStrengthIndicator;\r\n});\r\n","Magento_Customer/js/section-config.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['underscore'], function (_) {\r\n    'use strict';\r\n\r\n    var baseUrls = [],\r\n        sections = [],\r\n        clientSideSections = [],\r\n        sectionNames = [],\r\n        canonize;\r\n\r\n    /**\r\n     * @param {String} url\r\n     * @return {String}\r\n     */\r\n    canonize = function (url) {\r\n        var route = url;\r\n\r\n        _.some(baseUrls, function (baseUrl) {\r\n            route = url.replace(baseUrl, '');\r\n\r\n            return route !== url;\r\n        });\r\n\r\n        return route.replace(/^\\/?index.php\\/?/, '').toLowerCase();\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * Returns a list of sections which should be invalidated for given URL.\r\n         * @param {String} url - URL which was requested.\r\n         * @return {Object} - List of sections to invalidate.\r\n         */\r\n        getAffectedSections: function (url) {\r\n            var route = canonize(url),\r\n                actions = _.find(sections, function (val, section) {\r\n                    var matched;\r\n\r\n                    // Covers the case where \"*\" works as a glob pattern.\r\n                    if (section.indexOf('*') >= 0) {\r\n                        section = section.replace(/\\*/g, '[^/]+') + '$';\r\n                        matched = route.match(section);\r\n\r\n                        return matched && matched[0] === route;\r\n                    }\r\n\r\n                    return route.indexOf(section) === 0;\r\n                });\r\n\r\n            return _.union(_.toArray(actions), sections['*']);\r\n        },\r\n\r\n        /**\r\n         * Filters the list of given sections to the ones defined as client side.\r\n         * @param {Object} allSections - List of sections to check.\r\n         * @return {Object} - List of filtered sections.\r\n         */\r\n        filterClientSideSections: function (allSections) {\r\n            return _.difference(allSections, clientSideSections);\r\n        },\r\n\r\n        /**\r\n         * Tells if section is defined as client side.\r\n         * @param {String} sectionName - Name of the section to check.\r\n         * @return {Boolean}\r\n         */\r\n        isClientSideSection: function (sectionName) {\r\n            return _.contains(clientSideSections, sectionName);\r\n        },\r\n\r\n        /**\r\n         * Returns array of section names.\r\n         * @returns {Array}\r\n         */\r\n        getSectionNames: function () {\r\n            return sectionNames;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} options\r\n         * @constructor\r\n         */\r\n        'Magento_Customer/js/section-config': function (options) {\r\n            baseUrls = options.baseUrls;\r\n            sections = options.sections;\r\n            clientSideSections = options.clientSideSections;\r\n            sectionNames = options.sectionNames;\r\n        }\r\n    };\r\n});\r\n","Magento_Customer/js/show-password.js":"/**\r\n* Copyright \u00a9 Magento, Inc. All rights reserved.\r\n* See COPYING.txt for license details.\r\n*/\r\n\r\ndefine([\r\n    'jquery',\r\n    'uiComponent'\r\n], function ($, Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        passwordSelector: '',\r\n        passwordInputType: 'password',\r\n        textInputType: 'text',\r\n\r\n        defaults: {\r\n            template: 'Magento_Customer/show-password',\r\n            isPasswordVisible: false\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe(['isPasswordVisible']);\r\n\r\n            this.isPasswordVisible.subscribe(function (isChecked) {\r\n                this._showPassword(isChecked);\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Show/Hide password\r\n         * @private\r\n         */\r\n        _showPassword: function (isChecked) {\r\n            $(this.passwordSelector).attr('type',\r\n                isChecked ? this.textInputType : this.passwordInputType\r\n            );\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/validation.js":"define([\r\n    'jquery',\r\n    'moment',\r\n    'mageUtils',\r\n    'jquery/validate',\r\n    'validation',\r\n    'mage/translate'\r\n], function ($, moment, utils) {\r\n    'use strict';\r\n\r\n    $.validator.addMethod(\r\n        'validate-date',\r\n        function (value, element, params) {\r\n            var dateFormat = utils.normalizeDate(params.dateFormat);\r\n\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            return moment(value, dateFormat, true).isValid();\r\n        },\r\n        $.mage.__('Invalid date')\r\n    );\r\n\r\n    $.validator.addMethod(\r\n        'validate-dob',\r\n        function (value, element, params) {\r\n            var dateFormat = utils.convertToMomentFormat(params.dateFormat);\r\n\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            return moment(value, dateFormat).isBefore(moment());\r\n        },\r\n        $.mage.__('The Date of Birth should not be greater than today.')\r\n    );\r\n});\r\n","Magento_Customer/js/action/check-email-availability.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'mage/storage',\r\n    'Magento_Checkout/js/model/url-builder'\r\n], function (storage, urlBuilder) {\r\n    'use strict';\r\n\r\n    return function (deferred, email) {\r\n        return storage.post(\r\n            urlBuilder.createUrl('/customers/isEmailAvailable', {}),\r\n            JSON.stringify({\r\n                customerEmail: email\r\n            }),\r\n            false\r\n        ).done(function (isEmailAvailable) {\r\n            if (isEmailAvailable) {\r\n                deferred.resolve();\r\n            } else {\r\n                deferred.reject();\r\n            }\r\n        }).fail(function () {\r\n            deferred.reject();\r\n        });\r\n    };\r\n});\r\n","Magento_Customer/js/action/login.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/storage',\r\n    'Magento_Ui/js/model/messageList',\r\n    'Magento_Customer/js/customer-data',\r\n    'mage/translate'\r\n], function ($, storage, globalMessageList, customerData, $t) {\r\n    'use strict';\r\n\r\n    var callbacks = [],\r\n\r\n        /**\r\n         * @param {Object} loginData\r\n         * @param {String} redirectUrl\r\n         * @param {*} isGlobal\r\n         * @param {Object} messageContainer\r\n         */\r\n        action = function (loginData, redirectUrl, isGlobal, messageContainer) {\r\n            messageContainer = messageContainer || globalMessageList;\r\n\r\n            return storage.post(\r\n                'customer/ajax/login',\r\n                JSON.stringify(loginData),\r\n                isGlobal\r\n            ).done(function (response) {\r\n                if (response.errors) {\r\n                    messageContainer.addErrorMessage(response);\r\n                    callbacks.forEach(function (callback) {\r\n                        callback(loginData);\r\n                    });\r\n                } else {\r\n                    callbacks.forEach(function (callback) {\r\n                        callback(loginData);\r\n                    });\r\n                    customerData.invalidate(['customer']);\r\n\r\n                    if (response.redirectUrl) {\r\n                        window.location.href = response.redirectUrl;\r\n                    } else if (redirectUrl) {\r\n                        window.location.href = redirectUrl;\r\n                    } else {\r\n                        location.reload();\r\n                    }\r\n                }\r\n            }).fail(function () {\r\n                messageContainer.addErrorMessage({\r\n                    'message': $t('Could not authenticate. Please try again later')\r\n                });\r\n                callbacks.forEach(function (callback) {\r\n                    callback(loginData);\r\n                });\r\n            });\r\n        };\r\n\r\n    /**\r\n     * @param {Function} callback\r\n     */\r\n    action.registerLoginCallback = function (callback) {\r\n        callbacks.push(callback);\r\n    };\r\n\r\n    return action;\r\n});\r\n","Magento_Customer/js/invalidation-rules/website-rule.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'uiClass'\r\n], function (Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n\r\n        defaults: {\r\n            scopeConfig: {}\r\n        },\r\n\r\n        /**\r\n         * Takes website id from current customer data and compare it with current website id\r\n         * If customer belongs to another scope, we need to invalidate current section\r\n         *\r\n         * @param {Object} customerData\r\n         */\r\n        process: function (customerData) {\r\n            var customer = customerData.get('customer');\r\n\r\n            if (this.scopeConfig && customer() &&\r\n                ~~customer().websiteId !== ~~this.scopeConfig.websiteId && ~~customer().websiteId !== 0) {\r\n                customerData.reload(['customer']);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/model/address-list.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    './customer-addresses'\r\n], function (ko, defaultProvider) {\r\n    'use strict';\r\n\r\n    return ko.observableArray(defaultProvider.getAddressItems());\r\n});\r\n","Magento_Customer/js/model/authentication-popup.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/modal'\r\n], function ($, modal) {\r\n    'use strict';\r\n\r\n    return {\r\n        modalWindow: null,\r\n\r\n        /**\r\n         * Create popUp window for provided element\r\n         *\r\n         * @param {HTMLElement} element\r\n         */\r\n        createPopUp: function (element) {\r\n            var options = {\r\n                'type': 'popup',\r\n                'modalClass': 'popup-authentication',\r\n                'focus': '[name=username]',\r\n                'responsive': true,\r\n                'innerScroll': true,\r\n                'trigger': '.proceed-to-checkout',\r\n                'buttons': []\r\n            };\r\n\r\n            this.modalWindow = element;\r\n            modal(options, $(this.modalWindow));\r\n        },\r\n\r\n        /** Show login popup window */\r\n        showModal: function () {\r\n            $(this.modalWindow).modal('openModal').trigger('contentUpdated');\r\n        }\r\n    };\r\n});\r\n","Magento_Customer/js/model/customer-addresses.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    './customer/address'\r\n], function ($, ko, Address) {\r\n    'use strict';\r\n\r\n    var isLoggedIn = ko.observable(window.isCustomerLoggedIn);\r\n\r\n    return {\r\n        /**\r\n         * @return {Array}\r\n         */\r\n        getAddressItems: function () {\r\n            var items = [],\r\n                customerData = window.customerData;\r\n\r\n            if (isLoggedIn()) {\r\n                if (Object.keys(customerData).length) {\r\n                    $.each(customerData.addresses, function (key, item) {\r\n                        items.push(new Address(item));\r\n                    });\r\n                }\r\n            }\r\n\r\n            return items;\r\n        }\r\n    };\r\n});\r\n","Magento_Customer/js/model/customer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'underscore',\r\n    './address-list'\r\n], function ($, ko, _, addressList) {\r\n    'use strict';\r\n\r\n    var isLoggedIn = ko.observable(window.isCustomerLoggedIn),\r\n        customerData = {};\r\n\r\n    if (isLoggedIn()) {\r\n        customerData = window.customerData;\r\n    } else {\r\n        customerData = {};\r\n    }\r\n\r\n    return {\r\n        customerData: customerData,\r\n        customerDetails: {},\r\n        isLoggedIn: isLoggedIn,\r\n\r\n        /**\r\n         * @param {Boolean} flag\r\n         */\r\n        setIsLoggedIn: function (flag) {\r\n            isLoggedIn(flag);\r\n        },\r\n\r\n        /**\r\n         * @return {Array}\r\n         */\r\n        getBillingAddressList: function () {\r\n            return addressList();\r\n        },\r\n\r\n        /**\r\n         * @return {Array}\r\n         */\r\n        getShippingAddressList: function () {\r\n            return addressList();\r\n        },\r\n\r\n        /**\r\n         * @param {String} fieldName\r\n         * @param {*} value\r\n         */\r\n        setDetails: function (fieldName, value) {\r\n            if (fieldName) {\r\n                this.customerDetails[fieldName] = value;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {String} fieldName\r\n         * @return {*}\r\n         */\r\n        getDetails: function (fieldName) {\r\n            if (fieldName) {\r\n                if (this.customerDetails.hasOwnProperty(fieldName)) {\r\n                    return this.customerDetails[fieldName];\r\n                }\r\n\r\n                return undefined;\r\n            }\r\n\r\n            return this.customerDetails;\r\n        },\r\n\r\n        /**\r\n         * @param {Array} address\r\n         * @return {Number}\r\n         */\r\n        addCustomerAddress: function (address) {\r\n            var fields = [\r\n                    'customer_id', 'country_id', 'street', 'company', 'telephone', 'fax', 'postcode', 'city',\r\n                    'firstname', 'lastname', 'middlename', 'prefix', 'suffix', 'vat_id', 'default_billing',\r\n                    'default_shipping'\r\n                ],\r\n                customerAddress = {},\r\n                hasAddress = 0,\r\n                existingAddress;\r\n\r\n            if (!this.customerData.addresses) {\r\n                this.customerData.addresses = [];\r\n            }\r\n\r\n            customerAddress = _.pick(address, fields);\r\n\r\n            if (address.hasOwnProperty('region_id')) {\r\n                customerAddress.region = {\r\n                    'region_id': address['region_id'],\r\n                    region: address.region\r\n                };\r\n            }\r\n\r\n            for (existingAddress in this.customerData.addresses) {\r\n                if (this.customerData.addresses.hasOwnProperty(existingAddress)) {\r\n                    if (_.isEqual(this.customerData.addresses[existingAddress], customerAddress)) { //eslint-disable-line\r\n                        hasAddress = existingAddress;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (hasAddress === 0) {\r\n                return this.customerData.addresses.push(customerAddress) - 1;\r\n            }\r\n\r\n            return hasAddress;\r\n        },\r\n\r\n        /**\r\n         * @param {*} addressId\r\n         * @return {Boolean}\r\n         */\r\n        setAddressAsDefaultBilling: function (addressId) {\r\n            if (this.customerData.addresses[addressId]) {\r\n                this.customerData.addresses[addressId]['default_billing'] = 1;\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * @param {*} addressId\r\n         * @return {Boolean}\r\n         */\r\n        setAddressAsDefaultShipping: function (addressId) {\r\n            if (this.customerData.addresses[addressId]) {\r\n                this.customerData.addresses[addressId]['default_shipping'] = 1;\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n});\r\n","Magento_Customer/js/model/customer/address.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine(['underscore'], function (_) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns new address object.\r\n     *\r\n     * @param {Object} addressData\r\n     * @return {Object}\r\n     */\r\n    return function (addressData) {\r\n        var regionId;\r\n\r\n        if (addressData.region['region_id'] && addressData.region['region_id'] !== '0') {\r\n            regionId = addressData.region['region_id'] + '';\r\n        }\r\n\r\n        return {\r\n            customerAddressId: addressData.id,\r\n            email: addressData.email,\r\n            countryId: addressData['country_id'],\r\n            regionId: regionId,\r\n            regionCode: addressData.region['region_code'],\r\n            region: addressData.region.region,\r\n            customerId: addressData['customer_id'],\r\n            street: addressData.street,\r\n            company: addressData.company,\r\n            telephone: addressData.telephone,\r\n            fax: addressData.fax,\r\n            postcode: addressData.postcode,\r\n            city: addressData.city,\r\n            firstname: addressData.firstname,\r\n            lastname: addressData.lastname,\r\n            middlename: addressData.middlename,\r\n            prefix: addressData.prefix,\r\n            suffix: addressData.suffix,\r\n            vatId: addressData['vat_id'],\r\n            sameAsBilling: addressData['same_as_billing'],\r\n            saveInAddressBook: addressData['save_in_address_book'],\r\n            customAttributes: _.toArray(addressData['custom_attributes']).reverse(),\r\n\r\n            /**\r\n             * @return {*}\r\n             */\r\n            isDefaultShipping: function () {\r\n                return addressData['default_shipping'];\r\n            },\r\n\r\n            /**\r\n             * @return {*}\r\n             */\r\n            isDefaultBilling: function () {\r\n                return addressData['default_billing'];\r\n            },\r\n\r\n            /**\r\n             * @return {*}\r\n             */\r\n            getAddressInline: function () {\r\n                return addressData.inline;\r\n            },\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getType: function () {\r\n                return 'customer-address';\r\n            },\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getKey: function () {\r\n                return this.getType() + this.customerAddressId;\r\n            },\r\n\r\n            /**\r\n             * @return {String}\r\n             */\r\n            getCacheKey: function () {\r\n                return this.getKey();\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            isEditable: function () {\r\n                return false;\r\n            },\r\n\r\n            /**\r\n             * @return {Boolean}\r\n             */\r\n            canUseForBilling: function () {\r\n                return true;\r\n            }\r\n        };\r\n    };\r\n});\r\n","Magento_Customer/js/view/authentication-popup.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'Magento_Ui/js/form/form',\r\n    'Magento_Customer/js/action/login',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Customer/js/model/authentication-popup',\r\n    'mage/translate',\r\n    'mage/url',\r\n    'Magento_Ui/js/modal/alert',\r\n    'mage/validation'\r\n], function ($, ko, Component, loginAction, customerData, authenticationPopup, $t, url, alert) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        registerUrl: window.authenticationPopup.customerRegisterUrl,\r\n        forgotPasswordUrl: window.authenticationPopup.customerForgotPasswordUrl,\r\n        autocomplete: window.authenticationPopup.autocomplete,\r\n        modalWindow: null,\r\n        isLoading: ko.observable(false),\r\n\r\n        defaults: {\r\n            template: 'Magento_Customer/authentication-popup'\r\n        },\r\n\r\n        /**\r\n         * Init\r\n         */\r\n        initialize: function () {\r\n            var self = this;\r\n\r\n            this._super();\r\n            url.setBaseUrl(window.authenticationPopup.baseUrl);\r\n            loginAction.registerLoginCallback(function () {\r\n                self.isLoading(false);\r\n            });\r\n        },\r\n\r\n        /** Init popup login window */\r\n        setModalElement: function (element) {\r\n            if (authenticationPopup.modalWindow == null) {\r\n                authenticationPopup.createPopUp(element);\r\n            }\r\n        },\r\n\r\n        /** Is login form enabled for current customer */\r\n        isActive: function () {\r\n            var customer = customerData.get('customer');\r\n\r\n            return customer() == false; //eslint-disable-line eqeqeq\r\n        },\r\n\r\n        /** Show login popup window */\r\n        showModal: function () {\r\n            if (this.modalWindow) {\r\n                $(this.modalWindow).modal('openModal');\r\n            } else {\r\n                alert({\r\n                    content: $t('Guest checkout is disabled.')\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Provide login action\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        login: function (formUiElement, event) {\r\n            var loginData = {},\r\n                formElement = $(event.currentTarget),\r\n                formDataArray = formElement.serializeArray();\r\n\r\n            event.stopPropagation();\r\n            formDataArray.forEach(function (entry) {\r\n                loginData[entry.name] = entry.value;\r\n            });\r\n\r\n            if (formElement.validation() &&\r\n                formElement.validation('isValid')\r\n            ) {\r\n                this.isLoading(true);\r\n                loginAction(loginData);\r\n            }\r\n\r\n            return false;\r\n        }\r\n    });\r\n});\r\n","Magento_Customer/js/view/customer.js":"/**\r\n* Copyright \u00a9 Magento, Inc. All rights reserved.\r\n* See COPYING.txt for license details.\r\n*/\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data'\r\n], function (Component, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.customer = customerData.get('customer');\r\n        }\r\n    });\r\n});\r\n","Magento_Dhl/js/model/shipping-rates-validation-rules.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getRules: function () {\r\n            return {\r\n                'postcode': {\r\n                    'required': true\r\n                },\r\n                'country_id': {\r\n                    'required': true\r\n                },\r\n                'city': {\r\n                    'required': true\r\n                }\r\n            };\r\n        }\r\n    };\r\n});\r\n","Magento_Dhl/js/model/shipping-rates-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mageUtils',\r\n    'Magento_Dhl/js/model/shipping-rates-validation-rules',\r\n    'mage/translate'\r\n], function ($, utils, validationRules, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        validationErrors: [],\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {Boolean}\r\n         */\r\n        validate: function (address) {\r\n            var self = this;\r\n\r\n            this.validationErrors = [];\r\n            $.each(validationRules.getRules(), function (field, rule) {\r\n                var message;\r\n\r\n                if (rule.required && utils.isEmpty(address[field])) {\r\n                    message = $t('Field ') + field + $t(' is required.');\r\n\r\n                    self.validationErrors.push(message);\r\n                }\r\n            });\r\n\r\n            return !this.validationErrors.length;\r\n        }\r\n    };\r\n});\r\n","Magento_Dhl/js/view/shipping-rates-validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/shipping-rates-validator',\r\n    'Magento_Checkout/js/model/shipping-rates-validation-rules',\r\n    'Magento_Dhl/js/model/shipping-rates-validator',\r\n    'Magento_Dhl/js/model/shipping-rates-validation-rules'\r\n], function (\r\n    Component,\r\n    defaultShippingRatesValidator,\r\n    defaultShippingRatesValidationRules,\r\n    dhlShippingRatesValidator,\r\n    dhlShippingRatesValidationRules\r\n) {\r\n    'use strict';\r\n\r\n    defaultShippingRatesValidator.registerValidator('dhl', dhlShippingRatesValidator);\r\n    defaultShippingRatesValidationRules.registerRules('dhl', dhlShippingRatesValidationRules);\r\n\r\n    return Component;\r\n});\r\n","Magento_Directory/js/region-updater.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'underscore',\r\n    'jquery-ui-modules/widget',\r\n    'mage/validation'\r\n], function ($, mageTemplate, _) {\r\n    'use strict';\r\n\r\n    $.widget('mage.directoryRegionUpdater', {\r\n        options: {\r\n            regionTemplate:\r\n                '<option value=\"<%- data.value %>\" <% if (data.isSelected) { %>selected=\"selected\"<% } %>>' +\r\n                '<%- data.title %>' +\r\n                '</option>',\r\n            isRegionRequired: true,\r\n            isZipRequired: true,\r\n            isCountryRequired: true,\r\n            currentRegion: null,\r\n            isMultipleCountriesAllowed: true\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._initCountryElement();\r\n\r\n            this.currentRegionOption = this.options.currentRegion;\r\n            this.regionTmpl = mageTemplate(this.options.regionTemplate);\r\n\r\n            this._updateRegion(this.element.find('option:selected').val());\r\n\r\n            $(this.options.regionListId).on('change', $.proxy(function (e) {\r\n                this.setOption = false;\r\n                this.currentRegionOption = $(e.target).val();\r\n            }, this));\r\n\r\n            $(this.options.regionInputId).on('focusout', $.proxy(function () {\r\n                this.setOption = true;\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @private\r\n         */\r\n        _initCountryElement: function () {\r\n\r\n            if (this.options.isMultipleCountriesAllowed) {\r\n                this.element.parents('div.field').show();\r\n                this.element.on('change', $.proxy(function (e) {\r\n                    // clear region inputs on country change\r\n                    $(this.options.regionListId).val('');\r\n                    $(this.options.regionInputId).val('');\r\n                    this._updateRegion($(e.target).val());\r\n                }, this));\r\n\r\n                if (this.options.isCountryRequired) {\r\n                    this.element.addClass('required-entry');\r\n                    this.element.parents('div.field').addClass('required');\r\n                }\r\n            } else {\r\n                this.element.parents('div.field').hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Remove options from dropdown list\r\n         *\r\n         * @param {Object} selectElement - jQuery object for dropdown list\r\n         * @private\r\n         */\r\n        _removeSelectOptions: function (selectElement) {\r\n            selectElement.find('option').each(function (index) {\r\n                if (index) {\r\n                    $(this).remove();\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Render dropdown list\r\n         * @param {Object} selectElement - jQuery object for dropdown list\r\n         * @param {String} key - region code\r\n         * @param {Object} value - region object\r\n         * @private\r\n         */\r\n        _renderSelectOption: function (selectElement, key, value) {\r\n            selectElement.append($.proxy(function () {\r\n                var name = value.name.replace(/[!\"#$%&'()*+,.\\/:;<=>?@[\\\\\\]^`{|}~]/g, '\\\\$&'),\r\n                    tmplData,\r\n                    tmpl;\r\n\r\n                if (value.code && $(name).is('span')) {\r\n                    key = value.code;\r\n                    value.name = $(name).text();\r\n                }\r\n\r\n                tmplData = {\r\n                    value: key,\r\n                    title: value.name,\r\n                    isSelected: false\r\n                };\r\n\r\n                if (this.options.defaultRegion === key) {\r\n                    tmplData.isSelected = true;\r\n                }\r\n\r\n                tmpl = this.regionTmpl({\r\n                    data: tmplData\r\n                });\r\n\r\n                return $(tmpl);\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Takes clearError callback function as first option\r\n         * If no form is passed as option, look up the closest form and call clearError method.\r\n         * @private\r\n         */\r\n        _clearError: function () {\r\n            var args = ['clearError', this.options.regionListId, this.options.regionInputId, this.options.postcodeId];\r\n\r\n            if (this.options.clearError && typeof this.options.clearError === 'function') {\r\n                this.options.clearError.call(this);\r\n            } else {\r\n                if (!this.options.form) {\r\n                    this.options.form = this.element.closest('form').length ? $(this.element.closest('form')[0]) : null;\r\n                }\r\n\r\n                this.options.form = $(this.options.form);\r\n\r\n                this.options.form && this.options.form.data('validator') &&\r\n                this.options.form.validation.apply(this.options.form, _.compact(args));\r\n\r\n                // Clean up errors on region & zip fix\r\n                $(this.options.regionInputId).removeClass('mage-error').parent().find('[generated]').remove();\r\n                $(this.options.regionListId).removeClass('mage-error').parent().find('[generated]').remove();\r\n                $(this.options.postcodeId).removeClass('mage-error').parent().find('[generated]').remove();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update dropdown list based on the country selected\r\n         *\r\n         * @param {String} country - 2 uppercase letter for country code\r\n         * @private\r\n         */\r\n        _updateRegion: function (country) {\r\n            // Clear validation error messages\r\n            var regionList = $(this.options.regionListId),\r\n                regionInput = $(this.options.regionInputId),\r\n                postcode = $(this.options.postcodeId),\r\n                label = regionList.parent().siblings('label'),\r\n                container = regionList.parents('div.field'),\r\n                regionsEntries,\r\n                regionId,\r\n                regionData;\r\n\r\n            this._clearError();\r\n            this._checkRegionRequired(country);\r\n\r\n            // Populate state/province dropdown list if available or use input box\r\n            if (this.options.regionJson[country]) {\r\n                this._removeSelectOptions(regionList);\r\n                regionsEntries = _.pairs(this.options.regionJson[country]);\r\n                $.each(regionsEntries, $.proxy(function (key, value) {\r\n                    regionData = value[1];\r\n                    regionId = regionData.id;\r\n                    this._renderSelectOption(regionList, regionId.toString(), regionData);\r\n                }, this));\r\n\r\n                if (this.currentRegionOption) {\r\n                    regionList.val(this.currentRegionOption);\r\n                }\r\n\r\n                if (this.setOption) {\r\n                    regionList.find('option').filter(function () {\r\n                        return this.text === regionInput.val();\r\n                    }).attr('selected', true);\r\n                }\r\n\r\n                if (this.options.isRegionRequired) {\r\n                    regionList.addClass('required-entry').removeAttr('disabled');\r\n                    container.addClass('required').show();\r\n                } else {\r\n                    regionList.removeClass('required-entry validate-select').removeAttr('data-validate');\r\n                    container.removeClass('required');\r\n\r\n                    if (!this.options.optionalRegionAllowed) { //eslint-disable-line max-depth\r\n                        regionList.hide();\r\n                        container.hide();\r\n                    } else {\r\n                        regionList.removeAttr('disabled').show();\r\n                    }\r\n                }\r\n\r\n                regionList.show();\r\n                regionInput.hide();\r\n                label.attr('for', regionList.attr('id'));\r\n            } else {\r\n                this._removeSelectOptions(regionList);\r\n\r\n                if (this.options.isRegionRequired) {\r\n                    regionInput.addClass('required-entry').removeAttr('disabled');\r\n                    container.addClass('required').show();\r\n                } else {\r\n                    if (!this.options.optionalRegionAllowed) { //eslint-disable-line max-depth\r\n                        regionInput.attr('disabled', 'disabled');\r\n                        container.hide();\r\n                    }\r\n                    container.removeClass('required');\r\n                    regionInput.removeClass('required-entry');\r\n                }\r\n\r\n                regionList.removeClass('required-entry').prop('disabled', 'disabled').hide();\r\n                regionInput.show();\r\n                label.attr('for', regionInput.attr('id'));\r\n            }\r\n\r\n            // If country is in optionalzip list, make postcode input not required\r\n            if (this.options.isZipRequired) {\r\n                $.inArray(country, this.options.countriesWithOptionalZip) >= 0 ?\r\n                    postcode.removeClass('required-entry').closest('.field').removeClass('required') :\r\n                    postcode.addClass('required-entry').closest('.field').addClass('required');\r\n            }\r\n\r\n            // Add defaultvalue attribute to state/province select element\r\n            regionList.attr('defaultvalue', this.options.defaultRegion);\r\n            this.options.form.find('[type=\"submit\"]').removeAttr('disabled').show();\r\n        },\r\n\r\n        /**\r\n         * Check if the selected country has a mandatory region selection\r\n         *\r\n         * @param {String} country - Code of the country - 2 uppercase letter for country code\r\n         * @private\r\n         */\r\n        _checkRegionRequired: function (country) {\r\n            var self = this;\r\n\r\n            this.options.isRegionRequired = false;\r\n            $.each(this.options.regionJson.config['regions_required'], function (index, elem) {\r\n                if (elem === country) {\r\n                    self.options.isRegionRequired = true;\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.directoryRegionUpdater;\r\n});\r\n","Magento_Downloadable/js/downloadable.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'Magento_Catalog/js/price-box'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Downloadable widget\r\n     */\r\n    $.widget('mage.downloadable', {\r\n        options: {\r\n            priceHolderSelector: '.price-box',\r\n            linkElement: '',\r\n            allElements: ''\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        _init: function initLinks() {\r\n            var element = this.element,\r\n                options = $(this.options.linkElement, element);\r\n\r\n            options.trigger('change');\r\n        },\r\n\r\n        /**\r\n         *  @inheritdoc\r\n         */\r\n        _create: function () {\r\n            var self = this;\r\n\r\n            this.element.find(this.options.linkElement).on('change', $.proxy(function () {\r\n                this._reloadPrice();\r\n            }, this));\r\n\r\n            this.element.find(this.options.allElements).on('change', function () {\r\n                if (this.checked) {\r\n                    $('label[for=\"' + this.id + '\"] > span').text($(this).attr('data-checked'));\r\n                    self.element.find(self.options.linkElement + ':not(:checked)').each(function () {\r\n                        $(this).trigger('click');\r\n                    });\r\n                } else {\r\n                    $('[for=\"' + this.id + '\"] > span').text($(this).attr('data-notchecked'));\r\n                    self.element.find(self.options.linkElement + ':checked').each(function () {\r\n                        $(this).trigger('click');\r\n                    });\r\n                }\r\n            });\r\n\r\n            this._reloadPrice();\r\n        },\r\n\r\n        /**\r\n         * Reload product price with selected link price included\r\n         * @private\r\n         */\r\n        _reloadPrice: function () {\r\n            var finalPrice = 0,\r\n                basePrice = 0;\r\n\r\n            this.element.find(this.options.linkElement + ':checked').each($.proxy(function (index, element) {\r\n                finalPrice += this.options.config.links[$(element).val()].finalPrice;\r\n                basePrice += this.options.config.links[$(element).val()].basePrice;\r\n            }, this));\r\n\r\n            $(this.options.priceHolderSelector).trigger('updatePrice', {\r\n                'prices': {\r\n                    'finalPrice': {\r\n                        'amount': finalPrice\r\n                    },\r\n                    'basePrice': {\r\n                        'amount': basePrice\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.reloadAllCheckText();\r\n        },\r\n\r\n        /**\r\n         * Reload all-elements-checkbox's label\r\n         * @private\r\n         */\r\n        reloadAllCheckText: function () {\r\n            var allChecked = true,\r\n                allElementsCheck = $(this.options.allElements),\r\n                allElementsLabel = $('label[for=\"' + allElementsCheck.attr('id') + '\"] > span');\r\n\r\n            $(this.options.linkElement).each(function () {\r\n                if (!this.checked) {\r\n                    allChecked = false;\r\n                }\r\n            });\r\n\r\n            if (allChecked) {\r\n                allElementsLabel.text(allElementsCheck.attr('data-checked'));\r\n                allElementsCheck.prop('checked', true);\r\n            } else {\r\n                allElementsLabel.text(allElementsCheck.attr('data-notchecked'));\r\n                allElementsCheck.prop('checked', false);\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.downloadable;\r\n});\r\n","Magento_Fedex/js/model/shipping-rates-validation-rules.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getRules: function () {\r\n            return {\r\n                'postcode': {\r\n                    'required': true\r\n                },\r\n                'country_id': {\r\n                    'required': true\r\n                },\r\n                'city': {\r\n                    'required': true\r\n                }\r\n            };\r\n        }\r\n    };\r\n});\r\n","Magento_Fedex/js/model/shipping-rates-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mageUtils',\r\n    'Magento_Fedex/js/model/shipping-rates-validation-rules',\r\n    'mage/translate'\r\n], function ($, utils, validationRules, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        validationErrors: [],\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {Boolean}\r\n         */\r\n        validate: function (address) {\r\n            var self = this;\r\n\r\n            this.validationErrors = [];\r\n            $.each(validationRules.getRules(), function (field, rule) {\r\n                var message;\r\n\r\n                if (rule.required && utils.isEmpty(address[field])) {\r\n                    message = $t('Field ') + field + $t(' is required.');\r\n\r\n                    self.validationErrors.push(message);\r\n                }\r\n            });\r\n\r\n            return !this.validationErrors.length;\r\n        }\r\n    };\r\n});\r\n","Magento_Fedex/js/view/shipping-rates-validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/shipping-rates-validator',\r\n    'Magento_Checkout/js/model/shipping-rates-validation-rules',\r\n    'Magento_Fedex/js/model/shipping-rates-validator',\r\n    'Magento_Fedex/js/model/shipping-rates-validation-rules'\r\n], function (\r\n    Component,\r\n    defaultShippingRatesValidator,\r\n    defaultShippingRatesValidationRules,\r\n    fedexShippingRatesValidator,\r\n    fedexShippingRatesValidationRules\r\n) {\r\n    'use strict';\r\n\r\n    defaultShippingRatesValidator.registerValidator('fedex', fedexShippingRatesValidator);\r\n    defaultShippingRatesValidationRules.registerRules('fedex', fedexShippingRatesValidationRules);\r\n\r\n    return Component;\r\n});\r\n","Magento_GiftMessage/js/gift-options.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.giftOptions', {\r\n        options: {\r\n            mageError: 'mage-error',\r\n            noDisplay: 'no-display',\r\n            requiredEntry: 'required-entry'\r\n        },\r\n\r\n        /**\r\n         * Initial toggle of the various gift options after widget instantiation.\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            this._toggleVisibility();\r\n        },\r\n\r\n        /**\r\n         * Bind a click handler to the widget's context element.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('click', $.proxy(this._toggleVisibility, this));\r\n            $(this.element.data('selector').id).find('.giftmessage-area')\r\n                .on('change', $.proxy(this._toggleRequired, this));\r\n        },\r\n\r\n        /**\r\n         * Toggle the visibility of the widget's context element's selector(s).\r\n         * @private\r\n         * @param {jQuery.Event} event - Click event. Target is a checkbox.\r\n         */\r\n        _toggleVisibility: function (event) {\r\n            var checkbox = event ? $(event.target) : this.element,\r\n                container = $(checkbox.data('selector').id),\r\n                _this;\r\n\r\n            if (checkbox.is(':checked')) {\r\n                container.show()\r\n                    .find('.giftmessage-area:not(:visible)').each(function (x, element) {\r\n                        if ($(element).val().length > 0) {\r\n                            $(element).trigger('change');\r\n                            container.find('a').trigger('click');\r\n                        }\r\n                    });\r\n            } else {\r\n                _this = this;\r\n                container.hide()\r\n                    .find('.input-text:not(.giftmessage-area)').each(function (x, element) {\r\n                        $(element).val(element.defaultValue).removeClass(_this.options.mageError)\r\n                            .next('div.' + _this.options.mageError).remove();\r\n                    }).end()\r\n                    .find('.giftmessage-area').val('').change().end()\r\n                    .find('.select').val('').change().end()\r\n                    .find('.checkbox:checked').prop('checked', false).trigger('click').prop('checked', false).end()\r\n                    .find('.price-box').addClass(this.options.noDisplay).end();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make the From and To input fields required if a gift message has been written.\r\n         * @private\r\n         * @param {jQuery.Event} event - Change event. Target is a textarea.\r\n         */\r\n        _toggleRequired: function (event) {\r\n            var textArea = $(event.target),\r\n                length = textArea.val().length;\r\n\r\n            textArea.closest('li').prev('.fields')\r\n                .find('.input-text').toggleClass(this.options.requiredEntry, length > 0);\r\n        }\r\n    });\r\n\r\n    return $.mage.giftOptions;\r\n});\r\n","Magento_GiftMessage/js/action/gift-options.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_GiftMessage/js/model/url-builder',\r\n    'mage/storage',\r\n    'Magento_Ui/js/model/messageList',\r\n    'Magento_Checkout/js/model/error-processor',\r\n    'mage/url',\r\n    'Magento_Checkout/js/model/quote',\r\n    'underscore'\r\n], function (urlBuilder, storage, messageList, errorProcessor, url, quote, _) {\r\n    'use strict';\r\n\r\n    return function (giftMessage, remove) {\r\n        var serviceUrl;\r\n\r\n        url.setBaseUrl(giftMessage.getConfigValue('baseUrl'));\r\n\r\n        if (giftMessage.getConfigValue('isCustomerLoggedIn')) {\r\n            serviceUrl = urlBuilder.createUrl('/carts/mine/gift-message', {});\r\n\r\n            if (giftMessage.itemId != 'orderLevel') { //eslint-disable-line eqeqeq\r\n                serviceUrl = urlBuilder.createUrl('/carts/mine/gift-message/:itemId', {\r\n                    itemId: giftMessage.itemId\r\n                });\r\n            }\r\n        } else {\r\n            serviceUrl = urlBuilder.createUrl('/guest-carts/:cartId/gift-message', {\r\n                cartId: quote.getQuoteId()\r\n            });\r\n\r\n            if (giftMessage.itemId != 'orderLevel') { //eslint-disable-line eqeqeq\r\n                serviceUrl = urlBuilder.createUrl(\r\n                    '/guest-carts/:cartId/gift-message/:itemId',\r\n                    {\r\n                        cartId: quote.getQuoteId(), itemId: giftMessage.itemId\r\n                    }\r\n                );\r\n            }\r\n        }\r\n        messageList.clear();\r\n\r\n        storage.post(\r\n            serviceUrl,\r\n            JSON.stringify({\r\n                'gift_message': giftMessage.getSubmitParams(remove)\r\n            })\r\n        ).done(function () {\r\n            giftMessage.reset();\r\n            _.each(giftMessage.getAfterSubmitCallbacks(), function (callback) {\r\n                if (_.isFunction(callback)) {\r\n                    callback();\r\n                }\r\n            });\r\n        }).fail(function (response) {\r\n            errorProcessor.process(response);\r\n        });\r\n    };\r\n});\r\n","Magento_GiftMessage/js/model/gift-message.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'uiElement',\r\n    'underscore',\r\n    'mage/url'\r\n], function (uiElement, _, url) {\r\n    'use strict';\r\n\r\n    var provider = uiElement();\r\n\r\n    return function (itemId) {\r\n        var model = {\r\n            id: 'message-' + itemId,\r\n            itemId: itemId,\r\n            observables: {},\r\n            additionalOptions: [],\r\n            submitParams: [\r\n                'recipient',\r\n                'sender',\r\n                'message'\r\n            ],\r\n\r\n            /**\r\n             * Initialize.\r\n             */\r\n            initialize: function () {\r\n                var message = false;\r\n\r\n                this.getObservable('alreadyAdded')(false);\r\n\r\n                if (this.itemId == 'orderLevel') { //eslint-disable-line eqeqeq\r\n                    message = window.giftOptionsConfig.giftMessage.hasOwnProperty(this.itemId) ?\r\n                        window.giftOptionsConfig.giftMessage[this.itemId] :\r\n                        null;\r\n                } else {\r\n                    message =\r\n                        window.giftOptionsConfig.giftMessage.hasOwnProperty('itemLevel') &&\r\n                        window.giftOptionsConfig.giftMessage.itemLevel.hasOwnProperty(this.itemId) ?\r\n                            window.giftOptionsConfig.giftMessage.itemLevel[this.itemId].message :\r\n                            null;\r\n                }\r\n\r\n                if (_.isObject(message)) {\r\n                    this.getObservable('recipient')(message.recipient);\r\n                    this.getObservable('sender')(message.sender);\r\n                    this.getObservable('message')(message.message);\r\n                    this.getObservable('alreadyAdded')(true);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {String} key\r\n             * @return {*}\r\n             */\r\n            getObservable: function (key) {\r\n                this.initObservable(this.id, key);\r\n\r\n                return provider[this.getUniqueKey(this.id, key)];\r\n            },\r\n\r\n            /**\r\n             * @param {String} node\r\n             * @param {String} key\r\n             */\r\n            initObservable: function (node, key) {\r\n                if (node && !this.observables.hasOwnProperty(node)) {\r\n                    this.observables[node] = [];\r\n                }\r\n\r\n                if (key && this.observables[node].indexOf(key) === -1) {\r\n                    this.observables[node].push(key);\r\n                    provider.observe(this.getUniqueKey(node, key));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @param {String} node\r\n             * @param {String} key\r\n             * @return {String}\r\n             */\r\n            getUniqueKey: function (node, key) {\r\n                return node + '-' + key;\r\n            },\r\n\r\n            /**\r\n             * @param {String} key\r\n             * @return {null}\r\n             */\r\n            getConfigValue: function (key) {\r\n                return window.giftOptionsConfig.hasOwnProperty(key) ?\r\n                    window.giftOptionsConfig[key]\r\n                    : null;\r\n            },\r\n\r\n            /**\r\n             * Reset.\r\n             */\r\n            reset: function () {\r\n                this.getObservable('isClear')(true);\r\n            },\r\n\r\n            /**\r\n             * @return {Array}\r\n             */\r\n            getAfterSubmitCallbacks: function () {\r\n                var callbacks = [];\r\n\r\n                callbacks.push(this.afterSubmit);\r\n                _.each(this.additionalOptions, function (option) {\r\n                    if (_.isFunction(option.afterSubmit)) {\r\n                        callbacks.push(option.afterSubmit);\r\n                    }\r\n                });\r\n\r\n                return callbacks;\r\n            },\r\n\r\n            /**\r\n             * After submit.\r\n             */\r\n            afterSubmit: function () {\r\n                window.location.href = url.build('checkout/cart/updatePost') +\r\n                    '?form_key=' + window.checkoutConfig.formKey +\r\n                    '&cart[]';\r\n            },\r\n\r\n            /**\r\n             * @param {Boolean} remove\r\n             * @return {Object}\r\n             */\r\n            getSubmitParams: function (remove) {\r\n                var params = {},\r\n                    self = this;\r\n\r\n                _.each(this.submitParams, function (key) {\r\n                    var observable = provider[self.getUniqueKey(self.id, key)];\r\n\r\n                    if (_.isFunction(observable)) {\r\n                        params[key] = remove ? null : observable();\r\n                    }\r\n                });\r\n\r\n                if (this.additionalOptions.length) {\r\n                    params['extension_attributes'] = {};\r\n                }\r\n                _.each(this.additionalOptions, function (option) {\r\n                    if (_.isFunction(option.getSubmitParams)) {\r\n                        params['extension_attributes'] = _.extend(\r\n                            params['extension_attributes'],\r\n                            option.getSubmitParams(remove)\r\n                        );\r\n                    }\r\n                });\r\n\r\n                return params;\r\n            },\r\n\r\n            /**\r\n             * Check if gift message can be displayed\r\n             *\r\n             * @returns {Boolean}\r\n             */\r\n            isGiftMessageAvailable: function () {\r\n                var isGloballyAvailable,\r\n                    giftMessageConfig,\r\n                    itemConfig;\r\n\r\n                // itemId represent gift message level: 'orderLevel' constant or cart item ID\r\n                if (this.itemId === 'orderLevel') {\r\n                    return this.getConfigValue('isOrderLevelGiftOptionsEnabled');\r\n                }\r\n\r\n                // gift message product configuration must override system configuration\r\n                isGloballyAvailable = this.getConfigValue('isItemLevelGiftOptionsEnabled');\r\n                giftMessageConfig = window.giftOptionsConfig.giftMessage;\r\n                itemConfig = giftMessageConfig.hasOwnProperty('itemLevel') &&\r\n                    giftMessageConfig.itemLevel.hasOwnProperty(this.itemId) ?\r\n                    giftMessageConfig.itemLevel[this.itemId] :\r\n                    {};\r\n\r\n                return itemConfig.hasOwnProperty('is_available') ? itemConfig['is_available'] : isGloballyAvailable;\r\n            }\r\n        };\r\n\r\n        model.initialize();\r\n\r\n        return model;\r\n    };\r\n});\r\n","Magento_GiftMessage/js/model/gift-options.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'ko'\r\n], function (_, ko) {\r\n    'use strict';\r\n\r\n    return {\r\n        options: ko.observableArray([]),\r\n\r\n        /**\r\n         * @param {Object} option\r\n         */\r\n        addOption: function (option) {\r\n            if (!this.options().hasOwnProperty(option.itemId)) {\r\n                this.options.push({\r\n                        id: option.itemId, value: option\r\n                    }\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {*} itemId\r\n         * @return {*}\r\n         */\r\n        getOptionByItemId: function (itemId) {\r\n            var option = null;\r\n\r\n            _.each(this.options(), function (data) {\r\n                if (data.id === itemId) {\r\n                    option = data.value;\r\n\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return option;\r\n        }\r\n    };\r\n});\r\n","Magento_GiftMessage/js/model/url-builder.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Checkout/js/model/url-builder'\r\n], function ($, urlBuilder) {\r\n    'use strict';\r\n\r\n    return $.extend(urlBuilder, {\r\n        storeCode: window.giftOptionsConfig.storeCode\r\n    });\r\n});\r\n","Magento_GiftMessage/js/view/gift-message.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_GiftMessage/js/model/gift-message',\r\n    'Magento_GiftMessage/js/model/gift-options',\r\n    'Magento_GiftMessage/js/action/gift-options'\r\n], function (Component, GiftMessage, giftOptions, giftOptionsService) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        formBlockVisibility: null,\r\n        resultBlockVisibility: null,\r\n        model: {},\r\n\r\n        /**\r\n         * Component init\r\n         */\r\n        initialize: function () {\r\n            var self = this,\r\n                model;\r\n\r\n            this._super()\r\n                .observe('formBlockVisibility')\r\n                .observe({\r\n                    'resultBlockVisibility': false\r\n                });\r\n\r\n            this.itemId = this.itemId || 'orderLevel';\r\n            model = new GiftMessage(this.itemId);\r\n            this.model = model;\r\n            this.isResultBlockVisible();\r\n            giftOptions.addOption(model);\r\n\r\n            this.model.getObservable('isClear').subscribe(function (value) {\r\n                if (value == true) { //eslint-disable-line eqeqeq\r\n                    self.formBlockVisibility(false);\r\n                    self.model.getObservable('alreadyAdded')(true);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Is reslt block visible\r\n         */\r\n        isResultBlockVisible: function () {\r\n            var self = this;\r\n\r\n            if (this.model.getObservable('alreadyAdded')()) {\r\n                this.resultBlockVisibility(true);\r\n            }\r\n            this.model.getObservable('additionalOptionsApplied').subscribe(function (value) {\r\n                if (value == true) { //eslint-disable-line eqeqeq\r\n                    self.resultBlockVisibility(true);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {String} key\r\n         * @return {*}\r\n         */\r\n        getObservable: function (key) {\r\n            return this.model.getObservable(key);\r\n        },\r\n\r\n        /**\r\n         * Hide\\Show form block\r\n         */\r\n        toggleFormBlockVisibility: function () {\r\n            if (!this.model.getObservable('alreadyAdded')()) {\r\n                this.formBlockVisibility(!this.formBlockVisibility());\r\n            } else {\r\n                this.resultBlockVisibility(!this.resultBlockVisibility());\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Edit options\r\n         */\r\n        editOptions: function () {\r\n            this.resultBlockVisibility(false);\r\n            this.formBlockVisibility(true);\r\n        },\r\n\r\n        /**\r\n         * Delete options\r\n         */\r\n        deleteOptions: function () {\r\n            giftOptionsService(this.model, true);\r\n        },\r\n\r\n        /**\r\n         * Hide form block\r\n         */\r\n        hideFormBlock: function () {\r\n            this.formBlockVisibility(false);\r\n\r\n            if (this.model.getObservable('alreadyAdded')()) {\r\n                this.resultBlockVisibility(true);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        hasActiveOptions: function () {\r\n            var regionData = this.getRegion('additionalOptions'),\r\n                options = regionData(),\r\n                i;\r\n\r\n            for (i = 0; i < options.length; i++) {\r\n                if (options[i].isActive()) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        isActive: function () {\r\n            return this.model.isGiftMessageAvailable();\r\n        },\r\n\r\n        /**\r\n         * Submit options\r\n         */\r\n        submitOptions: function () {\r\n            giftOptionsService(this.model);\r\n        }\r\n    });\r\n});\r\n","Magento_GoogleAnalytics/js/google-analytics.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/* jscs:disable */\r\n/* eslint-disable */\r\ndefine([\r\n    'jquery',\r\n    'mage/cookies'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {Object} config\r\n     */\r\n    return function (config) {\r\n        var allowServices = false,\r\n            allowedCookies,\r\n            allowedWebsites;\r\n\r\n        if (config.isCookieRestrictionModeEnabled) {\r\n            allowedCookies = $.mage.cookies.get(config.cookieName);\r\n\r\n            if (allowedCookies !== null) {\r\n                allowedWebsites = JSON.parse(allowedCookies);\r\n\r\n                if (allowedWebsites[config.currentWebsite] === 1) {\r\n                    allowServices = true;\r\n                }\r\n            }\r\n        } else {\r\n            allowServices = true;\r\n        }\r\n\r\n        if (allowServices) {\r\n            (function (i, s, o, g, r, a, m) {\r\n                i.GoogleAnalyticsObject = r;\r\n                i[r] = i[r] || function () {\r\n                        (i[r].q = i[r].q || []).push(arguments)\r\n                    }, i[r].l = 1 * new Date();\r\n                a = s.createElement(o),\r\n                    m = s.getElementsByTagName(o)[0];\r\n                a.async = 1;\r\n                a.src = g;\r\n                m.parentNode.insertBefore(a, m)\r\n            })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');\r\n\r\n            // Process page info\r\n            ga('create', config.pageTrackingData.accountId, 'auto');\r\n\r\n            if (config.pageTrackingData.isAnonymizedIpActive) {\r\n                ga('set', 'anonymizeIp', true);\r\n            }\r\n\r\n            // Process orders data\r\n            if (config.ordersTrackingData.hasOwnProperty('currency')) {\r\n                ga('require', 'ec', 'ec.js');\r\n\r\n                ga('set', 'currencyCode', config.ordersTrackingData.currency);\r\n\r\n                // Collect product data for GA\r\n                if (config.ordersTrackingData.products) {\r\n                    $.each(config.ordersTrackingData.products, function (index, value) {\r\n                        ga('ec:addProduct', value);\r\n                    });\r\n                }\r\n\r\n                // Collect orders data for GA\r\n                if (config.ordersTrackingData.orders) {\r\n                    $.each(config.ordersTrackingData.orders, function (index, value) {\r\n                        ga('ec:setAction', 'purchase', value);\r\n                    });\r\n                }\r\n\r\n                ga('send', 'pageview');\r\n            } else {\r\n                // Process Data if not orders\r\n                ga('send', 'pageview' + config.pageTrackingData.optPageUrl);\r\n            }\r\n        }\r\n    }\r\n});\r\n","Magento_GroupedProduct/js/product-ids-resolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Catalog/js/product/view/product-ids',\r\n    'Magento_Catalog/js/product/view/product-info'\r\n], function ($, productIds, productInfo) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns id's of products in form.\r\n     *\r\n     * @param {Object} config\r\n     * @param {HTMLElement} element\r\n     * @return {Array}\r\n     */\r\n    return function (config, element) {\r\n        $(element).find('div[data-product-id]').each(function () {\r\n            productIds.push($(this).data('productId').toString());\r\n            productInfo.push(\r\n                {\r\n                    'id': $(this).data('productId').toString()\r\n                }\r\n            );\r\n        });\r\n\r\n        return productIds();\r\n    };\r\n});\r\n","Magento_InstantPurchase/js/view/instant-purchase.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    'uiComponent',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'Magento_Customer/js/customer-data',\r\n    'mage/url',\r\n    'mage/template',\r\n    'mage/translate',\r\n    'text!Magento_InstantPurchase/template/confirmation.html',\r\n    'mage/validation'\r\n], function (ko, $, _, Component, confirm, customerData, urlBuilder, mageTemplate, $t, confirmationTemplate) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_InstantPurchase/instant-purchase',\r\n            buttonText: $t('Instant Purchase'),\r\n            purchaseUrl: urlBuilder.build('instantpurchase/button/placeOrder'),\r\n            showButton: false,\r\n            paymentToken: null,\r\n            shippingAddress: null,\r\n            billingAddress: null,\r\n            shippingMethod: null,\r\n            productFormSelector: '#product_addtocart_form',\r\n            confirmationTitle: $t('Instant Purchase Confirmation'),\r\n            confirmationData: {\r\n                message: $t('Are you sure you want to place order and pay?'),\r\n                shippingAddressTitle: $t('Shipping Address'),\r\n                billingAddressTitle: $t('Billing Address'),\r\n                paymentMethodTitle: $t('Payment Method'),\r\n                shippingMethodTitle: $t('Shipping Method')\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            var instantPurchase = customerData.get('instant-purchase');\r\n\r\n            this._super();\r\n\r\n            this.setPurchaseData(instantPurchase());\r\n            instantPurchase.subscribe(this.setPurchaseData, this);\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('showButton paymentToken shippingAddress billingAddress shippingMethod');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set data from customerData.\r\n         *\r\n         * @param {Object} data\r\n         */\r\n        setPurchaseData: function (data) {\r\n            this.showButton(data.available);\r\n            this.paymentToken(data.paymentToken);\r\n            this.shippingAddress(data.shippingAddress);\r\n            this.billingAddress(data.billingAddress);\r\n            this.shippingMethod(data.shippingMethod);\r\n        },\r\n\r\n        /**\r\n         * Confirmation method\r\n         */\r\n        instantPurchase: function () {\r\n            var form = $(this.productFormSelector),\r\n                confirmTemplate = mageTemplate(confirmationTemplate),\r\n                confirmData = _.extend({}, this.confirmationData, {\r\n                    paymentToken: this.paymentToken().summary,\r\n                    shippingAddress: this.shippingAddress().summary,\r\n                    billingAddress: this.billingAddress().summary,\r\n                    shippingMethod: this.shippingMethod().summary\r\n                });\r\n\r\n            if (!(form.validation() && form.validation('isValid'))) {\r\n                return;\r\n            }\r\n\r\n            confirm({\r\n                title: this.confirmationTitle,\r\n                content: confirmTemplate({\r\n                    data: confirmData\r\n                }),\r\n                actions: {\r\n                    /** @inheritdoc */\r\n                    confirm: function () {\r\n                        $.ajax({\r\n                            url: this.purchaseUrl,\r\n                            data: form.serialize(),\r\n                            type: 'post',\r\n                            dataType: 'json',\r\n\r\n                            /** Show loader before send */\r\n                            beforeSend: function () {\r\n                                $('body').trigger('processStart');\r\n                            }\r\n                        }).always(function () {\r\n                            $('body').trigger('processStop');\r\n                        });\r\n                    }.bind(this)\r\n                }\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_LoginAsCustomerAssistance/js/opt-in.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (config, element) {\r\n        $(element).on('submit', function () {\r\n            this.elements['assistance_allowed'].value =\r\n                this.elements['assistance_allowed_checkbox'].checked ?\r\n                    config.allowAccess : config.denyAccess;\r\n        });\r\n    };\r\n});\r\n","Magento_LoginAsCustomerFrontendUi/js/login.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Customer/js/section-config'\r\n], function ($, customerData, sectionConfig) {\r\n\r\n    'use strict';\r\n\r\n    return function (config) {\r\n        customerData.reload(sectionConfig.getSectionNames()).done(function () {\r\n            window.location.href = config.redirectUrl;\r\n        });\r\n    };\r\n});\r\n","Magento_LoginAsCustomerFrontendUi/js/view/loginAsCustomer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data',\r\n    'mage/translate'\r\n], function ($, _, Component, customer) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n        defaults: {\r\n            isVisible: false\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            var customerData, loggedAsCustomerData;\r\n\r\n            this._super();\r\n\r\n            customerData = customer.get('customer');\r\n            loggedAsCustomerData = customer.get('loggedAsCustomer');\r\n\r\n            customerData.subscribe(function (data) {\r\n                this.fullname = data.fullname;\r\n                this.updateBanner();\r\n            }.bind(this));\r\n            loggedAsCustomerData.subscribe(function (data) {\r\n                this.adminUserId = data.adminUserId;\r\n                this.websiteName = data.websiteName;\r\n                this.updateBanner();\r\n            }.bind(this));\r\n\r\n            this.fullname = customerData().fullname;\r\n            this.adminUserId = loggedAsCustomerData().adminUserId;\r\n            this.websiteName = loggedAsCustomerData().websiteName;\r\n\r\n            this.updateBanner();\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe(['isVisible', 'notificationText']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Update banner area\r\n         *\r\n         * @returns void\r\n         */\r\n        updateBanner: function () {\r\n            if (this.adminUserId !== undefined) {\r\n                this.isVisible(this.adminUserId);\r\n            }\r\n\r\n            if (this.fullname !== undefined && this.websiteName !== undefined) {\r\n                this.notificationText($.mage.__('You are connected as <strong>%1</strong> on %2')\r\n                    .replace('%1', _.escape(this.fullname))\r\n                    .replace('%2', _.escape(this.websiteName)));\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Msrp/js/msrp.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Catalog/js/price-utils',\r\n    'underscore',\r\n    'jquery-ui-modules/widget',\r\n    'mage/dropdown',\r\n    'mage/template'\r\n], function ($, priceUtils, _) {\r\n    'use strict';\r\n\r\n    $.widget('mage.addToCart', {\r\n        options: {\r\n            showAddToCart: true,\r\n            submitUrl: '',\r\n            cartButtonId: '',\r\n            singleOpenDropDown: true,\r\n            dialog: {}, // Options for mage/dropdown\r\n            dialogDelay: 500, // Delay in ms after resize dropdown shown again\r\n            origin: '', //Required, type of popup: 'msrp', 'tier' or 'info' popup\r\n\r\n            // Selectors\r\n            cartForm: '.form.map.checkout',\r\n            msrpLabelId: '#map-popup-msrp',\r\n            msrpPriceElement: '#map-popup-msrp .price-wrapper',\r\n            priceLabelId: '#map-popup-price',\r\n            priceElement: '#map-popup-price .price',\r\n            mapInfoLinks: '.map-show-info',\r\n            displayPriceElement: '.old-price.map-old-price .price-wrapper',\r\n            fallbackPriceElement: '.normal-price.map-fallback-price .price-wrapper',\r\n            displayPriceContainer: '.old-price.map-old-price',\r\n            fallbackPriceContainer: '.normal-price.map-fallback-price',\r\n            popUpAttr: '[data-role=msrp-popup-template]',\r\n            popupCartButtonId: '#map-popup-button',\r\n            paypalCheckoutButons: '[data-action=checkout-form-submit]',\r\n            popupId: '',\r\n            realPrice: '',\r\n            isSaleable: '',\r\n            msrpPrice: '',\r\n            helpLinkId: '',\r\n            addToCartButton: '',\r\n\r\n            // Text options\r\n            productName: '',\r\n            addToCartUrl: ''\r\n        },\r\n\r\n        openDropDown: null,\r\n        triggerClass: 'dropdown-active',\r\n\r\n        popUpOptions: {\r\n            appendTo: 'body',\r\n            dialogContentClass: 'active',\r\n            closeOnMouseLeave: false,\r\n            autoPosition: true,\r\n            closeOnClickOutside: false,\r\n            'dialogClass': 'popup map-popup-wrapper',\r\n            position: {\r\n                my: 'left top',\r\n                collision: 'fit none',\r\n                at: 'left bottom',\r\n                within: 'body'\r\n            },\r\n            shadowHinter: 'popup popup-pointer'\r\n        },\r\n        popupOpened: false,\r\n        wasOpened: false,\r\n\r\n        /**\r\n         * Creates widget instance\r\n         *\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            if (this.options.origin === 'msrp') {\r\n                this.initMsrpPopup();\r\n            } else if (this.options.origin === 'info') {\r\n                this.initInfoPopup();\r\n            } else if (this.options.origin === 'tier') {\r\n                this.initTierPopup();\r\n            }\r\n            $(this.options.cartButtonId).on('click', this._addToCartSubmit.bind(this));\r\n            $(document).on('updateMsrpPriceBlock', this.onUpdateMsrpPrice.bind(this));\r\n            $(this.options.cartForm).on('submit', this._onSubmitForm.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Init msrp popup\r\n         *\r\n         * @private\r\n         */\r\n        initMsrpPopup: function () {\r\n            var popupDOM = $(this.options.popUpAttr)[0],\r\n                $msrpPopup = $(popupDOM.innerHTML.trim());\r\n\r\n            $msrpPopup.find(this.options.productIdInput).val(this.options.productId);\r\n            $('body').append($msrpPopup);\r\n            $msrpPopup.trigger('contentUpdated');\r\n\r\n            $msrpPopup.find('button')\r\n                .on('click',\r\n                    this.handleMsrpAddToCart.bind(this))\r\n                .filter(this.options.popupCartButtonId)\r\n                .text($(this.options.addToCartButton).text());\r\n\r\n            $msrpPopup.find(this.options.paypalCheckoutButons).on('click',\r\n                this.handleMsrpPaypalCheckout.bind(this));\r\n\r\n            $(this.options.popupId).on('click',\r\n                this.openPopup.bind(this));\r\n\r\n            this.$popup = $msrpPopup;\r\n        },\r\n\r\n        /**\r\n         * Init info popup\r\n         *\r\n         * @private\r\n         */\r\n        initInfoPopup: function () {\r\n            var infoPopupDOM = $('[data-role=msrp-info-template]')[0],\r\n                $infoPopup = $(infoPopupDOM.innerHTML.trim());\r\n\r\n            $('body').append($infoPopup);\r\n\r\n            $(this.options.helpLinkId).on('click', function (e) {\r\n                this.popUpOptions.position.of = $(e.target);\r\n                $infoPopup.dropdownDialog(this.popUpOptions).dropdownDialog('open');\r\n                this._toggle($infoPopup);\r\n            }.bind(this));\r\n\r\n            this.$popup = $infoPopup;\r\n        },\r\n\r\n        /**\r\n         * Init tier price popup\r\n         * @private\r\n         */\r\n        initTierPopup: function () {\r\n            var popupDOM = $(this.options.popUpAttr)[0],\r\n                $tierPopup = $(popupDOM.innerHTML.trim());\r\n\r\n            $('body').append($tierPopup);\r\n            $tierPopup.find(this.options.productIdInput).val(this.options.productId);\r\n            this.popUpOptions.position.of = $(this.options.helpLinkId);\r\n\r\n            $tierPopup.find('button').on('click',\r\n                this.handleTierAddToCart.bind(this))\r\n                .filter(this.options.popupCartButtonId)\r\n                .text($(this.options.addToCartButton).text());\r\n\r\n            $tierPopup.find(this.options.paypalCheckoutButons).on('click',\r\n                this.handleTierPaypalCheckout.bind(this));\r\n\r\n            $(this.options.attr).on('click', function (e) {\r\n                this.$popup = $tierPopup;\r\n                this.tierOptions = $(e.target).data('tier-price');\r\n                this.openPopup(e);\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * handle 'AddToCart' click on Msrp popup\r\n         * @param {Object} ev\r\n         *\r\n         * @private\r\n         */\r\n        handleMsrpAddToCart: function (ev) {\r\n            ev.preventDefault();\r\n\r\n            if (this.options.addToCartButton) {\r\n                $(this.options.addToCartButton).trigger('click');\r\n                this.closePopup(this.$popup);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * handle 'paypal checkout buttons' click on Msrp popup\r\n         *\r\n         * @private\r\n         */\r\n        handleMsrpPaypalCheckout: function () {\r\n            this.closePopup(this.$popup);\r\n        },\r\n\r\n        /**\r\n         * handle 'AddToCart' click on Tier popup\r\n         *\r\n         * @param {Object} ev\r\n         * @private\r\n         */\r\n        handleTierAddToCart: function (ev) {\r\n            ev.preventDefault();\r\n\r\n            if (this.options.addToCartButton &&\r\n                this.options.inputQty && !isNaN(this.tierOptions.qty)\r\n            ) {\r\n                $(this.options.inputQty).val(this.tierOptions.qty);\r\n                $(this.options.addToCartButton).trigger('click');\r\n                this.closePopup(this.$popup);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * handle 'paypal checkout buttons' click on Tier popup\r\n         *\r\n         * @private\r\n         */\r\n        handleTierPaypalCheckout: function () {\r\n            if (this.options.inputQty && !isNaN(this.tierOptions.qty)\r\n            ) {\r\n                $(this.options.inputQty).val(this.tierOptions.qty);\r\n                this.closePopup(this.$popup);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Open and set up popup\r\n         *\r\n         * @param {Object} event\r\n         */\r\n        openPopup: function (event) {\r\n            var options = this.tierOptions || this.options;\r\n\r\n            this.popUpOptions.position.of = $(event.target);\r\n\r\n            if (!this.wasOpened) {\r\n                this.$popup.find(this.options.msrpLabelId).html(options.msrpPrice);\r\n                this.$popup.find(this.options.priceLabelId).html(options.realPrice);\r\n                this.wasOpened = true;\r\n            }\r\n            this.$popup.dropdownDialog(this.popUpOptions).dropdownDialog('open');\r\n            this._toggle(this.$popup);\r\n\r\n            if (!this.options.isSaleable) {\r\n                this.$popup.find('form').hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggle MAP popup visibility\r\n         *\r\n         * @param {HTMLElement} $elem\r\n         * @private\r\n         */\r\n        _toggle: function ($elem) {\r\n            $(document).on('mouseup.msrp touchend.msrp', function (e) {\r\n                if (!$elem.is(e.target) && $elem.has(e.target).length === 0) {\r\n                    this.closePopup($elem);\r\n                }\r\n            }.bind(this));\r\n            $(window).on('resize', function () {\r\n                this.closePopup($elem);\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Close MAP information popup\r\n         *\r\n         * @param {HTMLElement} $elem\r\n         */\r\n        closePopup: function ($elem) {\r\n            $elem.dropdownDialog('close');\r\n            $(document).off('mouseup.msrp touchend.msrp');\r\n        },\r\n\r\n        /**\r\n         * Handler for addToCart action\r\n         *\r\n         * @param {Object} e\r\n         */\r\n        _addToCartSubmit: function (e) {\r\n            this.element.trigger('addToCart', this.element);\r\n\r\n            if (this.element.data('stop-processing')) {\r\n                return false;\r\n            }\r\n\r\n            if (this.options.addToCartButton) {\r\n                $(this.options.addToCartButton).trigger('click');\r\n\r\n                return false;\r\n            }\r\n\r\n            if (this.options.addToCartUrl) {\r\n                $('.mage-dropdown-dialog > .ui-dialog-content').dropdownDialog('close');\r\n            }\r\n\r\n            e.preventDefault();\r\n            $(this.options.cartForm).trigger('submit');\r\n        },\r\n\r\n        /**\r\n         * Call on event updatePrice. Proxy to updateMsrpPrice method.\r\n         *\r\n         * @param {Event} event\r\n         * @param {mixed} priceIndex\r\n         * @param {Object} prices\r\n         * @param {Object|undefined} $priceBox\r\n         */\r\n        onUpdateMsrpPrice: function onUpdateMsrpPrice(event, priceIndex, prices, $priceBox) {\r\n\r\n            var defaultMsrp,\r\n                defaultPrice,\r\n                msrpPrice,\r\n                finalPrice;\r\n\r\n            defaultMsrp = _.chain(prices).map(function (price) {\r\n                return price.msrpPrice.amount;\r\n            }).reject(function (p) {\r\n                return p === null;\r\n            }).max().value();\r\n\r\n            defaultPrice = _.chain(prices).map(function (p) {\r\n                return p.finalPrice.amount;\r\n            }).min().value();\r\n\r\n            if (typeof priceIndex !== 'undefined') {\r\n                msrpPrice = prices[priceIndex].msrpPrice.amount;\r\n                finalPrice = prices[priceIndex].finalPrice.amount;\r\n\r\n                if (msrpPrice === null || msrpPrice <= finalPrice) {\r\n                    this.updateNonMsrpPrice(priceUtils.formatPrice(finalPrice), $priceBox);\r\n                } else {\r\n                    this.updateMsrpPrice(\r\n                        priceUtils.formatPrice(finalPrice),\r\n                        priceUtils.formatPrice(msrpPrice),\r\n                        false,\r\n                        $priceBox);\r\n                }\r\n            } else {\r\n                this.updateMsrpPrice(\r\n                    priceUtils.formatPrice(defaultPrice),\r\n                    priceUtils.formatPrice(defaultMsrp),\r\n                    true,\r\n                    $priceBox);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update prices for configurable product with MSRP enabled\r\n         *\r\n         * @param {String} finalPrice\r\n         * @param {String} msrpPrice\r\n         * @param {Boolean} useDefaultPrice\r\n         * @param {Object|undefined} $priceBox\r\n         */\r\n        updateMsrpPrice: function (finalPrice, msrpPrice, useDefaultPrice, $priceBox) {\r\n            var options = this.tierOptions || this.options;\r\n\r\n            $(this.options.fallbackPriceContainer, $priceBox).hide();\r\n            $(this.options.displayPriceContainer, $priceBox).show();\r\n            $(this.options.mapInfoLinks, $priceBox).show();\r\n\r\n            if (useDefaultPrice || !this.wasOpened) {\r\n                if (this.$popup) {\r\n                    this.$popup.find(this.options.msrpLabelId).html(options.msrpPrice);\r\n                    this.$popup.find(this.options.priceLabelId).html(options.realPrice);\r\n                }\r\n\r\n                $(this.options.displayPriceElement, $priceBox).html(msrpPrice);\r\n                this.wasOpened = true;\r\n            }\r\n\r\n            if (!useDefaultPrice) {\r\n                this.$popup.find(this.options.msrpPriceElement).html(msrpPrice);\r\n                this.$popup.find(this.options.priceElement).html(finalPrice);\r\n                $(this.options.displayPriceElement, $priceBox).html(msrpPrice);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Display non MAP price for irrelevant products\r\n         *\r\n         * @param {String} price\r\n         * @param {Object|undefined} $priceBox\r\n         */\r\n        updateNonMsrpPrice: function (price, $priceBox) {\r\n            $(this.options.fallbackPriceElement, $priceBox).html(price);\r\n            $(this.options.displayPriceContainer, $priceBox).hide();\r\n            $(this.options.mapInfoLinks, $priceBox).hide();\r\n            $(this.options.fallbackPriceContainer, $priceBox).show();\r\n        },\r\n\r\n        /**\r\n         * Handler for submit form\r\n         *\r\n         * @private\r\n         */\r\n        _onSubmitForm: function () {\r\n            if ($(this.options.cartForm).valid()) {\r\n                $(this.options.cartButtonId).prop('disabled', true);\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return $.mage.addToCart;\r\n});\r\n","Magento_Msrp/js/product/list/columns/msrp-price.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'Magento_Catalog/js/product/list/columns/price-box',\r\n    'Magento_Catalog/js/product/addtocart-button',\r\n    'mage/dropdown'\r\n], function ($, _, PriceBox) {\r\n    'use strict';\r\n\r\n    return PriceBox.extend({\r\n        defaults: {\r\n            priceBoxSelector: '[data-role=msrp-price-box]',\r\n            popupTmpl: 'Magento_Msrp/product/item/popup',\r\n            popupTriggerSelector: '[data-role=msrp-popup-trigger]',\r\n            popupSelector: '[data-role=msrp-popup]',\r\n            popupOptions: {\r\n                appendTo: 'body',\r\n                dialogContentClass: 'active',\r\n                closeOnMouseLeave: false,\r\n                autoPosition: true,\r\n                dialogClass: 'popup map-popup-wrapper',\r\n                position: {\r\n                    my: 'left top',\r\n                    collision: 'fit none',\r\n                    at: 'left bottom',\r\n                    within: 'body'\r\n                },\r\n                shadowHinter: 'popup popup-pointer'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create and open popup with Msrp information.\r\n         *\r\n         * @param {Object} data - element data\r\n         * @param {DOMElement} elem - element\r\n         * @param {Event} event - event object\r\n         */\r\n        openPopup: function (data, elem, event) {\r\n            var $elem = $(elem),\r\n                $popup = $elem.find(this.popupSelector),\r\n                $trigger = $elem.find(this.popupTriggerSelector);\r\n\r\n            event.stopPropagation();\r\n\r\n            this.popupOptions.position.of = $trigger;\r\n            this.popupOptions.triggerTarget = $trigger;\r\n\r\n            $popup.dropdownDialog(this.popupOptions)\r\n                  .dropdownDialog('open');\r\n        },\r\n\r\n        /**\r\n         * Set listeners.\r\n         *\r\n         * @param {DOMElement} elem - DOM element\r\n         * @param {Object} data - element data\r\n         */\r\n        initListeners: function (elem, data) {\r\n            var $trigger = $(elem).find(this.popupTriggerSelector);\r\n\r\n            $trigger.on('click', this.openPopup.bind(this, data, elem));\r\n        },\r\n\r\n        /**\r\n         * Check whether we can apply msrp, or should use standard price.\r\n         *\r\n         * @param {Object} row\r\n         * @returns {Bool}\r\n         */\r\n        isMsrpApplicable: function (row) {\r\n            return this.getPrice(row)['is_applicable'];\r\n        },\r\n\r\n        /**\r\n         * Retrieve msrp formatted price\r\n         *\r\n         * @param {Object} row\r\n         * @returns {String}\r\n         */\r\n        getPrice: function (row) {\r\n            return row['price_info']['extension_attributes'].msrp;\r\n        },\r\n\r\n        /**\r\n         * UnsanitizedHtml version of getPrice.\r\n         *\r\n         * @param {Object} row\r\n         * @returns {String}\r\n         */\r\n        getPriceUnsanitizedHtml: function (row) {\r\n            return this.getPrice(row);\r\n        },\r\n\r\n        /**\r\n         * Get msrp_price property of a price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} final price html\r\n         */\r\n        getMsrpPriceUnsanitizedHtml: function (row) {\r\n            return this.getPrice(row)['msrp_price'];\r\n        },\r\n\r\n        /**\r\n         * Returns path to the columns' body template.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getBody: function () {\r\n            return this.bodyTmpl;\r\n        },\r\n\r\n        /**\r\n         * Check if popup with actual price must be shown.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isShowPriceOnGesture: function (row) {\r\n            return this.getPrice(row)['is_shown_price_on_gesture'];\r\n        },\r\n\r\n        /**\r\n         * Get msrp price supporting text.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getMsrpPriceMessage: function (row) {\r\n            return this.getPrice(row)['msrp_message'];\r\n        },\r\n\r\n        /**\r\n         * UnsanitizedHtml version of getMsrpPriceMessage.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getMsrpPriceMessageUnsanitizedHtml: function (row) {\r\n            return this.getMsrpPriceMessage(row);\r\n        },\r\n\r\n        /**\r\n         * Get msrp price supporting text, when actual price is hidden.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getExplanationMessage: function (row) {\r\n            return this.getPrice(row)['explanation_message'];\r\n        },\r\n\r\n        /**\r\n         * UnsanitizedHtml version of getExplanationMessage.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getExplanationMessageUnsanitizedHtml: function (row) {\r\n            return this.getExplanationMessage(row);\r\n        }\r\n    });\r\n});\r\n","Magento_Msrp/js/view/checkout/minicart/subtotal/totals.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Tax/js/view/checkout/minicart/subtotal/totals',\r\n    'underscore'\r\n], function (Component, _) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.displaySubtotal(this.isMsrpApplied(this.cart().items));\r\n            this.cart.subscribe(function (updatedCart) {\r\n\r\n                this.displaySubtotal(this.isMsrpApplied(updatedCart.items));\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Determine if subtotal should be hidden.\r\n         * @param {Array} cartItems\r\n         * @return {Boolean}\r\n         */\r\n        isMsrpApplied: function (cartItems) {\r\n            return !_.find(cartItems, function (item) {\r\n                if (_.has(item, 'canApplyMsrp')) {\r\n                    return item.canApplyMsrp;\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Multishipping/js/multi-shipping-balance.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/dataPost',\r\n    'jquery-ui-modules/widget'\r\n], function ($, dataPost) {\r\n    'use strict';\r\n\r\n    $.widget('mage.multiShippingBalance', {\r\n        options: {\r\n            changeUrl: ''\r\n        },\r\n\r\n        /**\r\n         * Initialize balance checkbox events.\r\n         *\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('change', $.proxy(function (event) {\r\n                dataPost().postData({\r\n                    action: this.options.changeUrl,\r\n                    data: {\r\n                        useBalance: +$(event.target).is(':checked')\r\n                    }\r\n                });\r\n            }, this));\r\n        }\r\n    });\r\n\r\n    return $.mage.multiShippingBalance;\r\n});\r\n","Magento_Multishipping/js/multi-shipping.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/customer-data',\r\n    'jquery-ui-modules/widget'\r\n], function ($, customerData) {\r\n    'use strict';\r\n\r\n    $.widget('mage.multiShipping', {\r\n        options: {\r\n            itemsQty: 0,\r\n            addNewAddressBtn: 'button[data-role=\"add-new-address\"]', // Add a new multishipping address.\r\n            addNewAddressFlag: '#add_new_address_flag', // Hidden input field with value 0 or 1.\r\n            canContinueBtn: 'button[data-role=\"can-continue\"]', // Continue (update quantity or go to shipping).\r\n            canContinueFlag: '#can_continue_flag' // Hidden input field with value 0 or 1.\r\n        },\r\n\r\n        /**\r\n         * Bind event handlers to click events for corresponding buttons.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._prepareCartData();\r\n            $(this.options.addNewAddressBtn).on('click', $.proxy(this._addNewAddress, this));\r\n            $(this.options.canContinueBtn).on('click', $.proxy(this._canContinue, this));\r\n        },\r\n\r\n        /**\r\n         * Takes cart items qty from current cart data and compare it with current items qty\r\n         * Reloads cart data if cart items qty is wrong\r\n         * @private\r\n         */\r\n        _prepareCartData: function () {\r\n            var cartData = customerData.get('cart');\r\n\r\n            if (cartData()['summary_count'] !== this.options.itemsQty) {\r\n                customerData.reload(['cart'], false);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add a new address. Set the hidden input field and submit the form. Then enter a new shipping address.\r\n         * @private\r\n         */\r\n        _addNewAddress: function () {\r\n            $(this.options.addNewAddressFlag).val(1);\r\n            this.element.submit();\r\n        },\r\n\r\n        /**\r\n         * Can the user continue to the next step? The data-flag attribute holds either 0 (no) or 1 (yes).\r\n         * @private\r\n         * @param {Event} event - Click event on the corresponding button.\r\n         */\r\n        _canContinue: function (event) {\r\n            $(this.options.canContinueFlag).val(parseInt($(event.currentTarget).data('flag'), 10));\r\n        }\r\n    });\r\n\r\n    return $.mage.multiShipping;\r\n});\r\n","Magento_Multishipping/js/overview.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget',\r\n    'mage/translate'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.orderOverview', {\r\n        options: {\r\n            opacity: 0.5, // CSS opacity for the 'Place Order' button when it's clicked and then disabled.\r\n            pleaseWaitLoader: 'span.please-wait', // 'Submitting order information...' Ajax loader.\r\n            placeOrderSubmit: 'button[type=\"submit\"]', // The 'Place Order' button.\r\n            agreements: '.checkout-agreements' // Container for all of the checkout agreements and terms/conditions\r\n        },\r\n\r\n        /**\r\n         * Bind a submit handler to the form.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('submit', $.proxy(this._showLoader, this));\r\n        },\r\n\r\n        /**\r\n         * Verify that all agreements and terms/conditions are checked. Show the Ajax loader. Disable\r\n         * the submit button (i.e. Place Order).\r\n         * @return {Boolean}\r\n         * @private\r\n         */\r\n        _showLoader: function () {\r\n            if ($(this.options.agreements).find('input[type=\"checkbox\"]:not(:checked)').length > 0) {\r\n                return false;\r\n            }\r\n            this.element.find(this.options.pleaseWaitLoader).show().end()\r\n                .find(this.options.placeOrderSubmit).prop('disabled', true).css('opacity', this.options.opacity);\r\n\r\n            return true;\r\n        }\r\n    });\r\n\r\n    return $.mage.orderOverview;\r\n});\r\n","Magento_Multishipping/js/payment.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery-ui-modules/widget',\r\n    'mage/translate'\r\n], function ($, mageTemplate, alert) {\r\n    'use strict';\r\n\r\n    $.widget('mage.payment', {\r\n        options: {\r\n            continueSelector: '#payment-continue',\r\n            methodsContainer: '#payment-methods',\r\n            minBalance: 0,\r\n            tmpl: '<input id=\"hidden-free\" type=\"hidden\" name=\"payment[method]\" value=\"free\">'\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this.element.find('dd [name^=\"payment[\"]').prop('disabled', true).end()\r\n                .on('click', this.options.continueSelector, $.proxy(this._submitHandler, this))\r\n                .on('updateCheckoutPrice', $.proxy(function (event, data) {\r\n                    //updating the checkoutPrice\r\n                    if (data.price) {\r\n                        this.options.checkoutPrice += data.price;\r\n                    }\r\n\r\n                    //updating total price\r\n                    if (data.totalPrice) {\r\n                        data.totalPrice = this.options.checkoutPrice;\r\n                    }\r\n\r\n                    if (this.options.checkoutPrice <= this.options.minBalance) {\r\n                        // Add free input field, hide and disable unchecked\r\n                        // checkbox payment method and all radio button payment methods\r\n                        this._disablePaymentMethods();\r\n                    } else {\r\n                        // Remove free input field, show all payment method\r\n                        this._enablePaymentMethods();\r\n                    }\r\n                }, this))\r\n                .on('click', 'dt input:radio', $.proxy(this._paymentMethodHandler, this));\r\n\r\n            if (this.options.checkoutPrice < this.options.minBalance) {\r\n                this._disablePaymentMethods();\r\n            } else {\r\n                this._enablePaymentMethods();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Display payment details when payment method radio button is checked\r\n         * @private\r\n         * @param {EventObject} e\r\n         */\r\n        _paymentMethodHandler: function (e) {\r\n            var element = $(e.target),\r\n                parentsDl = element.closest('dl');\r\n\r\n            parentsDl.find('dt input:radio').prop('checked', false);\r\n            parentsDl.find('dd').addClass('no-display').end()\r\n                .find('.items').hide()\r\n                .find('[name^=\"payment[\"]').prop('disabled', true);\r\n            element.prop('checked', true).parent()\r\n                .next('dd').removeClass('no-display')\r\n                .find('.items').show().find('[name^=\"payment[\"]').prop('disabled', false);\r\n        },\r\n\r\n        /**\r\n         * make sure one payment method is selected\r\n         * @private\r\n         * @return {Boolean}\r\n         */\r\n        _validatePaymentMethod: function () {\r\n            var methods = this.element.find('[name^=\"payment[\"]'),\r\n                isValid = false;\r\n\r\n            if (methods.length === 0) {\r\n                alert({\r\n                    content: $.mage.__('We can\\'t complete your order because you don\\'t have a payment method set up.')\r\n                });\r\n            } else if (this.options.checkoutPrice <= this.options.minBalance) {\r\n                isValid = true;\r\n            } else if (methods.filter('input:radio:checked').length) {\r\n                isValid = true;\r\n            } else {\r\n                alert({\r\n                    content: $.mage.__('Please choose a payment method.')\r\n                });\r\n            }\r\n\r\n            return isValid;\r\n        },\r\n\r\n        /**\r\n         * Disable and enable payment methods\r\n         * @private\r\n         */\r\n        _disablePaymentMethods: function () {\r\n            var tmpl = mageTemplate(this.options.tmpl, {\r\n                data: {}\r\n            });\r\n\r\n            this.element.find('input[name=\"payment[method]\"]').prop('disabled', true).end()\r\n                .find('input[id^=\"use\"][name^=\"payment[use\"]:not(:checked)').prop('disabled', true).parent().hide();\r\n            this.element.find('[name=\"payment[method]\"][value=\"free\"]').parent('dt').remove();\r\n            this.element.find(this.options.methodsContainer).hide().find('[name^=\"payment[\"]').prop('disabled', true);\r\n\r\n            $(tmpl).appendTo(this.element);\r\n        },\r\n\r\n        /**\r\n         * Enable and enable payment methods\r\n         * @private\r\n         */\r\n        _enablePaymentMethods: function () {\r\n            this.element.find('input[name=\"payment[method]\"]').prop('disabled', false).end()\r\n                .find('dt input:radio:checked').trigger('click').end()\r\n                .find('input[id^=\"use\"][name^=\"payment[use\"]:not(:checked)').prop('disabled', false).parent().show();\r\n            this.element.find(this.options.methodsContainer).show();\r\n        },\r\n\r\n        /**\r\n         * Returns checked payment method.\r\n         *\r\n         * @private\r\n         */\r\n        _getSelectedPaymentMethod: function () {\r\n            return this.element.find('input[name=\\'payment[method]\\']:checked');\r\n        },\r\n\r\n        /**\r\n         * Validate  before form submit\r\n         * @private\r\n         * @param {EventObject} e\r\n         */\r\n        _submitHandler: function (e) {\r\n            var currentMethod,\r\n                submitButton;\r\n\r\n            e.preventDefault();\r\n\r\n            if (this._validatePaymentMethod()) {\r\n                currentMethod = this._getSelectedPaymentMethod();\r\n                submitButton = currentMethod.parent().next('dd').find('button[type=submit]');\r\n\r\n                if (submitButton.length) {\r\n                    submitButton.first().trigger('click');\r\n                } else {\r\n                    this.element.trigger('submit');\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.payment;\r\n});\r\n","Magento_Newsletter/js/newsletter-sign-up.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'uiElement',\r\n    'mage/url',\r\n    'subscriptionStatusResolver',\r\n    'mage/validation'\r\n], function ($, Component, urlBuilder, subscriptionStatusResolver) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n        defaults: {\r\n            signUpElement: '',\r\n            submitButton: '',\r\n            element: null\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function (config, element) {\r\n            this._super();\r\n            this.element = element;\r\n            $(element).on('change', $.proxy(this.updateSignUpStatus, this));\r\n            this.updateSignUpStatus();\r\n        },\r\n\r\n        /**\r\n         * Send status request and update subscription element according to result.\r\n         */\r\n        updateSignUpStatus: function () {\r\n            var element = $(this.element),\r\n                email = element.val(),\r\n                self = this,\r\n                newsletterSubscription;\r\n\r\n            if ($(self.signUpElement).is(':checked')) {\r\n                return;\r\n            }\r\n\r\n            if (!email || !$.validator.methods['validate-email'].call(this, email, element)) {\r\n                return;\r\n            }\r\n\r\n            newsletterSubscription = $.Deferred();\r\n\r\n            $(self.submitButton).prop('disabled', true);\r\n\r\n            subscriptionStatusResolver(email, newsletterSubscription);\r\n\r\n            $.when(newsletterSubscription).done(function (isSubscribed) {\r\n                if (isSubscribed) {\r\n                    $(self.signUpElement).prop('checked', true);\r\n                }\r\n            }).always(function () {\r\n                $(self.submitButton).prop('disabled', false);\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Newsletter/js/subscription-status-resolver.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/url'\r\n], function ($, urlBuilder) {\r\n    'use strict';\r\n\r\n    return function (email, deferred) {\r\n        return $.getJSON(\r\n            urlBuilder.build('newsletter/ajax/status'),\r\n            {\r\n                email: email\r\n            }\r\n        ).done(function (response) {\r\n            if (response.errors) {\r\n                deferred.reject();\r\n            } else {\r\n                deferred.resolve(response.subscribed);\r\n            }\r\n        }).fail(function () {\r\n            deferred.reject();\r\n        });\r\n    };\r\n});\r\n","Magento_OfflinePayments/js/view/payment/offline-payments.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/payment/renderer-list'\r\n], function (Component, rendererList) {\r\n    'use strict';\r\n\r\n    rendererList.push(\r\n        {\r\n            type: 'checkmo',\r\n            component: 'Magento_OfflinePayments/js/view/payment/method-renderer/checkmo-method'\r\n        },\r\n        {\r\n            type: 'banktransfer',\r\n            component: 'Magento_OfflinePayments/js/view/payment/method-renderer/banktransfer-method'\r\n        },\r\n        {\r\n            type: 'cashondelivery',\r\n            component: 'Magento_OfflinePayments/js/view/payment/method-renderer/cashondelivery-method'\r\n        },\r\n        {\r\n            type: 'purchaseorder',\r\n            component: 'Magento_OfflinePayments/js/view/payment/method-renderer/purchaseorder-method'\r\n        }\r\n    );\r\n\r\n    /** Add view logic here if needed */\r\n    return Component.extend({});\r\n});\r\n","Magento_OfflinePayments/js/view/payment/method-renderer/banktransfer-method.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'ko',\r\n    'Magento_Checkout/js/view/payment/default'\r\n], function (ko, Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_OfflinePayments/payment/banktransfer'\r\n        },\r\n\r\n        /**\r\n         * Get value of instruction field.\r\n         * @returns {String}\r\n         */\r\n        getInstructions: function () {\r\n            return window.checkoutConfig.payment.instructions[this.item.method];\r\n        }\r\n    });\r\n});\r\n","Magento_OfflinePayments/js/view/payment/method-renderer/cashondelivery-method.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'Magento_Checkout/js/view/payment/default'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_OfflinePayments/payment/cashondelivery'\r\n        },\r\n\r\n        /**\r\n         * Returns payment method instructions.\r\n         *\r\n         * @return {*}\r\n         */\r\n        getInstructions: function () {\r\n            return window.checkoutConfig.payment.instructions[this.item.method];\r\n        }\r\n    });\r\n});\r\n","Magento_OfflinePayments/js/view/payment/method-renderer/checkmo-method.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'Magento_Checkout/js/view/payment/default'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_OfflinePayments/payment/checkmo'\r\n        },\r\n\r\n        /**\r\n         * Returns send check to info.\r\n         *\r\n         * @return {*}\r\n         */\r\n        getMailingAddress: function () {\r\n            return window.checkoutConfig.payment.checkmo.mailingAddress;\r\n        },\r\n\r\n        /**\r\n         * Returns payable to info.\r\n         *\r\n         * @return {*}\r\n         */\r\n        getPayableTo: function () {\r\n            return window.checkoutConfig.payment.checkmo.payableTo;\r\n        }\r\n    });\r\n});\r\n","Magento_OfflinePayments/js/view/payment/method-renderer/purchaseorder-method.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'Magento_Checkout/js/view/payment/default',\r\n    'jquery',\r\n    'mage/validation'\r\n], function (Component, $) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_OfflinePayments/payment/purchaseorder-form',\r\n            purchaseOrderNumber: ''\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('purchaseOrderNumber');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getData: function () {\r\n            return {\r\n                method: this.item.method,\r\n                'po_number': this.purchaseOrderNumber(),\r\n                'additional_data': null\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @return {jQuery}\r\n         */\r\n        validate: function () {\r\n            var form = 'form[data-role=purchaseorder-form]';\r\n\r\n            return $(form).validation() && $(form).validation('isValid');\r\n        }\r\n    });\r\n});\r\n","Magento_OfflineShipping/js/model/shipping-rates-validation-rules/flatrate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getRules: function () {\r\n            return {\r\n                'country_id': {\r\n                    'required': true\r\n                }\r\n            };\r\n        }\r\n    };\r\n});\r\n","Magento_OfflineShipping/js/model/shipping-rates-validation-rules/freeshipping.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getRules: function () {\r\n            return {\r\n                'country_id': {\r\n                    'required': true\r\n                }\r\n            };\r\n        }\r\n    };\r\n});\r\n","Magento_OfflineShipping/js/model/shipping-rates-validation-rules/tablerate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getRules: function () {\r\n            return {\r\n                'postcode': {\r\n                    'required': true\r\n                },\r\n                'country_id': {\r\n                    'required': true\r\n                },\r\n                'region_id': {\r\n                    'required': true\r\n                },\r\n                'region_id_input': {\r\n                    'required': true\r\n                }\r\n            };\r\n        }\r\n    };\r\n});\r\n","Magento_OfflineShipping/js/model/shipping-rates-validator/flatrate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mageUtils',\r\n    '../shipping-rates-validation-rules/flatrate',\r\n    'mage/translate'\r\n], function ($, utils, validationRules, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        validationErrors: [],\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {Boolean}\r\n         */\r\n        validate: function (address) {\r\n            var self = this;\r\n\r\n            this.validationErrors = [];\r\n            $.each(validationRules.getRules(), function (field, rule) {\r\n                var message;\r\n\r\n                if (rule.required && utils.isEmpty(address[field])) {\r\n                    message = $t('Field ') + field + $t(' is required.');\r\n                    self.validationErrors.push(message);\r\n                }\r\n            });\r\n\r\n            return !this.validationErrors.length;\r\n        }\r\n    };\r\n});\r\n","Magento_OfflineShipping/js/model/shipping-rates-validator/freeshipping.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mageUtils',\r\n    '../shipping-rates-validation-rules/freeshipping',\r\n    'mage/translate'\r\n], function ($, utils, validationRules, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        validationErrors: [],\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {Boolean}\r\n         */\r\n        validate: function (address) {\r\n            var self = this;\r\n\r\n            this.validationErrors = [];\r\n            $.each(validationRules.getRules(), function (field, rule) {\r\n                var message;\r\n\r\n                if (rule.required && utils.isEmpty(address[field])) {\r\n                    message = $t('Field ') + field + $t(' is required.');\r\n                    self.validationErrors.push(message);\r\n                }\r\n            });\r\n\r\n            return !this.validationErrors.length;\r\n        }\r\n    };\r\n});\r\n","Magento_OfflineShipping/js/model/shipping-rates-validator/tablerate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mageUtils',\r\n    '../shipping-rates-validation-rules/tablerate',\r\n    'mage/translate'\r\n], function ($, utils, validationRules, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        validationErrors: [],\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {Boolean}\r\n         */\r\n        validate: function (address) {\r\n            var self = this;\r\n\r\n            this.validationErrors = [];\r\n            $.each(validationRules.getRules(), function (field, rule) {\r\n                var message, regionFields;\r\n\r\n                if (rule.required && utils.isEmpty(address[field])) {\r\n                    message = $t('Field ') + field + $t(' is required.');\r\n                    regionFields = ['region', 'region_id', 'region_id_input'];\r\n\r\n                    if (\r\n                        $.inArray(field, regionFields) === -1 ||\r\n                        utils.isEmpty(address.region) && utils.isEmpty(address['region_id'])\r\n                    ) {\r\n                        self.validationErrors.push(message);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return !this.validationErrors.length;\r\n        }\r\n    };\r\n});\r\n","Magento_OfflineShipping/js/view/shipping-rates-validation/flatrate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/shipping-rates-validator',\r\n    'Magento_Checkout/js/model/shipping-rates-validation-rules',\r\n    '../../model/shipping-rates-validator/flatrate',\r\n    '../../model/shipping-rates-validation-rules/flatrate'\r\n], function (\r\n    Component,\r\n    defaultShippingRatesValidator,\r\n    defaultShippingRatesValidationRules,\r\n    flatrateShippingRatesValidator,\r\n    flatrateShippingRatesValidationRules\r\n) {\r\n    'use strict';\r\n\r\n    defaultShippingRatesValidator.registerValidator('flatrate', flatrateShippingRatesValidator);\r\n    defaultShippingRatesValidationRules.registerRules('flatrate', flatrateShippingRatesValidationRules);\r\n\r\n    return Component;\r\n});\r\n","Magento_OfflineShipping/js/view/shipping-rates-validation/freeshipping.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/shipping-rates-validator',\r\n    'Magento_Checkout/js/model/shipping-rates-validation-rules',\r\n    '../../model/shipping-rates-validator/freeshipping',\r\n    '../../model/shipping-rates-validation-rules/freeshipping'\r\n], function (\r\n    Component,\r\n    defaultShippingRatesValidator,\r\n    defaultShippingRatesValidationRules,\r\n    freeshippingShippingRatesValidator,\r\n    freeshippingShippingRatesValidationRules\r\n) {\r\n    'use strict';\r\n\r\n    defaultShippingRatesValidator.registerValidator('freeshipping', freeshippingShippingRatesValidator);\r\n    defaultShippingRatesValidationRules.registerRules('freeshipping', freeshippingShippingRatesValidationRules);\r\n\r\n    return Component;\r\n});\r\n","Magento_OfflineShipping/js/view/shipping-rates-validation/tablerate.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/shipping-rates-validator',\r\n    'Magento_Checkout/js/model/shipping-rates-validation-rules',\r\n    '../../model/shipping-rates-validator/tablerate',\r\n    '../../model/shipping-rates-validation-rules/tablerate'\r\n], function (\r\n    Component,\r\n    defaultShippingRatesValidator,\r\n    defaultShippingRatesValidationRules,\r\n    tablerateShippingRatesValidator,\r\n    tablerateShippingRatesValidationRules\r\n) {\r\n    'use strict';\r\n\r\n    defaultShippingRatesValidator.registerValidator('tablerate', tablerateShippingRatesValidator);\r\n    defaultShippingRatesValidationRules.registerRules('tablerate', tablerateShippingRatesValidationRules);\r\n\r\n    return Component;\r\n});\r\n","Magento_PageCache/js/form-key-provider.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    return function () {\r\n        var formKey,\r\n            inputElements,\r\n            inputSelector = 'input[name=\"form_key\"]';\r\n\r\n        /**\r\n         * Set form_key cookie\r\n         * @private\r\n         */\r\n        function setFormKeyCookie(value) {\r\n            var expires,\r\n                secure,\r\n                date = new Date(),\r\n                cookiesConfig = window.cookiesConfig || {},\r\n                isSecure = !!cookiesConfig.secure,\r\n                samesite = cookiesConfig.samesite || 'lax';\r\n\r\n            date.setTime(date.getTime() + 86400000);\r\n            expires = '; expires=' + date.toUTCString();\r\n            secure = isSecure ? '; secure' : '';\r\n            samesite = '; samesite=' + samesite;\r\n\r\n            document.cookie = 'form_key=' + (value || '') + expires + secure + '; path=/' + samesite;\r\n        }\r\n\r\n        /**\r\n         * Retrieves form key from cookie\r\n         * @private\r\n         */\r\n        function getFormKeyCookie() {\r\n            var cookie,\r\n                i,\r\n                nameEQ = 'form_key=',\r\n                cookieArr = document.cookie.split(';');\r\n\r\n            for (i = 0; i < cookieArr.length; i++) {\r\n                cookie = cookieArr[i];\r\n\r\n                while (cookie.charAt(0) === ' ') {\r\n                    cookie = cookie.substring(1, cookie.length);\r\n                }\r\n\r\n                if (cookie.indexOf(nameEQ) === 0) {\r\n                    return cookie.substring(nameEQ.length, cookie.length);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        /**\r\n         * Generate form key string\r\n         * @private\r\n         */\r\n        function generateFormKeyString() {\r\n            var result = '',\r\n                length = 16,\r\n                chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\r\n            while (length--) {\r\n                result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        /**\r\n         * Init form_key inputs with value\r\n         * @private\r\n         */\r\n        function initFormKey() {\r\n            formKey = getFormKeyCookie();\r\n\r\n            if (!formKey) {\r\n                formKey = generateFormKeyString();\r\n                setFormKeyCookie(formKey);\r\n            }\r\n            inputElements = document.querySelectorAll(inputSelector);\r\n\r\n            if (inputElements.length) {\r\n                Array.prototype.forEach.call(inputElements, function (element) {\r\n                    element.setAttribute('value', formKey);\r\n                });\r\n            }\r\n        }\r\n\r\n        initFormKey();\r\n    };\r\n});\r\n","Magento_PageCache/js/page-cache.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'domReady',\r\n    'consoleLogger',\r\n    'Magento_PageCache/js/form-key-provider',\r\n    'jquery-ui-modules/widget',\r\n    'mage/cookies'\r\n], function ($, domReady, consoleLogger, formKeyInit) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Helper. Generate random string\r\n     * TODO: Merge with mage/utils\r\n     * @param {String} chars - list of symbols\r\n     * @param {Number} length - length for need string\r\n     * @returns {String}\r\n     */\r\n    function generateRandomString(chars, length) {\r\n        var result = '';\r\n\r\n        length = length > 0 ? length : 1;\r\n\r\n        while (length--) {\r\n            result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Nodes tree to flat list converter\r\n     * @returns {Array}\r\n     */\r\n    $.fn.comments = function () {\r\n        var elements = [],\r\n            contents,\r\n            elementContents;\r\n\r\n        /**\r\n         * @param {jQuery} element - Comment holder\r\n         */\r\n        (function lookup(element) {\r\n            var iframeHostName;\r\n\r\n            // prevent cross origin iframe content reading\r\n            if ($(element).prop('tagName') === 'IFRAME') {\r\n                iframeHostName = $('<a>').prop('href', $(element).prop('src'))\r\n                    .prop('hostname');\r\n\r\n                if (window.location.hostname !== iframeHostName) {\r\n                    return [];\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Rewrite jQuery contents().\r\n             *\r\n             * @param {jQuery} elem\r\n             */\r\n            contents = function (elem) {\r\n                return $.map(elem, function (el) {\r\n                    try {\r\n                        return el.nodeName.toLowerCase() === 'iframe' ?\r\n                            el.contentDocument || (el.contentWindow ? el.contentWindow.document : []) :\r\n                            $.merge([], el.childNodes);\r\n                    } catch (e) {\r\n                        consoleLogger.error(e);\r\n\r\n                        return [];\r\n                    }\r\n                });\r\n            };\r\n\r\n            elementContents = contents($(element));\r\n\r\n            $.each(elementContents, function (index, el) {\r\n                switch (el.nodeType) {\r\n                    case 1: // ELEMENT_NODE\r\n                        lookup(el);\r\n                        break;\r\n\r\n                    case 8: // COMMENT_NODE\r\n                        elements.push(el);\r\n                        break;\r\n\r\n                    case 9: // DOCUMENT_NODE\r\n                        lookup($(el).find('body'));\r\n                        break;\r\n                }\r\n            });\r\n        })(this);\r\n\r\n        return elements;\r\n    };\r\n\r\n    /**\r\n     * FormKey Widget - this widget is generating from key, saves it to cookie and\r\n     * @deprecated see Magento/PageCache/view/frontend/web/js/form-key-provider.js\r\n     */\r\n    $.widget('mage.formKey', {\r\n        options: {\r\n            inputSelector: 'input[name=\"form_key\"]',\r\n            allowedCharacters: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n            length: 16\r\n        },\r\n\r\n        /**\r\n         * Creates widget 'mage.formKey'\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var formKey = $.mage.cookies.get('form_key'),\r\n                options = {\r\n                    secure: window.cookiesConfig ? window.cookiesConfig.secure : false\r\n                };\r\n\r\n            if (!formKey) {\r\n                formKey = generateRandomString(this.options.allowedCharacters, this.options.length);\r\n                $.mage.cookies.set('form_key', formKey, options);\r\n            }\r\n            $(this.options.inputSelector).val(formKey);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * PageCache Widget\r\n     * Handles additional ajax request for rendering user private content.\r\n     */\r\n    $.widget('mage.pageCache', {\r\n        options: {\r\n            url: '/',\r\n            patternPlaceholderOpen: /^ BLOCK (.+) $/,\r\n            patternPlaceholderClose: /^ \\/BLOCK (.+) $/,\r\n            versionCookieName: 'private_content_version',\r\n            handles: []\r\n        },\r\n\r\n        /**\r\n         * Creates widget 'mage.pageCache'\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var placeholders,\r\n                version = $.mage.cookies.get(this.options.versionCookieName);\r\n\r\n            if (!version) {\r\n                return;\r\n            }\r\n            placeholders = this._searchPlaceholders(this.element.comments());\r\n\r\n            if (placeholders && placeholders.length) {\r\n                this._ajax(placeholders, version);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Parse page for placeholders.\r\n         * @param {Array} elements\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        _searchPlaceholders: function (elements) {\r\n            var placeholders = [],\r\n                tmp = {},\r\n                ii,\r\n                len,\r\n                el, matches, name;\r\n\r\n            if (!(elements && elements.length)) {\r\n                return placeholders;\r\n            }\r\n\r\n            for (ii = 0, len = elements.length; ii < len; ii++) {\r\n                el = elements[ii];\r\n                matches = this.options.patternPlaceholderOpen.exec(el.nodeValue);\r\n                name = null;\r\n\r\n                if (matches) {\r\n                    name = matches[1];\r\n                    tmp[name] = {\r\n                        name: name,\r\n                        openElement: el\r\n                    };\r\n                } else {\r\n                    matches = this.options.patternPlaceholderClose.exec(el.nodeValue);\r\n\r\n                    if (matches) { //eslint-disable-line max-depth\r\n                        name = matches[1];\r\n\r\n                        if (tmp[name]) { //eslint-disable-line max-depth\r\n                            tmp[name].closeElement = el;\r\n                            placeholders.push(tmp[name]);\r\n                            delete tmp[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return placeholders;\r\n        },\r\n\r\n        /**\r\n         * Parse for page and replace placeholders\r\n         * @param {Object} placeholder\r\n         * @param {Object} html\r\n         * @protected\r\n         */\r\n        _replacePlaceholder: function (placeholder, html) {\r\n            var startReplacing = false,\r\n                prevSibling = null,\r\n                parent, contents, yy, len, element;\r\n\r\n            if (!placeholder || !html) {\r\n                return;\r\n            }\r\n\r\n            parent = $(placeholder.openElement).parent();\r\n            contents = parent.contents();\r\n\r\n            for (yy = 0, len = contents.length; yy < len; yy++) {\r\n                element = contents[yy];\r\n\r\n                if (element == placeholder.openElement) { //eslint-disable-line eqeqeq\r\n                    startReplacing = true;\r\n                }\r\n\r\n                if (startReplacing) {\r\n                    $(element).remove();\r\n                } else if (element.nodeType != 8) { //eslint-disable-line eqeqeq\r\n                    //due to comment tag doesn't have siblings we try to find it manually\r\n                    prevSibling = element;\r\n                }\r\n\r\n                if (element == placeholder.closeElement) { //eslint-disable-line eqeqeq\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (prevSibling) {\r\n                $(prevSibling).after(html);\r\n            } else {\r\n                $(parent).prepend(html);\r\n            }\r\n\r\n            // trigger event to use mage-data-init attribute\r\n            $(parent).trigger('contentUpdated');\r\n        },\r\n\r\n        /**\r\n         * AJAX helper\r\n         * @param {Object} placeholders\r\n         * @param {String} version\r\n         * @private\r\n         */\r\n        _ajax: function (placeholders, version) {\r\n            var ii,\r\n                data = {\r\n                    blocks: [],\r\n                    handles: this.options.handles,\r\n                    originalRequest: this.options.originalRequest,\r\n                    version: version\r\n                };\r\n\r\n            for (ii = 0; ii < placeholders.length; ii++) {\r\n                data.blocks.push(placeholders[ii].name);\r\n            }\r\n            data.blocks = JSON.stringify(data.blocks.sort());\r\n            data.handles = JSON.stringify(data.handles);\r\n            data.originalRequest = JSON.stringify(data.originalRequest);\r\n            $.ajax({\r\n                url: this.options.url,\r\n                data: data,\r\n                type: 'GET',\r\n                cache: true,\r\n                dataType: 'json',\r\n                context: this,\r\n\r\n                /**\r\n                 * Response handler\r\n                 * @param {Object} response\r\n                 */\r\n                success: function (response) {\r\n                    var placeholder, i;\r\n\r\n                    for (i = 0; i < placeholders.length; i++) {\r\n                        placeholder = placeholders[i];\r\n\r\n                        if (response.hasOwnProperty(placeholder.name)) {\r\n                            this._replacePlaceholder(placeholder, response[placeholder.name]);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    domReady(function () {\r\n        formKeyInit();\r\n    });\r\n\r\n    return {\r\n        'pageCache': $.mage.pageCache,\r\n        'formKey': $.mage.formKey\r\n    };\r\n});\r\n","Magento_Payment/js/cc-type.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.creditCardType', {\r\n        options: {\r\n            typeCodes: ['SS', 'SM', 'SO'] // Type codes for Switch/Maestro/Solo credit cards.\r\n        },\r\n\r\n        /**\r\n         * Bind change handler to select element and trigger the event to show/hide\r\n         * the Switch/Maestro or Solo credit card type container for those credit card types.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('change', $.proxy(this._toggleCardType, this)).trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Toggle the Switch/Maestro and Solo credit card type container depending on which\r\n         * credit card type is selected.\r\n         * @private\r\n         */\r\n        _toggleCardType: function () {\r\n            $(this.options.creditCardTypeContainer)\r\n                .toggle($.inArray(this.element.val(), this.options.typeCodes) !== -1);\r\n        }\r\n    });\r\n\r\n    return $.mage.creditCardType;\r\n});\r\n","Magento_Payment/js/transparent.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery-ui-modules/widget',\r\n    'Magento_Payment/js/model/credit-card-validation/validator',\r\n    'Magento_Checkout/js/model/full-screen-loader'\r\n], function ($, mageTemplate, alert, ui, validator, fullScreenLoader) {\r\n    'use strict';\r\n\r\n    $.widget('mage.transparent', {\r\n        options: {\r\n            context: null,\r\n            placeOrderSelector: '[data-role=\"review-save\"]',\r\n            paymentFormSelector: '#co-payment-form',\r\n            updateSelectorPrefix: '#checkout-',\r\n            updateSelectorSuffix: '-load',\r\n            hiddenFormTmpl:\r\n                '<form target=\"<%= data.target %>\" action=\"<%= data.action %>\" method=\"POST\" ' +\r\n                'hidden enctype=\"application/x-www-form-urlencoded\" class=\"no-display\">' +\r\n                    '<% _.each(data.inputs, function(val, key){ %>' +\r\n                    '<input value=\"<%= val %>\" name=\"<%= key %>\" type=\"hidden\">' +\r\n                    '<% }); %>' +\r\n                '</form>',\r\n            reviewAgreementForm: '#checkout-agreements',\r\n            cgiUrl: null,\r\n            orderSaveUrl: null,\r\n            controller: null,\r\n            gateway: null,\r\n            dateDelim: null,\r\n            cardFieldsMap: null,\r\n            expireYearLength: 2\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.hiddenFormTmpl = mageTemplate(this.options.hiddenFormTmpl);\r\n\r\n            if (this.options.context) {\r\n                this.options.context.setPlaceOrderHandler($.proxy(this._orderSave, this));\r\n                this.options.context.setValidateHandler($.proxy(this._validateHandler, this));\r\n            } else {\r\n                $(this.options.placeOrderSelector)\r\n                    .off('click')\r\n                    .on('click', $.proxy(this._placeOrderHandler, this));\r\n            }\r\n\r\n            this.element.validation();\r\n            $('[data-container=\"' + this.options.gateway + '-cc-number\"]').on('focusout', function () {\r\n                $(this).valid();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * handler for credit card validation\r\n         * @return {Boolean}\r\n         * @private\r\n         */\r\n        _validateHandler: function () {\r\n            return this.element.validation && this.element.validation('isValid');\r\n        },\r\n\r\n        /**\r\n         * handler for Place Order button to call gateway for credit card validation\r\n         * @return {Boolean}\r\n         * @private\r\n         */\r\n        _placeOrderHandler: function () {\r\n            if (this._validateHandler()) {\r\n                this._orderSave();\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Save order and generate post data for gateway call\r\n         * @private\r\n         */\r\n        _orderSave: function () {\r\n            var postData = $(this.options.paymentFormSelector).serialize();\r\n\r\n            if ($(this.options.reviewAgreementForm).length) {\r\n                postData += '&' + $(this.options.reviewAgreementForm).serialize();\r\n            }\r\n            postData += '&controller=' + this.options.controller;\r\n            postData += '&cc_type=' + this.element.find(\r\n                '[data-container=\"' + this.options.gateway + '-cc-type\"]'\r\n            ).val();\r\n\r\n            return $.ajax({\r\n                url: this.options.orderSaveUrl,\r\n                type: 'post',\r\n                context: this,\r\n                data: postData,\r\n                dataType: 'json',\r\n\r\n                /**\r\n                 * {Function}\r\n                 */\r\n                beforeSend: function () {\r\n                    fullScreenLoader.startLoader();\r\n                },\r\n\r\n                /**\r\n                 * {Function}\r\n                 */\r\n                success: function (response) {\r\n                    var preparedData,\r\n                        msg,\r\n\r\n                        /**\r\n                         * {Function}\r\n                         */\r\n                        alertActionHandler = function () {\r\n                            // default action\r\n                        };\r\n\r\n                    if (response.success && response[this.options.gateway]) {\r\n                        preparedData = this._preparePaymentData(\r\n                            response[this.options.gateway].fields,\r\n                            this.options.cardFieldsMap\r\n                        );\r\n                        this._postPaymentToGateway(preparedData);\r\n                    } else {\r\n                        fullScreenLoader.stopLoader(true);\r\n\r\n                        msg = response['error_messages'];\r\n\r\n                        if (this.options.context) {\r\n                            this.options.context.clearTimeout().fail();\r\n                            alertActionHandler = this.options.context.alertActionHandler;\r\n                        }\r\n\r\n                        if (typeof msg === 'object') {\r\n                            msg = msg.join('\\n');\r\n                        }\r\n\r\n                        if (msg) {\r\n                            alert(\r\n                                {\r\n                                    content: msg,\r\n                                    actions: {\r\n\r\n                                        /**\r\n                                         * {Function}\r\n                                         */\r\n                                        always: alertActionHandler\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                }.bind(this)\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Post data to gateway for credit card validation\r\n         * @param {Object} data\r\n         * @private\r\n         */\r\n        _postPaymentToGateway: function (data) {\r\n            var tmpl,\r\n                iframeSelector = '[data-container=\"' + this.options.gateway + '-transparent-iframe\"]';\r\n\r\n            tmpl = this.hiddenFormTmpl({\r\n                data: {\r\n                    target: $(iframeSelector).attr('name'),\r\n                    action: this.options.cgiUrl,\r\n                    inputs: data\r\n                }\r\n            });\r\n            $(tmpl).appendTo($(iframeSelector)).trigger('submit');\r\n        },\r\n\r\n        /**\r\n         * Add credit card fields to post data for gateway\r\n         * @param {Object} data\r\n         * @param {Object} ccfields\r\n         * @private\r\n         */\r\n        _preparePaymentData: function (data, ccfields) {\r\n            var preparedata;\r\n\r\n            if (this.element.find('[data-container=\"' + this.options.gateway + '-cc-cvv\"]').length) {\r\n                data[ccfields.cccvv] = this.element.find(\r\n                    '[data-container=\"' + this.options.gateway + '-cc-cvv\"]'\r\n                ).val();\r\n            }\r\n            preparedata = this._prepareExpDate();\r\n            data[ccfields.ccexpdate] = preparedata.month + this.options.dateDelim + preparedata.year;\r\n            data[ccfields.ccnum] = this.element.find(\r\n                '[data-container=\"' + this.options.gateway + '-cc-number\"]'\r\n            ).val();\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Grab Month and Year into one\r\n         * @returns {Object}\r\n         * @private\r\n         */\r\n        _prepareExpDate: function () {\r\n            var year = this.element.find('[data-container=\"' + this.options.gateway + '-cc-year\"]').val(),\r\n                month = parseInt(\r\n                    this.element.find('[data-container=\"' + this.options.gateway + '-cc-month\"]').val(),\r\n                    10\r\n                );\r\n\r\n            if (year.length > this.options.expireYearLength) {\r\n                year = year.substring(year.length - this.options.expireYearLength);\r\n            }\r\n\r\n            if (month < 10) {\r\n                month = '0' + month;\r\n            }\r\n\r\n            return {\r\n                month: month, year: year\r\n            };\r\n        }\r\n    });\r\n\r\n    return $.mage.transparent;\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-data.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        creditCard: null,\r\n        creditCardNumber: null,\r\n        expirationMonth: null,\r\n        expirationYear: null,\r\n        cvvCode: null\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-number-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'mageUtils',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/luhn10-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/credit-card-type'\r\n], function (utils, luhn10, creditCardTypes) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} card\r\n     * @param {*} isPotentiallyValid\r\n     * @param {*} isValid\r\n     * @return {Object}\r\n     */\r\n    function resultWrapper(card, isPotentiallyValid, isValid) {\r\n        return {\r\n            card: card,\r\n            isValid: isValid,\r\n            isPotentiallyValid: isPotentiallyValid\r\n        };\r\n    }\r\n\r\n    return function (value) {\r\n        var potentialTypes,\r\n            cardType,\r\n            valid,\r\n            i,\r\n            maxLength;\r\n\r\n        if (utils.isEmpty(value)) {\r\n            return resultWrapper(null, false, false);\r\n        }\r\n\r\n        value = value.replace(/\\s+/g, '');\r\n\r\n        if (!/^\\d*$/.test(value)) {\r\n            return resultWrapper(null, false, false);\r\n        }\r\n\r\n        potentialTypes = creditCardTypes.getCardTypes(value);\r\n\r\n        if (potentialTypes.length === 0) {\r\n            return resultWrapper(null, false, false);\r\n        } else if (potentialTypes.length !== 1) {\r\n            return resultWrapper(null, true, false);\r\n        }\r\n\r\n        cardType = potentialTypes[0];\r\n\r\n        if (cardType.type === 'unionpay') {  // UnionPay is not Luhn 10 compliant\r\n            valid = true;\r\n        } else {\r\n            valid = luhn10(value);\r\n        }\r\n\r\n        for (i = 0; i < cardType.lengths.length; i++) {\r\n            if (cardType.lengths[i] === value.length) {\r\n                return resultWrapper(cardType, valid, valid);\r\n            }\r\n        }\r\n\r\n        maxLength = Math.max.apply(null, cardType.lengths);\r\n\r\n        if (value.length < maxLength) {\r\n            return resultWrapper(cardType, true, false);\r\n        }\r\n\r\n        return resultWrapper(cardType, false, false);\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/cvv-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} isValid\r\n     * @param {*} isPotentiallyValid\r\n     * @return {Object}\r\n     */\r\n    function resultWrapper(isValid, isPotentiallyValid) {\r\n        return {\r\n            isValid: isValid,\r\n            isPotentiallyValid: isPotentiallyValid\r\n        };\r\n    }\r\n\r\n    /**\r\n     * CVV number validation.\r\n     * Validate digit count for CVV code.\r\n     *\r\n     * @param {*} value\r\n     * @param {Number} maxLength\r\n     * @return {Object}\r\n     */\r\n    return function (value, maxLength) {\r\n        var DEFAULT_LENGTH = 3;\r\n\r\n        maxLength = maxLength || DEFAULT_LENGTH;\r\n\r\n        if (!/^\\d*$/.test(value)) {\r\n            return resultWrapper(false, false);\r\n        }\r\n\r\n        if (value.length === maxLength) {\r\n            return resultWrapper(true, true);\r\n        }\r\n\r\n        if (value.length < maxLength) {\r\n            return resultWrapper(false, true);\r\n        }\r\n\r\n        if (value.length > maxLength) {\r\n            return resultWrapper(false, false);\r\n        }\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'mageUtils',\r\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/parse-date',\r\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-month-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-year-validator'\r\n], function (utils, parseDate, expirationMonth, expirationYear) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} isValid\r\n     * @param {*} isPotentiallyValid\r\n     * @param {*} month\r\n     * @param {*} year\r\n     * @return {Object}\r\n     */\r\n    function resultWrapper(isValid, isPotentiallyValid, month, year) {\r\n        return {\r\n            isValid: isValid,\r\n            isPotentiallyValid: isPotentiallyValid,\r\n            month: month,\r\n            year: year\r\n        };\r\n    }\r\n\r\n    return function (value) {\r\n        var date,\r\n            monthValid,\r\n            yearValid;\r\n\r\n        if (utils.isEmpty(value)) {\r\n            return resultWrapper(false, false, null, null);\r\n        }\r\n\r\n        value = value.replace(/^(\\d\\d) (\\d\\d(\\d\\d)?)$/, '$1/$2');\r\n        date = parseDate(value);\r\n        monthValid = expirationMonth(date.month);\r\n        yearValid = expirationYear(date.year);\r\n\r\n        if (monthValid.isValid && yearValid.isValid) {\r\n            return resultWrapper(true, true, date.month, date.year);\r\n        }\r\n\r\n        if (monthValid.isPotentiallyValid && yearValid.isPotentiallyValid) {\r\n            return resultWrapper(false, true, null, null);\r\n        }\r\n\r\n        return resultWrapper(false, false, null, null);\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Payment/js/model/credit-card-validation/cvv-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-year-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-month-validator',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-data',\r\n    'mage/translate'\r\n], function ($, cvvValidator, creditCardNumberValidator, yearValidator, monthValidator, creditCardData) {\r\n    'use strict';\r\n\r\n    $('.payment-method-content input[type=\"number\"]').on('keyup', function () {\r\n        if ($(this).val() < 0) {\r\n            $(this).val($(this).val().replace(/^-/, ''));\r\n        }\r\n    });\r\n\r\n    $.each({\r\n        'validate-card-type': [\r\n            function (number, item, allowedTypes) {\r\n                var cardInfo,\r\n                    i,\r\n                    l;\r\n\r\n                if (!creditCardNumberValidator(number).isValid) {\r\n                    return false;\r\n                }\r\n\r\n                cardInfo = creditCardNumberValidator(number).card;\r\n\r\n                for (i = 0, l = allowedTypes.length; i < l; i++) {\r\n                    if (cardInfo.title == allowedTypes[i].type) { //eslint-disable-line eqeqeq\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card type number.')\r\n        ],\r\n        'validate-card-number': [\r\n\r\n            /**\r\n             * Validate credit card number based on mod 10\r\n             *\r\n             * @param {*} number - credit card number\r\n             * @return {Boolean}\r\n             */\r\n            function (number) {\r\n                return creditCardNumberValidator(number).isValid;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        'validate-card-date': [\r\n\r\n            /**\r\n             * Validate credit card expiration month\r\n             *\r\n             * @param {String} date - month\r\n             * @return {Boolean}\r\n             */\r\n            function (date) {\r\n                return monthValidator(date).isValid;\r\n            },\r\n            $.mage.__('Incorrect credit card expiration month.')\r\n        ],\r\n        'validate-card-cvv': [\r\n\r\n            /**\r\n             * Validate cvv\r\n             *\r\n             * @param {String} cvv - card verification value\r\n             * @return {Boolean}\r\n             */\r\n            function (cvv) {\r\n                var maxLength = creditCardData.creditCard ? creditCardData.creditCard.code.size : 3;\r\n\r\n                return cvvValidator(cvv, maxLength).isValid;\r\n            },\r\n            $.mage.__('Please enter a valid credit card verification number.')\r\n        ],\r\n        'validate-card-year': [\r\n\r\n            /**\r\n             * Validate credit card expiration year\r\n             *\r\n             * @param {String} date - year\r\n             * @return {Boolean}\r\n             */\r\n            function (date) {\r\n                return yearValidator(date).isValid;\r\n            },\r\n            $.mage.__('Incorrect credit card expiration year.')\r\n        ]\r\n\r\n    }, function (i, rule) {\r\n        rule.unshift(i);\r\n        $.validator.addMethod.apply($.validator, rule);\r\n    });\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/credit-card-type.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'jquery',\r\n    'mageUtils'\r\n], function ($, utils) {\r\n    'use strict';\r\n\r\n    var types = [\r\n        {\r\n            title: 'Visa',\r\n            type: 'VI',\r\n            pattern: '^4\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16],\r\n            code: {\r\n                name: 'CVV',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'MasterCard',\r\n            type: 'MC',\r\n            pattern: '^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'American Express',\r\n            type: 'AE',\r\n            pattern: '^3([47]\\\\d*)?$',\r\n            isAmex: true,\r\n            gaps: [4, 10],\r\n            lengths: [15],\r\n            code: {\r\n                name: 'CID',\r\n                size: 4\r\n            }\r\n        },\r\n        {\r\n            title: 'Diners',\r\n            type: 'DN',\r\n            pattern: '^(3(0[0-5]|095|6|[8-9]))\\\\d*$',\r\n            gaps: [4, 10],\r\n            lengths: [14, 16, 17, 18, 19],\r\n            code: {\r\n                name: 'CVV',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Discover',\r\n            type: 'DI',\r\n            pattern: '^(6011(0|[2-4]|74|7[7-9]|8[6-9]|9)|6(4[4-9]|5))\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16, 17, 18, 19],\r\n            code: {\r\n                name: 'CID',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'JCB',\r\n            type: 'JCB',\r\n            pattern: '^35(2[8-9]|[3-8])\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16, 17, 18, 19],\r\n            code: {\r\n                name: 'CVV',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'UnionPay',\r\n            type: 'UN',\r\n            pattern: '^(622(1(2[6-9]|[3-9])|[3-8]|9([[0-1]|2[0-5]))|62[4-6]|628([2-8]))\\\\d*?$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16, 17, 18, 19],\r\n            code: {\r\n                name: 'CVN',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Maestro International',\r\n            type: 'MI',\r\n            pattern: '^(5(0|[6-9])|63|67(?!59|6770|6774))\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [12, 13, 14, 15, 16, 17, 18, 19],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Maestro Domestic',\r\n            type: 'MD',\r\n            pattern: '^6759(?!24|38|40|6[3-9]|70|76)|676770|676774\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [12, 13, 14, 15, 16, 17, 18, 19],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Hipercard',\r\n            type: 'HC',\r\n            pattern: '^((606282)|(637095)|(637568)|(637599)|(637609)|(637612))\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [13, 16],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Elo',\r\n            type: 'ELO',\r\n            pattern: '^((509091)|(636368)|(636297)|(504175)|(438935)|(40117[8-9])|(45763[1-2])|' +\r\n                '(457393)|(431274)|(50990[0-2])|(5099[7-9][0-9])|(50996[4-9])|(509[1-8][0-9][0-9])|' +\r\n                '(5090(0[0-2]|0[4-9]|1[2-9]|[24589][0-9]|3[1-9]|6[0-46-9]|7[0-24-9]))|' +\r\n                '(5067(0[0-24-8]|1[0-24-9]|2[014-9]|3[0-379]|4[0-9]|5[0-3]|6[0-5]|7[0-8]))|' +\r\n                '(6504(0[5-9]|1[0-9]|2[0-9]|3[0-9]))|' +\r\n                '(6504(8[5-9]|9[0-9])|6505(0[0-9]|1[0-9]|2[0-9]|3[0-8]))|' +\r\n                '(6505(4[1-9]|5[0-9]|6[0-9]|7[0-9]|8[0-9]|9[0-8]))|' +\r\n                '(6507(0[0-9]|1[0-8]))|(65072[0-7])|(6509(0[1-9]|1[0-9]|20))|' +\r\n                '(6516(5[2-9]|6[0-9]|7[0-9]))|(6550(0[0-9]|1[0-9]))|' +\r\n                '(6550(2[1-9]|3[0-9]|4[0-9]|5[0-8])))\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [16],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        },\r\n        {\r\n            title: 'Aura',\r\n            type: 'AU',\r\n            pattern: '^5078\\\\d*$',\r\n            gaps: [4, 8, 12],\r\n            lengths: [19],\r\n            code: {\r\n                name: 'CVC',\r\n                size: 3\r\n            }\r\n        }\r\n    ];\r\n\r\n    return {\r\n        /**\r\n         * @param {*} cardNumber\r\n         * @return {Array}\r\n         */\r\n        getCardTypes: function (cardNumber) {\r\n            var i, value,\r\n                result = [];\r\n\r\n            if (utils.isEmpty(cardNumber)) {\r\n                return result;\r\n            }\r\n\r\n            if (cardNumber === '') {\r\n                return $.extend(true, {}, types);\r\n            }\r\n\r\n            for (i = 0; i < types.length; i++) {\r\n                value = types[i];\r\n\r\n                if (new RegExp(value.pattern).test(cardNumber)) {\r\n                    result.push($.extend(true, {}, value));\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/credit-card-number-validator/luhn10-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * Luhn algorithm verification\r\n     */\r\n    return function (a, b, c, d, e) {\r\n        for (d = +a[b = a.length - 1], e = 0; b--;) {\r\n            c = +a[b];\r\n            d += ++e % 2 ? 2 * c % 10 + (c > 4) : c;\r\n        }\r\n\r\n        return !(d % 10);\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-month-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} isValid\r\n     * @param {*} isPotentiallyValid\r\n     * @return {Object}\r\n     */\r\n    function resultWrapper(isValid, isPotentiallyValid) {\r\n        return {\r\n            isValid: isValid,\r\n            isPotentiallyValid: isPotentiallyValid\r\n        };\r\n    }\r\n\r\n    return function (value) {\r\n        var month,\r\n            monthValid;\r\n\r\n        if (value.replace(/\\s/g, '') === '' || value === '0') {\r\n            return resultWrapper(false, true);\r\n        }\r\n\r\n        if (!/^\\d*$/.test(value)) {\r\n            return resultWrapper(false, false);\r\n        }\r\n\r\n        if (isNaN(value)) {\r\n            return resultWrapper(false, false);\r\n        }\r\n\r\n        month = parseInt(value, 10);\r\n        monthValid = month > 0 && month < 13;\r\n\r\n        return resultWrapper(monthValid, monthValid);\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator/expiration-year-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {*} isValid\r\n     * @param {*} isPotentiallyValid\r\n     * @return {Object}\r\n     */\r\n    function resultWrapper(isValid, isPotentiallyValid) {\r\n        return {\r\n            isValid: isValid,\r\n            isPotentiallyValid: isPotentiallyValid\r\n        };\r\n    }\r\n\r\n    return function (value) {\r\n        var currentYear = new Date().getFullYear(),\r\n            len = value.length,\r\n            valid,\r\n            expMaxLifetime = 19;\r\n\r\n        if (value.replace(/\\s/g, '') === '') {\r\n            return resultWrapper(false, true);\r\n        }\r\n\r\n        if (!/^\\d*$/.test(value)) {\r\n            return resultWrapper(false, false);\r\n        }\r\n\r\n        if (len !== 4) {\r\n            return resultWrapper(false, true);\r\n        }\r\n\r\n        value = parseInt(value, 10);\r\n        valid = value >= currentYear && value <= currentYear + expMaxLifetime;\r\n\r\n        return resultWrapper(valid, valid);\r\n    };\r\n});\r\n","Magento_Payment/js/model/credit-card-validation/expiration-date-validator/parse-date.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return function (value) {\r\n        var month, len;\r\n\r\n        if (value.match('/')) {\r\n            value = value.split(/\\s*\\/\\s*/g);\r\n\r\n            return {\r\n                month: value[0],\r\n                year: value.slice(1).join()\r\n            };\r\n        }\r\n\r\n        len = value[0] === '0' || value.length > 5 || value.length === 4 || value.length === 3 ? 2 : 1;\r\n        month = value.substr(0, len);\r\n\r\n        return {\r\n            month: month,\r\n            year: value.substr(month.length, 4)\r\n        };\r\n    };\r\n});\r\n","Magento_Payment/js/view/payment/cc-form.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Checkout/js/view/payment/default',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-data',\r\n    'Magento_Payment/js/model/credit-card-validation/credit-card-number-validator',\r\n    'mage/translate'\r\n], function (_, Component, creditCardData, cardNumberValidator, $t) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            creditCardType: '',\r\n            creditCardExpYear: '',\r\n            creditCardExpMonth: '',\r\n            creditCardNumber: '',\r\n            creditCardSsStartMonth: '',\r\n            creditCardSsStartYear: '',\r\n            creditCardSsIssue: '',\r\n            creditCardVerificationNumber: '',\r\n            selectedCardType: null\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe([\r\n                    'creditCardType',\r\n                    'creditCardExpYear',\r\n                    'creditCardExpMonth',\r\n                    'creditCardNumber',\r\n                    'creditCardVerificationNumber',\r\n                    'creditCardSsStartMonth',\r\n                    'creditCardSsStartYear',\r\n                    'creditCardSsIssue',\r\n                    'selectedCardType'\r\n                ]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Init component\r\n         */\r\n        initialize: function () {\r\n            var self = this;\r\n\r\n            this._super();\r\n\r\n            //Set credit card number to credit card data object\r\n            this.creditCardNumber.subscribe(function (value) {\r\n                var result;\r\n\r\n                self.selectedCardType(null);\r\n\r\n                if (value === '' || value === null) {\r\n                    return false;\r\n                }\r\n                result = cardNumberValidator(value);\r\n\r\n                if (!result.isPotentiallyValid && !result.isValid) {\r\n                    return false;\r\n                }\r\n\r\n                if (result.card !== null) {\r\n                    self.selectedCardType(result.card.type);\r\n                    creditCardData.creditCard = result.card;\r\n                }\r\n\r\n                if (result.isValid) {\r\n                    creditCardData.creditCardNumber = value;\r\n                    self.creditCardType(result.card.type);\r\n                }\r\n            });\r\n\r\n            //Set expiration year to credit card data object\r\n            this.creditCardExpYear.subscribe(function (value) {\r\n                creditCardData.expirationYear = value;\r\n            });\r\n\r\n            //Set expiration month to credit card data object\r\n            this.creditCardExpMonth.subscribe(function (value) {\r\n                creditCardData.expirationMonth = value;\r\n            });\r\n\r\n            //Set cvv code to credit card data object\r\n            this.creditCardVerificationNumber.subscribe(function (value) {\r\n                creditCardData.cvvCode = value;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get code\r\n         * @returns {String}\r\n         */\r\n        getCode: function () {\r\n            return 'cc';\r\n        },\r\n\r\n        /**\r\n         * Get data\r\n         * @returns {Object}\r\n         */\r\n        getData: function () {\r\n            return {\r\n                'method': this.item.method,\r\n                'additional_data': {\r\n                    'cc_cid': this.creditCardVerificationNumber(),\r\n                    'cc_ss_start_month': this.creditCardSsStartMonth(),\r\n                    'cc_ss_start_year': this.creditCardSsStartYear(),\r\n                    'cc_ss_issue': this.creditCardSsIssue(),\r\n                    'cc_type': this.creditCardType(),\r\n                    'cc_exp_year': this.creditCardExpYear(),\r\n                    'cc_exp_month': this.creditCardExpMonth(),\r\n                    'cc_number': this.creditCardNumber()\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Get list of available credit card types\r\n         * @returns {Object}\r\n         */\r\n        getCcAvailableTypes: function () {\r\n            return window.checkoutConfig.payment.ccform.availableTypes[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * Get payment icons\r\n         * @param {String} type\r\n         * @returns {Boolean}\r\n         */\r\n        getIcons: function (type) {\r\n            return window.checkoutConfig.payment.ccform.icons.hasOwnProperty(type) ?\r\n                window.checkoutConfig.payment.ccform.icons[type]\r\n                : false;\r\n        },\r\n\r\n        /**\r\n         * Get list of months\r\n         * @returns {Object}\r\n         */\r\n        getCcMonths: function () {\r\n            return window.checkoutConfig.payment.ccform.months[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * Get list of years\r\n         * @returns {Object}\r\n         */\r\n        getCcYears: function () {\r\n            return window.checkoutConfig.payment.ccform.years[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * Check if current payment has verification\r\n         * @returns {Boolean}\r\n         */\r\n        hasVerification: function () {\r\n            return window.checkoutConfig.payment.ccform.hasVerification[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @deprecated\r\n         * @returns {Boolean}\r\n         */\r\n        hasSsCardType: function () {\r\n            return window.checkoutConfig.payment.ccform.hasSsCardType[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * Get image url for CVV\r\n         * @returns {String}\r\n         */\r\n        getCvvImageUrl: function () {\r\n            return window.checkoutConfig.payment.ccform.cvvImageUrl[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * Get image for CVV\r\n         * @returns {String}\r\n         */\r\n        getCvvImageHtml: function () {\r\n            return '<img src=\"' + this.getCvvImageUrl() +\r\n                '\" alt=\"' + $t('Card Verification Number Visual Reference') +\r\n                '\" title=\"' + $t('Card Verification Number Visual Reference') +\r\n                '\" />';\r\n        },\r\n\r\n        /**\r\n         * Get unsanitized html for image for CVV\r\n         * @returns {String}\r\n         */\r\n        getCvvImageUnsanitizedHtml: function () {\r\n            return this.getCvvImageHtml();\r\n        },\r\n\r\n        /**\r\n         * @deprecated\r\n         * @returns {Object}\r\n         */\r\n        getSsStartYears: function () {\r\n            return window.checkoutConfig.payment.ccform.ssStartYears[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * Get list of available credit card types values\r\n         * @returns {Object}\r\n         */\r\n        getCcAvailableTypesValues: function () {\r\n            return _.map(this.getCcAvailableTypes(), function (value, key) {\r\n                return {\r\n                    'value': key,\r\n                    'type': value\r\n                };\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get list of available month values\r\n         * @returns {Object}\r\n         */\r\n        getCcMonthsValues: function () {\r\n            return _.map(this.getCcMonths(), function (value, key) {\r\n                return {\r\n                    'value': key,\r\n                    'month': value\r\n                };\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get list of available year values\r\n         * @returns {Object}\r\n         */\r\n        getCcYearsValues: function () {\r\n            return _.map(this.getCcYears(), function (value, key) {\r\n                return {\r\n                    'value': key,\r\n                    'year': value\r\n                };\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @deprecated\r\n         * @returns {Object}\r\n         */\r\n        getSsStartYearsValues: function () {\r\n            return _.map(this.getSsStartYears(), function (value, key) {\r\n                return {\r\n                    'value': key,\r\n                    'year': value\r\n                };\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Is legend available to display\r\n         * @returns {Boolean}\r\n         */\r\n        isShowLegend: function () {\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Get available credit card type by code\r\n         * @param {String} code\r\n         * @returns {String}\r\n         */\r\n        getCcTypeTitleByCode: function (code) {\r\n            var title = '',\r\n                keyValue = 'value',\r\n                keyType = 'type';\r\n\r\n            _.each(this.getCcAvailableTypesValues(), function (value) {\r\n                if (value[keyValue] === code) {\r\n                    title = value[keyType];\r\n                }\r\n            });\r\n\r\n            return title;\r\n        },\r\n\r\n        /**\r\n         * Prepare credit card number to output\r\n         * @param {String} number\r\n         * @returns {String}\r\n         */\r\n        formatDisplayCcNumber: function (number) {\r\n            return 'xxxx-' + number.substr(-4);\r\n        },\r\n\r\n        /**\r\n         * Get credit card details\r\n         * @returns {Array}\r\n         */\r\n        getInfo: function () {\r\n            return [\r\n                {\r\n                    'name': 'Credit Card Type', value: this.getCcTypeTitleByCode(this.creditCardType())\r\n                },\r\n                {\r\n                    'name': 'Credit Card Number', value: this.formatDisplayCcNumber(this.creditCardNumber())\r\n                }\r\n            ];\r\n        }\r\n    });\r\n});\r\n","Magento_Payment/js/view/payment/iframe.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Payment/js/view/payment/cc-form',\r\n    'Magento_Ui/js/model/messageList',\r\n    'mage/translate',\r\n    'Magento_Checkout/js/model/full-screen-loader',\r\n    'Magento_Checkout/js/action/set-payment-information',\r\n    'Magento_Checkout/js/model/payment/additional-validators',\r\n    'Magento_Ui/js/modal/alert'\r\n], function (\r\n    $,\r\n    Component,\r\n    messageList,\r\n    $t,\r\n    fullScreenLoader,\r\n    setPaymentInformationAction,\r\n    additionalValidators,\r\n    alert\r\n) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Payment/payment/iframe',\r\n            timeoutId: null,\r\n            timeoutMessage: 'Sorry, but something went wrong.'\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getSource: function () {\r\n            return window.checkoutConfig.payment.iframe.source[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getControllerName: function () {\r\n            return window.checkoutConfig.payment.iframe.controllerName[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getPlaceOrderUrl: function () {\r\n            return window.checkoutConfig.payment.iframe.placeOrderUrl[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getCgiUrl: function () {\r\n            return window.checkoutConfig.payment.iframe.cgiUrl[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getSaveOrderUrl: function () {\r\n            return window.checkoutConfig.payment.iframe.saveOrderUrl[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getDateDelim: function () {\r\n            return window.checkoutConfig.payment.iframe.dateDelim[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getCardFieldsMap: function () {\r\n            return window.checkoutConfig.payment.iframe.cardFieldsMap[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getExpireYearLength: function () {\r\n            return window.checkoutConfig.payment.iframe.expireYearLength[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @param {Object} parent\r\n         * @returns {Function}\r\n         */\r\n        originalPlaceOrder: function (parent) {\r\n            return parent.placeOrder.bind(parent);\r\n        },\r\n\r\n        /**\r\n         * @returns {Number}\r\n         */\r\n        getTimeoutTime: function () {\r\n            return window.checkoutConfig.payment.iframe.timeoutTime[this.getCode()];\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getTimeoutMessage: function () {\r\n            return $t(this.timeoutMessage);\r\n        },\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        placeOrder: function () {\r\n            var self = this;\r\n\r\n            if (this.validateHandler() &&\r\n                additionalValidators.validate() &&\r\n                this.isPlaceOrderActionAllowed() === true\r\n            ) {\r\n                fullScreenLoader.startLoader();\r\n\r\n                this.isPlaceOrderActionAllowed(false);\r\n\r\n                $.when(\r\n                    this.setPaymentInformation()\r\n                ).done(\r\n                    this.done.bind(this)\r\n                ).fail(\r\n                    this.fail.bind(this)\r\n                ).always(\r\n                    function () {\r\n                        self.isPlaceOrderActionAllowed(true);\r\n                    }\r\n                );\r\n\r\n                this.initTimeoutHandler();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         */\r\n        setPaymentInformation: function () {\r\n            return setPaymentInformationAction(\r\n                this.messageContainer,\r\n                {\r\n                    method: this.getCode()\r\n                }\r\n            );\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         */\r\n        initTimeoutHandler: function () {\r\n            this.timeoutId = setTimeout(\r\n                this.timeoutHandler.bind(this),\r\n                this.getTimeoutTime()\r\n            );\r\n\r\n            $(window).off('clearTimeout')\r\n                .on('clearTimeout', this.clearTimeout.bind(this));\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         */\r\n        clearTimeout: function () {\r\n            clearTimeout(this.timeoutId);\r\n            this.fail();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         */\r\n        timeoutHandler: function () {\r\n            this.clearTimeout();\r\n\r\n            alert(\r\n                {\r\n                    content: this.getTimeoutMessage(),\r\n                    actions: {\r\n\r\n                        /**\r\n                         * {Function}\r\n                         */\r\n                        always: this.alertActionHandler.bind(this)\r\n                    }\r\n                }\r\n            );\r\n\r\n            this.fail();\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         */\r\n        alertActionHandler: function () {\r\n            fullScreenLoader.startLoader();\r\n            window.location.reload();\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         */\r\n        fail: function () {\r\n            fullScreenLoader.stopLoader();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * {Function}\r\n         */\r\n        done: function () {\r\n            this.placeOrderHandler().fail(function () {\r\n                fullScreenLoader.stopLoader();\r\n            });\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Payment/js/view/payment/payments.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/payment/renderer-list'\r\n], function (Component, rendererList) {\r\n    'use strict';\r\n\r\n    rendererList.push(\r\n        {\r\n            type: 'free',\r\n            component: 'Magento_Payment/js/view/payment/method-renderer/free-method'\r\n        }\r\n    );\r\n\r\n    /** Add view logic here if needed */\r\n    return Component.extend({});\r\n});\r\n","Magento_Payment/js/view/payment/method-renderer/free-method.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* @api */\r\ndefine([\r\n    'Magento_Checkout/js/view/payment/default',\r\n    'Magento_Checkout/js/model/quote'\r\n], function (Component, quote) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Payment/payment/free'\r\n        },\r\n\r\n        /** Returns is method available */\r\n        isAvailable: function () {\r\n            return quote.totals()['grand_total'] <= 0;\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/order-review.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery-ui-modules/widget',\r\n    'mage/translate',\r\n    'mage/mage',\r\n    'mage/validation'\r\n], function ($, alert) {\r\n    'use strict';\r\n\r\n    $.widget('mage.orderReview', {\r\n        options: {\r\n            orderReviewSubmitSelector: '#review-button',\r\n            shippingSelector: '#shipping_method',\r\n            shippingSubmitFormSelector: null,\r\n            updateOrderSelector: '#update-order',\r\n            billingAsShippingSelector: '#billing\\\\:as_shipping',\r\n            updateContainerSelector: '#details-reload',\r\n            waitLoadingContainer: '#review-please-wait',\r\n            shippingMethodContainer: '#shipping-method-container',\r\n            agreementSelector: 'div.checkout-agreements input',\r\n            isAjax: false,\r\n            shippingMethodUpdateUrl: null,\r\n            updateOrderSubmitUrl: null,\r\n            canEditShippingMethod: false\r\n        },\r\n\r\n        /**\r\n         * Widget instance properties\r\n         */\r\n        triggerPropertyChange: true,\r\n        isShippingSubmitForm: false,\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            var isDisable;\r\n\r\n            //change handler for ajaxEnabled\r\n            if (this.options.isAjax) {\r\n                this._submitOrder = this._ajaxSubmitOrder;\r\n            }\r\n\r\n            this.element.on('click', this.options.orderReviewSubmitSelector, $.proxy(this._submitOrder, this))\r\n                .on('click', this.options.billingAsShippingSelector, $.proxy(this._shippingTobilling, this))\r\n                .on('change',\r\n                    this.options.shippingSelector,\r\n                    $.proxy(this._submitUpdateOrder,\r\n                        this,\r\n                        this.options.updateOrderSubmitUrl,\r\n                        this.options.updateContainerSelector\r\n                    )\r\n                ).find(this.options.updateOrderSelector).on('click', $.proxy(this._updateOrderHandler, this)).end();\r\n            this._shippingTobilling();\r\n\r\n            if ($(this.options.shippingSubmitFormSelector).length && this.options.canEditShippingMethod) {\r\n                this.isShippingSubmitForm = true;\r\n                $(this.options.shippingSubmitFormSelector)\r\n                    .on('change',\r\n                        this.options.shippingSelector,\r\n                        $.proxy(\r\n                            this._submitUpdateOrder,\r\n                            this,\r\n                            $(this.options.shippingSubmitFormSelector).prop('action'),\r\n                            this.options.updateContainerSelector\r\n                        )\r\n                    );\r\n                this._updateOrderSubmit(!$(this.options.shippingSubmitFormSelector)\r\n                    .find(this.options.shippingSelector).val());\r\n            } else {\r\n                isDisable = this.isShippingSubmitForm && this.element.find(this.options.shippingSelector).val();\r\n                this.element\r\n                    .on('input propertychange', ':input[name]',\r\n                        $.proxy(this._updateOrderSubmit, this, isDisable, this._onShippingChange)\r\n                    ).find('select').not(this.options.shippingSelector).on('change', this._propertyChange);\r\n                this._updateOrderSubmit(isDisable);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * show ajax loader\r\n         */\r\n        _ajaxBeforeSend: function () {\r\n            this.element.find(this.options.waitLoadingContainer).show();\r\n        },\r\n\r\n        /**\r\n         * hide ajax loader\r\n         */\r\n        _ajaxComplete: function () {\r\n            this.element.find(this.options.waitLoadingContainer).hide();\r\n        },\r\n\r\n        /**\r\n         * trigger propertychange for input type select\r\n         */\r\n        _propertyChange: function () {\r\n            $(this).trigger('propertychange');\r\n        },\r\n\r\n        /**\r\n         * trigger change for the update of shipping methods from server\r\n         */\r\n        _updateOrderHandler: function () {\r\n            $(this.options.shippingSelector).trigger('change');\r\n        },\r\n\r\n        /**\r\n         * Attempt to submit order\r\n         */\r\n        _submitOrder: function () {\r\n            if (this._validateForm()) {\r\n                this.element.find(this.options.updateOrderSelector).fadeTo(0, 0.5)\r\n                    .end().find(this.options.waitLoadingContainer).show()\r\n                    .end().trigger('submit');\r\n                this._updateOrderSubmit(true);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Attempt to ajax submit order\r\n         */\r\n        _ajaxSubmitOrder: function () {\r\n            if (this.element.find(this.options.waitLoadingContainer).is(':visible')) {\r\n                return false;\r\n            }\r\n            $.ajax({\r\n                url: this.element.prop('action'),\r\n                type: 'post',\r\n                context: this,\r\n                data: {\r\n                    isAjax: 1\r\n                },\r\n                dataType: 'json',\r\n                beforeSend: this._ajaxBeforeSend,\r\n                complete: this._ajaxComplete,\r\n\r\n                /** @inheritdoc */\r\n                success: function (response) {\r\n                    var msg;\r\n\r\n                    if ($.type(response) === 'object' && !$.isEmptyObject(response)) {\r\n                        if (response['error_messages']) {\r\n                            this._ajaxComplete();\r\n                            msg = response['error_messages'];\r\n\r\n                            /* eslint-disable max-depth */\r\n                            if (msg) {\r\n                                if ($.type(msg) === 'array') {\r\n                                    msg = msg.join('\\n');\r\n                                }\r\n                            }\r\n\r\n                            /* eslint-enablemax-depth */\r\n                            alert({\r\n                                content: msg\r\n                            });\r\n\r\n                            return false;\r\n                        }\r\n\r\n                        if (response.redirect) {\r\n                            $.mage.redirect(response.redirect);\r\n\r\n                            return false;\r\n                        } else if (response.success) {\r\n                            $.mage.redirect(this.options.successUrl);\r\n\r\n                            return false;\r\n                        }\r\n                        this._ajaxComplete();\r\n                        alert({\r\n                            content: $.mage.__('Sorry, something went wrong.')\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /** @inheritdoc */\r\n                error: function () {\r\n                    alert({\r\n                        content: $.mage.__('Sorry, something went wrong. Please try again later.')\r\n                    });\r\n                    this._ajaxComplete();\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Validate Order form\r\n         */\r\n        _validateForm: function () {\r\n            this.element.find(this.options.agreementSelector).off('change').on('change', $.proxy(function () {\r\n                var isValid = this._validateForm();\r\n\r\n                this._updateOrderSubmit(!isValid);\r\n            }, this));\r\n\r\n            if (this.element.data('mageValidation')) {\r\n                return this.element.validation().valid();\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Check/Set whether order can be submitted\r\n         * Also disables form submission element, if any\r\n         * @param {*} shouldDisable - whether should prevent order submission explicitly\r\n         * @param {Function} [fn] - function for shipping change handler\r\n         * @param {*} [*] - if true the property change will be set to true\r\n         */\r\n        _updateOrderSubmit: function (shouldDisable, fn) {\r\n            this._toggleButton(this.options.orderReviewSubmitSelector, shouldDisable);\r\n\r\n            if ($.type(fn) === 'function') {\r\n                fn.call(this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Enable/Disable button\r\n         * @param {jQuery} button - button selector to be toggled\r\n         * @param {*} disable - boolean for toggling\r\n         */\r\n        _toggleButton: function (button, disable) {\r\n            $(button).prop({\r\n                'disabled': disable\r\n            }).toggleClass('no-checkout', disable).fadeTo(0, disable ? 0.5 : 1);\r\n        },\r\n\r\n        /**\r\n         * Copy element value from shipping to billing address\r\n         * @param {jQuery.Event} e - optional\r\n         */\r\n        _shippingTobilling: function (e) {\r\n            var isChecked, opacity;\r\n\r\n            if (this.options.shippingSubmitFormSelector) {\r\n                return false;\r\n            }\r\n            isChecked = $(this.options.billingAsShippingSelector).is(':checked');\r\n            opacity = isChecked ? 0.5 : 1;\r\n\r\n            if (isChecked) {\r\n                this.element.validation('clearError', ':input[name^=\"billing\"]');\r\n            }\r\n            $(':input[name^=\"shipping\"]', this.element).each($.proxy(function (key, value) {\r\n                var fieldObj = $(value.id.replace('shipping:', '#billing\\\\:'));\r\n\r\n                if (isChecked) {\r\n                    fieldObj = fieldObj.val($(value).val());\r\n                }\r\n                fieldObj.prop({\r\n                    'readonly': isChecked,\r\n                    'disabled': isChecked\r\n                }).fadeTo(0, opacity);\r\n\r\n                if (fieldObj.is('select')) {\r\n                    this.triggerPropertyChange = false;\r\n                    fieldObj.trigger('change');\r\n                }\r\n            }, this));\r\n\r\n            if (isChecked || e) {\r\n                this._updateOrderSubmit(true);\r\n            }\r\n            this.triggerPropertyChange = true;\r\n        },\r\n\r\n        /**\r\n         * Dispatch an ajax request of Update Order submission\r\n         * @param {*} url - url where to submit shipping method\r\n         * @param {*} resultId - id of element to be updated\r\n         */\r\n        _submitUpdateOrder: function (url, resultId) {\r\n            var isChecked, formData, callBackResponseHandler, shippingMethod;\r\n\r\n            if (this.element.find(this.options.waitLoadingContainer).is(':visible')) {\r\n                return false;\r\n            }\r\n            isChecked = $(this.options.billingAsShippingSelector).is(':checked');\r\n            formData = null;\r\n            callBackResponseHandler = null;\r\n            shippingMethod = $(this.options.shippingSelector).val().trim();\r\n            this._shippingTobilling();\r\n\r\n            if (url && resultId && shippingMethod) {\r\n                this._updateOrderSubmit(true);\r\n                this._toggleButton(this.options.updateOrderSelector, true);\r\n\r\n                // form data and callBack updated based on the shipping Form element\r\n                if (this.isShippingSubmitForm) {\r\n                    formData = $(this.options.shippingSubmitFormSelector).serialize() + '&isAjax=true';\r\n\r\n                    /**\r\n                     * @param {Object} response\r\n                     */\r\n                    callBackResponseHandler = function (response) {\r\n                        $(resultId).html(response);\r\n                        this._updateOrderSubmit(false);\r\n                        this._ajaxComplete();\r\n                    };\r\n                } else {\r\n                    formData = this.element.serialize() + '&isAjax=true';\r\n\r\n                    /**\r\n                     * @param {Object} response\r\n                     */\r\n                    callBackResponseHandler = function (response) {\r\n                        $(resultId).html(response);\r\n                        this._ajaxShippingUpdate(shippingMethod);\r\n                    };\r\n                }\r\n\r\n                if (isChecked) {\r\n                    $(this.options.shippingSelect).prop('disabled', true);\r\n                }\r\n                $.ajax({\r\n                    url: url,\r\n                    type: 'post',\r\n                    context: this,\r\n                    beforeSend: this._ajaxBeforeSend,\r\n                    data: formData,\r\n                    success: callBackResponseHandler\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update Shipping Methods Element from server\r\n         * @param {*} shippingMethod\r\n         */\r\n        _ajaxShippingUpdate: function (shippingMethod) {\r\n            $.ajax({\r\n                url: this.options.shippingMethodUpdateUrl,\r\n                data: {\r\n                    isAjax: true,\r\n                    'shipping_method': shippingMethod\r\n                },\r\n                type: 'post',\r\n                context: this,\r\n\r\n                /** @inheritdoc */\r\n                success: function (response) {\r\n                    $(this.options.shippingMethodContainer).parent().html(response);\r\n                    this._toggleButton(this.options.updateOrderSelector, false);\r\n                    this._updateOrderSubmit(false);\r\n                },\r\n                complete: this._ajaxComplete\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Actions on change Shipping Address data\r\n         */\r\n        _onShippingChange: function () {\r\n            if (this.triggerPropertyChange && $(this.options.shippingSelector).val().trim()) {\r\n                this.element.find(this.options.shippingSelector).hide().end()\r\n                    .find(this.options.shippingSelector + '_update').show();\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.orderReview;\r\n});\r\n","Magento_Paypal/js/paypal-checkout.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'Magento_Customer/js/customer-data',\r\n    'jquery-ui-modules/widget',\r\n    'mage/mage'\r\n], function ($, confirm, customerData) {\r\n    'use strict';\r\n\r\n    $.widget('mage.paypalCheckout', {\r\n        options: {\r\n            originalForm:\r\n                'form:not(#product_addtocart_form_from_popup):has(input[name=\"product\"][value=%1])',\r\n            productId: 'input[type=\"hidden\"][name=\"product\"]',\r\n            ppCheckoutSelector: '[data-role=pp-checkout-url]',\r\n            ppCheckoutInput: '<input type=\"hidden\" data-role=\"pp-checkout-url\" name=\"return_url\" value=\"\"/>'\r\n        },\r\n\r\n        /**\r\n         * Initialize store credit events\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this.element.on('click', '[data-action=\"checkout-form-submit\"]', $.proxy(function (e) {\r\n                var $target = $(e.target),\r\n                    returnUrl = $target.data('checkout-url'),\r\n                    productId = $target.closest('form').find(this.options.productId).val(),\r\n                    originalForm = this.options.originalForm.replace('%1', productId),\r\n                    self = this,\r\n                    billingAgreement = customerData.get('paypal-billing-agreement');\r\n\r\n                e.preventDefault();\r\n\r\n                if (billingAgreement().askToCreate) {\r\n                    confirm({\r\n                        content: billingAgreement().confirmMessage,\r\n                        actions: {\r\n\r\n                            /**\r\n                             * Confirmation handler\r\n                             *\r\n                             */\r\n                            confirm: function () {\r\n                                returnUrl = billingAgreement().confirmUrl;\r\n                                self._redirect(returnUrl, originalForm);\r\n                            },\r\n\r\n                            /**\r\n                             * Cancel confirmation handler\r\n                             *\r\n                             */\r\n                            cancel: function (event) {\r\n                                if (event && !$(event.target).hasClass('action-close')) {\r\n                                    self._redirect(returnUrl);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    this._redirect(returnUrl, originalForm);\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Redirect to certain url, with optional form\r\n         * @param {String} returnUrl\r\n         * @param {HTMLElement} originalForm\r\n         *\r\n         */\r\n        _redirect: function (returnUrl, originalForm) {\r\n            var $form,\r\n                ppCheckoutInput;\r\n\r\n            if (this.options.isCatalogProduct) {\r\n                // find the form from which the button was clicked\r\n                $form = originalForm ? $(originalForm) : $($(this.options.shortcutContainerClass).closest('form'));\r\n\r\n                ppCheckoutInput = $form.find(this.options.ppCheckoutSelector)[0];\r\n\r\n                if (!ppCheckoutInput) {\r\n                    ppCheckoutInput = $(this.options.ppCheckoutInput);\r\n                    ppCheckoutInput.appendTo($form);\r\n                }\r\n                $(ppCheckoutInput).val(returnUrl);\r\n\r\n                $form.trigger('submit');\r\n            } else {\r\n                $.mage.redirect(returnUrl);\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.paypalCheckout;\r\n});\r\n","Magento_Paypal/js/action/set-payment-method.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/action/set-payment-information'\r\n], function (quote, setPaymentInformation) {\r\n    'use strict';\r\n\r\n    return function (messageContainer) {\r\n        return setPaymentInformation(messageContainer, quote.paymentMethod());\r\n    };\r\n});\r\n","Magento_Paypal/js/in-context/billing-agreement.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'Magento_Customer/js/customer-data'\r\n], function ($, confirm, customerData) {\r\n    'use strict';\r\n\r\n    $.widget('mage.billingAgreement', {\r\n        options: {\r\n            invalidateOnLoad: false,\r\n            cancelButtonSelector: '.block-billing-agreements-view button.cancel',\r\n            cancelMessage: '',\r\n            cancelUrl: ''\r\n        },\r\n\r\n        /**\r\n         * Initialize billing agreements events\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            var self = this;\r\n\r\n            if (this.options.invalidateOnLoad) {\r\n                this.invalidate();\r\n            }\r\n            $(this.options.cancelButtonSelector).on('click', function () {\r\n                confirm({\r\n                    content: self.options.cancelMessage,\r\n                    actions: {\r\n                        /**\r\n                         * 'Confirm' action handler.\r\n                         */\r\n                        confirm: function () {\r\n                            self.invalidate();\r\n                            window.location.href = self.options.cancelUrl;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return false;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * clear paypal billing agreement customer data\r\n         * @returns void\r\n         */\r\n        invalidate: function () {\r\n            customerData.invalidate(['paypal-billing-agreement']);\r\n        }\r\n    });\r\n\r\n    return $.mage.billingAgreement;\r\n});\r\n","Magento_Paypal/js/in-context/button.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'uiComponent',\r\n    'jquery',\r\n    'Magento_Paypal/js/in-context/express-checkout-wrapper',\r\n    'Magento_Customer/js/customer-data'\r\n], function (Component, $, Wrapper, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend(Wrapper).extend({\r\n        defaults: {\r\n            declinePayment: false\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function (config, element) {\r\n            var cart = customerData.get('cart'),\r\n                customer = customerData.get('customer');\r\n\r\n            this._super();\r\n            this.renderPayPalButtons(element);\r\n\r\n            if (cart().isGuestCheckoutAllowed === undefined) {\r\n                cart.subscribe(function (updatedCart) {\r\n                    this.declinePayment = !customer().firstname && !cart().isGuestCheckoutAllowed;\r\n\r\n                    return updatedCart;\r\n                }.bind(this));\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        beforePayment: function (resolve, reject) {\r\n            var promise = $.Deferred();\r\n\r\n            if (this.declinePayment) {\r\n                this.addError(this.signInMessage, 'warning');\r\n\r\n                reject();\r\n            } else {\r\n                promise.resolve();\r\n            }\r\n\r\n            return promise;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        prepareClientConfig: function () {\r\n            this._super();\r\n\r\n            return this.clientConfig;\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/in-context/express-checkout-smart-buttons.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/* eslint-disable max-nested-callbacks */\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    'Magento_Paypal/js/in-context/paypal-sdk',\r\n    'domReady!'\r\n], function (_, $, paypalSdk) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Triggers beforePayment action on PayPal buttons\r\n     *\r\n     * @param {Object} clientConfig\r\n     * @returns {Object} jQuery promise\r\n     */\r\n    function performCreateOrder(clientConfig) {\r\n        var params = {\r\n            'quote_id': clientConfig.quoteId,\r\n            'customer_id': clientConfig.customerId || '',\r\n            'form_key': clientConfig.formKey,\r\n            button: clientConfig.button\r\n        };\r\n\r\n        return $.Deferred(function (deferred) {\r\n            clientConfig.rendererComponent.beforePayment(deferred.resolve, deferred.reject).then(function () {\r\n                $.post(clientConfig.getTokenUrl, params).done(function (res) {\r\n                    clientConfig.rendererComponent.afterPayment(res, deferred.resolve, deferred.reject);\r\n                }).fail(function (jqXHR, textStatus, err) {\r\n                    clientConfig.rendererComponent.catchPayment(err, deferred.resolve, deferred.reject);\r\n                });\r\n            });\r\n        }).promise();\r\n    }\r\n\r\n    /**\r\n     * Triggers beforeOnAuthorize action on PayPal buttons\r\n     * @param {Object} clientConfig\r\n     * @param {Object} data\r\n     * @param {Object} actions\r\n     * @returns {Object} jQuery promise\r\n     */\r\n    function performOnApprove(clientConfig, data, actions) {\r\n        var params = {\r\n            paymentToken: data.orderID,\r\n            payerId: data.payerID,\r\n            'form_key': clientConfig.formKey\r\n        };\r\n\r\n        return $.Deferred(function (deferred) {\r\n            clientConfig.rendererComponent.beforeOnAuthorize(deferred.resolve, deferred.reject, actions)\r\n                .then(function () {\r\n                    $.post(clientConfig.onAuthorizeUrl, params).done(function (res) {\r\n                        clientConfig.rendererComponent\r\n                            .afterOnAuthorize(res, deferred.resolve, deferred.reject, actions);\r\n                    }).fail(function (jqXHR, textStatus, err) {\r\n                        clientConfig.rendererComponent.catchOnAuthorize(err, deferred.resolve, deferred.reject);\r\n                    });\r\n                });\r\n        }).promise();\r\n    }\r\n\r\n    return function (clientConfig, element) {\r\n        paypalSdk(clientConfig.sdkUrl).done(function (paypal) {\r\n            paypal.Buttons({\r\n                style: clientConfig.styles,\r\n\r\n                /**\r\n                 * onInit is called when the button first renders\r\n                 * @param {Object} data\r\n                 * @param {Object} actions\r\n                 */\r\n                onInit: function (data, actions) {\r\n                    clientConfig.rendererComponent.validate(actions);\r\n                },\r\n\r\n                /**\r\n                 * Triggers beforePayment action on PayPal buttons\r\n                 * @returns {Object} jQuery promise\r\n                 */\r\n                createOrder: function () {\r\n                    return performCreateOrder(clientConfig);\r\n                },\r\n\r\n                /**\r\n                 * Triggers beforeOnAuthorize action on PayPal buttons\r\n                 * @param {Object} data\r\n                 * @param {Object} actions\r\n                 */\r\n                onApprove: function (data, actions) {\r\n                    performOnApprove(clientConfig, data, actions);\r\n                },\r\n\r\n                /**\r\n                 * Execute logic on Paypal button click\r\n                 */\r\n                onClick: function () {\r\n                    clientConfig.rendererComponent.validate();\r\n                    clientConfig.rendererComponent.onClick();\r\n                },\r\n\r\n                /**\r\n                 * Process cancel action\r\n                 * @param {Object} data\r\n                 * @param {Object} actions\r\n                 */\r\n                onCancel: function (data, actions) {\r\n                    clientConfig.rendererComponent.onCancel(data, actions);\r\n                },\r\n\r\n                /**\r\n                 * Process errors\r\n                 *\r\n                 * @param {Error} err\r\n                 */\r\n                onError: function (err) {\r\n                    clientConfig.rendererComponent.onError(err);\r\n                }\r\n            }).render(element);\r\n        });\r\n    };\r\n});\r\n","Magento_Paypal/js/in-context/express-checkout-wrapper.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/translate',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Paypal/js/in-context/express-checkout-smart-buttons',\r\n    'Magento_Ui/js/modal/alert',\r\n    'mage/cookies'\r\n], function ($, $t, customerData, checkoutSmartButtons, alert) {\r\n    'use strict';\r\n\r\n    return {\r\n        defaults: {\r\n            paymentActionError: $t('Something went wrong with your request. Please try again later.'),\r\n            signInMessage: $t('To check out, please sign in with your email address.')\r\n        },\r\n\r\n        /**\r\n         * Render PayPal buttons using checkout.js\r\n         */\r\n        renderPayPalButtons: function (element) {\r\n            checkoutSmartButtons(this.prepareClientConfig(), element);\r\n        },\r\n\r\n        /**\r\n         * Validate payment method\r\n         *\r\n         * @param {Object} actions\r\n         */\r\n        validate: function (actions) {\r\n            this.actions = actions || this.actions;\r\n        },\r\n\r\n        /**\r\n         * Execute logic on Paypal button click\r\n         */\r\n        onClick: function () {},\r\n\r\n        /**\r\n         * Before payment execute\r\n         *\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         * @return {*}\r\n         */\r\n        beforePayment: function (resolve, reject) { //eslint-disable-line no-unused-vars\r\n            return $.Deferred().resolve();\r\n        },\r\n\r\n        /**\r\n         * After payment execute\r\n         *\r\n         * @param {Object} res\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         *\r\n         * @return {*}\r\n         */\r\n        afterPayment: function (res, resolve, reject) {\r\n\r\n            if (res.success) {\r\n                return resolve(res.token);\r\n            }\r\n\r\n            return reject(new Error(res['error_message']));\r\n        },\r\n\r\n        /**\r\n         * Catch payment\r\n         *\r\n         * @param {Error} err\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         */\r\n        catchPayment: function (err, resolve, reject) {\r\n            this.addAlert(this.paymentActionError);\r\n            reject(err);\r\n        },\r\n\r\n        /**\r\n         * Before onAuthorize execute\r\n         *\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         * @param {Object} actions\r\n         *\r\n         * @return {jQuery.Deferred}\r\n         */\r\n        beforeOnAuthorize: function (resolve, reject, actions) { //eslint-disable-line no-unused-vars\r\n            //display loading widget.\r\n            $('body').trigger('processStart');\r\n\r\n            return $.Deferred().resolve();\r\n        },\r\n\r\n        /**\r\n         * After onAuthorize execute\r\n         *\r\n         * @param {Object} res\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         * @param {Object} actions\r\n         *\r\n         * @return {*}\r\n         */\r\n        afterOnAuthorize: function (res, resolve, reject, actions) {\r\n            $('body').trigger('processStop');\r\n\r\n            if (res.success) {\r\n                resolve();\r\n\r\n                return actions.redirect(res.redirectUrl);\r\n            }\r\n\r\n            return reject(new Error(res['error_message']));\r\n        },\r\n\r\n        /**\r\n         * Catch payment\r\n         *\r\n         * @param {Error} err\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         */\r\n        catchOnAuthorize: function (err, resolve, reject) {\r\n            $('body').trigger('processStop');\r\n            this.addAlert(this.paymentActionError);\r\n            reject(err);\r\n        },\r\n\r\n        /**\r\n         * Process cancel action\r\n         *\r\n         * @param {Object} data\r\n         * @param {Object} actions\r\n         */\r\n        onCancel: function (data, actions) {\r\n            $('body').trigger('processStop');\r\n            actions.redirect(this.clientConfig.onCancelUrl);\r\n        },\r\n\r\n        /**\r\n         * Process errors\r\n         *\r\n         * @param {Error} err\r\n         */\r\n        onError: function (err) { //eslint-disable-line no-unused-vars\r\n            // Uncaught error isn't displayed in the console\r\n        },\r\n\r\n        /**\r\n         * Adds error message\r\n         *\r\n         * @param {String} message\r\n         * @param {String} [type]\r\n         */\r\n        addError: function (message, type) {\r\n            type = type || 'error';\r\n            customerData.set('messages', {\r\n                messages: [{\r\n                    type: type,\r\n                    text: message\r\n                }],\r\n                'data_id': Math.floor(Date.now() / 1000)\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Add alert message\r\n         *\r\n         * @param {String} message\r\n         */\r\n        addAlert: function (message) {\r\n            alert({\r\n                content: message\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getButtonId: function () {\r\n            return this.inContextId;\r\n        },\r\n\r\n        /**\r\n         * Populate client config with all required data\r\n         *\r\n         * @return {Object}\r\n         */\r\n        prepareClientConfig: function () {\r\n            this.clientConfig.rendererComponent = this;\r\n            this.clientConfig.formKey = $.mage.cookies.get('form_key');\r\n\r\n            return this.clientConfig;\r\n        }\r\n    };\r\n});\r\n","Magento_Paypal/js/in-context/paypal-sdk.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var dfd = $.Deferred();\r\n\r\n    /**\r\n     * Loads the PayPal SDK object\r\n     * @param {String} paypalUrl - the url of the PayPal SDK\r\n     */\r\n    return function loadPaypalScript(paypalUrl) {\r\n        //configuration for loaded PayPal script\r\n        require.config({\r\n            paths: {\r\n                paypalSdk: paypalUrl\r\n            },\r\n            shim: {\r\n                paypalSdk: {\r\n                    exports: 'paypal'\r\n                }\r\n            }\r\n        });\r\n\r\n        if (dfd.state() !== 'resolved') {\r\n            require(['paypalSdk'], function (paypalObject) {\r\n                dfd.resolve(paypalObject);\r\n            });\r\n        }\r\n\r\n        return dfd.promise();\r\n    };\r\n});\r\n","Magento_Paypal/js/in-context/product-express-checkout.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'jquery',\r\n    'uiComponent',\r\n    'Magento_Paypal/js/in-context/express-checkout-wrapper',\r\n    'Magento_Customer/js/customer-data'\r\n], function (_, $, Component, Wrapper, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend(Wrapper).extend({\r\n        defaults: {\r\n            productFormSelector: '#product_addtocart_form',\r\n            declinePayment: false,\r\n            formInvalid: false,\r\n            productAddedToCart: false\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function (config, element) {\r\n            var cart = customerData.get('cart'),\r\n                customer = customerData.get('customer'),\r\n                isGuestCheckoutAllowed;\r\n\r\n            this._super();\r\n\r\n            isGuestCheckoutAllowed = cart().isGuestCheckoutAllowed;\r\n\r\n            if (typeof isGuestCheckoutAllowed === 'undefined') {\r\n                isGuestCheckoutAllowed = config.clientConfig.isGuestCheckoutAllowed;\r\n            }\r\n\r\n            if (config.clientConfig.isVisibleOnProductPage) {\r\n                this.renderPayPalButtons(element);\r\n            }\r\n\r\n            this.declinePayment = !customer().firstname && !isGuestCheckoutAllowed;\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        onClick: function () {\r\n            var $form = $(this.productFormSelector);\r\n\r\n            if (!this.declinePayment && !this.productAddedToCart) {\r\n                $form.trigger('submit');\r\n                this.formInvalid = !$form.validation('isValid');\r\n                this.productAddedToCart = true;\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        beforePayment: function (resolve, reject) {\r\n            var promise = $.Deferred();\r\n\r\n            if (this.declinePayment) {\r\n                this.addError(this.signInMessage, 'warning');\r\n                reject();\r\n            } else if (this.formInvalid) {\r\n                reject();\r\n            } else {\r\n                $(document).on('ajax:addToCart', function (e, data) {\r\n                    if (_.isEmpty(data.response)) {\r\n                        return promise.resolve();\r\n                    }\r\n\r\n                    return reject();\r\n                });\r\n                $(document).on('ajax:addToCart:error', reject);\r\n            }\r\n\r\n            return promise;\r\n        },\r\n\r\n        /**\r\n         * After payment execute\r\n         *\r\n         * @param {Object} res\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         *\r\n         * @return {*}\r\n         */\r\n        afterPayment: function (res, resolve, reject) {\r\n            if (res.success) {\r\n                return resolve(res.token);\r\n            }\r\n\r\n            this.addAlert(res['error_message']);\r\n\r\n            return reject(new Error(res['error_message']));\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        prepareClientConfig: function () {\r\n            this._super();\r\n            this.clientConfig.quoteId = '';\r\n            this.clientConfig.customerId = '';\r\n\r\n            return this.clientConfig;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        onError: function (err) {\r\n            this.productAddedToCart = false;\r\n            this._super(err);\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        onCancel: function (data, actions) {\r\n            this.productAddedToCart = false;\r\n            this._super(data, actions);\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        afterOnAuthorize: function (res, resolve, reject, actions) {\r\n            this.productAddedToCart = false;\r\n\r\n            return this._super(res, resolve, reject, actions);\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/model/iframe-redirect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'Magento_Paypal/js/model/iframe',\r\n    'Magento_Ui/js/model/messageList'\r\n],\r\nfunction (ko, iframe, messageList) {\r\n    'use strict';\r\n\r\n    return function (cartUrl, errorMessage, goToSuccessPage, successUrl) {\r\n        if (this === window.self) {\r\n            window.location = cartUrl;\r\n        }\r\n\r\n        if (!!errorMessage.message) { //eslint-disable-line no-extra-boolean-cast\r\n            document.removeEventListener('click', iframe.stopEventPropagation, true);\r\n            iframe.isInAction(false);\r\n            messageList.addErrorMessage(errorMessage);\r\n        } else if (!!goToSuccessPage) { //eslint-disable-line no-extra-boolean-cast\r\n            window.location = successUrl;\r\n        } else {\r\n            window.location = cartUrl;\r\n        }\r\n    };\r\n});\r\n","Magento_Paypal/js/model/iframe.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['ko'], function (ko) {\r\n    'use strict';\r\n\r\n    var isInAction = ko.observable(false);\r\n\r\n    return {\r\n        isInAction: isInAction,\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         */\r\n        stopEventPropagation: function (event) {\r\n            event.stopImmediatePropagation();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n});\r\n","Magento_Paypal/js/view/paylater.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'uiElement',\r\n    'uiLayout',\r\n    'Magento_Paypal/js/in-context/paypal-sdk',\r\n    'domReady!'\r\n], function (\r\n    $,\r\n    ko,\r\n    Component,\r\n    layout,\r\n    paypalSdk\r\n) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n        defaults: {\r\n            template: 'Magento_Paypal/paylater',\r\n            sdkUrl: '',\r\n            attributes: {\r\n                class: 'pay-later-message'\r\n            },\r\n            refreshSelector: '',\r\n            displayAmount: false,\r\n            amountComponentConfig: {\r\n                name: '${ $.name }.amountProvider',\r\n                component: ''\r\n            }\r\n        },\r\n        paypal: null,\r\n        amount: null,\r\n\r\n        /**\r\n         * Initialize\r\n         *\r\n         * @returns {*}\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .observe(['amount']);\r\n\r\n            if (this.displayAmount) {\r\n                layout([this.amountComponentConfig]);\r\n            }\r\n\r\n            if (this.sdkUrl !== '') {\r\n                this.loadPayPalSdk(this.sdkUrl)\r\n                    .then(this._setPayPalObject.bind(this));\r\n            }\r\n\r\n            if (this.refreshSelector) {\r\n                $(this.refreshSelector).on('click', this._refreshMessages.bind(this));\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Get attribute value from configuration\r\n         *\r\n         * @param {String} attributeName\r\n         * @returns {*|null}\r\n         */\r\n        getAttribute: function (attributeName) {\r\n            return typeof this.attributes[attributeName] !== 'undefined' ?\r\n                this.attributes[attributeName] : null;\r\n        },\r\n\r\n        /**\r\n         * Load PP SDK with preconfigured options\r\n         *\r\n         * @param {String} sdkUrl\r\n         */\r\n        loadPayPalSdk: function (sdkUrl) {\r\n            return paypalSdk(sdkUrl);\r\n        },\r\n\r\n        /**\r\n         * Set reference to paypal Sdk object\r\n         *\r\n         * @param {Object} paypal\r\n         * @private\r\n         */\r\n        _setPayPalObject: function (paypal) {\r\n            this.paypal = paypal;\r\n        },\r\n\r\n        /**\r\n         * Render messages\r\n         *\r\n         * @private\r\n         */\r\n        _refreshMessages: function () {\r\n            if (this.paypal) {\r\n                this.paypal.Messages.render();\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/amountProviders/checkout.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'uiElement',\r\n    'uiRegistry',\r\n    'Magento_Checkout/js/model/quote',\r\n    'domReady!'\r\n], function (\r\n    $,\r\n    ko,\r\n    Component,\r\n    registry,\r\n    quote\r\n) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            amount: null\r\n        },\r\n\r\n        /**\r\n         * Initialize\r\n         *\r\n         * @returns {*}\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.updateAmount();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Update amount\r\n         */\r\n        updateAmount: function () {\r\n            var payLater = registry.get(this.parentName);\r\n\r\n            quote.totals.subscribe(function (newValue) {\r\n                payLater.amount(newValue['base_grand_total']);\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/amountProviders/product-grouped.js":"/**\r\n* Copyright \u00a9 Magento, Inc. All rights reserved.\r\n* See COPYING.txt for license details.\r\n*/\r\n\r\ndefine([\r\n    'jquery',\r\n    'uiElement',\r\n    'uiRegistry',\r\n    'domReady!'\r\n], function (\r\n    $,\r\n    Component,\r\n    registry\r\n) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n        defaults: {\r\n            tableWrapperSelector: '.table-wrapper.grouped',\r\n            priceBoxSelector: '[data-role=\"priceBox\"]',\r\n            qtyFieldSelector: '.input-text.qty',\r\n            amount: null\r\n        },\r\n        priceInfo: {},\r\n\r\n        /**\r\n         * Initialize\r\n         *\r\n         * @returns {*}\r\n         */\r\n        initialize: function () {\r\n            var self = this;\r\n\r\n            this._super();\r\n\r\n            $('tbody tr', this.tableWrapperSelector).each(function (index, element) {\r\n                var priceBox = $(self.priceBoxSelector, element),\r\n                    qtyElement = $(self.qtyFieldSelector, element),\r\n                    productId = priceBox.data('productId'),\r\n                    priceElement = $('#product-price-' + productId);\r\n\r\n                self.priceInfo[productId] = {\r\n                    qty: self._getQty(qtyElement),\r\n                    price: priceElement.data('priceAmount')\r\n                };\r\n            });\r\n\r\n            $(this.qtyFieldSelector).on('change', this._onQtyChange.bind(this));\r\n\r\n            this._updateAmount();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Get product quantity\r\n         *\r\n         * @param {jQuery.Element} element\r\n         * @private\r\n         */\r\n        _getQty: function (element) {\r\n            var qty = parseFloat(element.val());\r\n\r\n            return !isNaN(qty) && qty ? qty : 0;\r\n        },\r\n\r\n        /**\r\n         * Handle changed product quantity\r\n         *\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _onQtyChange: function (event) {\r\n            var qtyElement = $(event.target),\r\n                parent = qtyElement.parents('tr'),\r\n                priceBox = $(this.priceBoxSelector, parent),\r\n                productId = priceBox.data('productId');\r\n\r\n            if (this.priceInfo[productId]) {\r\n                this.priceInfo[productId].qty = this._getQty(qtyElement);\r\n            }\r\n\r\n            this._updateAmount();\r\n        },\r\n\r\n        /**\r\n         * Calculate and update amount\r\n         *\r\n         * @private\r\n         */\r\n        _updateAmount: function () {\r\n            var productId,\r\n                amount = 0,\r\n                payLater = registry.get(this.parentName);\r\n\r\n            for (productId in this.priceInfo) {\r\n                if (this.priceInfo.hasOwnProperty(productId)) {\r\n                    amount += this.priceInfo[productId].price * this.priceInfo[productId].qty;\r\n                }\r\n            }\r\n\r\n            payLater.amount(amount);\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/amountProviders/product.js":"/**\r\n* Copyright \u00a9 Magento, Inc. All rights reserved.\r\n* See COPYING.txt for license details.\r\n*/\r\n\r\ndefine([\r\n    'jquery',\r\n    'uiElement',\r\n    'uiRegistry',\r\n    'priceBox',\r\n    'domReady!'\r\n], function (\r\n    $,\r\n    Component,\r\n    registry\r\n) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n        defaults: {\r\n            priceBoxSelector: '.price-box',\r\n            qtyFieldSelector: '#product_addtocart_form [name=\"qty\"]',\r\n            amount: null\r\n        },\r\n        qty: 1,\r\n        price: 0,\r\n        priceType: '',\r\n\r\n        /**\r\n         * Initialize\r\n         *\r\n         * @returns {*}\r\n         */\r\n        initialize: function () {\r\n            var priceBox;\r\n\r\n            this._super();\r\n\r\n            priceBox = $(this.priceBoxSelector);\r\n            priceBox.on('priceUpdated', this._onPriceChange.bind(this));\r\n\r\n            if (priceBox.priceBox('option') &&\r\n                priceBox.priceBox('option').prices &&\r\n                (priceBox.priceBox('option').prices.finalPrice || priceBox.priceBox('option').prices.basePrice)\r\n            ) {\r\n                this.priceType = priceBox.priceBox('option').prices.finalPrice ? 'finalPrice' : 'basePrice';\r\n                this.price = priceBox.priceBox('option').prices[this.priceType].amount;\r\n            }\r\n\r\n            $(this.qtyFieldSelector).on('change', this._onQtyChange.bind(this));\r\n\r\n            priceBox.trigger('updatePrice');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Handle changed product qty\r\n         *\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _onQtyChange: function (event) {\r\n            var qty = parseFloat($(event.target).val());\r\n\r\n            this.qty = !isNaN(qty) && qty ? qty : 1;\r\n            this._updateAmount();\r\n        },\r\n\r\n        /**\r\n         * Handle product price change\r\n         *\r\n         * @param {jQuery.Event} event\r\n         * @param {Object} data\r\n         * @private\r\n         */\r\n        _onPriceChange: function (event, data) {\r\n            this.price = data[this.priceType].amount;\r\n            this._updateAmount();\r\n        },\r\n\r\n        /**\r\n         * Calculate and update amount\r\n         *\r\n         * @private\r\n         */\r\n        _updateAmount: function () {\r\n            var amount = this.price * this.qty,\r\n                payLater = registry.get(this.parentName);\r\n\r\n            if (amount !== 0) {\r\n                payLater.amount(amount);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/paypal-payments.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/payment/renderer-list'\r\n], function (Component, rendererList) {\r\n    'use strict';\r\n\r\n    var isContextCheckout = window.checkoutConfig.payment.paypalExpress.isContextCheckout,\r\n        paypalExpress = 'Magento_Paypal/js/view/payment/method-renderer' +\r\n            (isContextCheckout ? '/in-context/checkout-express' : '/paypal-express');\r\n\r\n    rendererList.push(\r\n        {\r\n            type: 'paypal_express',\r\n            component: paypalExpress,\r\n            config: window.checkoutConfig.payment.paypalExpress.inContextConfig\r\n        },\r\n        {\r\n            type: 'payflow_express',\r\n            component: 'Magento_Paypal/js/view/payment/method-renderer/payflow-express'\r\n        },\r\n        {\r\n            type: 'payflow_express_bml',\r\n            component: 'Magento_Paypal/js/view/payment/method-renderer/payflow-express-bml'\r\n        },\r\n        {\r\n            type: 'payflowpro',\r\n            component: 'Magento_Paypal/js/view/payment/method-renderer/payflowpro-method'\r\n        },\r\n        {\r\n            type: 'payflow_link',\r\n            component: 'Magento_Paypal/js/view/payment/method-renderer/iframe-methods'\r\n        },\r\n        {\r\n            type: 'payflow_advanced',\r\n            component: 'Magento_Paypal/js/view/payment/method-renderer/iframe-methods'\r\n        },\r\n        {\r\n            type: 'hosted_pro',\r\n            component: 'Magento_Paypal/js/view/payment/method-renderer/iframe-methods'\r\n        },\r\n        {\r\n            type: 'paypal_billing_agreement',\r\n            component: 'Magento_Paypal/js/view/payment/method-renderer/paypal-billing-agreement'\r\n        }\r\n    );\r\n\r\n    /**\r\n     * Add view logic here if needed\r\n     **/\r\n    return Component.extend({});\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/iframe-methods.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Checkout/js/view/payment/default',\r\n    'Magento_Paypal/js/model/iframe',\r\n    'Magento_Checkout/js/model/full-screen-loader'\r\n], function (Component, iframe, fullScreenLoader) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/iframe-methods',\r\n            paymentReady: false\r\n        },\r\n        redirectAfterPlaceOrder: false,\r\n        isInAction: iframe.isInAction,\r\n\r\n        /**\r\n         * @return {exports}\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('paymentReady');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        isPaymentReady: function () {\r\n            return this.paymentReady();\r\n        },\r\n\r\n        /**\r\n         * Get action url for payment method iframe.\r\n         * @returns {String}\r\n         */\r\n        getActionUrl: function () {\r\n            return this.isInAction() ? window.checkoutConfig.payment.paypalIframe.actionUrl[this.getCode()] : '';\r\n        },\r\n\r\n        /**\r\n         * Places order in pending payment status.\r\n         */\r\n        placePendingPaymentOrder: function () {\r\n            if (this.placeOrder()) {\r\n                fullScreenLoader.startLoader();\r\n                this.isInAction(true);\r\n                // capture all click events\r\n                document.addEventListener('click', iframe.stopEventPropagation, true);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getPlaceOrderDeferredObject: function () {\r\n            var self = this;\r\n\r\n            return this._super().fail(function () {\r\n                fullScreenLoader.stopLoader();\r\n                self.isInAction(false);\r\n                document.removeEventListener('click', iframe.stopEventPropagation, true);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * After place order callback\r\n         */\r\n        afterPlaceOrder: function () {\r\n            if (this.iframeIsLoaded) {\r\n                document.getElementById(this.getCode() + '-iframe')\r\n                    .contentWindow.location.reload();\r\n                this.paymentReady(false);\r\n            }\r\n\r\n            this.paymentReady(true);\r\n            this.iframeIsLoaded = true;\r\n            this.isPlaceOrderActionAllowed(true);\r\n            fullScreenLoader.stopLoader();\r\n        },\r\n\r\n        /**\r\n         * Hide loader when iframe is fully loaded.\r\n         */\r\n        iframeLoaded: function () {\r\n            fullScreenLoader.stopLoader();\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/payflow-express-bml.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/payflow-express-bml'\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/payflow-express.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/payflow-express'\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/payflowpro-method.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Payment/js/view/payment/iframe',\r\n    'Magento_Checkout/js/model/payment/additional-validators',\r\n    'Magento_Checkout/js/action/set-payment-information',\r\n    'Magento_Checkout/js/model/full-screen-loader',\r\n    'Magento_Vault/js/view/payment/vault-enabler'\r\n], function ($, Component, additionalValidators, setPaymentInformationAction, fullScreenLoader, VaultEnabler) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/payflowpro-form'\r\n        },\r\n        placeOrderHandler: null,\r\n        validateHandler: null,\r\n\r\n        /**\r\n         * @returns {exports.initialize}\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.vaultEnabler = new VaultEnabler();\r\n            this.vaultEnabler.setPaymentCode(this.getVaultCode());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @param {Function} handler\r\n         */\r\n        setPlaceOrderHandler: function (handler) {\r\n            this.placeOrderHandler = handler;\r\n        },\r\n\r\n        /**\r\n         * @param {Function} handler\r\n         */\r\n        setValidateHandler: function (handler) {\r\n            this.validateHandler = handler;\r\n        },\r\n\r\n        /**\r\n         * @returns {Object}\r\n         */\r\n        context: function () {\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @returns {Boolean}\r\n         */\r\n        isShowLegend: function () {\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getCode: function () {\r\n            return 'payflowpro';\r\n        },\r\n\r\n        /**\r\n         * @returns {Boolean}\r\n         */\r\n        isActive: function () {\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        placeOrder: function () {\r\n            var self = this;\r\n\r\n            if (this.validateHandler() &&\r\n                additionalValidators.validate() &&\r\n                this.isPlaceOrderActionAllowed() === true\r\n            ) {\r\n                this.isPlaceOrderActionAllowed(false);\r\n                fullScreenLoader.startLoader();\r\n                $.when(\r\n                    setPaymentInformationAction(this.messageContainer, self.getData())\r\n                ).done(\r\n                    function () {\r\n                        self.placeOrderHandler().fail(\r\n                            function () {\r\n                                fullScreenLoader.stopLoader();\r\n                            }\r\n                        );\r\n                    }\r\n                ).always(\r\n                    function () {\r\n                        self.isPlaceOrderActionAllowed(true);\r\n                        fullScreenLoader.stopLoader();\r\n                    }\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @returns {Object}\r\n         */\r\n        getData: function () {\r\n            var data = {\r\n                'method': this.getCode(),\r\n                'additional_data': {\r\n                    'cc_type': this.creditCardType(),\r\n                    'cc_exp_year': this.creditCardExpYear(),\r\n                    'cc_exp_month': this.creditCardExpMonth(),\r\n                    'cc_last_4': this.creditCardNumber().substr(-4)\r\n                }\r\n            };\r\n\r\n            this.vaultEnabler.visitAdditionalData(data);\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * @returns {Bool}\r\n         */\r\n        isVaultEnabled: function () {\r\n            return this.vaultEnabler.isVaultEnabled();\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getVaultCode: function () {\r\n            return 'payflowpro_cc_vault';\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/paypal-billing-agreement.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Checkout/js/view/payment/default',\r\n    'mage/validation'\r\n], function ($, Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/paypal_billing_agreement-form',\r\n            selectedBillingAgreement: ''\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('selectedBillingAgreement');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getTransportName: function () {\r\n            return window.checkoutConfig.payment.paypalBillingAgreement.transportName;\r\n        },\r\n\r\n        /**\r\n         * @return {*}\r\n         */\r\n        getBillingAgreements: function () {\r\n            return window.checkoutConfig.payment.paypalBillingAgreement.agreements;\r\n        },\r\n\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getData: function () {\r\n            var additionalData = null;\r\n\r\n            if (this.getTransportName()) {\r\n                additionalData = {};\r\n                additionalData[this.getTransportName()] = this.selectedBillingAgreement();\r\n            }\r\n\r\n            return {\r\n                'method': this.item.method,\r\n                'additional_data': additionalData\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @return {jQuery}\r\n         */\r\n        validate: function () {\r\n            var form = '#billing-agreement-form';\r\n\r\n            return $(form).validation() && $(form).validation('isValid');\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Checkout/js/view/payment/default',\r\n    'Magento_Paypal/js/action/set-payment-method',\r\n    'Magento_Checkout/js/model/payment/additional-validators',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Customer/js/customer-data'\r\n], function ($, Component, setPaymentMethodAction, additionalValidators, quote, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/payflow-express-bml',\r\n            billingAgreement: ''\r\n        },\r\n\r\n        /** Init observable variables */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('billingAgreement');\r\n\r\n            return this;\r\n        },\r\n\r\n        /** Open window with  */\r\n        showAcceptanceWindow: function (data, event) {\r\n            window.open(\r\n                $(event.currentTarget).attr('href'),\r\n                'olcwhatispaypal',\r\n                'toolbar=no, location=no,' +\r\n                ' directories=no, status=no,' +\r\n                ' menubar=no, scrollbars=yes,' +\r\n                ' resizable=yes, ,left=0,' +\r\n                ' top=0, width=400, height=350'\r\n            );\r\n\r\n            return false;\r\n        },\r\n\r\n        /** Returns payment acceptance mark link path */\r\n        getPaymentAcceptanceMarkHref: function () {\r\n            return window.checkoutConfig.payment.paypalExpress.paymentAcceptanceMarkHref;\r\n        },\r\n\r\n        /** Returns payment acceptance mark image path */\r\n        getPaymentAcceptanceMarkSrc: function () {\r\n            return window.checkoutConfig.payment.paypalExpress.paymentAcceptanceMarkSrc;\r\n        },\r\n\r\n        /** Returns billing agreement data */\r\n        getBillingAgreementCode: function () {\r\n            return window.checkoutConfig.payment.paypalExpress.billingAgreementCode[this.item.method];\r\n        },\r\n\r\n        /** Returns payment information data */\r\n        getData: function () {\r\n            var parent = this._super(),\r\n                additionalData = null;\r\n\r\n            if (this.getBillingAgreementCode()) {\r\n                additionalData = {};\r\n                additionalData[this.getBillingAgreementCode()] = this.billingAgreement();\r\n            }\r\n\r\n            return $.extend(true, parent, {\r\n                'additional_data': additionalData\r\n            });\r\n        },\r\n\r\n        /** Redirect to paypal */\r\n        continueToPayPal: function () {\r\n            if (additionalValidators.validate()) {\r\n                //update payment method information if additional data was changed\r\n                setPaymentMethodAction(this.messageContainer).done(\r\n                    function () {\r\n                        customerData.invalidate(['cart']);\r\n                        $.mage.redirect(\r\n                            window.checkoutConfig.payment.paypalExpress.redirectUrl[quote.paymentMethod().method]\r\n                        );\r\n                    }\r\n                );\r\n\r\n                return false;\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/paypal-express.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/paypal-express'\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/in-context/checkout-express.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract',\r\n    'Magento_Paypal/js/in-context/express-checkout-wrapper',\r\n    'Magento_Paypal/js/action/set-payment-method',\r\n    'Magento_Checkout/js/model/payment/additional-validators',\r\n    'Magento_Ui/js/model/messageList',\r\n    'Magento_Ui/js/lib/view/utils/async'\r\n], function ($, Component, Wrapper, setPaymentMethod, additionalValidators, messageList) {\r\n    'use strict';\r\n\r\n    return Component.extend(Wrapper).extend({\r\n        defaults: {\r\n            template: 'Magento_Paypal/payment/paypal-express-in-context',\r\n            validationElements: 'input'\r\n        },\r\n\r\n        /**\r\n         * Listens element on change and validate it.\r\n         *\r\n         * @param {HTMLElement} context\r\n         */\r\n        initListeners: function (context) {\r\n            $.async(this.validationElements, context, function (element) {\r\n                $(element).on('change', function () {\r\n                    this.validate();\r\n                }.bind(this));\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         *  Validates Smart Buttons\r\n         */\r\n        validate: function () {\r\n            this._super();\r\n\r\n            if (this.actions) {\r\n                additionalValidators.validate(true) ? this.actions.enable() : this.actions.disable();\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        beforePayment: function (resolve, reject) {\r\n            var promise = $.Deferred();\r\n\r\n            setPaymentMethod(this.messageContainer).done(function () {\r\n                return promise.resolve();\r\n            }).fail(function (response) {\r\n                var error;\r\n\r\n                try {\r\n                    error = JSON.parse(response.responseText);\r\n                } catch (exception) {\r\n                    error = this.paymentActionError;\r\n                }\r\n\r\n                this.addError(error);\r\n\r\n                return reject(new Error(error));\r\n            }.bind(this));\r\n\r\n            return promise;\r\n        },\r\n\r\n        /**\r\n         * Populate client config with all required data\r\n         *\r\n         * @return {Object}\r\n         */\r\n        prepareClientConfig: function () {\r\n            this._super();\r\n            this.clientConfig.quoteId = window.checkoutConfig.quoteData['entity_id'];\r\n            this.clientConfig.customerId = window.customerData.id;\r\n            this.clientConfig.button = 0;\r\n\r\n            return this.clientConfig;\r\n        },\r\n\r\n        /**\r\n         * Adding logic to be triggered onClick action for smart buttons component\r\n         */\r\n        onClick: function () {\r\n            additionalValidators.validate();\r\n        },\r\n\r\n        /**\r\n         * Adds error message\r\n         *\r\n         * @param {String} message\r\n         */\r\n        addError: function (message) {\r\n            messageList.addErrorMessage({\r\n                message: message\r\n            });\r\n        },\r\n\r\n        /**\r\n         * After payment execute\r\n         *\r\n         * @param {Object} res\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         *\r\n         * @return {*}\r\n         */\r\n        afterPayment: function (res, resolve, reject) {\r\n            if (res.success) {\r\n                return resolve(res.token);\r\n            }\r\n\r\n            this.addError(res['error_message']);\r\n\r\n            return reject(new Error(res['error_message']));\r\n        },\r\n\r\n        /**\r\n         * After onAuthorize execute\r\n         *\r\n         * @param {Object} res\r\n         * @param {Function} resolve\r\n         * @param {Function} reject\r\n         * @param {Object} actions\r\n         *\r\n         * @return {*}\r\n         */\r\n        afterOnAuthorize: function (res, resolve, reject, actions) {\r\n            if (res.success) {\r\n                resolve();\r\n\r\n                return actions.redirect(res.redirectUrl);\r\n            }\r\n\r\n            this.addError(res['error_message']);\r\n\r\n            return reject(new Error(res['error_message']));\r\n        }\r\n    });\r\n});\r\n","Magento_Paypal/js/view/payment/method-renderer/payflowpro/vault.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Vault/js/view/payment/method-renderer/vault'\r\n], function (VaultComponent) {\r\n    'use strict';\r\n\r\n    return VaultComponent.extend({\r\n        defaults: {\r\n            template: 'Magento_Vault/payment/form'\r\n        },\r\n\r\n        /**\r\n         * @returns {String}\r\n         */\r\n        getToken: function () {\r\n            return this.publicHash;\r\n        },\r\n\r\n        /**\r\n         * Get last 4 digits of card\r\n         * @returns {String}\r\n         */\r\n        getMaskedCard: function () {\r\n            return this.details['cc_last_4'];\r\n        },\r\n\r\n        /**\r\n         * Get expiration date\r\n         * @returns {String}\r\n         */\r\n        getExpirationDate: function () {\r\n            return this.details['cc_exp_month'] + '/' + this.details['cc_exp_year'];\r\n        },\r\n\r\n        /**\r\n         * Get card type\r\n         * @returns {String}\r\n         */\r\n        getCardType: function () {\r\n            return this.details['cc_type'];\r\n        }\r\n    });\r\n});\r\n","Magento_PaypalCaptcha/js/model/skipRefreshCaptcha.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(['ko'], function (ko) {\r\n    'use strict';\r\n\r\n    return {\r\n        skip: ko.observable(false)\r\n    };\r\n});\r\n","Magento_PaypalCaptcha/js/view/checkout/defaultCaptcha-mixin.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_PaypalCaptcha/js/model/skipRefreshCaptcha'\r\n], function (skipRefreshCaptcha) {\r\n    'use strict';\r\n\r\n    var defaultCaptchaMixin = {\r\n        /**\r\n         * @override\r\n         */\r\n        refresh: function () {\r\n            if (!skipRefreshCaptcha.skip()) {\r\n                this._super();\r\n            } else {\r\n                skipRefreshCaptcha.skip(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    return function (defaultCaptcha) {\r\n        return defaultCaptcha.extend(defaultCaptchaMixin);\r\n    };\r\n});\r\n","Magento_PaypalCaptcha/js/view/checkout/paymentCaptcha.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Captcha/js/view/checkout/defaultCaptcha',\r\n    'Magento_Captcha/js/model/captchaList',\r\n    'Magento_Captcha/js/model/captcha'\r\n],\r\nfunction ($, defaultCaptcha, captchaList, Captcha) {\r\n    'use strict';\r\n\r\n    return defaultCaptcha.extend({\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            var captchaConfigPayment,\r\n                currentCaptcha;\r\n\r\n            this._super();\r\n\r\n            if (window[this.configSource] && window[this.configSource].captchaPayments) {\r\n                captchaConfigPayment = window[this.configSource].captchaPayments;\r\n\r\n                $.each(captchaConfigPayment, function (formId, captchaData) {\r\n                    var captcha;\r\n\r\n                    captchaData.formId = formId;\r\n                    captcha = Captcha(captchaData);\r\n                    captchaList.add(captcha);\r\n                });\r\n            }\r\n\r\n            currentCaptcha = captchaList.getCaptchaByFormId(this.formId);\r\n\r\n            if (currentCaptcha != null) {\r\n                currentCaptcha.setIsVisible(true);\r\n                this.setCurrentCaptcha(currentCaptcha);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_PaypalCaptcha/js/view/payment/list-mixin.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Magento_Captcha/js/model/captchaList'\r\n], function ($, captchaList) {\r\n    'use strict';\r\n\r\n    var mixin = {\r\n\r\n        formId: 'co-payment-form',\r\n\r\n        /**\r\n         * Sets custom template for Payflow Pro\r\n         *\r\n         * @param {Object} payment\r\n         * @returns {Object}\r\n         */\r\n        createComponent: function (payment) {\r\n\r\n            var component = this._super(payment);\r\n\r\n            if (component.component === 'Magento_Paypal/js/view/payment/method-renderer/payflowpro-method') {\r\n                component.template = 'Magento_PaypalCaptcha/payment/payflowpro-form';\r\n                $(window).off('clearTimeout')\r\n                    .on('clearTimeout', this.clearTimeout.bind(this));\r\n            }\r\n\r\n            return component;\r\n        },\r\n\r\n        /**\r\n         * Overrides default window.clearTimeout() to catch errors from iframe and reload Captcha.\r\n         *\r\n         * @param {Number} timeoutID\r\n         */\r\n        clearTimeout: function (timeoutID) {\r\n            var captcha = captchaList.getCaptchaByFormId(this.formId);\r\n\r\n            if (captcha !== null) {\r\n                captcha.refresh();\r\n            }\r\n            clearTimeout(timeoutID);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Overrides `Magento_Checkout/js/view/payment/list::createComponent`\r\n     */\r\n    return function (target) {\r\n        return target.extend(mixin);\r\n    };\r\n});\r\n","Magento_PaypalCaptcha/js/view/payment/method-renderer/payflowpro-method-mixin.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_PaypalCaptcha/js/model/skipRefreshCaptcha'\r\n], function (skipRefreshCaptcha) {\r\n    'use strict';\r\n\r\n    var payflowProMethodMixin = {\r\n        /**\r\n         * @override\r\n         */\r\n        placeOrder: function () {\r\n            skipRefreshCaptcha.skip(true);\r\n            this._super();\r\n        }\r\n    };\r\n\r\n    return function (payflowProMethod) {\r\n        return payflowProMethod.extend(payflowProMethodMixin);\r\n    };\r\n});\r\n","Magento_Persistent/js/view/additional-welcome.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/translate',\r\n    'Magento_Customer/js/customer-data'\r\n], function ($, $t, customerData) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * Init.\r\n         */\r\n        init: function () {\r\n            var persistent = customerData.get('persistent');\r\n\r\n            if (persistent().fullname === undefined) {\r\n                customerData.get('persistent').subscribe(this.replacePersistentWelcome);\r\n            } else {\r\n                this.replacePersistentWelcome();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Replace welcome message for customer with persistent cookie.\r\n         */\r\n        replacePersistentWelcome: function () {\r\n            var persistent = customerData.get('persistent'),\r\n                welcomeElems;\r\n\r\n            if (persistent().fullname !== undefined) {\r\n                welcomeElems = $('li.greet.welcome > span.not-logged-in');\r\n\r\n                if (welcomeElems.length) {\r\n                    $(welcomeElems).each(function () {\r\n                        var html = $t('Welcome, %1!').replace('%1', persistent().fullname);\r\n\r\n                        $(this).attr('data-bind', html);\r\n                        $(this).html(html);\r\n                    });\r\n                    $(welcomeElems).append(' <span><a ' + window.notYouLink + '>' + $t('Not you?') + '</a>');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @constructor\r\n         */\r\n        'Magento_Persistent/js/view/additional-welcome': function () {\r\n            this.init();\r\n        }\r\n    };\r\n});\r\n","Magento_Persistent/js/view/customer-data-mixin.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/utils/wrapper'\r\n], function ($, wrapper) {\r\n    'use strict';\r\n\r\n    var mixin = {\r\n\r\n        /**\r\n         * Check if persistent section is expired due to lifetime.\r\n         *\r\n         * @param {Function} originFn - Original method.\r\n         * @return {Array}\r\n         */\r\n        getExpiredSectionNames: function (originFn) {\r\n            var expiredSections = originFn(),\r\n                storage = $.initNamespaceStorage('mage-cache-storage').localStorage,\r\n                currentTimestamp = Math.floor(Date.now() / 1000),\r\n                persistentIndex = expiredSections.indexOf('persistent'),\r\n                persistentLifeTime = 0,\r\n                sectionData;\r\n\r\n            if (window.persistent !== undefined && window.persistent.expirationLifetime !== undefined) {\r\n                persistentLifeTime = window.persistent.expirationLifetime;\r\n            }\r\n\r\n            if (persistentIndex !== -1) {\r\n                sectionData = storage.get('persistent');\r\n\r\n                if (typeof sectionData === 'object' &&\r\n                    sectionData['data_id'] + persistentLifeTime >= currentTimestamp\r\n                ) {\r\n                    expiredSections.splice(persistentIndex, 1);\r\n                }\r\n            }\r\n\r\n            return expiredSections;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Override default customer-data.getExpiredSectionNames().\r\n     */\r\n    return function (target) {\r\n        return wrapper.extend(target, mixin);\r\n    };\r\n});\r\n","Magento_ProductAlert/js/form-submitter.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (data, element) {\r\n\r\n        $(element).trigger('submit');\r\n    };\r\n});\r\n"}
}});
